{
  "meta": {
    "index": 290,
    "hitid": "3TL87MO8CMJ9553QJFKGSJ2UU3QLFD",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "1082A",
    "subid": "48891768"
  },
  "lines": [
    {
      "line": 0,
      "text": "rl = const int with rl = 1e9",
      "code": "const int rl = 1e9 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , x , y , d , t = int",
      "code": "int n , x , y , d , t ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in function nhap",
      "code": "void nhap ( )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n then x then y then d",
      "code": "cin >> n >> x >> y >> d ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "in function dc taking int x , int y and returning bool",
      "code": "bool dc ( int x , int y )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "kc = int",
      "code": "int kc ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set kc to y - x",
      "code": "kc = y - x ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return kc mod d is 0",
      "code": "return ( kc % d == 0 ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "in function sb taking int x , int y and returning int",
      "code": "int sb ( int x , int y )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "kc = int",
      "code": "int kc ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set kc to y - x",
      "code": "kc = y - x ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "kq = int with kq = kc / d",
      "code": "int kq = kc / d ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if kc is not a multiple of d set kq to kq + 1",
      "code": "if ( kc % d != 0 ) { kq = kq + 1 ; } ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "return kq",
      "code": "return ( kq ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 17,
      "text": "in function xu_ly",
      "code": "void xu_ly ( )",
      "indent": 0
    },
    {
      "line": 18,
      "text": "if x < = y",
      "code": "if ( x <= y )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if dc of x , y",
      "code": "if ( dc ( x , y ) )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print sb of x , y",
      "code": "cout << sb ( x , y ) << endl ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "return",
      "code": "return ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "sb1 , sb2 = int",
      "code": "int sb1 , sb2 ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set sb1 to rl",
      "code": "sb1 = rl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "set sb2 to rl",
      "code": "sb2 = rl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if dc of y , n set sb1 to sb of x , n + sb of y , n",
      "code": "if ( dc ( y , n ) ) { sb1 = sb ( x , n ) + sb ( y , n ) ; }",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if dc of 1 , y set sb2 to sb of 1 , x + sb of 1 , y",
      "code": "if ( dc ( 1 , y ) ) { sb2 = sb ( 1 , x ) + sb ( 1 , y ) ; }",
      "indent": 2
    },
    {
      "line": 28,
      "text": "sb = int",
      "code": "int sb ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "set sb to min of sb1 , sb2",
      "code": "sb = min ( sb1 , sb2 ) ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "if sb is rl",
      "code": "if ( sb == rl )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "return",
      "code": "return ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 34,
      "text": "print sb",
      "code": "cout << sb << endl ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "return",
      "code": "return ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 37,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 38,
      "text": "if dc of y , x",
      "code": "if ( dc ( y , x ) )",
      "indent": 2
    },
    {
      "line": 39,
      "text": "print sb of y , x",
      "code": "cout << sb ( y , x ) << endl ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "return",
      "code": "return ;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 42,
      "text": "sb1 , sb2 = int",
      "code": "int sb1 , sb2 ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "set sb1 to rl",
      "code": "sb1 = rl ;",
      "indent": 2
    },
    {
      "line": 44,
      "text": "set sb2 to rl",
      "code": "sb2 = rl ;",
      "indent": 2
    },
    {
      "line": 45,
      "text": "if dc of y , n set sb1 to sb of x , n + sb of y , n",
      "code": "if ( dc ( y , n ) ) { sb1 = sb ( x , n ) + sb ( y , n ) ; }",
      "indent": 2
    },
    {
      "line": 46,
      "text": "if dc of 1 , y set sb2 to sb of 1 , x + sb of 1 , y",
      "code": "if ( dc ( 1 , y ) ) { sb2 = sb ( 1 , x ) + sb ( 1 , y ) ; }",
      "indent": 2
    },
    {
      "line": 47,
      "text": "sb = int",
      "code": "int sb ;",
      "indent": 2
    },
    {
      "line": 48,
      "text": "set sb to min of sb1 , sb2",
      "code": "sb = min ( sb1 , sb2 ) ;",
      "indent": 2
    },
    {
      "line": 49,
      "text": "of sb is rl",
      "code": "if ( sb == rl )",
      "indent": 2
    },
    {
      "line": 50,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 3
    },
    {
      "line": 51,
      "text": "return",
      "code": "return ;",
      "indent": 3
    },
    {
      "line": 52,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 53,
      "text": "print sb",
      "code": "cout << sb << endl ;",
      "indent": 3
    },
    {
      "line": 54,
      "text": "return",
      "code": "return ;",
      "indent": 3
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 56,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 57,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 58,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 59,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 60,
      "text": "i = int",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 61,
      "text": "for i = 1 to t inclusive",
      "code": "for ( i = 1 ; i <= t ; i = i + 1 )",
      "indent": 1
    },
    {
      "line": 62,
      "text": "call nhap",
      "code": "nhap ( ) ;",
      "indent": 2
    },
    {
      "line": 63,
      "text": "call xu_ly",
      "code": "xu_ly ( ) ;",
      "indent": 2
    },
    {
      "line": 64,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 65,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 27,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "cout << y ( y , x ) << endl ;"
      ],
      "err_line": 39,
      "err_msg": "‘y’ cannot be used as a function"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;"
      ],
      "err_line": 45,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 46,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "nhap ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected constructor, destructor, or type conversion before ‘;’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool dc ( int x , int y ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int sb ( int x , int y ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "void xu_ly ( int str )"
      ],
      "err_line": 63,
      "err_msg": "too few arguments to function ‘void xu_ly(int)’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( dc . find ( x , y ) )"
      ],
      "err_line": 19,
      "err_msg": "request for member ‘find’ in ‘dc’, which is of non-class type ‘bool(int, int)’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "cout << x . find ( x , y ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "request for member ‘find’ in ‘x’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "return return ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "sb1 = rl ( ) ;"
      ],
      "err_line": 24,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) { sb1 = sb ( x , n + sb ) ; }"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = 1 , x + sb + sb ;"
      ],
      "err_line": 27,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "int sb ( ) ;"
      ],
      "err_line": 29,
      "err_msg": "assignment of function ‘int sb()’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "int sb = min ( sb1 , sb2 ) ;"
      ],
      "err_line": 29,
      "err_msg": "redeclaration of ‘int sb’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "return return ;"
      ],
      "err_line": 32,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 34,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "puts ( sb ) ;"
      ],
      "err_line": 34,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "return return ;"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 38,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "if ( dc ( y ) , x )"
      ],
      "err_line": 38,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "return return ;"
      ],
      "err_line": 40,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "sb1 = rl ( ) ;"
      ],
      "err_line": 43,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "sb2 = rl ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) { sb1 = sb ( x , n + sb ) ; }"
      ],
      "err_line": 45,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = 1 , x + sb + sb ;"
      ],
      "err_line": 46,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        47
      ],
      "mod_code": [
        "int sb ( ) ;"
      ],
      "err_line": 48,
      "err_msg": "assignment of function ‘int sb()’"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "int sb = min ( sb1 , sb2 ) ;"
      ],
      "err_line": 48,
      "err_msg": "redeclaration of ‘int sb’"
    },
    {
      "mod_line": [
        49
      ],
      "mod_code": [
        "if ( sb == rl ( sb ) )"
      ],
      "err_line": 49,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        51
      ],
      "mod_code": [
        "return return ;"
      ],
      "err_line": 51,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        52
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 53,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        53
      ],
      "mod_code": [
        "puts ( sb ) ;"
      ],
      "err_line": 53,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        54
      ],
      "mod_code": [
        "return return ;"
      ],
      "err_line": 54,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        62
      ],
      "mod_code": [
        "exit ( ) ;"
      ],
      "err_line": 62,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        63
      ],
      "mod_code": [
        "xu_ly -- ;"
      ],
      "err_line": 63,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        26,
        27
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        27,
        39
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "cout << y ( y , x ) << endl ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        27,
        39,
        45
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        27,
        39,
        46
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        27,
        39,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "cout << y ( y , x ) << endl ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        26,
        27,
        45
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        27,
        45,
        46
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        27,
        45,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        26,
        27,
        46
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        27,
        46,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        26,
        27,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        26,
        39
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "cout << y ( y , x ) << endl ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        39,
        45
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        39,
        45,
        46
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        39,
        45,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        26,
        39,
        46
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        39,
        46,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        26,
        39,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "cout << y ( y , x ) << endl ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        26,
        45
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        45,
        46
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        45,
        46,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        26,
        45,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        26,
        46
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 26,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        26,
        46,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        26,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        27,
        39
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "cout << y ( y , x ) << endl ;"
      ],
      "err_line": 27,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        27,
        39,
        45
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;"
      ],
      "err_line": 27,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        27,
        39,
        45,
        46
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 27,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        27,
        39,
        45,
        25
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        27,
        39,
        46
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 27,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        27,
        39,
        46,
        25
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        27,
        39,
        25
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "cout << y ( y , x ) << endl ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        27,
        45
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;"
      ],
      "err_line": 27,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        27,
        45,
        46
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 27,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        27,
        45,
        46,
        25
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        27,
        45,
        25
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        27,
        46
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 27,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        27,
        46,
        25
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        27,
        25
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        39,
        45
      ],
      "mod_code": [
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;"
      ],
      "err_line": 39,
      "err_msg": "‘y’ cannot be used as a function"
    },
    {
      "mod_line": [
        39,
        45,
        46
      ],
      "mod_code": [
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 39,
      "err_msg": "‘y’ cannot be used as a function"
    },
    {
      "mod_line": [
        39,
        45,
        46,
        25
      ],
      "mod_code": [
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        39,
        45,
        25
      ],
      "mod_code": [
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        39,
        46
      ],
      "mod_code": [
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 39,
      "err_msg": "‘y’ cannot be used as a function"
    },
    {
      "mod_line": [
        39,
        46,
        25
      ],
      "mod_code": [
        "cout << y ( y , x ) << endl ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        39,
        25
      ],
      "mod_code": [
        "cout << y ( y , x ) << endl ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        45,
        46
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;"
      ],
      "err_line": 45,
      "err_msg": "too few arguments to function ‘bool dc(int, int)’"
    },
    {
      "mod_line": [
        45,
        46,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        45,
        25
      ],
      "mod_code": [
        "if ( dc ( y ) , n ) sb1 = sb ( x , n + sb ) + n ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    },
    {
      "mod_line": [
        46,
        25
      ],
      "mod_code": [
        "if ( dc ( 1 ) , y ) sb2 = sb ( 1 , x + sb ) + y ;",
        "sb2 = rl ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘rl’ cannot be used as a function"
    }
  ]
}