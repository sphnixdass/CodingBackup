{
  "meta": {
    "index": 600,
    "hitid": "3X0EMNLXEPJOSN4EBMIRRME0MKHPVU",
    "workerid": "A3S392MV6HWTTE",
    "probid": "1093A",
    "subid": "48551735"
  },
  "lines": [
    {
      "line": 0,
      "text": "x , kq = integers",
      "code": "int x , kq ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in the function xu_ly",
      "code": "void xu_ly ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "kq = x / 7",
      "code": "kq = x / 7 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if x remainder 7 < > 0 increment kq",
      "code": "if ( x % 7 != 0 ) { kq = kq + 1 ; } ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print kq",
      "code": "cout << kq << endl ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "t = integer",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "i = integer",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 1 to t inclusive call xu_ly",
      "code": "for ( i = 1 ; i <= t ; i = i + 1 ) { xu_ly ( ) ; } ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void()’ and ‘void()’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void xu_ly ( int str )"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void xu_ly(int)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "kq /= 7 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void()’ and ‘void()’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        3,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "kq /= 7 ;",
        "void xu_ly ( int str )"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void(int)’ and ‘void(int)’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        3,
        1,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "kq /= 7 ;",
        "void xu_ly ( int str )",
        "if ( x % 2 ) kq ++ ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void(int)’ and ‘void(int)’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        3,
        1,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "kq /= 7 ;",
        "void xu_ly ( int str )",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void(int)’ and ‘void(int)’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        3,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "kq /= 7 ;",
        "if ( x % 2 ) kq ++ ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void()’ and ‘void()’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        3,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "kq /= 7 ;",
        "if ( x % 2 ) kq ++ ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void()’ and ‘void()’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "kq /= 7 ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void()’ and ‘void()’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "void xu_ly ( int str )"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void(int)’ and ‘void(int)’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        1,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "void xu_ly ( int str )",
        "if ( x % 2 ) kq ++ ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void(int)’ and ‘void(int)’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        1,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "void xu_ly ( int str )",
        "if ( x % 2 ) kq ++ ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void(int)’ and ‘void(int)’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        1,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "void xu_ly ( int str )",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void(int)’ and ‘void(int)’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "if ( x % 2 ) kq ++ ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void()’ and ‘void()’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "if ( x % 2 ) kq ++ ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void()’ and ‘void()’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly += xu_ly ; }",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘void()’ and ‘void()’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "kq /= 7 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        3,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "kq /= 7 ;",
        "void xu_ly ( int str )"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        3,
        1,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "kq /= 7 ;",
        "void xu_ly ( int str )",
        "if ( x % 2 ) kq ++ ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        3,
        1,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "kq /= 7 ;",
        "void xu_ly ( int str )",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        3,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "kq /= 7 ;",
        "if ( x % 2 ) kq ++ ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        3,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "kq /= 7 ;",
        "if ( x % 2 ) kq ++ ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "kq /= 7 ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "void xu_ly ( int str )"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        1,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "void xu_ly ( int str )",
        "if ( x % 2 ) kq ++ ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        1,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "void xu_ly ( int str )",
        "if ( x % 2 ) kq ++ ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        1,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "void xu_ly ( int str )",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "if ( x % 2 ) kq ++ ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "if ( x % 2 ) kq ++ ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= t ; i ++ ) { xu_ly ++ ; }",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "kq /= 7 ;",
        "void xu_ly ( int str )"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void xu_ly(int)’"
    },
    {
      "mod_line": [
        3,
        1,
        4
      ],
      "mod_code": [
        "kq /= 7 ;",
        "void xu_ly ( int str )",
        "if ( x % 2 ) kq ++ ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void xu_ly(int)’"
    },
    {
      "mod_line": [
        3,
        1,
        4,
        9
      ],
      "mod_code": [
        "kq /= 7 ;",
        "void xu_ly ( int str )",
        "if ( x % 2 ) kq ++ ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void xu_ly(int)’"
    },
    {
      "mod_line": [
        3,
        1,
        9
      ],
      "mod_code": [
        "kq /= 7 ;",
        "void xu_ly ( int str )",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void xu_ly(int)’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "void xu_ly ( int str )",
        "if ( x % 2 ) kq ++ ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void xu_ly(int)’"
    },
    {
      "mod_line": [
        1,
        4,
        9
      ],
      "mod_code": [
        "void xu_ly ( int str )",
        "if ( x % 2 ) kq ++ ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void xu_ly(int)’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "void xu_ly ( int str )",
        "t = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void xu_ly(int)’"
    }
  ]
}