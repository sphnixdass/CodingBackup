{
  "meta": {
    "index": 2697,
    "hitid": "3RQVKZ7ZRKDQPQ2CRQ4ZPVQ4PSK27U",
    "workerid": "A1APYLD4DUK33J",
    "probid": "181A",
    "subid": "23401688"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer arrays x , y with x size 4 , y size 4 , create integer c with c = 0",
      "code": "int x [ 4 ] , y [ 4 ] , c = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create string s",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s [ j ] is ' * '",
      "code": "if ( s [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set x [ c ] to i + 1",
      "code": "x [ c ] = i + 1 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "set y [ increment c ] to j + 1",
      "code": "y [ c ++ ] = j + 1 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if x [ 0 ] is x [ 1 ]",
      "code": "if ( x [ 0 ] == x [ 1 ] )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "set x [ 3 ] to x [ 2 ]",
      "code": "x [ 3 ] = x [ 2 ] ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else if x [ 0 ] is x [ 2 ]",
      "code": "else if ( x [ 0 ] == x [ 2 ] )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "set x [ 3 ] to x [ 1 ]",
      "code": "x [ 3 ] = x [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 19,
      "text": "set x [ 3 ] to x [ 0 ]",
      "code": "x [ 3 ] = x [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if y [ 0 ] is y [ 1 ]",
      "code": "if ( y [ 0 ] == y [ 1 ] )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "set y [ 3 ] to y [ 2 ]",
      "code": "y [ 3 ] = y [ 2 ] ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else if y [ 0 ] is y [ 2 ]",
      "code": "else if ( y [ 0 ] == y [ 2 ] )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "set y [ 3 ] to y [ 1 ]",
      "code": "y [ 3 ] = y [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 25,
      "text": "set y [ 3 ] to y [ 0 ]",
      "code": "y [ 3 ] = y [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "print x [ 3 ] print \" \" print y [ 3 ] print newline",
      "code": "cout << x [ 3 ] << \" \" << y [ 3 ] << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int [4][int [4]]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "n , m ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 9,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , y [ 4 ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int y [4]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int x [ 3 ] = x [ 2 ] ;"
      ],
      "err_line": 15,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int x [ 3 ] = x [ 1 ] ;"
      ],
      "err_line": 17,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int x [ 3 ] = x [ 0 ] ;"
      ],
      "err_line": 19,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "int y [ 3 ] = y [ 2 ] ;"
      ],
      "err_line": 21,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "int y [ 3 ] = y [ 1 ] ;"
      ],
      "err_line": 23,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "int y [ 3 ] = y [ 0 ] ;"
      ],
      "err_line": 25,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "n , m ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        9
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "n , m ;",
        "x [ c ++ ] = i + 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        9,
        5
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "n , m ;",
        "x [ c ++ ] = i + 1 ;",
        "string S ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        9,
        2
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "n , m ;",
        "x [ c ++ ] = i + 1 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        9,
        14
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "n , m ;",
        "x [ c ++ ] = i + 1 ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "n , m ;",
        "string S ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        5,
        2
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "n , m ;",
        "string S ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        5,
        14
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "n , m ;",
        "string S ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "n , m ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        2,
        14
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "n , m ;",
        "while ( cin >> n >> m )",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        14
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "n , m ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "x [ c ++ ] = i + 1 ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        3,
        9,
        5
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "x [ c ++ ] = i + 1 ;",
        "string S ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        5,
        2
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "x [ c ++ ] = i + 1 ;",
        "string S ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        5,
        14
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "x [ c ++ ] = i + 1 ;",
        "string S ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "x [ c ++ ] = i + 1 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 9,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        2,
        14
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "x [ c ++ ] = i + 1 ;",
        "while ( cin >> n >> m )",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        14
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "x [ c ++ ] = i + 1 ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "string S ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        2
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "string S ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        2,
        14
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "string S ;",
        "while ( cin >> n >> m )",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        14
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "string S ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 9,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        14
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "while ( cin >> n >> m )",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "int x [ 4 ] , y [ 4 ] , c [ 4 ] ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int [4][int [4]]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "n , m ;",
        "x [ c ++ ] = i + 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        5
      ],
      "mod_code": [
        "n , m ;",
        "x [ c ++ ] = i + 1 ;",
        "string S ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        5,
        2
      ],
      "mod_code": [
        "n , m ;",
        "x [ c ++ ] = i + 1 ;",
        "string S ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        5,
        14
      ],
      "mod_code": [
        "n , m ;",
        "x [ c ++ ] = i + 1 ;",
        "string S ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        2
      ],
      "mod_code": [
        "n , m ;",
        "x [ c ++ ] = i + 1 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        2,
        14
      ],
      "mod_code": [
        "n , m ;",
        "x [ c ++ ] = i + 1 ;",
        "while ( cin >> n >> m )",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        14
      ],
      "mod_code": [
        "n , m ;",
        "x [ c ++ ] = i + 1 ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "n , m ;",
        "string S ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        2
      ],
      "mod_code": [
        "n , m ;",
        "string S ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        2,
        14
      ],
      "mod_code": [
        "n , m ;",
        "string S ;",
        "while ( cin >> n >> m )",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        14
      ],
      "mod_code": [
        "n , m ;",
        "string S ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "n , m ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        14
      ],
      "mod_code": [
        "n , m ;",
        "while ( cin >> n >> m )",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "n , m ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "x [ c ++ ] = i + 1 ;",
        "string S ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        2
      ],
      "mod_code": [
        "x [ c ++ ] = i + 1 ;",
        "string S ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        2,
        14
      ],
      "mod_code": [
        "x [ c ++ ] = i + 1 ;",
        "string S ;",
        "while ( cin >> n >> m )",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        14
      ],
      "mod_code": [
        "x [ c ++ ] = i + 1 ;",
        "string S ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "x [ c ++ ] = i + 1 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 9,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        14
      ],
      "mod_code": [
        "x [ c ++ ] = i + 1 ;",
        "while ( cin >> n >> m )",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "string S ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        14
      ],
      "mod_code": [
        "string S ;",
        "while ( cin >> n >> m )",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "string S ;",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "if ( x [ 0 ] != x [ 1 ] )"
      ],
      "err_line": 9,
      "err_msg": "‘x’ was not declared in this scope"
    }
  ]
}