{
  "meta": {
    "index": 1622,
    "hitid": "30EV7DWJTVPXMBHE1162SLRDAJXY6L",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "586A",
    "subid": "45261750"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer as n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "integer as count",
      "code": "int count ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n )",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "integer as temp = 0",
      "code": "int temp = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set count to n",
      "code": "count = n ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "integer as a",
      "code": "int a ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for i = 0 to less than n do the following",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if a is false",
      "code": "if ( ! a )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if i is n - 1 then do the following",
      "code": "if ( i == n - 1 )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "if temp is 1 then do the following",
      "code": "if ( temp == 1 )",
      "indent": 5
    },
    {
      "line": 12,
      "text": "subtract 2 from count",
      "code": "count -= 2 ;",
      "indent": 6
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 14,
      "text": "set temp to 1",
      "code": "temp = 1 ;",
      "indent": 6
    },
    {
      "line": 15,
      "text": "minus 1 from count",
      "code": "count -- ;",
      "indent": 6
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 17,
      "text": "else if i is 0 then do the following",
      "code": "else if ( i == 0 )",
      "indent": 4
    },
    {
      "line": 18,
      "text": "set temp to 2",
      "code": "temp = 2 ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "minus 1 from count",
      "code": "count -- ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "else if temp is 1 then do the following",
      "code": "else if ( temp == 1 )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "subtract 2 from count",
      "code": "count -= 2 ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "increment one to temp",
      "code": "temp ++ ;",
      "indent": 5
    },
    {
      "line": 23,
      "text": "else if temp is greater than or equal to 2 then do the following",
      "code": "else if ( temp >= 2 )",
      "indent": 4
    },
    {
      "line": 24,
      "text": "minus 1 from count",
      "code": "count -- ;",
      "indent": 5
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 26,
      "text": "set temp to 1",
      "code": "temp = 1 ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 28,
      "text": "set temp to 0",
      "code": "temp = 0 ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "output count",
      "code": "cout << count << endl ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "one = temp ++ ;"
      ],
      "err_line": 22,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "temp = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "getline ( cin , a ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "while ( i == n - 1 )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( temp == 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "-- 1 ;"
      ],
      "err_line": 15,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "-- 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "one ++ ;"
      ],
      "err_line": 22,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "-- 1 ;"
      ],
      "err_line": 24,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 26,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 28,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        11
      ],
      "mod_code": [
        "one = temp ++ ;",
        "while ( temp == 1 )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        22,
        11,
        13
      ],
      "mod_code": [
        "one = temp ++ ;",
        "while ( temp == 1 )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        11,
        13,
        28
      ],
      "mod_code": [
        "one = temp ++ ;",
        "while ( temp == 1 )",
        "n",
        "int temp = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        11,
        13,
        20
      ],
      "mod_code": [
        "one = temp ++ ;",
        "while ( temp == 1 )",
        "n",
        "else if ( ! temp )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        11,
        13,
        19
      ],
      "mod_code": [
        "one = temp ++ ;",
        "while ( temp == 1 )",
        "n",
        "-- 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        11,
        28
      ],
      "mod_code": [
        "one = temp ++ ;",
        "while ( temp == 1 )",
        "int temp = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        22,
        11,
        28,
        20
      ],
      "mod_code": [
        "one = temp ++ ;",
        "while ( temp == 1 )",
        "int temp = 0 ;",
        "else if ( ! temp )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        22,
        11,
        28,
        19
      ],
      "mod_code": [
        "one = temp ++ ;",
        "while ( temp == 1 )",
        "int temp = 0 ;",
        "-- 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        22,
        11,
        20
      ],
      "mod_code": [
        "one = temp ++ ;",
        "while ( temp == 1 )",
        "else if ( ! temp )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        22,
        11,
        20,
        19
      ],
      "mod_code": [
        "one = temp ++ ;",
        "while ( temp == 1 )",
        "else if ( ! temp )",
        "-- 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        22,
        11,
        19
      ],
      "mod_code": [
        "one = temp ++ ;",
        "while ( temp == 1 )",
        "-- 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        22,
        13
      ],
      "mod_code": [
        "one = temp ++ ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        13,
        28
      ],
      "mod_code": [
        "one = temp ++ ;",
        "n",
        "int temp = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        13,
        28,
        20
      ],
      "mod_code": [
        "one = temp ++ ;",
        "n",
        "int temp = 0 ;",
        "else if ( ! temp )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        13,
        28,
        19
      ],
      "mod_code": [
        "one = temp ++ ;",
        "n",
        "int temp = 0 ;",
        "-- 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        13,
        20
      ],
      "mod_code": [
        "one = temp ++ ;",
        "n",
        "else if ( ! temp )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        13,
        20,
        19
      ],
      "mod_code": [
        "one = temp ++ ;",
        "n",
        "else if ( ! temp )",
        "-- 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        13,
        19
      ],
      "mod_code": [
        "one = temp ++ ;",
        "n",
        "-- 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        28
      ],
      "mod_code": [
        "one = temp ++ ;",
        "int temp = 0 ;"
      ],
      "err_line": 22,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        28,
        20
      ],
      "mod_code": [
        "one = temp ++ ;",
        "int temp = 0 ;",
        "else if ( ! temp )"
      ],
      "err_line": 22,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        28,
        20,
        19
      ],
      "mod_code": [
        "one = temp ++ ;",
        "int temp = 0 ;",
        "else if ( ! temp )",
        "-- 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        22,
        28,
        19
      ],
      "mod_code": [
        "one = temp ++ ;",
        "int temp = 0 ;",
        "-- 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        22,
        20
      ],
      "mod_code": [
        "one = temp ++ ;",
        "else if ( ! temp )"
      ],
      "err_line": 22,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        20,
        19
      ],
      "mod_code": [
        "one = temp ++ ;",
        "else if ( ! temp )",
        "-- 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        22,
        19
      ],
      "mod_code": [
        "one = temp ++ ;",
        "-- 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13,
        28
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "n",
        "int temp = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13,
        28,
        20
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "n",
        "int temp = 0 ;",
        "else if ( ! temp )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13,
        28,
        19
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "n",
        "int temp = 0 ;",
        "-- 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13,
        20
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "n",
        "else if ( ! temp )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13,
        20,
        19
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "n",
        "else if ( ! temp )",
        "-- 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13,
        19
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "n",
        "-- 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        28
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "int temp = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        28,
        20
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "int temp = 0 ;",
        "else if ( ! temp )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        28,
        20,
        19
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "int temp = 0 ;",
        "else if ( ! temp )",
        "-- 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        28,
        19
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "int temp = 0 ;",
        "-- 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "else if ( ! temp )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        20,
        19
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "else if ( ! temp )",
        "-- 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "while ( temp == 1 )",
        "-- 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        13,
        28
      ],
      "mod_code": [
        "n",
        "int temp = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        28,
        20
      ],
      "mod_code": [
        "n",
        "int temp = 0 ;",
        "else if ( ! temp )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        28,
        20,
        19
      ],
      "mod_code": [
        "n",
        "int temp = 0 ;",
        "else if ( ! temp )",
        "-- 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        28,
        19
      ],
      "mod_code": [
        "n",
        "int temp = 0 ;",
        "-- 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "n",
        "else if ( ! temp )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        20,
        19
      ],
      "mod_code": [
        "n",
        "else if ( ! temp )",
        "-- 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "n",
        "-- 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        20,
        19
      ],
      "mod_code": [
        "int temp = 0 ;",
        "else if ( ! temp )",
        "-- 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        28,
        19
      ],
      "mod_code": [
        "int temp = 0 ;",
        "-- 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        20,
        19
      ],
      "mod_code": [
        "else if ( ! temp )",
        "-- 1 ;"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as decrement operand"
    }
  ]
}