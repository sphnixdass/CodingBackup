{
  "meta": {
    "index": 2174,
    "hitid": "307FVKVSYR90S4HZV4NNIAN2ATH474",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "102A",
    "subid": "48408557"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function desperate_optimization with argument integer precision that returns nothing",
      "code": "void desperate_optimization ( int precision )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "write output in fixed - point notation",
      "code": "cout . setf ( ios :: fixed ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "with print output , always show the decimal point",
      "code": "cout . setf ( ios :: showpoint ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "with print output set the precision to precision",
      "code": "cout . precision ( precision ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "arr = integer array of size 104",
      "code": "int arr [ 100 + 4 ] ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "ms = map of an integer pair and an integer",
      "code": "map < pair < int , int > , int > ms ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "in function hora with argument integer tc that returns nothing",
      "code": "void hora ( int tc )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "n , m = integer",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "cost = integer = 1e9",
      "code": "int cost = 1e9 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 1 to n inclusive , then read arr [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> arr [ i ] ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "u , v = integer",
      "code": "int u , v ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "read u , v",
      "code": "cin >> u >> v ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if u > v , then swap the values of u and v",
      "code": "if ( u > v ) swap ( u , v ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "ms [ { u , v } ] = 1",
      "code": "ms [ { u , v } ] = 1 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for j = i + 1 to n inclusive",
      "code": "for ( int j = i + 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "for k = j + 1 , to n inclusive",
      "code": "for ( int k = j + 1 ; k <= n ; k ++ )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "if ms [ { i , j } ] is 0 or ms [ { j , k } ] is 0 or ms [ { i , k } ] is 0 . then continue",
      "code": "if ( ms [ { i , j } ] == 0 || ms [ { j , k } ] == 0 || ms [ { i , k } ] == 0 ) continue ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "cost = lower value between cost and arr [ i ] + arr [ j ] + arr [ k ] )",
      "code": "cost = min ( cost , arr [ i ] + arr [ j ] + arr [ k ] ) ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if cost is 1e9 , then cost = - 1",
      "code": "if ( cost == 1e9 ) cost = - 1 ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print cost",
      "code": "cout << cost << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 30,
      "text": "call desperate_optimization with argument 10",
      "code": "desperate_optimization ( 10 ) ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "ntc = integer = 1",
      "code": "int ntc = 1 ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "for tc = 1 to ntc inclusive , then call hora with argument tc",
      "code": "for ( int tc = 1 ; tc <= ntc ; tc ++ ) hora ( tc ) ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cout << output << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "map < int , int > ms ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘<brace-enclosed initializer list>’)"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘]’ before ‘||’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "puts ( output ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cout . precision ( output ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "arr [ 104 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "map < int > ms ;"
      ],
      "err_line": 6,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( k = j + 1 ; k <= n ; k ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] /= ms ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘]’ before ‘||’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "cost = min ( cost + arr [ i ] + arr [ j ] + arr [ k ] ) ;"
      ],
      "err_line": 22,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "desperate_optimization ( 10 10 ) ;"
      ],
      "err_line": 30,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "for ( tc = 1 ; tc <= ntc ; tc ++ ) hora ( tc ) ;"
      ],
      "err_line": 32,
      "err_msg": "‘tc’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cout << output << endl ;",
        "cout << output . precision ( ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "cout << output << endl ;",
        "cout << output . precision ( ) << endl ;",
        "map < int , int > ms ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        21
      ],
      "mod_code": [
        "cout << output << endl ;",
        "cout << output . precision ( ) << endl ;",
        "map < int , int > ms ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        16
      ],
      "mod_code": [
        "cout << output << endl ;",
        "cout << output . precision ( ) << endl ;",
        "map < int , int > ms ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        12
      ],
      "mod_code": [
        "cout << output << endl ;",
        "cout << output . precision ( ) << endl ;",
        "map < int , int > ms ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        21
      ],
      "mod_code": [
        "cout << output << endl ;",
        "cout << output . precision ( ) << endl ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        21,
        16
      ],
      "mod_code": [
        "cout << output << endl ;",
        "cout << output . precision ( ) << endl ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        21,
        12
      ],
      "mod_code": [
        "cout << output << endl ;",
        "cout << output . precision ( ) << endl ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        16
      ],
      "mod_code": [
        "cout << output << endl ;",
        "cout << output . precision ( ) << endl ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        16,
        12
      ],
      "mod_code": [
        "cout << output << endl ;",
        "cout << output . precision ( ) << endl ;",
        "ms [ { u , ' v ' } ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        12
      ],
      "mod_code": [
        "cout << output << endl ;",
        "cout << output . precision ( ) << endl ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cout << output << endl ;",
        "map < int , int > ms ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        21
      ],
      "mod_code": [
        "cout << output << endl ;",
        "map < int , int > ms ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        21,
        16
      ],
      "mod_code": [
        "cout << output << endl ;",
        "map < int , int > ms ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        21,
        12
      ],
      "mod_code": [
        "cout << output << endl ;",
        "map < int , int > ms ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        16
      ],
      "mod_code": [
        "cout << output << endl ;",
        "map < int , int > ms ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        16,
        12
      ],
      "mod_code": [
        "cout << output << endl ;",
        "map < int , int > ms ;",
        "ms [ { u , ' v ' } ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        12
      ],
      "mod_code": [
        "cout << output << endl ;",
        "map < int , int > ms ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "cout << output << endl ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        21,
        16
      ],
      "mod_code": [
        "cout << output << endl ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        21,
        16,
        12
      ],
      "mod_code": [
        "cout << output << endl ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "ms [ { u , ' v ' } ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        21,
        12
      ],
      "mod_code": [
        "cout << output << endl ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "cout << output << endl ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        16,
        12
      ],
      "mod_code": [
        "cout << output << endl ;",
        "ms [ { u , ' v ' } ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "cout << output << endl ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "map < int , int > ms ;"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        21
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "map < int , int > ms ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        21,
        16
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "map < int , int > ms ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        21,
        12
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "map < int , int > ms ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        16
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "map < int , int > ms ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        16,
        12
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "map < int , int > ms ;",
        "ms [ { u , ' v ' } ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        12
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "map < int , int > ms ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        16
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        16,
        12
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "ms [ { u , ' v ' } ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        12
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        16,
        12
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "ms [ { u , ' v ' } ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "cout << output . precision ( ) << endl ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        21
      ],
      "mod_code": [
        "map < int , int > ms ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘<brace-enclosed initializer list>’)"
    },
    {
      "mod_line": [
        6,
        21,
        16
      ],
      "mod_code": [
        "map < int , int > ms ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘<brace-enclosed initializer list>’)"
    },
    {
      "mod_line": [
        6,
        21,
        16,
        12
      ],
      "mod_code": [
        "map < int , int > ms ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "ms [ { u , ' v ' } ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        21,
        12
      ],
      "mod_code": [
        "map < int , int > ms ;",
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "map < int , int > ms ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<int, int>’ and ‘<brace-enclosed initializer list>’)"
    },
    {
      "mod_line": [
        6,
        16,
        12
      ],
      "mod_code": [
        "map < int , int > ms ;",
        "ms [ { u , ' v ' } ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "map < int , int > ms ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        16
      ],
      "mod_code": [
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "ms [ { u , ' v ' } ] = 1 ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘]’ before ‘||’ token"
    },
    {
      "mod_line": [
        21,
        16,
        12
      ],
      "mod_code": [
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "ms [ { u , ' v ' } ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        12
      ],
      "mod_code": [
        "if ( ms [ { i , j } ] == 0 || ms [ { j , k } || ms [ { i , k } ] = ' 0 ' ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "ms [ { u , ' v ' } ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}