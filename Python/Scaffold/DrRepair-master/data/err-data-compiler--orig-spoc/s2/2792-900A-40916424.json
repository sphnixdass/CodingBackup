{
  "meta": {
    "index": 2792,
    "hitid": "3Z3R5YC0P3HXOIBVSOM7EACBOGGFTE",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "900A",
    "subid": "40916424"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make integer sum1 = 0",
      "code": "int sum1 = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create int sum2 = 0",
      "code": "int sum2 = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create int x",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "make integer y",
      "code": "int y ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read x and y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if x is less than 0",
      "code": "if ( x < 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increase sum2 by 1",
      "code": "sum2 ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increase sum1 by 1",
      "code": "sum1 ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if sum1 is less than or equal to 1 or sum2 is less than or equal to 1",
      "code": "if ( sum1 <= 1 || sum2 <= 1 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" Yes \"",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else do",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "display \" No \"",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "sum1 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘sum1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "const int sum2 = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "increment of read-only variable ‘sum2’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        15
      ],
      "mod_code": [
        "else do",
        "cout << \" Yes \" ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        15,
        2
      ],
      "mod_code": [
        "else do",
        "cout << \" Yes \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        15,
        2,
        6
      ],
      "mod_code": [
        "else do",
        "cout << \" Yes \" ;",
        "n = getchar ( ) ;",
        "bool x ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        15,
        2,
        8
      ],
      "mod_code": [
        "else do",
        "cout << \" Yes \" ;",
        "n = getchar ( ) ;",
        "cin >> n >> y ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        15,
        2,
        11
      ],
      "mod_code": [
        "else do",
        "cout << \" Yes \" ;",
        "n = getchar ( ) ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        15,
        6
      ],
      "mod_code": [
        "else do",
        "cout << \" Yes \" ;",
        "bool x ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        15,
        6,
        8
      ],
      "mod_code": [
        "else do",
        "cout << \" Yes \" ;",
        "bool x ;",
        "cin >> n >> y ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        15,
        6,
        11
      ],
      "mod_code": [
        "else do",
        "cout << \" Yes \" ;",
        "bool x ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        15,
        8
      ],
      "mod_code": [
        "else do",
        "cout << \" Yes \" ;",
        "cin >> n >> y ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        15,
        8,
        11
      ],
      "mod_code": [
        "else do",
        "cout << \" Yes \" ;",
        "cin >> n >> y ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        15,
        11
      ],
      "mod_code": [
        "else do",
        "cout << \" Yes \" ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        2,
        6
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;",
        "bool x ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        2,
        6,
        8
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;",
        "bool x ;",
        "cin >> n >> y ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        2,
        6,
        11
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;",
        "bool x ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        2,
        8
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;",
        "cin >> n >> y ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        2,
        8,
        11
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;",
        "cin >> n >> y ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        2,
        11
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "else do",
        "bool x ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        6,
        8
      ],
      "mod_code": [
        "else do",
        "bool x ;",
        "cin >> n >> y ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        6,
        8,
        11
      ],
      "mod_code": [
        "else do",
        "bool x ;",
        "cin >> n >> y ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        6,
        11
      ],
      "mod_code": [
        "else do",
        "bool x ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "else do",
        "cin >> n >> y ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        16,
        8,
        11
      ],
      "mod_code": [
        "else do",
        "cin >> n >> y ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "else do",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        2,
        6,
        11
      ],
      "mod_code": [
        "cout << \" Yes \" ;",
        "n = getchar ( ) ;",
        "bool x ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        2,
        8,
        11
      ],
      "mod_code": [
        "cout << \" Yes \" ;",
        "n = getchar ( ) ;",
        "cin >> n >> y ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        2,
        11
      ],
      "mod_code": [
        "cout << \" Yes \" ;",
        "n = getchar ( ) ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        6,
        8,
        11
      ],
      "mod_code": [
        "cout << \" Yes \" ;",
        "bool x ;",
        "cin >> n >> y ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        6,
        11
      ],
      "mod_code": [
        "cout << \" Yes \" ;",
        "bool x ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        8,
        11
      ],
      "mod_code": [
        "cout << \" Yes \" ;",
        "cin >> n >> y ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15,
        11
      ],
      "mod_code": [
        "cout << \" Yes \" ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "bool x ;",
        "cin >> n >> y ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        6,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "bool x ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        8,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> n >> y ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "bool x ;",
        "cin >> n >> y ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "bool x ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "cin >> n >> y ;",
        "else do"
      ],
      "err_line": 13,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}