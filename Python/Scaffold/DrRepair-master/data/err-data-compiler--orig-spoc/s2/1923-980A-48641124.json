{
  "meta": {
    "index": 1923,
    "hitid": "3Y3N5A7N4G3ZBE26OHDJHHOZ0J7YMQ",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "980A",
    "subid": "48641124"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = array of 1001 char",
      "code": "char a [ 1001 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "n , m = int",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while read a",
      "code": "while ( cin >> a )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "n , m = 0",
      "code": "n = 0 , m = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < strlen ( a ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ i ] is ' - '",
      "code": "if ( a [ i ] == ' - ' )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "increment n",
      "code": "n ++ ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "else if a [ i ] is ' o '",
      "code": "else if ( a [ i ] == ' o ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment m",
      "code": "m ++ ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if n is 0 or m is 0 or n modulo m is 0",
      "code": "if ( n == 0 || m == 0 || n % m == 0 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "long long n , m = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "long long n , m = 0 ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        14,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "long long n , m = 0 ;",
        "n",
        "if ( ! a [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        14,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "long long n , m = 0 ;",
        "n",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "long long n , m = 0 ;",
        "if ( ! a [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        6,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "long long n , m = 0 ;",
        "if ( ! a [ i ] )",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        4,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "long long n , m = 0 ;",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "n",
        "if ( ! a [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14,
        6,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "n",
        "if ( ! a [ i ] )",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        14,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "n",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "if ( ! a [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "if ( ! a [ i ] )",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "long long n , m = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "long long n , m = 0 ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        14,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "long long n , m = 0 ;",
        "n",
        "if ( ! a [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        14,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "long long n , m = 0 ;",
        "n",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "long long n , m = 0 ;",
        "if ( ! a [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        6,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "long long n , m = 0 ;",
        "if ( ! a [ i ] )",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        4,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "long long n , m = 0 ;",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "n",
        "if ( ! a [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14,
        6,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "n",
        "if ( ! a [ i ] )",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        14,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "n",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( ! a [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( ! a [ i ] )",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "long long n , m = 0 ;",
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        14,
        6
      ],
      "mod_code": [
        "long long n , m = 0 ;",
        "n",
        "if ( ! a [ i ] )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        14,
        6,
        3
      ],
      "mod_code": [
        "long long n , m = 0 ;",
        "n",
        "if ( ! a [ i ] )",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        14,
        3
      ],
      "mod_code": [
        "long long n , m = 0 ;",
        "n",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        6,
        3
      ],
      "mod_code": [
        "long long n , m = 0 ;",
        "if ( ! a [ i ] )",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "long long n , m = 0 ;",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "n",
        "if ( ! a [ i ] )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        6,
        3
      ],
      "mod_code": [
        "n",
        "if ( ! a [ i ] )",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "n",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( ! a [ i ] )",
        "while ( a >> a )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [1001]’ and ‘char [1001]’ to binary ‘operator>>’"
    }
  ]
}