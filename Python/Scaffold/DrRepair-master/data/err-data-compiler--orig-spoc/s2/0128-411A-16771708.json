{
  "meta": {
    "index": 128,
    "hitid": "3W0XM68YZPP7VKR0RGTUOHLL4T51KS",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "411A",
    "subid": "16771708"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "ch1 , ch2 , ch3 = bool with ch1 = 0 and ch2 = 0 and ch3 = 0",
      "code": "bool ch1 = 0 , ch2 = 0 , ch3 = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to size of s",
      "code": "for ( int i = 0 ; i < s . size ( ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ i ] > = 65 and s [ i ] < = 90 set ch1 to true",
      "code": "if ( s [ i ] >= 65 && s [ i ] <= 90 ) ch1 = true ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s [ i ] > = 97 and s [ i ] < = 122 set ch2 to true",
      "code": "if ( s [ i ] >= 97 && s [ i ] <= 122 ) ch2 = true ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s [ i ] > = 48 and s [ i ] < = 57 set ch3 to true",
      "code": "if ( s [ i ] >= 48 && s [ i ] <= 57 ) ch3 = true ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if size of s > = 5 and ch1 is true and ch2 is true and ch3 is true",
      "code": "if ( s . size ( ) >= 5 && ch1 == true && ch2 == true && ch3 == true )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" Correct \"",
      "code": "cout << \" Correct \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" Too weak \"",
      "code": "cout << \" Too weak \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘bool ch3’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        3
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" 2/3 \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘bool ch3’"
    },
    {
      "mod_line": [
        10,
        12,
        3,
        2
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" 2/3 \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        12,
        3,
        11
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" 2/3 \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘bool ch3’"
    },
    {
      "mod_line": [
        10,
        12,
        2
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" 2/3 \" ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        12,
        2,
        11
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" 2/3 \" ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        12,
        11
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" 2/3 \" ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        3
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Too \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘bool ch3’"
    },
    {
      "mod_line": [
        10,
        12,
        3,
        2
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Too \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        12,
        3,
        11
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Too \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘bool ch3’"
    },
    {
      "mod_line": [
        10,
        12,
        2
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Too \" ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        12,
        2,
        11
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Too \" ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        12,
        11
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Too \" ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘bool ch3’"
    },
    {
      "mod_line": [
        10,
        3,
        2
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        3,
        2,
        11
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        3,
        11
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘bool ch3’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        2,
        11
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘bool ch3’"
    },
    {
      "mod_line": [
        12,
        3,
        2
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        3,
        2,
        11
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        3,
        11
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘bool ch3’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        2,
        11
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << \" Too \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘bool ch3’"
    },
    {
      "mod_line": [
        12,
        3,
        2
      ],
      "mod_code": [
        "cout << \" Too \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        3,
        2,
        11
      ],
      "mod_code": [
        "cout << \" Too \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        3,
        11
      ],
      "mod_code": [
        "cout << \" Too \" ;",
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘bool ch3’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "cout << \" Too \" ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        2,
        11
      ],
      "mod_code": [
        "cout << \" Too \" ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "cout << \" Too \" ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        2,
        11
      ],
      "mod_code": [
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "bool ch1 , ch2 = 0 , ch3 = 0 , ch3 = 0 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘bool ch3’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}