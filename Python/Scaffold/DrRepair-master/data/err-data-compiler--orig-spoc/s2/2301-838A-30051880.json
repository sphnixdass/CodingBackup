{
  "meta": {
    "index": 2301,
    "hitid": "386659BNTLB5IUKWNNJC5X6CQVZ10M",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "838A",
    "subid": "30051880"
  },
  "lines": [
    {
      "line": 0,
      "text": "create int array dp of size 2505 with array of size 2505",
      "code": "int dp [ 2505 ] [ 2505 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make ints n and m",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare cntt taking in int k and returning integer",
      "code": "int cntt ( int k )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integers k - 1 and res = 0",
      "code": "int k1 = k - 1 , res = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i += k )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 1 to m",
      "code": "for ( int j = 1 ; j <= m ; j += k )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "create integer cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "set cnt to cnt + dp [ min ( i + k1 , n ) ] [ min ( j + k1 , m ) ]",
      "code": "cnt += dp [ min ( i + k1 , n ) ] [ min ( j + k1 , m ) ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set cnt to cnt - dp [ i - 1 ] [ min ( j + k1 , m ) ]",
      "code": "cnt -= dp [ i - 1 ] [ min ( j + k1 , m ) ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "subtract dp [ min ( i + k1 , n ) ] [ j - 1 ] from cnt",
      "code": "cnt -= dp [ min ( i + k1 , n ) ] [ j - 1 ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "add dp [ i - 1 ] [ j - 1 ] to cnt",
      "code": "cnt += dp [ i - 1 ] [ j - 1 ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "add min ( cnt , k * k - cnt ) to res",
      "code": "res += min ( cnt , k * k - cnt ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "return res",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 17,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "for j = 1 to m , set dp [ i ] [ j ] to dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] [ j - 1 ] + s [ j - 1 ] - ' 0 '",
      "code": "for ( int j = 1 ; j <= m ; ++ j ) { dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] [ j - 1 ] + s [ j - 1 ] - ' 0 ' ; }",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "create integer res = n * m",
      "code": "int res = n * m ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for k = 2 to min ( n , m ) , set res to min of res and cntt ( k )",
      "code": "for ( int k = 2 ; k <= min ( n , m ) ; ++ k ) { res = min ( res , cntt ( k ) ) ; }",
      "indent": 1
    },
    {
      "line": 25,
      "text": "show res",
      "code": "cout << res << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;"
      ],
      "err_line": 21,
      "err_msg": "invalid operands of types ‘int’ and ‘int [2505]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int arr [ 2505 ] [ 2505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘dp’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , m ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(int, long long int&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int cntt ( int k ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int k = 0 , res = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "declaration of ‘int k’ shadows a parameter"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cnt -= dp [ min ( i + k1 ) ] [ j - 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 20,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 20,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 20,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "res = n * m ;"
      ],
      "err_line": 23,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        21
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        14
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "exit ( res ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        6
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        4,
        21
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        4,
        21,
        14
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "exit ( res ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        4,
        21,
        6
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        4,
        14
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "exit ( res ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        6
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "exit ( res ) ;",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        5,
        21
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        5,
        21,
        14
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "exit ( res ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        5,
        21,
        6
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        5,
        14
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "exit ( res ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        5,
        14,
        6
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "exit ( res ) ;",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        21,
        14
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "exit ( res ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        21,
        14,
        6
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "exit ( res ) ;",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        21,
        6
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "exit ( res ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        14,
        6
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "exit ( res ) ;",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int k - 1 , res = 0 ;",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        4,
        5,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;"
      ],
      "err_line": 21,
      "err_msg": "invalid operands of types ‘int’ and ‘int [2505]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        4,
        5,
        21,
        14
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "exit ( res ) ;"
      ],
      "err_line": 21,
      "err_msg": "invalid operands of types ‘int’ and ‘int [2505]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        4,
        5,
        21,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        14,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "exit ( res ) ;",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ )",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;"
      ],
      "err_line": 21,
      "err_msg": "invalid operands of types ‘int’ and ‘int [2505]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        4,
        21,
        14
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "exit ( res ) ;"
      ],
      "err_line": 21,
      "err_msg": "invalid operands of types ‘int’ and ‘int [2505]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        4,
        21,
        14,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "exit ( res ) ;",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "exit ( res ) ;",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;"
      ],
      "err_line": 21,
      "err_msg": "invalid operands of types ‘int’ and ‘int [2505]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        5,
        21,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "exit ( res ) ;"
      ],
      "err_line": 21,
      "err_msg": "invalid operands of types ‘int’ and ‘int [2505]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        5,
        21,
        14,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "exit ( res ) ;",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        21,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ )",
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ )",
        "exit ( res ) ;",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ )",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "exit ( res ) ;"
      ],
      "err_line": 21,
      "err_msg": "invalid operands of types ‘int’ and ‘int [2505]’ to binary ‘operator-’"
    },
    {
      "mod_line": [
        21,
        14,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "exit ( res ) ;",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        6
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= m ; j ++ ) dp [ i ] [ j ] = dp [ i - 1 ] [ j ] + dp [ i ] [ j - 1 ] - dp [ i - 1 ] - ' 0 ' + s [ j - 1 ] - ' 0 ' ;",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "exit ( res ) ;",
        "cnt = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘cnt’ was not declared in this scope"
    }
  ]
}