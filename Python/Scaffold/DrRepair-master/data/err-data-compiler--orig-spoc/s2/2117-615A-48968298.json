{
  "meta": {
    "index": 2117,
    "hitid": "37Y5RYYI0PZD94P13IN3ACGWQ2SXSS",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "615A",
    "subid": "48968298"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m , i , j , k , and count = 0",
      "code": "int n , m , i , j , k , count = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create a map mp from ints to ints",
      "code": "map < int , int > mp ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while n - - is truthy",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read i",
      "code": "cin >> i ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "while i - - is truthy",
      "code": "while ( i -- )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment mp [ k ]",
      "code": "mp [ k ] ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if mp [ k ] is equal to 1 , increment count",
      "code": "if ( mp [ k ] == 1 ) count ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if count is equal to m",
      "code": "if ( count == m )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , i , j , k , k , count = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> t ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( count == m ) break ;"
      ],
      "err_line": 12,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "cin >> t ;",
        "if ( count == m ) break ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        1
      ],
      "mod_code": [
        "cin >> t ;",
        "if ( count == m ) break ;",
        "int n , m , i , j , k , k , count = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        12,
        1,
        7
      ],
      "mod_code": [
        "cin >> t ;",
        "if ( count == m ) break ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        12,
        1,
        13
      ],
      "mod_code": [
        "cin >> t ;",
        "if ( count == m ) break ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        12,
        1,
        2
      ],
      "mod_code": [
        "cin >> t ;",
        "if ( count == m ) break ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "map < int , int mp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        12,
        7
      ],
      "mod_code": [
        "cin >> t ;",
        "if ( count == m ) break ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        7,
        13
      ],
      "mod_code": [
        "cin >> t ;",
        "if ( count == m ) break ;",
        "k = getchar ( ) ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        7,
        2
      ],
      "mod_code": [
        "cin >> t ;",
        "if ( count == m ) break ;",
        "k = getchar ( ) ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        5,
        12,
        13
      ],
      "mod_code": [
        "cin >> t ;",
        "if ( count == m ) break ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        13,
        2
      ],
      "mod_code": [
        "cin >> t ;",
        "if ( count == m ) break ;",
        "cout << \" YES \" ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        5,
        12,
        2
      ],
      "mod_code": [
        "cin >> t ;",
        "if ( count == m ) break ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "cin >> t ;",
        "int n , m , i , j , k , k , count = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        1,
        7
      ],
      "mod_code": [
        "cin >> t ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        1,
        7,
        13
      ],
      "mod_code": [
        "cin >> t ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "k = getchar ( ) ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        1,
        7,
        2
      ],
      "mod_code": [
        "cin >> t ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "k = getchar ( ) ;",
        "map < int , int mp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        1,
        13
      ],
      "mod_code": [
        "cin >> t ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        1,
        13,
        2
      ],
      "mod_code": [
        "cin >> t ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "cout << \" YES \" ;",
        "map < int , int mp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "cin >> t ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "map < int , int mp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "cin >> t ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        13
      ],
      "mod_code": [
        "cin >> t ;",
        "k = getchar ( ) ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        2
      ],
      "mod_code": [
        "cin >> t ;",
        "k = getchar ( ) ;",
        "cout << \" YES \" ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "cin >> t ;",
        "k = getchar ( ) ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "cin >> t ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        2
      ],
      "mod_code": [
        "cin >> t ;",
        "cout << \" YES \" ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cin >> t ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "int n , m , i , j , k , k , count = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        12,
        1,
        7
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        12,
        1,
        7,
        13
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "k = getchar ( ) ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        12,
        1,
        7,
        2
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "k = getchar ( ) ;",
        "map < int , int mp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        12,
        1,
        13
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        12,
        1,
        13,
        2
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "cout << \" YES \" ;",
        "map < int , int mp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        12,
        1,
        2
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "int n , m , i , j , k , k , count = 0 ;",
        "map < int , int mp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        12,
        7,
        13
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "k = getchar ( ) ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 12,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        12,
        7,
        13,
        2
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "k = getchar ( ) ;",
        "cout << \" YES \" ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        12,
        7,
        2
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "k = getchar ( ) ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 12,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        12,
        13,
        2
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "cout << \" YES \" ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "if ( count == m ) break ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , m , i , j , k , k , count = 0 ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        7,
        13
      ],
      "mod_code": [
        "int n , m , i , j , k , k , count = 0 ;",
        "k = getchar ( ) ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        7,
        13,
        2
      ],
      "mod_code": [
        "int n , m , i , j , k , k , count = 0 ;",
        "k = getchar ( ) ;",
        "cout << \" YES \" ;",
        "map < int , int mp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        7,
        2
      ],
      "mod_code": [
        "int n , m , i , j , k , k , count = 0 ;",
        "k = getchar ( ) ;",
        "map < int , int mp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int n , m , i , j , k , k , count = 0 ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        13,
        2
      ],
      "mod_code": [
        "int n , m , i , j , k , k , count = 0 ;",
        "cout << \" YES \" ;",
        "map < int , int mp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , m , i , j , k , k , count = 0 ;",
        "map < int , int mp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        7,
        13,
        2
      ],
      "mod_code": [
        "k = getchar ( ) ;",
        "cout << \" YES \" ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "k = getchar ( ) ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "map < int , int mp ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 2 is invalid"
    }
  ]
}