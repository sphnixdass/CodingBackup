{
  "meta": {
    "index": 2100,
    "hitid": "31D0ZWOD0AT1CIXWJ6C5GYZFUP10A5",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "615A",
    "subid": "48905772"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m , a , p = integer",
      "code": "int n , m , a , p ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s = integer set",
      "code": "set < int > s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 0 to a exclusive",
      "code": "for ( int j = 0 ; j < a ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "insert the value of p into s",
      "code": "s . insert ( p ) ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if size of s is m",
      "code": "if ( s . size ( ) == m )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "inline int s ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "getline ( cin , a ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "s . insert ( p p ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘p’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( s . size ( ) == m m )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘)’ before ‘m’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        2
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "inline int s ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        13,
        4,
        2,
        5
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "inline int s ;",
        "getline ( cin , a ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        13,
        4,
        2,
        8
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "inline int s ;",
        "s . insert ( p p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        13,
        4,
        2,
        3
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "inline int s ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        13,
        4,
        5
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "getline ( cin , a ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        5,
        8
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "getline ( cin , a ) ;",
        "s . insert ( p p ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        5,
        3
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "getline ( cin , a ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        8
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "s . insert ( p p ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        8,
        3
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "s . insert ( p p ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4,
        3
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n , m ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "n",
        "inline int s ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        13,
        2,
        5
      ],
      "mod_code": [
        "n",
        "inline int s ;",
        "getline ( cin , a ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        13,
        2,
        5,
        8
      ],
      "mod_code": [
        "n",
        "inline int s ;",
        "getline ( cin , a ) ;",
        "s . insert ( p p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        13,
        2,
        5,
        3
      ],
      "mod_code": [
        "n",
        "inline int s ;",
        "getline ( cin , a ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        13,
        2,
        8
      ],
      "mod_code": [
        "n",
        "inline int s ;",
        "s . insert ( p p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        13,
        2,
        8,
        3
      ],
      "mod_code": [
        "n",
        "inline int s ;",
        "s . insert ( p p ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        13,
        2,
        3
      ],
      "mod_code": [
        "n",
        "inline int s ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "n",
        "getline ( cin , a ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        13,
        5,
        8
      ],
      "mod_code": [
        "n",
        "getline ( cin , a ) ;",
        "s . insert ( p p ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        13,
        5,
        8,
        3
      ],
      "mod_code": [
        "n",
        "getline ( cin , a ) ;",
        "s . insert ( p p ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        13,
        5,
        3
      ],
      "mod_code": [
        "n",
        "getline ( cin , a ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "n",
        "s . insert ( p p ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘p’"
    },
    {
      "mod_line": [
        13,
        8,
        3
      ],
      "mod_code": [
        "n",
        "s . insert ( p p ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘p’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "n",
        "cin >> n , m ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "inline int s ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "inline int s ;",
        "getline ( cin , a ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4,
        2,
        5,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "inline int s ;",
        "getline ( cin , a ) ;",
        "s . insert ( p p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4,
        2,
        5,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "inline int s ;",
        "getline ( cin , a ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4,
        2,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "inline int s ;",
        "s . insert ( p p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4,
        2,
        8,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "inline int s ;",
        "s . insert ( p p ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4,
        2,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "inline int s ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "getline ( cin , a ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "getline ( cin , a ) ;",
        "s . insert ( p p ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "getline ( cin , a ) ;",
        "s . insert ( p p ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "getline ( cin , a ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "s . insert ( p p ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "s . insert ( p p ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> n , m ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "inline int s ;",
        "getline ( cin , a ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        2,
        5,
        8
      ],
      "mod_code": [
        "inline int s ;",
        "getline ( cin , a ) ;",
        "s . insert ( p p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        2,
        5,
        8,
        3
      ],
      "mod_code": [
        "inline int s ;",
        "getline ( cin , a ) ;",
        "s . insert ( p p ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        2,
        5,
        3
      ],
      "mod_code": [
        "inline int s ;",
        "getline ( cin , a ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "inline int s ;",
        "s . insert ( p p ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        2,
        8,
        3
      ],
      "mod_code": [
        "inline int s ;",
        "s . insert ( p p ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "inline int s ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "s . insert ( p p ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        5,
        8,
        3
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "s . insert ( p p ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "s . insert ( p p ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘p’"
    }
  ]
}