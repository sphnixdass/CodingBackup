{
  "meta": {
    "index": 209,
    "hitid": "3D06DR5225DYFW438BZ3EV6SXS7MA7",
    "workerid": "A28TIENUWLMMIP",
    "probid": "1009A",
    "subid": "48782359"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let game and money be integers",
      "code": "int game , money ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read in game and money",
      "code": "cin >> game >> money ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let g be an array of integers of size 1005",
      "code": "int g [ 1005 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let m be an array of integers of size 1005",
      "code": "int m [ 1005 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read in game number of values to g [ i ]",
      "code": "for ( int i = 0 ; i < game ; i ++ ) { cin >> g [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read in money number of values for m [ i ]",
      "code": "for ( int i = 0 ; i < money ; i ++ ) { cin >> m [ i ] ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let gp and mp be integers , set gp and mp to 0",
      "code": "int gp = 0 , mp = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let count be an integer with a value of 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "while gp is less than game and mp is less than money",
      "code": "while ( gp < game && mp < money )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if g [ gp ] is less than or equal to m [ mp ]",
      "code": "if ( g [ gp ] <= m [ mp ] )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increment gp",
      "code": "gp ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increment mp",
      "code": "mp ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "or else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment gp",
      "code": "gp ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print count",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int * g [ 1005 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> game [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int gp’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "game >> game >> money ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "game >> game >> money ;",
        "cout << ' count ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2,
        17,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "game >> game >> money ;",
        "cout << ' count ' ;",
        "x :"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2,
        17,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "game >> game >> money ;",
        "cout << ' count ' ;",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "game >> game >> money ;",
        "x :"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2,
        14,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "game >> game >> money ;",
        "x :",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "game >> game >> money ;",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "cout << ' count ' ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        17,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "cout << ' count ' ;",
        "x :"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        17,
        14,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "cout << ' count ' ;",
        "x :",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        17,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "cout << ' count ' ;",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "x :"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        14,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "x :",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < game [ i ] ; ++ i ) cin >> g [ i ] ;",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "game >> game >> money ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        17
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "game >> game >> money ;",
        "cout << ' count ' ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        17,
        14
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "game >> game >> money ;",
        "cout << ' count ' ;",
        "x :"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        17,
        7
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "game >> game >> money ;",
        "cout << ' count ' ;",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        14
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "game >> game >> money ;",
        "x :"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        14,
        7
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "game >> game >> money ;",
        "x :",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        7
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "game >> game >> money ;",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "cout << ' count ' ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        14
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "cout << ' count ' ;",
        "x :"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        14,
        7
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "cout << ' count ' ;",
        "x :",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        7
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "cout << ' count ' ;",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "x :"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14,
        7
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "x :",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "cin >> game [ i ] ;",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        17,
        14,
        7
      ],
      "mod_code": [
        "game >> game >> money ;",
        "cout << ' count ' ;",
        "x :",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int gp’"
    },
    {
      "mod_line": [
        2,
        17,
        7
      ],
      "mod_code": [
        "game >> game >> money ;",
        "cout << ' count ' ;",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int gp’"
    },
    {
      "mod_line": [
        2,
        14,
        7
      ],
      "mod_code": [
        "game >> game >> money ;",
        "x :",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int gp’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "game >> game >> money ;",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int gp’"
    },
    {
      "mod_line": [
        17,
        14,
        7
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "x :",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int gp’"
    },
    {
      "mod_line": [
        17,
        7
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int gp’"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "x :",
        "int gp = 0 , gp = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int gp’"
    }
  ]
}