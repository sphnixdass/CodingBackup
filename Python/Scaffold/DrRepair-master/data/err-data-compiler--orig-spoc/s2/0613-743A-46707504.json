{
  "meta": {
    "index": 613,
    "hitid": "388FBO7JZRN5TWN60ISJUWDZ59EYNN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "743A",
    "subid": "46707504"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , a and b",
      "code": "int n , a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to n , a and b",
      "code": "cin >> n >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare character array aN with size 100000",
      "code": "char aN [ 100000 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read aN",
      "code": "cin >> aN ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if aN [ a - 1 ] ! = aN [ b - 1 ]",
      "code": "if ( aN [ a - 1 ] != aN [ b - 1 ] )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print 1",
      "code": "cout << 1 << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char a [ 100000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "aN >> aN ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [100000]’ and ‘char [100000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "aN >> aN ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [100000]’ and ‘char [100000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        4,
        7
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "aN >> aN ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [100000]’ and ‘char [100000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        3
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "aN >> aN ;",
        "n",
        "char a [ 100000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        5
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "aN >> aN ;",
        "n",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [100000]’ and ‘char [100000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "aN >> aN ;",
        "n",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        4,
        3
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "aN >> aN ;",
        "char a [ 100000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        2,
        4,
        3,
        5
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "aN >> aN ;",
        "char a [ 100000 ] ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        2,
        4,
        3,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "aN >> aN ;",
        "char a [ 100000 ] ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "aN >> aN ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [100000]’ and ‘char [100000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        4,
        5,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "aN >> aN ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        4,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "aN >> aN ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        3
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n",
        "char a [ 100000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        2,
        7,
        3,
        5
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n",
        "char a [ 100000 ] ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        2,
        7,
        3,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n",
        "char a [ 100000 ] ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        7,
        5
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        7,
        5,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        7,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "char a [ 100000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "char a [ 100000 ] ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "char a [ 100000 ] ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        3,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "char a [ 100000 ] ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        5,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "aN >> aN ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [100000]’ and ‘char [100000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "aN >> aN ;",
        "n",
        "char a [ 100000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        5
      ],
      "mod_code": [
        "aN >> aN ;",
        "n",
        "char a [ 100000 ] ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        1
      ],
      "mod_code": [
        "aN >> aN ;",
        "n",
        "char a [ 100000 ] ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        4,
        7,
        5
      ],
      "mod_code": [
        "aN >> aN ;",
        "n",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [100000]’ and ‘char [100000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        7,
        5,
        1
      ],
      "mod_code": [
        "aN >> aN ;",
        "n",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        4,
        7,
        1
      ],
      "mod_code": [
        "aN >> aN ;",
        "n",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "aN >> aN ;",
        "char a [ 100000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        4,
        3,
        5
      ],
      "mod_code": [
        "aN >> aN ;",
        "char a [ 100000 ] ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        4,
        3,
        5,
        1
      ],
      "mod_code": [
        "aN >> aN ;",
        "char a [ 100000 ] ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "aN >> aN ;",
        "char a [ 100000 ] ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "aN >> aN ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [100000]’ and ‘char [100000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "aN >> aN ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "aN >> aN ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "n",
        "char a [ 100000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        7,
        3,
        5
      ],
      "mod_code": [
        "n",
        "char a [ 100000 ] ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        7,
        3,
        5,
        1
      ],
      "mod_code": [
        "n",
        "char a [ 100000 ] ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        3,
        1
      ],
      "mod_code": [
        "n",
        "char a [ 100000 ] ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "n",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        5,
        1
      ],
      "mod_code": [
        "n",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "n",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "char a [ 100000 ] ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘char a [100000]’"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "char a [ 100000 ] ;",
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "char a [ 100000 ] ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "if ( aN [ a - 1 ] ] != aN [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    }
  ]
}