{
  "meta": {
    "index": 884,
    "hitid": "3IJ95K7NDX6575266C6DNW6V0DQGN9",
    "workerid": "A1AYVATMT88U1W",
    "probid": "267A",
    "subid": "46238911"
  },
  "lines": [
    {
      "line": 0,
      "text": "let n , a , b , ans be long integers",
      "code": "long long n , a , b , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while n is decremented by 1",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "the value of ans = 0",
      "code": "ans = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if b is greater than a , swap the values a , b",
      "code": "if ( b > a ) swap ( a , b ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment ans by a / b",
      "code": "ans += a / b ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "decrement a by ans * b",
      "code": "a -= ( ans * b ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "while a is greater than 0 and b is greater than 0",
      "code": "while ( a > 0 && b > 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if a is equal to b",
      "code": "if ( a == b )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment ans by 1",
      "code": "ans ++ ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "initialize a to 0",
      "code": "a = 0 ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else if a is greater than b",
      "code": "else if ( a > b )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment ans by a / b",
      "code": "ans += a / b ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "decrement a by a / b * b",
      "code": "a -= ( a / b * b ) ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 17,
      "text": "increment ans by b / a",
      "code": "ans += b / a ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "decrement b by b / a * a",
      "code": "b -= ( b / a * a ) ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print ans and newline",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else if ( a == b )"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "else if ( a == b )",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        10,
        3,
        2
      ],
      "mod_code": [
        "else if ( a == b )",
        "while ( n is 1 )",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        10,
        3,
        2,
        5
      ],
      "mod_code": [
        "else if ( a == b )",
        "while ( n is 1 )",
        "n = getchar ( ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        10,
        3,
        2,
        16
      ],
      "mod_code": [
        "else if ( a == b )",
        "while ( n is 1 )",
        "n = getchar ( ) ;",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        10,
        3,
        5
      ],
      "mod_code": [
        "else if ( a == b )",
        "while ( n is 1 )",
        "cin >> a , b ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        10,
        3,
        5,
        16
      ],
      "mod_code": [
        "else if ( a == b )",
        "while ( n is 1 )",
        "cin >> a , b ;",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        10,
        3,
        16
      ],
      "mod_code": [
        "else if ( a == b )",
        "while ( n is 1 )",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "else if ( a == b )",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        2,
        5
      ],
      "mod_code": [
        "else if ( a == b )",
        "n = getchar ( ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        2,
        5,
        16
      ],
      "mod_code": [
        "else if ( a == b )",
        "n = getchar ( ) ;",
        "cin >> a , b ;",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        2,
        16
      ],
      "mod_code": [
        "else if ( a == b )",
        "n = getchar ( ) ;",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "else if ( a == b )",
        "cin >> a , b ;"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        5,
        16
      ],
      "mod_code": [
        "else if ( a == b )",
        "cin >> a , b ;",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "else if ( a == b )",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( n is 1 )",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "while ( n is 1 )",
        "n = getchar ( ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        3,
        2,
        5,
        16
      ],
      "mod_code": [
        "while ( n is 1 )",
        "n = getchar ( ) ;",
        "cin >> a , b ;",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        3,
        2,
        16
      ],
      "mod_code": [
        "while ( n is 1 )",
        "n = getchar ( ) ;",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "while ( n is 1 )",
        "cin >> a , b ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        3,
        5,
        16
      ],
      "mod_code": [
        "while ( n is 1 )",
        "cin >> a , b ;",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "while ( n is 1 )",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        2,
        5,
        16
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> a , b ;",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "cin >> a , b ;",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}