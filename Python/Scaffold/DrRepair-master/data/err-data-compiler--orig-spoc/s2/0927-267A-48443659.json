{
  "meta": {
    "index": 927,
    "hitid": "3ZVPAMTJWNXQM3UYZJNUWGB51AFGRX",
    "workerid": "A1AYVATMT88U1W",
    "probid": "267A",
    "subid": "48443659"
  },
  "lines": [
    {
      "line": 0,
      "text": "let gcd be a unsigned long integer function which accepts unsigned long integers a , b",
      "code": "unsigned long long gcd ( unsigned long long a , unsigned long long b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if b is equal to 0 , return a",
      "code": "if ( b == 0 ) return a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return the value of gcd of b , a modulo b",
      "code": "return gcd ( b , a % b ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "let lcm be a unsigned long integer function which accepts unsigned long integers a , b",
      "code": "unsigned long long lcm ( unsigned long long a , unsigned long long b )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "return a * b / gcd of a , b",
      "code": "return a * b / gcd ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "let check be a boolean function which accepts unsigned long integer n",
      "code": "bool check ( unsigned long long n )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "while n modulo 3 is equal to 0 , n is equal to n / 3",
      "code": "while ( n % 3 == 0 ) { n /= 3 ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "while n modulo 2 is equal to 0 , n is equal to n / 2",
      "code": "while ( n % 2 == 0 ) { n /= 2 ; }",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if n is equal to 1 , return true",
      "code": "if ( n == 1 ) return true ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "retutn false",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "arr = array of integers of length 100005",
      "code": "int arr [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "let n , a , b be unsigned long integers",
      "code": "unsigned long long n , a , b ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "let say be an integer with say = 0",
      "code": "int say = 0 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if a is greater than b , swap the values a , b",
      "code": "if ( a > b ) swap ( a , b ) ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "while a is not equal to 0 and b is not equal to 0",
      "code": "while ( a != 0 && b != 0 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "increment say by b / a",
      "code": "say += ( b / a ) ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "b is equal to b modulo a",
      "code": "b %= a ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if a is greater than b , swap the values a , b",
      "code": "if ( a > b ) swap ( a , b ) ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "print say and newline",
      "code": "cout << say << endl ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "say is equal to 0",
      "code": "say = 0 ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "memset ( false ) ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "unsigned long long gcd ( unsigned long long a , unsigned unsigned b )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned unsigned long long a , unsigned unsigned b )"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "bool check ( unsigned unsigned long long n )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "memset ( 0 ) ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "say = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "‘say’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        4,
        11
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        4,
        11,
        16
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        4,
        11,
        27
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "say = ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        4,
        11,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        4,
        16
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        4,
        16,
        27
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "n = getchar ( ) ;",
        "say = ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        4,
        16,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "n = getchar ( ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        4,
        27
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "say = ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        4,
        27,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "say = ' 0 ' ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        4,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        11,
        16
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        11,
        16,
        27
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "n = getchar ( ) ;",
        "say = ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        11,
        16,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "n = getchar ( ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        11,
        27
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "say = ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        11,
        27,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "say = ' 0 ' ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        11,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        16,
        27
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "n = getchar ( ) ;",
        "say = ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        16,
        27,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "n = getchar ( ) ;",
        "say = ' 0 ' ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        16,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "n = getchar ( ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        27
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "say = ' 0 ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        27,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "say = ' 0 ' ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long gcd ( unsigned long long a , unsigned unsigned b )",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        11,
        16
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        27
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "n = getchar ( ) ;",
        "say = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "n = getchar ( ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        11,
        27
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "say = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        11,
        27,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "say = ' 0 ' ;",
        "cin >> a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        11,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "memset ( false ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        16,
        27
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "n = getchar ( ) ;",
        "say = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        16,
        27,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "n = getchar ( ) ;",
        "say = ' 0 ' ;",
        "cin >> a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        16,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "n = getchar ( ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        27
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "say = ' 0 ' ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        27,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "say = ' 0 ' ;",
        "cin >> a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "unsigned unsigned long long lcm ( unsigned long long a , unsigned unsigned b )",
        "cin >> a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "memset ( false ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        16,
        27
      ],
      "mod_code": [
        "memset ( false ) ;",
        "n = getchar ( ) ;",
        "say = ' 0 ' ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        16,
        27,
        19
      ],
      "mod_code": [
        "memset ( false ) ;",
        "n = getchar ( ) ;",
        "say = ' 0 ' ;",
        "cin >> a , b ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        16,
        19
      ],
      "mod_code": [
        "memset ( false ) ;",
        "n = getchar ( ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        27
      ],
      "mod_code": [
        "memset ( false ) ;",
        "say = ' 0 ' ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        27,
        19
      ],
      "mod_code": [
        "memset ( false ) ;",
        "say = ' 0 ' ;",
        "cin >> a , b ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "memset ( false ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 11,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    }
  ]
}