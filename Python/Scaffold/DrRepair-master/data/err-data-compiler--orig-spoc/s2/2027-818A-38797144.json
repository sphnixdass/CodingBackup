{
  "meta": {
    "index": 2027,
    "hitid": "3XQ4XW3OD96C8OM4FT2AKMM0DTU2SP",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "818A",
    "subid": "38797144"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k , x , y , z = long long",
      "code": "long long n , k , x , y , z ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "x = n / 2",
      "code": "x = n / 2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if ( k + 1 ) > x",
      "code": "if ( ( k + 1 ) > x )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print 0 , \" \" , 0 , \" \" , n",
      "code": "cout << 0 << \" \" << 0 << \" \" << n << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "y = x / ( k + 1 )",
      "code": "y = x / ( k + 1 ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "z = y * k",
      "code": "z = y * k ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print y , \" \" , z , \" \" , ( n - ( z + y ) )",
      "code": "cout << y << \" \" << z << \" \" << ( n - ( z + y ) ) << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        9
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n",
        "cout << y << \" \" << z << \" \" << n << \" \" << n << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        9,
        5
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n",
        "cout << y << \" \" << z << \" \" << n << \" \" << n << endl ;",
        "cout << \" \" << 0 << \" \" << 0 << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        9,
        3
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n",
        "cout << y << \" \" << z << \" \" << n << \" \" << n << endl ;",
        "x /= 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        9,
        8
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n",
        "cout << y << \" \" << z << \" \" << n << \" \" << n << endl ;",
        "z *= k ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n",
        "cout << \" \" << 0 << \" \" << 0 << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        5,
        3
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n",
        "cout << \" \" << 0 << \" \" << 0 << \" \\n \" ;",
        "x /= 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        5,
        8
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n",
        "cout << \" \" << 0 << \" \" << 0 << \" \\n \" ;",
        "z *= k ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        3
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n",
        "x /= 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        3,
        8
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n",
        "x /= 2 ;",
        "z *= k ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        6,
        8
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n",
        "z *= k ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "n",
        "cout << y << \" \" << z << \" \" << n << \" \" << n << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        5
      ],
      "mod_code": [
        "n",
        "cout << y << \" \" << z << \" \" << n << \" \" << n << endl ;",
        "cout << \" \" << 0 << \" \" << 0 << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        5,
        3
      ],
      "mod_code": [
        "n",
        "cout << y << \" \" << z << \" \" << n << \" \" << n << endl ;",
        "cout << \" \" << 0 << \" \" << 0 << \" \\n \" ;",
        "x /= 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        5,
        8
      ],
      "mod_code": [
        "n",
        "cout << y << \" \" << z << \" \" << n << \" \" << n << endl ;",
        "cout << \" \" << 0 << \" \" << 0 << \" \\n \" ;",
        "z *= k ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "n",
        "cout << y << \" \" << z << \" \" << n << \" \" << n << endl ;",
        "x /= 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        3,
        8
      ],
      "mod_code": [
        "n",
        "cout << y << \" \" << z << \" \" << n << \" \" << n << endl ;",
        "x /= 2 ;",
        "z *= k ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        8
      ],
      "mod_code": [
        "n",
        "cout << y << \" \" << z << \" \" << n << \" \" << n << endl ;",
        "z *= k ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "n",
        "cout << \" \" << 0 << \" \" << 0 << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        3
      ],
      "mod_code": [
        "n",
        "cout << \" \" << 0 << \" \" << 0 << \" \\n \" ;",
        "x /= 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        3,
        8
      ],
      "mod_code": [
        "n",
        "cout << \" \" << 0 << \" \" << 0 << \" \\n \" ;",
        "x /= 2 ;",
        "z *= k ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        8
      ],
      "mod_code": [
        "n",
        "cout << \" \" << 0 << \" \" << 0 << \" \\n \" ;",
        "z *= k ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "n",
        "x /= 2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        3,
        8
      ],
      "mod_code": [
        "n",
        "x /= 2 ;",
        "z *= k ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "n",
        "z *= k ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}