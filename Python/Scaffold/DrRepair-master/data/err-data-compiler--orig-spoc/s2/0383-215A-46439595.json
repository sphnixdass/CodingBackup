{
  "meta": {
    "index": 383,
    "hitid": "3JY0Q5X05J0ZXDLKJ8TIXCXYZ12GGZ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "215A",
    "subid": "46439595"
  },
  "lines": [
    {
      "line": 0,
      "text": "let a and b be integer arrays with size of a and b = 100 and size of c = 10005",
      "code": "int a [ 100 ] , b [ 100 ] , c [ 10005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let n , m , s and t be integers with s = 0",
      "code": "int n , m , s = 0 , t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set first sizeof ( c ) bytes at the pointer c to 0",
      "code": "memset ( c , 0 , sizeof ( c ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "loop i from 0 to n exclusive , read input to a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j from 0 to m exclusive , read input to b [ j ]",
      "code": "for ( int j = 0 ; j < m ; j ++ ) cin >> b [ j ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "loop i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "loop j from 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if b [ j ] % a [ i ] = 0 and b [ j ] / a [ i ] > = s",
      "code": "if ( b [ j ] % a [ i ] == 0 && b [ j ] / a [ i ] >= s )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "s = b [ j ] / a [ i ]",
      "code": "s = b [ j ] / a [ i ] ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "increment c [ s ]",
      "code": "c [ s ] ++ ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print c [ s ]",
      "code": "cout << c [ s ] << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ a . size ( ) ] = 100 , c [ c . size ( ) ] = 10005 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "memset ( c , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "c [ ++ ] ++ ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "c [ ++ ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        4
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "c [ ++ ] ++ ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        4,
        2
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "c [ ++ ] ++ ;",
        "n = getchar ( ) ;",
        "int n , m , s , t = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        4,
        15
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "c [ ++ ] ++ ;",
        "n = getchar ( ) ;",
        "cout << c [ s ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        4,
        6
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "c [ ++ ] ++ ;",
        "n = getchar ( ) ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        2
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "c [ ++ ] ++ ;",
        "int n , m , s , t = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        2,
        15
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "c [ ++ ] ++ ;",
        "int n , m , s , t = 0 ;",
        "cout << c [ s ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        2,
        6
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "c [ ++ ] ++ ;",
        "int n , m , s , t = 0 ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        15
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "c [ ++ ] ++ ;",
        "cout << c [ s ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        15,
        6
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "c [ ++ ] ++ ;",
        "cout << c [ s ] ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12,
        6
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "c [ ++ ] ++ ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        2
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "n = getchar ( ) ;",
        "int n , m , s , t = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        2,
        15
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "n = getchar ( ) ;",
        "int n , m , s , t = 0 ;",
        "cout << c [ s ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        2,
        6
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "n = getchar ( ) ;",
        "int n , m , s , t = 0 ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        15
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "n = getchar ( ) ;",
        "cout << c [ s ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        15,
        6
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "n = getchar ( ) ;",
        "cout << c [ s ] ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4,
        6
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "n = getchar ( ) ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "int n , m , s , t = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        15
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "int n , m , s , t = 0 ;",
        "cout << c [ s ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        15,
        6
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "int n , m , s , t = 0 ;",
        "cout << c [ s ] ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        6
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "int n , m , s , t = 0 ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "cout << c [ s ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        15,
        6
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "cout << c [ s ] ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int a [ a ] , b [ 100 ] = 100 , c [ 10005 ] = { 10005 } ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        4,
        2
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "n = getchar ( ) ;",
        "int n , m , s , t = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        4,
        2,
        15
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "n = getchar ( ) ;",
        "int n , m , s , t = 0 ;",
        "cout << c [ s ] ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        4,
        2,
        6
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "n = getchar ( ) ;",
        "int n , m , s , t = 0 ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        4,
        15
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "n = getchar ( ) ;",
        "cout << c [ s ] ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        4,
        15,
        6
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "n = getchar ( ) ;",
        "cout << c [ s ] ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        4,
        6
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "n = getchar ( ) ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "int n , m , s , t = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        2,
        15
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "int n , m , s , t = 0 ;",
        "cout << c [ s ] ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        2,
        15,
        6
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "int n , m , s , t = 0 ;",
        "cout << c [ s ] ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        2,
        6
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "int n , m , s , t = 0 ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "cout << c [ s ] ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        15,
        6
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "cout << c [ s ] ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "c [ ++ ] ++ ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘]’ token"
    }
  ]
}