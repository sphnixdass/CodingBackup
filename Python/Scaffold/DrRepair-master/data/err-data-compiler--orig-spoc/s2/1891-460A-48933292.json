{
  "meta": {
    "index": 1891,
    "hitid": "3LEG2HW4UFH34JHI992BDN3LO322F8",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "460A",
    "subid": "48933292"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer = n , m , i , j = 0",
      "code": "int n , m , i , j = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for = 1 to less than or equal to n do the following",
      "code": "for ( i = 1 ; i <= n ; i ++ , j ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if i modulo m is 0 then add one to n",
      "code": "if ( i % m == 0 ) { n ++ ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if n is less than m then do the following",
      "code": "if ( n < m )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set j to n",
      "code": "j = n ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "output j",
      "code": "cout << j << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        4,
        2,
        7,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n = getchar ( ) ;",
        "int j = n ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        4,
        2,
        3,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n = getchar ( ) ;",
        "m = getchar ( ) ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        4,
        2,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n = getchar ( ) ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        4,
        2,
        1,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n = getchar ( ) ;",
        "int n , m , i , j , j ;",
        "cout << j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int j = n ;",
        "m = getchar ( ) ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        4,
        7,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int j = n ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        4,
        7,
        1,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int j = n ;",
        "int n , m , i , j , j ;",
        "cout << j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "m = getchar ( ) ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "m = getchar ( ) ;",
        "int n , m , i , j , j ;",
        "cout << j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        4,
        1,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int n , m , i , j , j ;",
        "cout << j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        7,
        3,
        1
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int j = n ;",
        "m = getchar ( ) ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        7,
        1
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int j = n ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        7,
        1,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int j = n ;",
        "int n , m , i , j , j ;",
        "cout << j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        3,
        1
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "m = getchar ( ) ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        3,
        1,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "m = getchar ( ) ;",
        "int n , m , i , j , j ;",
        "cout << j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2,
        1,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int n , m , i , j , j ;",
        "cout << j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        7,
        3,
        1
      ],
      "mod_code": [
        "int j = n ;",
        "m = getchar ( ) ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        7,
        3,
        1,
        11
      ],
      "mod_code": [
        "int j = n ;",
        "m = getchar ( ) ;",
        "int n , m , i , j , j ;",
        "cout << j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "int j = n ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        7,
        1,
        11
      ],
      "mod_code": [
        "int j = n ;",
        "int n , m , i , j , j ;",
        "cout << j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        3,
        1,
        11
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "int n , m , i , j , j ;",
        "cout << j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n , m , i , j , j ;",
        "cout << j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    }
  ]
}