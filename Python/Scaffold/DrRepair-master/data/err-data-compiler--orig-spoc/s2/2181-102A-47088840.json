{
  "meta": {
    "index": 2181,
    "hitid": "341H3G5YF082DQ54VYS4XRQO3ADZ0A",
    "workerid": "A1AYVATMT88U1W",
    "probid": "102A",
    "subid": "47088840"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m be integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let sum be a long integer with sum = 0 , a = array of long integers of length 101",
      "code": "long long a [ 101 ] , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let i , j , k , x , y be integers , b = 2d array of integers witn 101 rows and 101 columns respectively",
      "code": "int i , j , k , x , y , b [ 101 ] [ 101 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive , read a [ i ]",
      "code": "for ( i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 1 to n inclusive , b [ i ] [ j ] is equal to 0",
      "code": "for ( j = 1 ; j <= n ; j ++ ) { b [ i ] [ j ] = 0 ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to m exclusive",
      "code": "for ( i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read x , y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "b [ x ] [ y ] is equal to b [ y ] [ x ] is equal to 1",
      "code": "b [ x ] [ y ] = b [ y ] [ x ] = 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for j = i + 1 to n inclusive",
      "code": "for ( j = i + 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for k = j + 1 to n inclusive",
      "code": "for ( k = j + 1 ; k <= n ; k ++ )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if b [ i ] [ j ] is equal to 1 and b [ j ] [ k ] is equal to 1 and b [ i ] [ k ] is equal to 1",
      "code": "if ( b [ i ] [ j ] == 1 && b [ j ] [ k ] == 1 && b [ i ] [ k ] == 1 )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "if sum is true",
      "code": "if ( sum )",
      "indent": 5
    },
    {
      "line": 18,
      "text": "if ( a [ i ] + a [ j ] + a [ k ] ) is less than sum , sum is equal to ( a [ i ] + a [ j ] + a [ k ] )",
      "code": "if ( ( a [ i ] + a [ j ] + a [ k ] ) < sum ) sum = ( a [ i ] + a [ j ] + a [ k ] ) ;",
      "indent": 6
    },
    {
      "line": 19,
      "text": "else do the following",
      "code": "else",
      "indent": 5
    },
    {
      "line": 20,
      "text": "sum is equal to ( a [ i ] + a [ j ] + a [ k ] )",
      "code": "sum = ( a [ i ] + a [ j ] + a [ k ] ) ;",
      "indent": 6
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if sum is greater than 0",
      "code": "if ( sum > 0 )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print sum and newline",
      "code": "cout << sum << endl ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print - 1 and newline",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        27,
        11
      ],
      "mod_code": [
        "else do",
        "b [ x ] [ y ] = b [ y ] [ x ] ;"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        27,
        11,
        10
      ],
      "mod_code": [
        "else do",
        "b [ x ] [ y ] = b [ y ] [ x ] ;",
        "cin >> x , y ;"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        27,
        11,
        10,
        2
      ],
      "mod_code": [
        "else do",
        "b [ x ] [ y ] = b [ y ] [ x ] ;",
        "cin >> x , y ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        11,
        10,
        19
      ],
      "mod_code": [
        "else do",
        "b [ x ] [ y ] = b [ y ] [ x ] ;",
        "cin >> x , y ;",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        27,
        11,
        2
      ],
      "mod_code": [
        "else do",
        "b [ x ] [ y ] = b [ y ] [ x ] ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        11,
        2,
        19
      ],
      "mod_code": [
        "else do",
        "b [ x ] [ y ] = b [ y ] [ x ] ;",
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        11,
        19
      ],
      "mod_code": [
        "else do",
        "b [ x ] [ y ] = b [ y ] [ x ] ;",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        27,
        10
      ],
      "mod_code": [
        "else do",
        "cin >> x , y ;"
      ],
      "err_line": 29,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        27,
        10,
        2
      ],
      "mod_code": [
        "else do",
        "cin >> x , y ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        10,
        2,
        19
      ],
      "mod_code": [
        "else do",
        "cin >> x , y ;",
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        10,
        19
      ],
      "mod_code": [
        "else do",
        "cin >> x , y ;",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        27,
        2
      ],
      "mod_code": [
        "else do",
        "while ( cin >> n >> m )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        2,
        19
      ],
      "mod_code": [
        "else do",
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        19
      ],
      "mod_code": [
        "else do",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        10,
        2
      ],
      "mod_code": [
        "b [ x ] [ y ] = b [ y ] [ x ] ;",
        "cin >> x , y ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        10,
        2,
        19
      ],
      "mod_code": [
        "b [ x ] [ y ] = b [ y ] [ x ] ;",
        "cin >> x , y ;",
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        10,
        19
      ],
      "mod_code": [
        "b [ x ] [ y ] = b [ y ] [ x ] ;",
        "cin >> x , y ;",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "b [ x ] [ y ] = b [ y ] [ x ] ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        19
      ],
      "mod_code": [
        "b [ x ] [ y ] = b [ y ] [ x ] ;",
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "b [ x ] [ y ] = b [ y ] [ x ] ;",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "cin >> x , y ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        19
      ],
      "mod_code": [
        "cin >> x , y ;",
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "cin >> x , y ;",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    }
  ]
}