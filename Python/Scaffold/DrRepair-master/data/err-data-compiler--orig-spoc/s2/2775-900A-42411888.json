{
  "meta": {
    "index": 2775,
    "hitid": "3FHTJGYT8NU5AQEJMRJ5RLBQ0SVPGI",
    "workerid": "A3S392MV6HWTTE",
    "probid": "900A",
    "subid": "42411888"
  },
  "lines": [
    {
      "line": 0,
      "text": "maxn = constant integer set maxn = 1e7 + 5",
      "code": "const int maxn = 1e7 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "x , y = integer",
      "code": "int x , y ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "cnt1 = integer",
      "code": "int cnt1 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "cnt2 = integer",
      "code": "int cnt2 ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while n decrement > 0",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read x and y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if x < = 0",
      "code": "if ( x <= 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment cnt1",
      "code": "cnt1 ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment cnt2",
      "code": "cnt2 ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if cnt1 > 1 and cnt2 > 1",
      "code": "if ( cnt1 > 1 && cnt2 > 1 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" NO \"",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" Yes \"",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        8,
        11
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        8,
        11,
        7
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cin >> n >> y ;",
        "n",
        "while ( n & 0 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        8,
        11,
        17
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cin >> n >> y ;",
        "n",
        "cout << \" Yes \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        11
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        11,
        7
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "n",
        "while ( n & 0 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        11,
        7,
        17
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "n",
        "while ( n & 0 )",
        "cout << \" Yes \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        11,
        17
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "n",
        "cout << \" Yes \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        11,
        7
      ],
      "mod_code": [
        "cin >> n >> y ;",
        "n",
        "while ( n & 0 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        11,
        7,
        15
      ],
      "mod_code": [
        "cin >> n >> y ;",
        "n",
        "while ( n & 0 )",
        "cout << \" NO \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        11,
        7,
        17
      ],
      "mod_code": [
        "cin >> n >> y ;",
        "n",
        "while ( n & 0 )",
        "cout << \" Yes \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15
      ],
      "mod_code": [
        "cin >> n >> y ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        17
      ],
      "mod_code": [
        "cin >> n >> y ;",
        "n",
        "cout << \" NO \" ;",
        "cout << \" Yes \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        11,
        17
      ],
      "mod_code": [
        "cin >> n >> y ;",
        "n",
        "cout << \" Yes \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "n",
        "while ( n & 0 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        7,
        15
      ],
      "mod_code": [
        "n",
        "while ( n & 0 )",
        "cout << \" NO \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        7,
        15,
        17
      ],
      "mod_code": [
        "n",
        "while ( n & 0 )",
        "cout << \" NO \" ;",
        "cout << \" Yes \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        7,
        17
      ],
      "mod_code": [
        "n",
        "while ( n & 0 )",
        "cout << \" Yes \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        15,
        17
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;",
        "cout << \" Yes \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "n",
        "cout << \" Yes \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}