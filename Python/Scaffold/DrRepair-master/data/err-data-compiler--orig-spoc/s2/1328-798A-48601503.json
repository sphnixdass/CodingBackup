{
  "meta": {
    "index": 1328,
    "hitid": "3RSBJ6YZECKHBQ6NW708K06OP8XOFZ",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "798A",
    "subid": "48601503"
  },
  "lines": [
    {
      "line": 0,
      "text": "make constant long long integer INF = 2000000000000000000LL",
      "code": "const long long int INF = 2000000000000000000LL ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let const int MOD = 10000007",
      "code": "const int MOD = 10000007 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "make int array a of size 1000006",
      "code": "int a [ 1000006 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let string r",
      "code": "string r ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "delcare ispal taking in string s and returning bool",
      "code": "bool ispal ( string s )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "set r to s",
      "code": "r = s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "reverse contents of r",
      "code": "reverse ( r . begin ( ) , r . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s is equal to r",
      "code": "if ( s == r )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return true",
      "code": "return true ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else do",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "return false",
      "code": "return false ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 14,
      "text": "make string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "make ints n = s . size ( ) and cnt = 0",
      "code": "int n = s . size ( ) , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 0 to n / 2 exclusive",
      "code": "for ( int i = 0 ; i < n / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "make char samne = s [ i ]",
      "code": "char samne = s [ i ] ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "let char pichone = s [ n - ( i + 1 ) ]",
      "code": "char pichone = s [ n - ( i + 1 ) ] ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if samne is not pichone , increment cnt",
      "code": "if ( samne != pichone ) cnt ++ ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if cnt is equal to 0 and ispal ( s ) returns truthy and n modulo 2 is 0",
      "code": "if ( cnt == 0 && ispal ( s ) && n % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print \" NO \"",
      "code": "cout << \" NO \"",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print \" \\ n \"",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "end statement",
      "code": ";",
      "indent": 2
    },
    {
      "line": 26,
      "text": "else if cnt is more than 1",
      "code": "else if ( cnt > 1 )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print \" NO \"",
      "code": "cout << \" NO \"",
      "indent": 2
    },
    {
      "line": 28,
      "text": "print \" \\ n \"",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "end statement",
      "code": ";",
      "indent": 2
    },
    {
      "line": 30,
      "text": "else do",
      "code": "else",
      "indent": 1
    },
    {
      "line": 31,
      "text": "print \" YES \"",
      "code": "cout << \" YES \"",
      "indent": 2
    },
    {
      "line": 32,
      "text": "print \" \\ n \"",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": ";",
      "code": ";",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int a [ size ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 32,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 5,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool ispal ( string s ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int r = s ;"
      ],
      "err_line": 5,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ in initialization"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "reverse ( r , r + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s == ' r ' )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 15,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int n = s . size ( ) && cnt = 0 ;"
      ],
      "err_line": 16,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "char pichone += s [ n - ( i + 1 ) ] ;"
      ],
      "err_line": 19,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "cout << \" NO \" ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "<< endl ;"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "cout << \" NO \" ;"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 28,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "cout << \" YES \" ;"
      ],
      "err_line": 32,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 32,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        2,
        23
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        23,
        27
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        23,
        27,
        31
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        23,
        27,
        14
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "cout << \" NO \" << endl ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        23,
        27,
        9
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "cout << \" NO \" << endl ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        23,
        31
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        23,
        31,
        14
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        23,
        31,
        9
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        23,
        14
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        23,
        14,
        9
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "string S ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        23,
        9
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        27
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        27,
        31
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        27,
        31,
        14
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        27,
        31,
        9
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        27,
        14
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        27,
        14,
        9
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "string S ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        27,
        9
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" NO \" << endl ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        31
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        31,
        14
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" YES \" << endl ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        31,
        14,
        9
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" YES \" << endl ;",
        "string S ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        31,
        9
      ],
      "mod_code": [
        "int a [ size ] ;",
        "cout << \" YES \" << endl ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "int a [ size ] ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14,
        9
      ],
      "mod_code": [
        "int a [ size ] ;",
        "string S ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "int a [ size ] ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "‘size’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        27
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        23,
        27,
        31
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        23,
        27,
        31,
        14
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "string S ;"
      ],
      "err_line": 15,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        27,
        31,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        27,
        14
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" NO \" << endl ;",
        "string S ;"
      ],
      "err_line": 15,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        27,
        14,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" NO \" << endl ;",
        "string S ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        27,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" NO \" << endl ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        31
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 24,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        23,
        31,
        14
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "string S ;"
      ],
      "err_line": 15,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        31,
        14,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "string S ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        31,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        14
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "string S ;"
      ],
      "err_line": 15,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        14,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "string S ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        23,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        27,
        31
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        27,
        31,
        14
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "string S ;"
      ],
      "err_line": 15,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        31,
        14,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "string S ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        27,
        31,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        27,
        14
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "string S ;"
      ],
      "err_line": 15,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        14,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "string S ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        27,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        31,
        14
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "string S ;"
      ],
      "err_line": 15,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        14,
        9
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "string S ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        31,
        9
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "string S ;",
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}