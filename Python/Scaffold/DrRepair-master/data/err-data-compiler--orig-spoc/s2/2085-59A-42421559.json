{
  "meta": {
    "index": 2085,
    "hitid": "3Q9SPIIRWJGUK8YHCD5QNT8JVUIAWJ",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "59A",
    "subid": "42421559"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "word = string",
      "code": "string word ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read word",
      "code": "cin >> word ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "lc , uc = int with lc = 0 and uc = 0",
      "code": "int lc = 0 , uc = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to length of word",
      "code": "for ( int i = 0 ; i < word . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if word [ i ] > = ' A ' and word [ i ] < = ' Z '",
      "code": "if ( word [ i ] >= ' A ' && word [ i ] <= ' Z ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment uc",
      "code": "uc ++ ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment lc",
      "code": "lc ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if uc > lc",
      "code": "if ( uc > lc )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "transform word using toupper",
      "code": "transform ( word . begin ( ) , word . end ( ) , word . begin ( ) , :: toupper ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print word",
      "code": "cout << word << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else if uc is lc",
      "code": "else if ( uc == lc )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "transform word using tolower",
      "code": "transform ( word . begin ( ) , word . end ( ) , word . begin ( ) , :: tolower ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print word",
      "code": "cout << word << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "transform word using tolower",
      "code": "transform ( word . begin ( ) , word . end ( ) , word . begin ( ) , :: tolower ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print word",
      "code": "cout << word << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "word = toupper ( word ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "word -= tolower ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "word -= tolower ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘word’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "word >> word ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int uc = 0 , uc = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int uc’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "word -= toupper ( word ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "transform ( word , tolower ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘transform(std::__cxx11::string&, <unresolved overloaded function type>)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "transform ( word , tolower ) ;"
      ],
      "err_line": 17,
      "err_msg": "no matching function for call to ‘transform(std::__cxx11::string&, <unresolved overloaded function type>)’"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word -= tolower ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        14,
        17
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word -= tolower ;",
        "word -= tolower ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        2
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word -= tolower ;",
        "word -= tolower ;",
        "word >> word ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        14,
        17,
        16
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word -= tolower ;",
        "word -= tolower ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        14,
        2
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word -= tolower ;",
        "word >> word ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        14,
        2,
        16
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word -= tolower ;",
        "word >> word ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        14,
        16
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word -= tolower ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word -= tolower ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        17,
        2
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word -= tolower ;",
        "word >> word ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        17,
        2,
        16
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word -= tolower ;",
        "word >> word ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        17,
        16
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word -= tolower ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word >> word ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        2,
        16
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "word >> word ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "word = toupper ( word ) ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "word -= tolower ;",
        "word -= tolower ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        14,
        17,
        2
      ],
      "mod_code": [
        "word -= tolower ;",
        "word -= tolower ;",
        "word >> word ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        17,
        2,
        16
      ],
      "mod_code": [
        "word -= tolower ;",
        "word -= tolower ;",
        "word >> word ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        17,
        2,
        11
      ],
      "mod_code": [
        "word -= tolower ;",
        "word -= tolower ;",
        "word >> word ;",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        17,
        16
      ],
      "mod_code": [
        "word -= tolower ;",
        "word -= tolower ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        14,
        17,
        16,
        11
      ],
      "mod_code": [
        "word -= tolower ;",
        "word -= tolower ;",
        "n",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        14,
        17,
        11
      ],
      "mod_code": [
        "word -= tolower ;",
        "word -= tolower ;",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "word -= tolower ;",
        "word >> word ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        2,
        16
      ],
      "mod_code": [
        "word -= tolower ;",
        "word >> word ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        2,
        16,
        11
      ],
      "mod_code": [
        "word -= tolower ;",
        "word >> word ;",
        "n",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        2,
        11
      ],
      "mod_code": [
        "word -= tolower ;",
        "word >> word ;",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "word -= tolower ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator-=’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        14,
        16,
        11
      ],
      "mod_code": [
        "word -= tolower ;",
        "n",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "word -= tolower ;",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        17,
        2
      ],
      "mod_code": [
        "word -= tolower ;",
        "word >> word ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        2,
        16
      ],
      "mod_code": [
        "word -= tolower ;",
        "word >> word ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        2,
        16,
        11
      ],
      "mod_code": [
        "word -= tolower ;",
        "word >> word ;",
        "n",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        2,
        11
      ],
      "mod_code": [
        "word -= tolower ;",
        "word >> word ;",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        17,
        16
      ],
      "mod_code": [
        "word -= tolower ;",
        "n"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        16,
        11
      ],
      "mod_code": [
        "word -= tolower ;",
        "n",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "word -= tolower ;",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "word >> word ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        16,
        11
      ],
      "mod_code": [
        "word >> word ;",
        "n",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "word >> word ;",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "n",
        "word -= toupper ( word ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘toupper(std::__cxx11::string&)’"
    }
  ]
}