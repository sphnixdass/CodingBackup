{
  "meta": {
    "index": 1790,
    "hitid": "35NNO802AVQJ3W81W06G88JBFQHNI7",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "222A",
    "subid": "36564677"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k = integers",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "f = integer array of size 100005",
      "code": "int f [ 100005 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read f [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> f [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "i , j = integers",
      "code": "int i , j ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = k to n exclusive",
      "code": "for ( i = k ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if f [ i ] is not f [ k - 1 ]",
      "code": "if ( f [ i ] != f [ k - 1 ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if i is n",
      "code": "if ( i == n )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for j = k - 2 down to 0",
      "code": "for ( j = k - 2 ; j >= 0 ; j -- )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if f [ j ] is not f [ k - 1 ]",
      "code": "if ( f [ j ] != f [ k - 1 ] )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print j + 1",
      "code": "cout << j + 1 << endl ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if j is - 1 , print 0",
      "code": "if ( j == - 1 ) { cout << 0 << endl ; }",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( f [ j ] [ f [ k - 1 ] )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        13,
        16
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "break break ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        2
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "break break ;",
        "cin >> n , k ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "break break ;",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        13,
        16,
        3
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "break break ;",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        2,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "cin >> n , k ;",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        13,
        2,
        3
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "cin >> n , k ;",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        13,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "if ( f [ i ] [ f [ k - 1 ] )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        3
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "break break ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        16,
        2
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "break break ;",
        "cin >> n , k ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        16,
        2,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "break break ;",
        "cin >> n , k ;",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        16,
        2,
        3
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "break break ;",
        "cin >> n , k ;",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "break break ;",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        16,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "break break ;",
        "if ( f [ i ] [ f [ k - 1 ] )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16,
        3
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "break break ;",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "cin >> n , k ;",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        2,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "cin >> n , k ;",
        "if ( f [ i ] [ f [ k - 1 ] )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        3
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "cin >> n , k ;",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "if ( f [ i ] [ f [ k - 1 ] )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "for ( int i = k ; i < n ; i ++ )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "break break ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        16,
        2
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "break break ;",
        "cin >> n , k ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13,
        16,
        2,
        7
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "break break ;",
        "cin >> n , k ;",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        16,
        2,
        3
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "break break ;",
        "cin >> n , k ;",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        7
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "break break ;",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        16,
        7,
        3
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "break break ;",
        "if ( f [ i ] [ f [ k - 1 ] )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16,
        3
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "break break ;",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        7
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "cin >> n , k ;",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        2,
        7,
        3
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "cin >> n , k ;",
        "if ( f [ i ] [ f [ k - 1 ] )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        3
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "cin >> n , k ;",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        7,
        3
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "if ( f [ i ] [ f [ k - 1 ] )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "for ( int j = k - 2 ; j >= 0 ; j -- )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2
      ],
      "mod_code": [
        "break break ;",
        "cin >> n , k ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        16,
        2,
        7
      ],
      "mod_code": [
        "break break ;",
        "cin >> n , k ;",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        2,
        7,
        3
      ],
      "mod_code": [
        "break break ;",
        "cin >> n , k ;",
        "if ( f [ i ] [ f [ k - 1 ] )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        2,
        3
      ],
      "mod_code": [
        "break break ;",
        "cin >> n , k ;",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        7
      ],
      "mod_code": [
        "break break ;",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        16,
        7,
        3
      ],
      "mod_code": [
        "break break ;",
        "if ( f [ i ] [ f [ k - 1 ] )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        3
      ],
      "mod_code": [
        "break break ;",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cin >> n , k ;",
        "if ( f [ i ] [ f [ k - 1 ] )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        7,
        3
      ],
      "mod_code": [
        "cin >> n , k ;",
        "if ( f [ i ] [ f [ k - 1 ] )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> n , k ;",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( f [ i ] [ f [ k - 1 ] )",
        "f [ 100005 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘f’ was not declared in this scope"
    }
  ]
}