{
  "meta": {
    "index": 2579,
    "hitid": "3HRWUH63QUW7R8DMPGNMJZF6A495ND",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "24A",
    "subid": "48903661"
  },
  "lines": [
    {
      "line": 0,
      "text": "let count1 = static int = 0",
      "code": "static int count1 = 0 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let count2 = static int = 0",
      "code": "static int count2 = 0 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let m be a map from pair of int and int to int",
      "code": "map < pair < int , int > , int > m ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let last = 0 be a static int",
      "code": "static int last = 0 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "in int function dfs1 that takes int root , int prev , int array visit , int vector V",
      "code": "int dfs1 ( int root , int prev , int visit [ ] , vector < int > V [ ] )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "set visit at root to 1",
      "code": "visit [ root ] = 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set last to root",
      "code": "last = root ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if prev is 0",
      "code": "if ( prev == 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "do nothing",
      "code": ";",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if m of prev and root is not 0",
      "code": "if ( m [ { prev , root } ] != 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "do nothing",
      "code": ";",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set count1 to count1 + m of root and prev",
      "code": "count1 = count1 + m [ { root , prev } ] ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to size of V at root exclusive",
      "code": "for ( int i = 0 ; i < V [ root ] . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if visit at V at root and i is 0 , call dfs1 with args V at root and i , root , visit , V",
      "code": "if ( visit [ V [ root ] [ i ] ] == 0 ) { dfs1 ( V [ root ] [ i ] , root , visit , V ) ; }",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 21,
      "text": "let n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "let p of size 1 be a pair of int and ind",
      "code": "pair < int , int > p [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "let x = int",
      "code": "int x ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "let V of size n + 1 be an int vector",
      "code": "vector < int > V [ n + 1 ] ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "let total = 0 be an int",
      "code": "int total = 0 ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "for i = 0 to n exlusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "read first rom p [ 0 ]",
      "code": "cin >> p [ 0 ] . first ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "read second from p at 0",
      "code": "cin >> p [ 0 ] . second ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "set m [ p [ 0 ] ] = x",
      "code": "m [ p [ 0 ] ] = x ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "increment total by x",
      "code": "total = total + x ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "tail insert second from p at 0 to V at first from p at 0",
      "code": "V [ p [ 0 ] . first ] . push_back ( p [ 0 ] . second ) ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "tail insert first from p at 0 to V at second form p at 0",
      "code": "V [ p [ 0 ] . second ] . push_back ( p [ 0 ] . first ) ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "let visit be an int array of length n + 1",
      "code": "int visit [ n + 1 ] ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "set all visit to 0",
      "code": "memset ( visit , 0 , sizeof ( visit ) ) ;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "call dfs1 with args 1 , 0 , visit , V",
      "code": "dfs1 ( 1 , 0 , visit , V ) ;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "if m of last and 1 is not 0",
      "code": "if ( m [ { last , 1 } ] != 0 )",
      "indent": 1
    },
    {
      "line": 40,
      "text": "do nothing",
      "code": ";",
      "indent": 2
    },
    {
      "line": 41,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 42,
      "text": "set count1 to count1 + m of 1 and last",
      "code": "count1 = count1 + m [ { 1 , last } ] ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "print minimum of total - count1 and count1",
      "code": "cout << min ( total - count1 , count1 ) << endl ;",
      "indent": 1
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "p . push ( 0 ) ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 34,
      "err_msg": "request for member ‘push_back’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "dfs1 = 1 ;"
      ],
      "err_line": 38,
      "err_msg": "assignment of function ‘int dfs1(int, int, int*, std::vector<int>*)’"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 39,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 42,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int count1 = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only variable ‘count1’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "map < pair < int , int > m ;"
      ],
      "err_line": 2,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < int , int > last = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::map<int, int>’ requested"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int V )"
      ],
      "err_line": 5,
      "err_msg": "‘visit’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "visit [ root = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( m . m && root )"
      ],
      "err_line": 10,
      "err_msg": "‘class std::map<std::pair<int, int>, int>’ has no member named ‘m’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "count1 += m + prev ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::map<std::pair<int, int>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < V . size ( ) ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) dfs1 ++ ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "pair < int , int > ind ( 1 , ind ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘std::pair<int, int>::pair(int, std::pair<int, int>&)’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 27,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "cin >> p >> p [ 0 ] ;"
      ],
      "err_line": 28,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int> [1]’)"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "cin >> p [ 0 ] >> second ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "V . insert ( 0 , p ) ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘insert’ in ‘V’, which is of non-class type ‘std::vector<int> [(n + 1)]’"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "p . push ( 0 ) ;"
      ],
      "err_line": 34,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "int visit + n + 1 ;"
      ],
      "err_line": 36,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "dfs1 . call ( 1 , 0 , visit ) ;"
      ],
      "err_line": 38,
      "err_msg": "request for member ‘call’ in ‘dfs1’, which is of non-class type ‘int(int, int, int*, std::vector<int>*)’"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "if ( ( last . last ( 1 ) ) != 0 )"
      ],
      "err_line": 39,
      "err_msg": "request for member ‘last’ in ‘last’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 42,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "count1 = count1 + m . last ( 1 ) ;"
      ],
      "err_line": 42,
      "err_msg": "‘class std::map<std::pair<int, int>, int>’ has no member named ‘last’"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "cout << min ( total - count1 ) << endl ;"
      ],
      "err_line": 43,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        13
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        16
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        17
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        23
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        13,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        16
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        17
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        23
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        16,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        17
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        23
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        17,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        23
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        23,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        23,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        23,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        23,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        23,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        23,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        23,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        23,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        25,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        25,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        25,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        25,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        25,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        25,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        25,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        28,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        28,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        28,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        28,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        28,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        28,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        29,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        29,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        29,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        29,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        29,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        33,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        33,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        33,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        33,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        34,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        34,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        34,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        38,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        38,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        39,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        16
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        17
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        23
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        16,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        17
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        23
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        23
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        23,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        23,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        23,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        23,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        23,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        23,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        23,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        23,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        25,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        25,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        25,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        25,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        25,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        25,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        25,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        28,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        28,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        28,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        28,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        28,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        28,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        29,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        29,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        29,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        29,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        29,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        33,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        33,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        33,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        33,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        34,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        34,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        34,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        38,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        38,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        39,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        13,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + prev ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        17
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        23
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        23
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        23,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        23,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        23,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        23,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        23,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        23,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        23,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        23,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        25,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        25,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        25,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        25,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        25,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        25,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        25,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        28,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        28,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        28,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        28,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        28,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        28,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        29,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        29,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        29,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        29,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        29,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        33,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        33,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        33,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        33,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        34,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        34,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        34,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        38,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        38,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        39,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        16,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        23
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        23,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        23,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        23,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        23,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        23,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        23,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        23,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        23,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        25,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        28,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        28,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        28,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        28,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        28,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        28,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        29,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        29,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        29,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        29,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        29,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        33,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        33,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        33,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        33,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        34,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        34,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        34,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        38,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        38,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        39,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        25,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        25,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        25,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        25,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        25,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        25,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        25,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        28,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        28,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        28,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        28,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        28,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        28,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        29,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        29,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        29,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        29,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        29,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        33,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        33,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        33,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        33,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        34,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        34,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        34,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        38,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        38,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        39,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        23,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        28,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        28,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        28,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        28,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        28,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        28,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        29,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        29,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        29,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        29,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        29,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        33,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        33,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        33,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        33,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        34,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        34,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        34,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        38,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        38,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        39,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        25,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        29,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        29,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        29,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        29,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        29,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        33,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        33,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        33,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        33,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        34,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        34,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        34,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        38,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        38,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        39,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        28,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        33,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        33,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        33,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        33,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        34,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        34,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        34,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        38,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        38,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        39,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        29,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push ( 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        34,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        34,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        34,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        38,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        38,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        39,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        33,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        34
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        34,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        34,
        38,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        34,
        38,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        34,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        34,
        39,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        34,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        38
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "dfs1 = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        38,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        38,
        39,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        38,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        39
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        39,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        42
      ],
      "mod_code": [
        "vector < int > dfs1 ( int root , int prev , int visit )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        16
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        17
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        23
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        25
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        16,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        17
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        23
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        25
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        17,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        23
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        23,
        25
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        23,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        23,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        23,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        23,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        23,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        23,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        23,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        25
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        25,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        25,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        25,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        25,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        25,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        25,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        25,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        28,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        28,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        28,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        28,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        28,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        28,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        29,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        29,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        29,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        29,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        29,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        33,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        33,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        33,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        33,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        34,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        34,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        34,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        38,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        38,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        39,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        13,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + prev ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        17
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        23
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        25
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        17,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        23
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        23,
        25
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        23,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        23,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        23,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        23,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        23,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        23,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        23,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        25
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        25,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        25,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        25,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        25,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        25,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        25,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        25,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        28,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        28,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        28,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        28,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        28,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        28,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        29,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        29,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        29,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        29,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        29,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        33,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        33,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        33,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        33,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        34,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        34,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        34,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        38,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        38,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        39,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        16,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        23
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        23,
        25
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        23,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        23,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        23,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        23,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        23,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        23,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        23,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        25
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        25,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        25,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        25,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        25,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        25,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        25,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        25,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        28,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        28,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        28,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        28,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        28,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        28,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        29,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        29,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        29,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        29,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        29,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        33,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        33,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        33,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        33,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        34,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        34,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        34,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        38,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        38,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        39,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        17,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        25
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        25,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        25,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        25,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        25,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        25,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        25,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        25,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        28,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        28,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        28,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        28,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        28,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        28,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        29,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        29,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        29,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        29,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        29,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        33,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        33,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        33,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        33,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        34,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        34,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        34,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        38,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        38,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        39,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        23,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        28,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        28,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        28,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        28,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        28,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        29,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        29,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        29,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        29,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        29,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        33,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        33,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        33,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        33,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        34,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        34,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        34,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        38,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        38,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        39,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        25,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        29,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        29,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        29,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        29,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        29,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        33,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        33,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        33,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        33,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        34,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        34,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        34,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        38,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        38,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        39,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        28,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        33,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        33,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        33,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        33,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        34,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        34,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        34,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        38,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        38,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        39,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        29,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        33
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        33,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        33,
        34,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        33,
        34,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        33,
        34,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        33,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        33,
        38,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        33,
        38,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        33,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        33,
        39,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        33,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        34
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        34,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        34,
        38,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        34,
        38,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        34,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        34,
        39,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        34,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        38
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "dfs1 = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        38,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        38,
        39,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        38,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        39
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        39,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        10,
        42
      ],
      "mod_code": [
        "if ( m . find ( prev ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        17
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        23
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        25
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        28
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        17,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        23
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        23,
        25
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        23,
        28
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        23,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        23,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        23,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        23,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        23,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        23,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        25
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        28
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        25,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        28
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        28,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        28,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        28,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        28,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        28,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        28,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        29,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        29,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        29,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        29,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        29,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        33,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        33,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        33,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        33,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        34,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        34,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        34,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        38,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        38,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        39,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        16,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        23
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        25
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        28
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        23,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        25
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        28
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        25,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        28
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        28,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        29,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        29,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        29,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        29,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        29,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        33,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        33,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        33,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        33,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        34,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        34,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        34,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        38,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        38,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        39,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        17,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        25
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        28
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        28
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        28,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        28,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        28,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        28,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        28,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        28,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        29,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        29,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        29,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        29,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        29,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        33,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        33,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        33,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        33,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        34,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        34,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        34,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        38,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        38,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        39,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        23,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        28
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        28,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        28,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        28,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        28,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        28,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        28,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        29,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        29,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        29,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        29,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        29,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        33,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        33,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        33,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        33,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        34,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        34,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        34,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        38,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        38,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        39,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        25,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        29,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        29,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        29,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        29,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        29,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        33,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        33,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        33,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        33,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        34,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        34,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        34,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        38,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        38,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        39,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        28,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        33,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        33,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        33,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        33,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        34,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        34,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        34,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        38,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        38,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        39,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        29,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        33
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        33,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        33,
        34,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        33,
        34,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        33,
        34,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        33,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        33,
        38,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        33,
        38,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        33,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        33,
        39,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        33,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        34
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        34,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        34,
        38,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        34,
        38,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        34,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        34,
        39,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        34,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        38
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        38,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        38,
        39,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        38,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        39
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        39,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        13,
        42
      ],
      "mod_code": [
        "count1 = count1 + m + prev ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::map<std::pair<int, int>, int>’)"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        23,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        23,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        23,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        23,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        23,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        23,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        23,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        23,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        25,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        28,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        28,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        28,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        28,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        28,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        28,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        29,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        29,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        29,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        29,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        29,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        33,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        33,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        33,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        33,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        34,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        34,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        34,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        38,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        38,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        39,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        17,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        25,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        25,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        25,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        25,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        25,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        25,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        25,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        28,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        28,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        28,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        28,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        28,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        28,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        29,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        29,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        29,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        29,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        29,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        33,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        33,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        33,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        33,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        34,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        34,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        34,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        38,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        38,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        39,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        23,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        28,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        28,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        28,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        28,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        28,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        28,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        29,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        29,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        29,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        29,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        29,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        33,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        33,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        33,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        33,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        34,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        34,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        34,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        38,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        38,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        39,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        25,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        33,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        33,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        33,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        33,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        34,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        34,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        34,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        38,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        38,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        39,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        28,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        33,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        33,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        33,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        33,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        34,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        34,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        34,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        38,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        38,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        39,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        29,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        33
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        33,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        33,
        34,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        33,
        34,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        33,
        34,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        33,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        33,
        38,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        33,
        38,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        33,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        33,
        39,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        33,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        34,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        34,
        38,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        34,
        38,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        34,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        34,
        39,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        34,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        38,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        38,
        39,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        38,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        39,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        16,
        42
      ],
      "mod_code": [
        "for ( int i = 0 ; i < V . size ( ) ; i ++ )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 16,
      "err_msg": "request for member ‘size’ in ‘V’, which is of pointer type ‘std::vector<int>*’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        17,
        23
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        25
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        25,
        28
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        25,
        29
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        25,
        33
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        25,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        25,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        25,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        25,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        28
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        28,
        29
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        28,
        33
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        28,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        28,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        28,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        28,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        29
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        29,
        33
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        29,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        29,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        29,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        29,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        33
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        33,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        33,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        33,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        33,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        34,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        34,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        34,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        38,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        38,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        39,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        23,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        28
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        28,
        29
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        28,
        33
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        28,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        28,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        28,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        28,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        29
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        29,
        33
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        29,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        29,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        29,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        29,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        33
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        33,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        33,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        33,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        33,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        34,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        34,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        34,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        38,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        38,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        39,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        25,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        29
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        29,
        33
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        29,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        29,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        29,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        29,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        33
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        33,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        33,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        33,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        33,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        34,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        34,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        34,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        38,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        38,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        39,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        28,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        33
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        33,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        33,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        33,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        33,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        34,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        34,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        34,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        38,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        38,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        39,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        29,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        33
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        33,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        33,
        34,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        33,
        34,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        33,
        34,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        33,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        33,
        38,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        33,
        38,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        33,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        33,
        39,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        33,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        34
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        34,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        34,
        38,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        34,
        38,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        34,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        34,
        39,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        34,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        38
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        38,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        38,
        39,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        38,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        39
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        39,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        42
      ],
      "mod_code": [
        "if ( visit [ V ] == 0 && i == 0 ) { dfs1 ++ ; }",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int*[std::vector<int>*]’ for array subscript"
    },
    {
      "mod_line": [
        23,
        25
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        28
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        28,
        29
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        28,
        33
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        28,
        34
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        28,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        28,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        28,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        29
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        29,
        33
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        29,
        34
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        29,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        29,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        29,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        33
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        33,
        34
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        33,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        33,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        33,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        34
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        34,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        34,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        34,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        38,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        38,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        39,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        29
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        29,
        33
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        29,
        34
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        29,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        29,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        29,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        33
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        33,
        34
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        33,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        33,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        33,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        34
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        34,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        34,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        34,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        38,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        38,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        39,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        28,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        33
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        33,
        34
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        33,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        33,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        33,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        34
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        34,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        34,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        34,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        38,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        38,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        39,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        29,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        34
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        34,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        34,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        34,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        38,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        38,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        39,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        33,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        34
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        34,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        34,
        38,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        34,
        38,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        34,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        34,
        39,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        34,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        38
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        38,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        38,
        39,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        38,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        39
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        39,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        42
      ],
      "mod_code": [
        "pair < int , int > p ( 1 , ind ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘ind’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29,
        33
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29,
        34
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29,
        38
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        29,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        33
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        33,
        34
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        33,
        38
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        33,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        33,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        34
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        34,
        38
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        34,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        34,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        38
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        38,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        38,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        39,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        28,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        29
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        33
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        33,
        34
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        33,
        38
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        33,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        33,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        34
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        34,
        38
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        34,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        34,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        38
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        38,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        38,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        39,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        29,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        25,
        33
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        25,
        33,
        34
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        25,
        33,
        34,
        38
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        25,
        33,
        34,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        25,
        33,
        34,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        25,
        33,
        38
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        25,
        33,
        38,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        25,
        33,
        38,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        25,
        33,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        25,
        33,
        39,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        25,
        33,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        25,
        34
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        34,
        38
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        34,
        38,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        34,
        38,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        34,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        34,
        39,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        34,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        38
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        38,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        38,
        39,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        38,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        39
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        39,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        25,
        42
      ],
      "mod_code": [
        "vector < int > V ( n + 1 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push_back’ in ‘V.std::vector<_Tp, _Alloc>::operator[]<int, std::allocator<int> >(((std::vector<int>::size_type)p[0].std::pair<int, int>::first))’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        28,
        29
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        33
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        33,
        34
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        33,
        38
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        33,
        39
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        33,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        34
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        34,
        38
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        34,
        39
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        34,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        38
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        38,
        39
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        38,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        39
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        39,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        33
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        33,
        34
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        33,
        34,
        38
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        33,
        34,
        39
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        33,
        34,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        33,
        38
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        33,
        38,
        39
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        33,
        38,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        33,
        39
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        33,
        39,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        33,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        34
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        34,
        38
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        34,
        38,
        39
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        34,
        38,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        34,
        39
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        34,
        39,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        34,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        38
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        38,
        39
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        38,
        39,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        38,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        39
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        39,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        42
      ],
      "mod_code": [
        "cin >> first >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        33
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        33,
        34
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        33,
        34,
        38
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        33,
        34,
        39
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        33,
        34,
        42
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        33,
        38
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        33,
        38,
        39
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        33,
        38,
        42
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        33,
        39
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        33,
        39,
        42
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        33,
        42
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        34
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        34,
        38
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        34,
        38,
        39
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        34,
        38,
        42
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        34,
        39
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        34,
        39,
        42
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        34,
        42
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        38
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        38,
        39
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        38,
        39,
        42
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        38,
        42
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        39
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        39,
        42
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        29,
        42
      ],
      "mod_code": [
        "cin >> p [ 0 ] ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 29,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        33,
        34
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        34,
        38
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        34,
        38,
        39
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        34,
        38,
        42
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        34,
        39
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        34,
        39,
        42
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        34,
        42
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        38
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        38,
        39
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        38,
        39,
        42
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        38,
        42
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        39
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        39,
        42
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        33,
        42
      ],
      "mod_code": [
        "p . push ( 0 ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 33,
      "err_msg": "request for member ‘push’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        34,
        38
      ],
      "mod_code": [
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;"
      ],
      "err_line": 34,
      "err_msg": "request for member ‘push_back’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        34,
        38,
        39
      ],
      "mod_code": [
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 34,
      "err_msg": "request for member ‘push_back’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        34,
        38,
        39,
        42
      ],
      "mod_code": [
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 34,
      "err_msg": "request for member ‘push_back’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        34,
        38,
        42
      ],
      "mod_code": [
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 34,
      "err_msg": "request for member ‘push_back’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        34,
        39
      ],
      "mod_code": [
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 34,
      "err_msg": "request for member ‘push_back’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        34,
        39,
        42
      ],
      "mod_code": [
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 34,
      "err_msg": "request for member ‘push_back’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        34,
        42
      ],
      "mod_code": [
        "p . push_back ( 0 , p . at ( 0 ) ) ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 34,
      "err_msg": "request for member ‘push_back’ in ‘p’, which is of non-class type ‘std::pair<int, int> [1]’"
    },
    {
      "mod_line": [
        38,
        39
      ],
      "mod_code": [
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )"
      ],
      "err_line": 38,
      "err_msg": "assignment of function ‘int dfs1(int, int, int*, std::vector<int>*)’"
    },
    {
      "mod_line": [
        38,
        39,
        42
      ],
      "mod_code": [
        "dfs1 = 1 ;",
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 38,
      "err_msg": "assignment of function ‘int dfs1(int, int, int*, std::vector<int>*)’"
    },
    {
      "mod_line": [
        38,
        42
      ],
      "mod_code": [
        "dfs1 = 1 ;",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 38,
      "err_msg": "assignment of function ‘int dfs1(int, int, int*, std::vector<int>*)’"
    },
    {
      "mod_line": [
        39,
        42
      ],
      "mod_code": [
        "if ( m . find ( last ) != 0 )",
        "count1 = count1 + m + 1 ;"
      ],
      "err_line": 39,
      "err_msg": "no matching function for call to ‘std::map<std::pair<int, int>, int>::find(int&)’"
    }
  ]
}