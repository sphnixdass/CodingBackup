{
  "meta": {
    "index": 474,
    "hitid": "341H3G5YF082DQ54VYS4XRQO3AD0ZB",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "261A",
    "subid": "48650346"
  },
  "lines": [
    {
      "line": 0,
      "text": "OO = integer const with OO = 1e9",
      "code": "int const OO = 1e9 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "function fast",
      "code": "void fast ( ) { }",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in the functin file",
      "code": "void file ( )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "freopen on input . txt , r and stdin",
      "code": "freopen ( \" input.txt \" , \" r \" , stdin ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "freopen on output . txt , w and stdout",
      "code": "freopen ( \" output.txt \" , \" w \" , stdout ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "call fast",
      "code": "fast ( ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "n , m = integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "while read n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "v = vector of integer with v = n",
      "code": "vector < int > v ( n ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for i = 0 to n exclusive , read v [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> v [ i ] ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "sort v . begin ( ) and v . end ( )",
      "code": "sort ( v . begin ( ) , v . end ( ) ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "vv = vector of integer with vv = m",
      "code": "vector < int > vv ( m ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for i = 0 to m exclusive , read vv [ i ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) { cin >> vv [ i ] ; }",
      "indent": 2
    },
    {
      "line": 16,
      "text": "sort vv . rbegin ( ) and vv . rend ( )",
      "code": "sort ( vv . rbegin ( ) , vv . rend ( ) ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "an = long long with an = 0",
      "code": "long long an = 0 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "j = integer with j = 0",
      "code": "int j = 0 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "while ( j < m )",
      "code": "while ( j < m )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "for c = 0 to j < m and c < v [ 0 ] , an = an + vv [ j ]",
      "code": "for ( int c = 0 ; j < m && c < v [ 0 ] ; j ++ , c ++ ) { an += vv [ j ] ; }",
      "indent": 3
    },
    {
      "line": 21,
      "text": "j = j + 2",
      "code": "j += 2 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print an",
      "code": "cout << an << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "freopen ( \" . \" , w ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘w’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void fast ( )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "void file ( ) { }"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "freopen ( input , txt , r , stdin ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘w’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "vector < int > v [ n ] ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "sort ( v . begin ( ) . begin ( ) , v . end ( ) ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘std::vector<int>::iterator {aka class __gnu_cxx::__normal_iterator<int*, std::vector<int> >}’ has no member named ‘begin’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "sort ( vv . rbegin ( ) . rbegin ( ) , vv . rend ( ) ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘std::vector<int>::reverse_iterator {aka class std::reverse_iterator<__gnu_cxx::__normal_iterator<int*, std::vector<int> > >}’ has no member named ‘rbegin’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "j = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "while ( j < m ) )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "freopen ( \" . \" , w ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        14
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "freopen ( \" . \" , w ) ;",
        "vector < int > vv [ m ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        20
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "freopen ( \" . \" , w ) ;",
        "vector < int > vv [ m ] ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        0
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "freopen ( \" . \" , w ) ;",
        "vector < int > vv [ m ] ;",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        3,
        4,
        20
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "freopen ( \" . \" , w ) ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        20,
        0
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "freopen ( \" . \" , w ) ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        3,
        4,
        0
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "freopen ( \" . \" , w ) ;",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "vector < int > vv [ m ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        20
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "vector < int > vv [ m ] ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        20,
        0
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "vector < int > vv [ m ] ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        3,
        14,
        20,
        4
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "vector < int > vv [ m ] ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        0
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "vector < int > vv [ m ] ;",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        3,
        14,
        0,
        4
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "vector < int > vv [ m ] ;",
        "const int const OO = 1e9 ;",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        3,
        14,
        4
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "vector < int > vv [ m ] ;",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        20,
        0
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        3,
        20,
        0,
        4
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "const int const OO = 1e9 ;",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        3,
        20,
        4
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        3,
        0,
        4
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "const int const OO = 1e9 ;",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "freopen ( input , txt , r ) ;",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "freopen ( \" . \" , w ) ;",
        "vector < int > vv [ m ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘w’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        20
      ],
      "mod_code": [
        "freopen ( \" . \" , w ) ;",
        "vector < int > vv [ m ] ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }"
      ],
      "err_line": 4,
      "err_msg": "‘w’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        20,
        0
      ],
      "mod_code": [
        "freopen ( \" . \" , w ) ;",
        "vector < int > vv [ m ] ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        4,
        14,
        0
      ],
      "mod_code": [
        "freopen ( \" . \" , w ) ;",
        "vector < int > vv [ m ] ;",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        4,
        20
      ],
      "mod_code": [
        "freopen ( \" . \" , w ) ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }"
      ],
      "err_line": 4,
      "err_msg": "‘w’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        20,
        0
      ],
      "mod_code": [
        "freopen ( \" . \" , w ) ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "freopen ( \" . \" , w ) ;",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        14,
        20,
        0
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        20,
        0,
        4
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "const int const OO = 1e9 ;",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        20,
        4
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘w’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        0,
        4
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "const int const OO = 1e9 ;",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘w’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        0
      ],
      "mod_code": [
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "const int const OO = 1e9 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        20,
        0,
        4
      ],
      "mod_code": [
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "const int const OO = 1e9 ;",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        20,
        4
      ],
      "mod_code": [
        "for ( int c = 0 ; j < m && c < v [ 0 ] ; c ++ ) { an += vv [ j ] ; }",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘w’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "const int const OO = 1e9 ;",
        "freopen ( \" . \" , w , stdout ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    }
  ]
}