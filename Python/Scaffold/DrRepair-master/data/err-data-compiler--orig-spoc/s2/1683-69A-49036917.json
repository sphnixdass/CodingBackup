{
  "meta": {
    "index": 1683,
    "hitid": "3N5YJ55YXGX4XEP3KCE3RAVS1VJNAZ",
    "workerid": "A1HC0MVEW0VTB7",
    "probid": "69A",
    "subid": "49036917"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , x = 0 , y = 0 , z = 0 , x0 , y0 and z0 be integers",
      "code": "int n , x = 0 , y = 0 , z = 0 , x0 , y0 , z0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "get value of n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let n = int",
      "code": "int u ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for x1 = 0 to n exclusive",
      "code": "for ( int x1 = 0 ; x1 < n ; x1 ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read x0",
      "code": "cin >> x0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "add x0 to x",
      "code": "x += x0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read y0",
      "code": "cin >> y0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "add y0 to y",
      "code": "y += y0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read z0",
      "code": "cin >> z0 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "add z0 to z",
      "code": "z += z0 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if value of x , y and z is 0",
      "code": "if ( x == 0 && y == 0 && z == 0 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( strcmp ( x , y ) , z == 0 )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , x = 0 , y = 0 , z = 0 , x0 , y0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘z0’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "getline ( cin , n ) ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘bool n’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( x1 = 0 ; x1 < n ; x1 ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘x1’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "x0 ( x0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘x0’ cannot be used as a function"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( strcmp ( x , y , z ) == 0 )"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "int n ;",
        "if ( strcmp ( x , y ) , z == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        12,
        5
      ],
      "mod_code": [
        "int n ;",
        "if ( strcmp ( x , y ) , z == 0 )",
        "x0 ( x0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        12,
        5,
        7
      ],
      "mod_code": [
        "int n ;",
        "if ( strcmp ( x , y ) , z == 0 )",
        "x0 ( x0 ) ;",
        "y0 << y0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        12,
        7
      ],
      "mod_code": [
        "int n ;",
        "if ( strcmp ( x , y ) , z == 0 )",
        "y0 << y0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int n ;",
        "x0 ( x0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        5,
        12
      ],
      "mod_code": [
        "int n ;",
        "x0 ( x0 ) ;",
        "if ( strcmp ( x , y , z ) == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        5,
        12,
        7
      ],
      "mod_code": [
        "int n ;",
        "x0 ( x0 ) ;",
        "if ( strcmp ( x , y , z ) == 0 )",
        "y0 << y0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "int n ;",
        "x0 ( x0 ) ;",
        "y0 << y0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "int n ;",
        "if ( strcmp ( x , y , z ) == 0 )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        12,
        7
      ],
      "mod_code": [
        "int n ;",
        "if ( strcmp ( x , y , z ) == 0 )",
        "y0 << y0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int n ;",
        "y0 << y0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "if ( strcmp ( x , y ) , z == 0 )",
        "x0 ( x0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘x0’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        5,
        7
      ],
      "mod_code": [
        "if ( strcmp ( x , y ) , z == 0 )",
        "x0 ( x0 ) ;",
        "y0 << y0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘x0’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        5,
        7,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , y ) , z == 0 )",
        "x0 ( x0 ) ;",
        "y0 << y0 ;",
        "bool n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘bool n’"
    },
    {
      "mod_line": [
        12,
        5,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , y ) , z == 0 )",
        "x0 ( x0 ) ;",
        "bool n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘bool n’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "if ( strcmp ( x , y ) , z == 0 )",
        "y0 << y0 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , y ) , z == 0 )",
        "y0 << y0 ;",
        "bool n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘bool n’"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , y ) , z == 0 )",
        "bool n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘bool n’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "x0 ( x0 ) ;",
        "if ( strcmp ( x , y , z ) == 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘x0’ cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        12,
        7
      ],
      "mod_code": [
        "x0 ( x0 ) ;",
        "if ( strcmp ( x , y , z ) == 0 )",
        "y0 << y0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘x0’ cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        12,
        7,
        3
      ],
      "mod_code": [
        "x0 ( x0 ) ;",
        "if ( strcmp ( x , y , z ) == 0 )",
        "y0 << y0 ;",
        "bool n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘bool n’"
    },
    {
      "mod_line": [
        5,
        12,
        3
      ],
      "mod_code": [
        "x0 ( x0 ) ;",
        "if ( strcmp ( x , y , z ) == 0 )",
        "bool n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘bool n’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "x0 ( x0 ) ;",
        "y0 << y0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘x0’ cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        7,
        3
      ],
      "mod_code": [
        "x0 ( x0 ) ;",
        "y0 << y0 ;",
        "bool n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘bool n’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "x0 ( x0 ) ;",
        "bool n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘bool n’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "if ( strcmp ( x , y , z ) == 0 )",
        "y0 << y0 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , y , z ) == 0 )",
        "y0 << y0 ;",
        "bool n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘bool n’"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "if ( strcmp ( x , y , z ) == 0 )",
        "bool n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘bool n’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "y0 << y0 ;",
        "bool n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘bool n’"
    }
  ]
}