{
  "meta": {
    "index": 272,
    "hitid": "3OQQD2WO8I0CZSFREHM1ZUL5A9O3I5",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "895A",
    "subid": "42332043"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long n , min , t , a arrays of length 361",
      "code": "long n , min , t , a [ 361 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "a [ i ] = a [ i - 1 ] + t",
      "code": "a [ i ] = a [ i - 1 ] + t ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "assign 360 to min",
      "code": "min = 360 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for j = i + 1 to n inclusive",
      "code": "for ( int j = i + 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set t to a [ j ] - a [ i ]",
      "code": "t = a [ j ] - a [ i ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if min less than abs of 360 - t - t , min = abs of 360 - t - t",
      "code": "if ( min > abs ( 360 - t - t ) ) min = abs ( 360 - t - t ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print min and a newline",
      "code": "cout << min << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long n , min [ 361 ] , min [ 361 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long int min [361]’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( min < abs ( 360 - t - t ) , min = abs ( 360 - t - t ) )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long n , min [ 361 ] , t [ 361 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long int [361]’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "a [ i ] += t [ i - 1 ] + t ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "min = 360 = 360 ;"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "long n , min [ 361 ] , min [ 361 ] ;",
        "if ( min < abs ( 360 - t - t ) , min = abs ( 360 - t - t ) )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long int min [361]’"
    },
    {
      "mod_line": [
        1,
        11,
        4
      ],
      "mod_code": [
        "long n , min [ 361 ] , min [ 361 ] ;",
        "if ( min < abs ( 360 - t - t ) , min = abs ( 360 - t - t ) )",
        "t = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long int min [361]’"
    },
    {
      "mod_line": [
        1,
        11,
        4,
        7
      ],
      "mod_code": [
        "long n , min [ 361 ] , min [ 361 ] ;",
        "if ( min < abs ( 360 - t - t ) , min = abs ( 360 - t - t ) )",
        "t = getchar ( ) ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long int min [361]’"
    },
    {
      "mod_line": [
        1,
        11,
        7
      ],
      "mod_code": [
        "long n , min [ 361 ] , min [ 361 ] ;",
        "if ( min < abs ( 360 - t - t ) , min = abs ( 360 - t - t ) )",
        "min = 360 = 360 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long int min [361]’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "long n , min [ 361 ] , min [ 361 ] ;",
        "if ( min < abs ( 360 - t - t ) ) min = abs ( 360 - t - t ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long int min [361]’"
    },
    {
      "mod_line": [
        1,
        11,
        4
      ],
      "mod_code": [
        "long n , min [ 361 ] , min [ 361 ] ;",
        "if ( min < abs ( 360 - t - t ) ) min = abs ( 360 - t - t ) ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long int min [361]’"
    },
    {
      "mod_line": [
        1,
        11,
        4,
        7
      ],
      "mod_code": [
        "long n , min [ 361 ] , min [ 361 ] ;",
        "if ( min < abs ( 360 - t - t ) ) min = abs ( 360 - t - t ) ;",
        "t = getchar ( ) ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long int min [361]’"
    },
    {
      "mod_line": [
        1,
        11,
        7
      ],
      "mod_code": [
        "long n , min [ 361 ] , min [ 361 ] ;",
        "if ( min < abs ( 360 - t - t ) ) min = abs ( 360 - t - t ) ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long int min [361]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "long n , min [ 361 ] , min [ 361 ] ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long int min [361]’"
    },
    {
      "mod_line": [
        1,
        4,
        7
      ],
      "mod_code": [
        "long n , min [ 361 ] , min [ 361 ] ;",
        "t = getchar ( ) ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long int min [361]’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "long n , min [ 361 ] , min [ 361 ] ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long int min [361]’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "if ( min < abs ( 360 - t - t ) , min = abs ( 360 - t - t ) )",
        "long n , min [ 361 ] , t [ 361 ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long int [361]’)"
    },
    {
      "mod_line": [
        11,
        1,
        4
      ],
      "mod_code": [
        "if ( min < abs ( 360 - t - t ) , min = abs ( 360 - t - t ) )",
        "long n , min [ 361 ] , t [ 361 ] ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘long int [361]’"
    },
    {
      "mod_line": [
        11,
        1,
        4,
        7
      ],
      "mod_code": [
        "if ( min < abs ( 360 - t - t ) , min = abs ( 360 - t - t ) )",
        "long n , min [ 361 ] , t [ 361 ] ;",
        "t = getchar ( ) ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘long int [361]’"
    },
    {
      "mod_line": [
        11,
        1,
        7
      ],
      "mod_code": [
        "if ( min < abs ( 360 - t - t ) , min = abs ( 360 - t - t ) )",
        "long n , min [ 361 ] , t [ 361 ] ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long int [361]’)"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "if ( min < abs ( 360 - t - t ) , min = abs ( 360 - t - t ) )",
        "t = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        4,
        7
      ],
      "mod_code": [
        "if ( min < abs ( 360 - t - t ) , min = abs ( 360 - t - t ) )",
        "t = getchar ( ) ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "if ( min < abs ( 360 - t - t ) , min = abs ( 360 - t - t ) )",
        "min = 360 = 360 ;"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "long n , min [ 361 ] , t [ 361 ] ;",
        "if ( min < abs ( 360 - t - t ) ) min = abs ( 360 - t - t ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long int [361]’)"
    },
    {
      "mod_line": [
        1,
        11,
        4
      ],
      "mod_code": [
        "long n , min [ 361 ] , t [ 361 ] ;",
        "if ( min < abs ( 360 - t - t ) ) min = abs ( 360 - t - t ) ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘long int [361]’"
    },
    {
      "mod_line": [
        1,
        11,
        4,
        7
      ],
      "mod_code": [
        "long n , min [ 361 ] , t [ 361 ] ;",
        "if ( min < abs ( 360 - t - t ) ) min = abs ( 360 - t - t ) ;",
        "t = getchar ( ) ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘long int [361]’"
    },
    {
      "mod_line": [
        1,
        11,
        7
      ],
      "mod_code": [
        "long n , min [ 361 ] , t [ 361 ] ;",
        "if ( min < abs ( 360 - t - t ) ) min = abs ( 360 - t - t ) ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long int [361]’)"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "long n , min [ 361 ] , t [ 361 ] ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘long int [361]’"
    },
    {
      "mod_line": [
        1,
        4,
        7
      ],
      "mod_code": [
        "long n , min [ 361 ] , t [ 361 ] ;",
        "t = getchar ( ) ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘long int [361]’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "long n , min [ 361 ] , t [ 361 ] ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘long int [361]’)"
    },
    {
      "mod_line": [
        11,
        4,
        7
      ],
      "mod_code": [
        "if ( min < abs ( 360 - t - t ) ) min = abs ( 360 - t - t ) ;",
        "t = getchar ( ) ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "if ( min < abs ( 360 - t - t ) ) min = abs ( 360 - t - t ) ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "min = 360 = 360 ;"
      ],
      "err_line": 7,
      "err_msg": "lvalue required as left operand of assignment"
    }
  ]
}