{
  "meta": {
    "index": 1099,
    "hitid": "3G57RS03HHZB2MOT3XP2RBC8Z9R25S",
    "workerid": "AIWEXPJAU66D9",
    "probid": "581A",
    "subid": "48561922"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integer variables a , b and x",
      "code": "int a , b , x ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read variables a and b from the input",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "assign the new value = min of a and b to x",
      "code": "x = min ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print x and \" \"",
      "code": "cout << x << \" \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "decrease a by x",
      "code": "a -= x ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "change b to b - x",
      "code": "b -= x ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print b / 2 if a = 0 , or a / 2 if a is not 0",
      "code": "a == 0 ? cout << b / 2 : cout << a / 2 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" \\ n \"",
      "code": "cout << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a , b + x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "cout << ( a == 0 ? b / 2 : a / 2 ) << endl ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        3
      ],
      "mod_code": [
        "cout << ( a == 0 ? b / 2 : a / 2 ) << endl ;",
        "<< \" \\n \" ;",
        "x = __gcd ( a , b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        3,
        0
      ],
      "mod_code": [
        "cout << ( a == 0 ? b / 2 : a / 2 ) << endl ;",
        "<< \" \\n \" ;",
        "x = __gcd ( a , b ) ;",
        "int a , b + x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        8,
        3,
        4
      ],
      "mod_code": [
        "cout << ( a == 0 ? b / 2 : a / 2 ) << endl ;",
        "<< \" \\n \" ;",
        "x = __gcd ( a , b ) ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        8,
        0
      ],
      "mod_code": [
        "cout << ( a == 0 ? b / 2 : a / 2 ) << endl ;",
        "<< \" \\n \" ;",
        "int a , b + x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        8,
        0,
        4
      ],
      "mod_code": [
        "cout << ( a == 0 ? b / 2 : a / 2 ) << endl ;",
        "<< \" \\n \" ;",
        "int a , b + x ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        8,
        4
      ],
      "mod_code": [
        "cout << ( a == 0 ? b / 2 : a / 2 ) << endl ;",
        "<< \" \\n \" ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        7,
        3,
        0
      ],
      "mod_code": [
        "cout << ( a == 0 ? b / 2 : a / 2 ) << endl ;",
        "x = __gcd ( a , b ) ;",
        "int a , b + x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        3,
        0,
        4
      ],
      "mod_code": [
        "cout << ( a == 0 ? b / 2 : a / 2 ) << endl ;",
        "x = __gcd ( a , b ) ;",
        "int a , b + x ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "cout << ( a == 0 ? b / 2 : a / 2 ) << endl ;",
        "int a , b + x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        0,
        4
      ],
      "mod_code": [
        "cout << ( a == 0 ? b / 2 : a / 2 ) << endl ;",
        "int a , b + x ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "x = __gcd ( a , b ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        3,
        7
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "x = __gcd ( a , b ) ;",
        "cout << ( a == 0 ? a / 2 : a / 2 ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        3,
        7,
        0
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "x = __gcd ( a , b ) ;",
        "cout << ( a == 0 ? a / 2 : a / 2 ) << endl ;",
        "int a , b + x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        8,
        3,
        7,
        4
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "x = __gcd ( a , b ) ;",
        "cout << ( a == 0 ? a / 2 : a / 2 ) << endl ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        3,
        0
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "x = __gcd ( a , b ) ;",
        "int a , b + x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        8,
        3,
        0,
        4
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "x = __gcd ( a , b ) ;",
        "int a , b + x ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        8,
        3,
        4
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "x = __gcd ( a , b ) ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cout << ( a == 0 ? a / 2 : a / 2 ) << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        7,
        0
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cout << ( a == 0 ? a / 2 : a / 2 ) << endl ;",
        "int a , b + x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        8,
        7,
        0,
        4
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cout << ( a == 0 ? a / 2 : a / 2 ) << endl ;",
        "int a , b + x ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        8,
        7,
        4
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cout << ( a == 0 ? a / 2 : a / 2 ) << endl ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "int a , b + x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        8,
        0,
        4
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "int a , b + x ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        7,
        0
      ],
      "mod_code": [
        "x = __gcd ( a , b ) ;",
        "cout << ( a == 0 ? a / 2 : a / 2 ) << endl ;",
        "int a , b + x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3,
        7,
        0,
        4
      ],
      "mod_code": [
        "x = __gcd ( a , b ) ;",
        "cout << ( a == 0 ? a / 2 : a / 2 ) << endl ;",
        "int a , b + x ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "x = __gcd ( a , b ) ;",
        "int a , b + x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3,
        0,
        4
      ],
      "mod_code": [
        "x = __gcd ( a , b ) ;",
        "int a , b + x ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "cout << ( a == 0 ? a / 2 : a / 2 ) << endl ;",
        "int a , b + x ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        7,
        0,
        4
      ],
      "mod_code": [
        "cout << ( a == 0 ? a / 2 : a / 2 ) << endl ;",
        "int a , b + x ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int a , b + x ;",
        "cout << x << \" \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+’ token"
    }
  ]
}