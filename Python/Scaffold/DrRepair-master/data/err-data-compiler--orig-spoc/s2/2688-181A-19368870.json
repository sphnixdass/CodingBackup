{
  "meta": {
    "index": 2688,
    "hitid": "3FJ2RVH25Z0U39Q56N2J3RHAKI8296",
    "workerid": "A1APYLD4DUK33J",
    "probid": "181A",
    "subid": "19368870"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer MAX_N with MAX_N = 100 + 10",
      "code": "const int MAX_N = 100 + 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create 2d character array a with size MAX_N by MAX_N",
      "code": "char a [ MAX_N ] [ MAX_N ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create pairs p , pp with integer , integer , with p size 10 , pp size 10",
      "code": "pair < int , int > p [ 10 ] , pp [ 10 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create integers n , m , x , x1 , y1 , x2 , y2 , with x = 0 , x1 , = 200 , y1 = 200 , x2 = 0 , y2 = 0",
      "code": "int n , m , x = 0 , x1 = 200 , y1 = 200 , x2 = 0 , y2 = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if a [ i ] [ j ] is ' * '",
      "code": "if ( a [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set first element of p [ x ] to i",
      "code": "p [ x ] . first = i ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set second element of p [ x ] to j",
      "code": "p [ x ] . second = j ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "set x1 to minimum of x1 and i",
      "code": "x1 = min ( x1 , i ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "set x2 to maximum of x2 and i",
      "code": "x2 = max ( x2 , i ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "set y1 to minimum of y1 and j",
      "code": "y1 = min ( y1 , j ) ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "set y2 to maximum of y2 and j",
      "code": "y2 = max ( y2 , j ) ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "sort elements from p to p + 3",
      "code": "sort ( p , p + 3 ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set pp [ 0 ] to new pair with x1 and y1",
      "code": "pp [ 0 ] = make_pair ( x1 , y1 ) ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "set pp [ 1 ] to new pair with x1 and y2",
      "code": "pp [ 1 ] = make_pair ( x1 , y2 ) ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set pp [ 2 ] to new pair with x2 and y1",
      "code": "pp [ 2 ] = make_pair ( x2 , y1 ) ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "set pp [ 3 ] to new pair with x2 and y2",
      "code": "pp [ 3 ] = make_pair ( x2 , y2 ) ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "for j = 0 to 3 exclusive",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if p [ i ] is not pp [ i ]",
      "code": "if ( p [ i ] != pp [ i ] )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "print first element of pp [ i ] + 1 print \" \" print second element of pp [ i ] + 1 print newline",
      "code": "cout << pp [ i ] . first + 1 << \" \" << pp [ i ] . second + 1 << endl ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 30,
      "text": "print first element of pp [ 3 ] + 1 print \" \" print second element of pp [ 3 ] + 1 print newline",
      "code": "cout << pp [ 3 ] . first + 1 << \" \" << pp [ 3 ] . second + 1 << endl ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 22,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 23,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 30,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s [ MAX_N ] [ MAX_N ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "vector < int > p [ 10 ] , pp [ 10 ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::vector<int>’ has no member named ‘first’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 0 , x2 = 0 , x2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( a [ i ] == ' * ' )"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "p [ x ] . push_back ( i ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘struct std::pair<int, int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "p [ x ] . push_back ( j ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘struct std::pair<int, int>’ has no member named ‘push_back’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "sort ( p + p + 3 ) ;"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘std::pair<int, int> [10]’ and ‘std::pair<int, int> [10]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int , y1 : y1 ;"
      ],
      "err_line": 20,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < int , y2 : y2 ;"
      ],
      "err_line": 21,
      "err_msg": "found ‘:’ in nested-name-specifier, expected ‘::’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "pp [ 2 ] = new pair < x2 , y1 ++ ;"
      ],
      "err_line": 22,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "pp [ 3 ] = new pair < int > x2 , y2 ) ;"
      ],
      "err_line": 23,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "cout << pp . first << \" \" << 1 << \" \" << pp [ i ] . second + 1 << endl ;"
      ],
      "err_line": 27,
      "err_msg": "request for member ‘first’ in ‘pp’, which is of non-class type ‘std::pair<int, int> [10]’"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + pp [ 3 ] << endl ;"
      ],
      "err_line": 30,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        20
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        20,
        21
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        20,
        22
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        20,
        23
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        20,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        20,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        21
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        21,
        22
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        21,
        23
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        21,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        21,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        22
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        22,
        23
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        22,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        22,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        23
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        23,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        23,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        27,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        21
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        21,
        22
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        21,
        23
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        21,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        21,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        22
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        22,
        23
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        22,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        22,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        23
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        23,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        23,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        27,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        22
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        22,
        23
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        22,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        22,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        23
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        23,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        23,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        27,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        22
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        22,
        23
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        22,
        23,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        22,
        23,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        22,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        22,
        27,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        22,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        23
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        23,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        23,
        27,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        23,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        27,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        30
      ],
      "mod_code": [
        "const int p , p [ 10 ] , pp [ 10 ] ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘p’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        20
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        21
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        21,
        22
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        21,
        23
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        21,
        27
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        21,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        22
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        22,
        23
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        22,
        27
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        22,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        23
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        23,
        27
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        23,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        27
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        27,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        20,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        21,
        22
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        23
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        27
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        21,
        22,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        21,
        23
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        21,
        23,
        27
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        21,
        23,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        21,
        27
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        21,
        27,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        21,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        22,
        23
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        22,
        23,
        27
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        22,
        23,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        22,
        27
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        22,
        27,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        22,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        23
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        23,
        27
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        23,
        27,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        23,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        27
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        27,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        4,
        30
      ],
      "mod_code": [
        "int n , m , x , x1 = 0 , y1 = 200 , y1 = 200 , x2 = 0 , x2 = 0 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int y1’"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        21,
        22
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        23
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        27
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        30
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        21,
        23
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        21,
        23,
        27
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        21,
        23,
        30
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        21,
        27
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        21,
        27,
        30
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        21,
        30
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        22
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        22,
        23
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        22,
        23,
        27
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        22,
        23,
        30
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        22,
        27
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        22,
        27,
        30
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        22,
        30
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        23
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        23,
        27
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        23,
        27,
        30
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        23,
        30
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        27
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        27,
        30
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        20,
        30
      ],
      "mod_code": [
        "pp [ 0 ] = new pair < int [ x1 ] ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 20,
      "err_msg": "wrong number of template arguments (1, should be 2)"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        22,
        23
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        22,
        23,
        27
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        22,
        23,
        30
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        22,
        27
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        22,
        27,
        30
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        22,
        30
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        23
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        23,
        27
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        23,
        27,
        30
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        23,
        30
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        27
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        27,
        30
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        21,
        30
      ],
      "mod_code": [
        "pp [ 1 ] = new pair < x1 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 21,
      "err_msg": "‘x1’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;"
      ],
      "err_line": 22,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        22,
        23,
        27
      ],
      "mod_code": [
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        22,
        23,
        27,
        30
      ],
      "mod_code": [
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        22,
        23,
        30
      ],
      "mod_code": [
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        22,
        27
      ],
      "mod_code": [
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        22,
        27,
        30
      ],
      "mod_code": [
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        22,
        30
      ],
      "mod_code": [
        "pp [ 2 ] = new pair < x2 , y1 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 22,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        23,
        27
      ],
      "mod_code": [
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        23,
        27,
        30
      ],
      "mod_code": [
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        23,
        30
      ],
      "mod_code": [
        "pp [ 3 ] = new pair < x2 , y2 ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 23,
      "err_msg": "‘x2’ cannot appear in a constant-expression"
    },
    {
      "mod_line": [
        27,
        30
      ],
      "mod_code": [
        "cout << pp [ i ] . first << \" \" << pp [ i ] . second << \" \" + 1 << endl ;",
        "cout << pp [ 3 ] [ 3 ] << \" \" << pp [ 3 ] . second + 1 << endl ;"
      ],
      "err_line": 30,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    }
  ]
}