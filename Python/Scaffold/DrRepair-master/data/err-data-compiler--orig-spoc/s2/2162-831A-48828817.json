{
  "meta": {
    "index": 2162,
    "hitid": "3OZ4VAIBEX9S6C1GG9D7UQSODLCVJ1",
    "workerid": "AIWEXPJAU66D9",
    "probid": "831A",
    "subid": "48828817"
  },
  "lines": [
    {
      "line": 0,
      "text": "set constant integer MAXN to 105",
      "code": "const int MAXN = 105 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "set constant integer INF to 0x3f3f3f3f",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let a be integer array with size MAXN",
      "code": "int a [ MAXN ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare integer variable n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while read n from the input",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = 1 to n inclusive read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set a [ n + 1 ] to INF",
      "code": "a [ n + 1 ] = INF ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "declare integer variable p = 2",
      "code": "int p = 2 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment p while a [ p ] is greater than a [ p - 1 ]",
      "code": "while ( a [ p ] > a [ p - 1 ] ) p ++ ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment p while a [ p ] = a [ p - 1 ]",
      "code": "while ( a [ p ] == a [ p - 1 ] ) p ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment p while a [ p ] is less than a [ p - 1 ]",
      "code": "while ( a [ p ] < a [ p - 1 ] ) p ++ ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if p < = n",
      "code": "if ( p <= n )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int * a [ MAXN ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "p = 2 ;"
      ],
      "err_line": 8,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "int a [ n + 1 ] = INF ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        7,
        13
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "int a [ n + 1 ] = INF ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        7,
        13,
        5
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "int a [ n + 1 ] = INF ;",
        "cout << \" NO \" ;",
        "while ( n )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        7,
        13,
        0
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "int a [ n + 1 ] = INF ;",
        "cout << \" NO \" ;",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        2,
        7,
        13,
        14
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "int a [ n + 1 ] = INF ;",
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        7,
        5
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "int a [ n + 1 ] = INF ;",
        "while ( n )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        7,
        5,
        0
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "int a [ n + 1 ] = INF ;",
        "while ( n )",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        2,
        7,
        5,
        14
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "int a [ n + 1 ] = INF ;",
        "while ( n )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        7,
        0
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "int a [ n + 1 ] = INF ;",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        2,
        7,
        0,
        14
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "int a [ n + 1 ] = INF ;",
        "const int MAXN to 105 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        2,
        7,
        14
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "int a [ n + 1 ] = INF ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        13,
        5
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "cout << \" NO \" ;",
        "while ( n )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        13,
        5,
        0
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "cout << \" NO \" ;",
        "while ( n )",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        2,
        13,
        5,
        14
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "cout << \" NO \" ;",
        "while ( n )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        13,
        0
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "cout << \" NO \" ;",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        2,
        13,
        0,
        14
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "cout << \" NO \" ;",
        "const int MAXN to 105 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        2,
        13,
        14
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "while ( n )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        5,
        0
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "while ( n )",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        2,
        5,
        0,
        14
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "while ( n )",
        "const int MAXN to 105 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        2,
        5,
        14
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "while ( n )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        2,
        0,
        14
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "const int MAXN to 105 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "int * a [ MAXN ] ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        13,
        5
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "cout << \" NO \" ;",
        "while ( n )"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        13,
        5,
        0
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "cout << \" NO \" ;",
        "while ( n )",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        7,
        13,
        5,
        14
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "cout << \" NO \" ;",
        "while ( n )",
        "n"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        13,
        0
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "cout << \" NO \" ;",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        7,
        13,
        0,
        14
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "cout << \" NO \" ;",
        "const int MAXN to 105 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        7,
        13,
        14
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "while ( n )"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        5,
        0
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "while ( n )",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        7,
        5,
        0,
        14
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "while ( n )",
        "const int MAXN to 105 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        7,
        5,
        14
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "while ( n )",
        "n"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        7,
        0,
        14
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "const int MAXN to 105 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "int a [ n + 1 ] = INF ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        13,
        5,
        0
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( n )",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        13,
        5,
        0,
        14
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( n )",
        "const int MAXN to 105 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        13,
        5,
        14
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( n )",
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        13,
        0,
        14
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "const int MAXN to 105 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "while ( n )",
        "const int MAXN to 105 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        5,
        0,
        14
      ],
      "mod_code": [
        "while ( n )",
        "const int MAXN to 105 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "while ( n )",
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "const int MAXN to 105 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘to’"
    }
  ]
}