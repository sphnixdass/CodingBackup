{
  "meta": {
    "index": 2743,
    "hitid": "3909MD9T2ZBVZZTY2TXCFOCAL6PEFJ",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "474A",
    "subid": "48901950"
  },
  "lines": [
    {
      "line": 0,
      "text": "n = \" qwertyuiopasdfghjkl ; zxcvbnm , . / \"",
      "code": "string n = \" qwertyuiopasdfghjkl;zxcvbnm,./ \" ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "t , s = string , r = \" \"",
      "code": "string t , s , r = \" \" ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read t , s",
      "code": "cin >> t >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if t is \" R \"",
      "code": "if ( t == \" R \" )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 0 to length of n exclusive",
      "code": "for ( int j = 0 ; j < n . length ( ) ; j ++ )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if s [ i ] is n [ j ] append n [ j - 1 ] to r",
      "code": "if ( s [ i ] == n [ j ] ) { r += n [ j - 1 ] ; }",
      "indent": 4
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else if t is \" L \"",
      "code": "else if ( t == \" L \" )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "for j = 0 to length of n exclusive",
      "code": "for ( int j = 0 ; j < n . length ( ) ; j ++ )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if s [ i ] is n [ j ] append n [ j + 1 ] to r",
      "code": "if ( s [ i ] == n [ j ] ) { r += n [ j + 1 ] ; }",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print r",
      "code": "cout << r << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "n = \" qwertyuiopasdfghjkl \" ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "n -= zxcvbnm ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string t , s = \" \" ;"
      ],
      "err_line": 7,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( t == ' R \" )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "n = \" qwertyuiopasdfghjkl \" ;",
        "string t , s , r = \" \" ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        10
      ],
      "mod_code": [
        "n = \" qwertyuiopasdfghjkl \" ;",
        "string t , s , r = \" \" ;",
        "else if ( t == \" [] \" )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        10,
        4
      ],
      "mod_code": [
        "n = \" qwertyuiopasdfghjkl \" ;",
        "string t , s , r = \" \" ;",
        "else if ( t == \" [] \" )",
        "if ( t == ' R \" )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        1,
        4
      ],
      "mod_code": [
        "n = \" qwertyuiopasdfghjkl \" ;",
        "string t , s , r = \" \" ;",
        "if ( t == ' R \" )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "n = \" qwertyuiopasdfghjkl \" ;",
        "else if ( t == \" [] \" )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        4
      ],
      "mod_code": [
        "n = \" qwertyuiopasdfghjkl \" ;",
        "else if ( t == \" [] \" )",
        "if ( t == ' R \" )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        10,
        4,
        1
      ],
      "mod_code": [
        "n = \" qwertyuiopasdfghjkl \" ;",
        "else if ( t == \" [] \" )",
        "if ( t == ' R \" )",
        "string t , s = \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        10,
        1
      ],
      "mod_code": [
        "n = \" qwertyuiopasdfghjkl \" ;",
        "else if ( t == \" [] \" )",
        "string t , s = \" \" ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "n = \" qwertyuiopasdfghjkl \" ;",
        "if ( t == ' R \" )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        4,
        1
      ],
      "mod_code": [
        "n = \" qwertyuiopasdfghjkl \" ;",
        "if ( t == ' R \" )",
        "string t , s = \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "n = \" qwertyuiopasdfghjkl \" ;",
        "string t , s = \" \" ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "string t , s , r = \" \" ;",
        "n -= zxcvbnm ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        1,
        0,
        10
      ],
      "mod_code": [
        "string t , s , r = \" \" ;",
        "n -= zxcvbnm ;",
        "else if ( t == \" [] \" )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        1,
        0,
        10,
        4
      ],
      "mod_code": [
        "string t , s , r = \" \" ;",
        "n -= zxcvbnm ;",
        "else if ( t == \" [] \" )",
        "if ( t == ' R \" )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        0,
        4
      ],
      "mod_code": [
        "string t , s , r = \" \" ;",
        "n -= zxcvbnm ;",
        "if ( t == ' R \" )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        10,
        4
      ],
      "mod_code": [
        "string t , s , r = \" \" ;",
        "else if ( t == \" [] \" )",
        "if ( t == ' R \" )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "string t , s , r = \" \" ;",
        "if ( t == ' R \" )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "n -= zxcvbnm ;",
        "else if ( t == \" [] \" )"
      ],
      "err_line": 0,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        4
      ],
      "mod_code": [
        "n -= zxcvbnm ;",
        "else if ( t == \" [] \" )",
        "if ( t == ' R \" )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        10,
        4,
        1
      ],
      "mod_code": [
        "n -= zxcvbnm ;",
        "else if ( t == \" [] \" )",
        "if ( t == ' R \" )",
        "string t , s = \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        10,
        1
      ],
      "mod_code": [
        "n -= zxcvbnm ;",
        "else if ( t == \" [] \" )",
        "string t , s = \" \" ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "n -= zxcvbnm ;",
        "if ( t == ' R \" )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        4,
        1
      ],
      "mod_code": [
        "n -= zxcvbnm ;",
        "if ( t == ' R \" )",
        "string t , s = \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "n -= zxcvbnm ;",
        "string t , s = \" \" ;"
      ],
      "err_line": 0,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "else if ( t == \" [] \" )",
        "if ( t == ' R \" )"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        4,
        1
      ],
      "mod_code": [
        "else if ( t == \" [] \" )",
        "if ( t == ' R \" )",
        "string t , s = \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "else if ( t == \" [] \" )",
        "string t , s = \" \" ;"
      ],
      "err_line": 7,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( t == ' R \" )",
        "string t , s = \" \" ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating ' character"
    }
  ]
}