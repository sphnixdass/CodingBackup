{
  "meta": {
    "index": 149,
    "hitid": "3KTCJ4SCVGV2L8R3CS6A3UDPSB0M17",
    "workerid": "AIWEXPJAU66D9",
    "probid": "954A",
    "subid": "47872042"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant long long integer MOD = 1000000007",
      "code": "const long long int MOD = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long integers N , M , K , H , W , L and R",
      "code": "long long int N , M , K , H , W , L , R ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read N",
      "code": "cin >> N ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare string variable s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = 0 to N - 1 exclusive",
      "code": "for ( int i = 0 ; i < N - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] ! = s [ i + 1 ]",
      "code": "if ( s [ i ] != s [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increase M by one",
      "code": "M ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increase i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print N - M",
      "code": "cout << N - M << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "bool s ;",
        "N >> N ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        3,
        5
      ],
      "mod_code": [
        "bool s ;",
        "N >> N ;",
        "s >> s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "bool s ;",
        "s >> s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "N >> N ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}