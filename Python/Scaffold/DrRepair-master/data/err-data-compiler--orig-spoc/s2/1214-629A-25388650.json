{
  "meta": {
    "index": 1214,
    "hitid": "3GITHABACYFFSBUZ7XLOLSCUQUQ2NH",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "629A",
    "subid": "25388650"
  },
  "lines": [
    {
      "line": 0,
      "text": "in the function in_out_txt",
      "code": "void in_out_txt ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "freopen on input . txt and rt with stdin",
      "code": "freopen ( \" input.txt \" , \" rt \" , stdin ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "freopen on output . txt and wt with stdout",
      "code": "freopen ( \" output.txt \" , \" wt \" , stdout ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "in the function FillArray that takes int array arr , int n , num",
      "code": "void FillArray ( int arr [ ] , int n , int num )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive , arr [ i ] = num ;",
      "code": "for ( int i = 0 ; i < n ; i ++ ) arr [ i ] = num ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "in the function fun that takes int num and returns int",
      "code": "int fun ( int num )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "re = int",
      "code": "int re ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "st = set of int",
      "code": "set < int > st ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while ( num is not 0 )",
      "code": "while ( num != 0 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "re = num modulo 10",
      "code": "re = num % 10 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "num = num / 10",
      "code": "num /= 10 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "insert re in st",
      "code": "st . insert ( re ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "s = int with s = st . size ( )",
      "code": "int s = st . size ( ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "return s",
      "code": "return s ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 19,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "arr = char array of size [ 101 ] [ 101 ]",
      "code": "char arr [ 101 ] [ 101 ] ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for j = 0 to n exclusive , read arr [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < n ; j ++ ) cin >> arr [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "c = int with c = 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "if ( arr [ i ] [ j ] is C )",
      "code": "if ( arr [ i ] [ j ] == ' C ' )",
      "indent": 3
    },
    {
      "line": 29,
      "text": "for k = j + 1 to n exclusive",
      "code": "for ( int k = j + 1 ; k < n ; k ++ )",
      "indent": 4
    },
    {
      "line": 30,
      "text": "if ( arr [ i ] [ k ] is C ) , increment c",
      "code": "if ( arr [ i ] [ k ] == ' C ' ) c ++ ;",
      "indent": 5
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 36,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 37,
      "text": "if ( arr [ i ] [ j ] is C )",
      "code": "if ( arr [ i ] [ j ] == ' C ' )",
      "indent": 3
    },
    {
      "line": 38,
      "text": "for k = i + 1 to n exclusive",
      "code": "for ( int k = i + 1 ; k < n ; k ++ )",
      "indent": 4
    },
    {
      "line": 39,
      "text": "if ( arr [ k ] [ j ] is C ) , increment c",
      "code": "if ( arr [ k ] [ j ] == ' C ' ) c ++ ;",
      "indent": 5
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 44,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;"
      ],
      "err_line": 8,
      "err_msg": "a function-definition is not allowed here before ‘{’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "if ( arr [ i ] [ k ] == C ) c ++ ;"
      ],
      "err_line": 30,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 39,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "freopen ( input , txt + rt ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "freopen ( output , wt ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘output’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "void FillArray ( int arr , int n , int num )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int fun ( int num ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "inline int st ;"
      ],
      "err_line": 9,
      "err_msg": "‘st’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "st . push ( re ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘class std::set<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "char arr [ 101 ] [ 101 ] ] ;"
      ],
      "err_line": 21,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 26,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 27,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "if ( arr [ i ] [ j ] == C )"
      ],
      "err_line": 28,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "for ( k = j + 1 ; k < n ; k ++ )"
      ],
      "err_line": 29,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 35,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 36,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "if ( arr [ i ] [ j ] == C )"
      ],
      "err_line": 37,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 38,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "freopen ( \" . \" , wt ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "freopen ( \" . \" , wt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        30
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "freopen ( \" . \" , wt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        39
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "freopen ( \" . \" , wt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        38
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "freopen ( \" . \" , wt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        30
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "freopen ( \" . \" , wt ) ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        30,
        39
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "freopen ( \" . \" , wt ) ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        30,
        38
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "freopen ( \" . \" , wt ) ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        39
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "freopen ( \" . \" , wt ) ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        39,
        38
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "freopen ( \" . \" , wt ) ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        38
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "freopen ( \" . \" , wt ) ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        30
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        30,
        39
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        30,
        38
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        39
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        39,
        38
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        38
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        30
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        30,
        39
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        30,
        39,
        38
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        30,
        38
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        39
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        39,
        38
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        38
      ],
      "mod_code": [
        "freopen ( input . c_str ( ) , rt ) ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        30
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        30,
        39
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        30,
        38
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        39
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        39,
        38
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        38
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        30
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        30,
        39
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        30,
        39,
        38
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        30,
        38
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        39
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        39,
        38
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        38
      ],
      "mod_code": [
        "freopen ( \" . \" , wt ) ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘wt’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;"
      ],
      "err_line": 8,
      "err_msg": "a function-definition is not allowed here before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        30,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 8,
      "err_msg": "a function-definition is not allowed here before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        30,
        39,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 8,
      "err_msg": "a function-definition is not allowed here before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        30,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 8,
      "err_msg": "a function-definition is not allowed here before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        39
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 8,
      "err_msg": "a function-definition is not allowed here before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        39,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 8,
      "err_msg": "a function-definition is not allowed here before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        38
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { arr [ i ] = num ; ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 8,
      "err_msg": "a function-definition is not allowed here before ‘{’ token"
    },
    {
      "mod_line": [
        30,
        39
      ],
      "mod_code": [
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;"
      ],
      "err_line": 30,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        39,
        38
      ],
      "mod_code": [
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "if ( arr [ k ] [ j ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        38
      ],
      "mod_code": [
        "if ( arr [ i ] [ k ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        39,
        38
      ],
      "mod_code": [
        "if ( arr [ k ] [ j ] == C ) c ++ ;",
        "for ( k = i + 1 ; k < n ; k ++ )"
      ],
      "err_line": 38,
      "err_msg": "‘k’ was not declared in this scope"
    }
  ]
}