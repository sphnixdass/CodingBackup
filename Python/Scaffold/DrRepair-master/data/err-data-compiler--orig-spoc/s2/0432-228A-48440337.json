{
  "meta": {
    "index": 432,
    "hitid": "35YHTYFL1GXC1AFKXJMMFS0WKEWFVJ",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "228A",
    "subid": "48440337"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = int vector of size 4",
      "code": "vector < int > s ( 4 ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s [ 0 ] then s [ 1 ] then s [ 2 ] then s [ 3 ]",
      "code": "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s [ 3 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "sort vector s",
      "code": "sort ( s . begin ( ) , s . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "erase duplicates in s",
      "code": "s . erase ( unique ( s . begin ( ) , s . end ( ) ) , s . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print 4 - size of s",
      "code": "cout << 4 - s . size ( ) << endl ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "vector < int > s [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s . 3 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "sort ( s , s + n ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "vector < int > s [ 4 ] ;",
        "s . erase ( s . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        4,
        3
      ],
      "mod_code": [
        "vector < int > s [ 4 ] ;",
        "s . erase ( s . begin ( ) , s . end ( ) ) ;",
        "sort ( s , s + n ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        4,
        3,
        2
      ],
      "mod_code": [
        "vector < int > s [ 4 ] ;",
        "s . erase ( s . begin ( ) , s . end ( ) ) ;",
        "sort ( s , s + n ) ;",
        "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s . 3 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "vector < int > s [ 4 ] ;",
        "s . erase ( s . begin ( ) , s . end ( ) ) ;",
        "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s . 3 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "vector < int > s [ 4 ] ;",
        "sort ( s , s + n ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "vector < int > s [ 4 ] ;",
        "sort ( s , s + n ) ;",
        "s . erase ( s . end ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        2
      ],
      "mod_code": [
        "vector < int > s [ 4 ] ;",
        "sort ( s , s + n ) ;",
        "s . erase ( s . end ( ) ) ;",
        "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s . 3 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "vector < int > s [ 4 ] ;",
        "sort ( s , s + n ) ;",
        "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s . 3 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "vector < int > s [ 4 ] ;",
        "s . erase ( s . end ( ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "vector < int > s [ 4 ] ;",
        "s . erase ( s . end ( ) ) ;",
        "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s . 3 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "vector < int > s [ 4 ] ;",
        "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s . 3 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "s . erase ( s . begin ( ) , s . end ( ) ) ;",
        "sort ( s , s + n ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "s . erase ( s . begin ( ) , s . end ( ) ) ;",
        "sort ( s , s + n ) ;",
        "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s . 3 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "s . erase ( s . begin ( ) , s . end ( ) ) ;",
        "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s . 3 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "sort ( s , s + n ) ;",
        "s . erase ( s . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "sort ( s , s + n ) ;",
        "s . erase ( s . end ( ) ) ;",
        "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s . 3 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "sort ( s , s + n ) ;",
        "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s . 3 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "s . erase ( s . end ( ) ) ;",
        "cin >> s [ 0 ] >> s [ 1 ] >> s [ 2 ] >> s . 3 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before numeric constant"
    }
  ]
}