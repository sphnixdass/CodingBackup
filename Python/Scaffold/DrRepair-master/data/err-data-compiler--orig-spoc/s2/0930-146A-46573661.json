{
  "meta": {
    "index": 930,
    "hitid": "33TGB4G0LPBEO42GSISTKHCISL8TXF",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "146A",
    "subid": "46573661"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , a , b = long long",
      "code": "long long n , a , b ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "str = string",
      "code": "string str ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n , str",
      "code": "cin >> n >> str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = cast to integer 0 to cast to integer n exclusive",
      "code": "for ( int i = int ( 0 ) ; i < int ( n ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if str [ i ] is not 7 and str [ i ] is not 4 , return print NO",
      "code": "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" << ' \\n ' , 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if i > = ( n ) / 2",
      "code": "if ( i >= ( n ) / 2 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if str [ i ] is 7 , a = a + 7 else a = a + 4 , print error , a , a",
      "code": "str [ i ] == ' 7 ' ? a += 7 : a += 4 , cerr << \" a \" << a << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if str [ i ] is 7 , b = b + 7 else b = b + 4 , print error b , b",
      "code": "str [ i ] == ' 7 ' ? b += 7 : b += 4 , cerr << \" b \" << b << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print error a , a",
      "code": "cerr << \" a \" << a << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print error b , b",
      "code": "cerr << \" b \" << b << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if a is b",
      "code": "if ( a == b )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "return print YES",
      "code": "return cout << \" YES \" << ' \\n ' , 0 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print NO",
      "code": "cout << \" NO \" << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cerr << b , b << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' && b [ i ] == ' 7 ' ) { b = b + 4 ; }"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cerr << a , a << endl ;"
      ],
      "err_line": 11,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( a is b )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "return cout << \" YES\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        12
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "cerr << b , b << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        14
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        12
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;",
        "cerr << b , b << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        12,
        14
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;",
        "cerr << b , b << endl ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        14
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        12
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "cerr << b , b << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        14
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "cerr << b , b << endl ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        7
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "cerr << b , b << endl ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        14
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        14,
        7
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "return cout << \" YES \" << endl ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        7
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "cerr << b , b << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        14
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "cerr << b , b << endl ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        14,
        7
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "cerr << b , b << endl ;",
        "return cout << \" YES \" << endl ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        7
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "cerr << b , b << endl ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        14,
        7
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "return cout << \" YES \" << endl ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' && str [ i ] != ' 4 ' ) return cout << \" NO \" ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9,
        12
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "cerr << b , b << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        14
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "cerr << b , b << endl ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        7,
        9,
        14
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;",
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;",
        "cerr << b , b << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        7,
        12,
        14
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;",
        "cerr << b , b << endl ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' ) a = a + 7 ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "cerr << b , b << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        9,
        12,
        14
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "cerr << b , b << endl ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        9,
        12,
        14,
        7
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "cerr << b , b << endl ;",
        "return cout << \" YES \" << endl ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        9,
        12,
        7
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "cerr << b , b << endl ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        14,
        7
      ],
      "mod_code": [
        "if ( str [ i ] == ' 7 ' ) b += 7 ;",
        "return cout << \" YES \" << endl ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "cerr << b , b << endl ;",
        "return cout << \" YES \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        12,
        14,
        7
      ],
      "mod_code": [
        "cerr << b , b << endl ;",
        "return cout << \" YES \" << endl ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "cerr << b , b << endl ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "return cout << \" YES \" << endl ;",
        "if ( str [ i ] == ' 7 ' ) a += 7 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>::__ostream_type {aka std::basic_ostream<char>}’ to ‘int’ [-fpermissive]"
    }
  ]
}