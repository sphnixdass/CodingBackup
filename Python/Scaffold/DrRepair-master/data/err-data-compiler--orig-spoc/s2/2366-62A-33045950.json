{
  "meta": {
    "index": 2366,
    "hitid": "3A3KKYU7P3BVM9769GVVWK3JOO9WMG",
    "workerid": "A1AYVATMT88U1W",
    "probid": "62A",
    "subid": "33045950"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a , b , c , d be long integers",
      "code": "long long a , b , c , d ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while ( read the values a , b , c , d )",
      "code": "while ( cin >> a >> b >> c >> d )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let ck be a long integer with value as 0",
      "code": "long long ck = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "let a1 be a long integer with value as a1 is equal to a * 2 + 2",
      "code": "long long a1 = a * 2 + 2 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "let a2 be a long integer with value a2 is equal to a - 1",
      "code": "long long a2 = a - 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ( d is greater than or equal to a2 and d is less than or equal to a1 ) , ck is equal to 1",
      "code": "if ( d >= a2 && d <= a1 ) ck = 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "let a1 is equal to ( b * 2 + 2 )",
      "code": "a1 = b * 2 + 2 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "let a2 is equal to b - 1",
      "code": "a2 = b - 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if ( c is greater than or equal to a2 and c is less than or equal to a1 ) , ck is equal to 1",
      "code": "if ( c >= a2 && c <= a1 ) ck = 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if ( ck is equal to 1 )",
      "code": "if ( ck == 1 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print YES and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print NO and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( ck == 1 ) )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "if ( ck == 1 ) )",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        12,
        7
      ],
      "mod_code": [
        "if ( ck == 1 ) )",
        "else do",
        "a1 *= 2 + 2 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        12,
        7,
        2
      ],
      "mod_code": [
        "if ( ck == 1 ) )",
        "else do",
        "a1 *= 2 + 2 ;",
        "while ( cin >> a >> b >> c , d )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        12,
        2
      ],
      "mod_code": [
        "if ( ck == 1 ) )",
        "else do",
        "while ( cin >> a >> b >> c , d )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "if ( ck == 1 ) )",
        "a1 *= 2 + 2 ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        7,
        2
      ],
      "mod_code": [
        "if ( ck == 1 ) )",
        "a1 *= 2 + 2 ;",
        "while ( cin >> a >> b >> c , d )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( ck == 1 ) )",
        "while ( cin >> a >> b >> c , d )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "else do",
        "a1 *= 2 + 2 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        7,
        2
      ],
      "mod_code": [
        "else do",
        "a1 *= 2 + 2 ;",
        "while ( cin >> a >> b >> c , d )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "else do",
        "while ( cin >> a >> b >> c , d )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}