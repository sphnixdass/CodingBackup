{
  "meta": {
    "index": 1323,
    "hitid": "3HJ1EVZS2ODPSRIA44GADMMWX5D3RF",
    "workerid": "AIWEXPJAU66D9",
    "probid": "798A",
    "subid": "47396408"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s is a new array of characters with 16 elements",
      "code": "char s [ 16 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integer variables i , count and n where count = 0",
      "code": "int i , count = 0 , n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "change the value of n to length of s",
      "code": "n = strlen ( s ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "start for loop from i = 0 to n / 2 exclusive incrementing i",
      "code": "for ( i = 0 ; i < n / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "increment count if s [ i ] ! = s [ n - 1 - i ]",
      "code": "if ( s [ i ] != s [ n - 1 - i ] ) count ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if n is odd",
      "code": "if ( n % 2 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if count < = 1",
      "code": "if ( count <= 1 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if count is equal to 1",
      "code": "if ( count == 1 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "n = s . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "s [ 16 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int i , count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "n = s . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( count == 1 ) break ;"
      ],
      "err_line": 14,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        3,
        16
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        3,
        16,
        11
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "s >> s ;",
        "n",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        3,
        16,
        17
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "s >> s ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        3,
        11
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        3,
        11,
        17
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "s >> s ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        3,
        17
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "s >> s ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        4,
        16,
        11
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "n",
        "n"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        4,
        16,
        11,
        17
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "n",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        4,
        16,
        17
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        4,
        11,
        17
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "n = s . length ( ) ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "s >> s ;",
        "n = s . size ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        4,
        16
      ],
      "mod_code": [
        "s >> s ;",
        "n = s . size ( ) ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        4,
        16,
        11
      ],
      "mod_code": [
        "s >> s ;",
        "n = s . size ( ) ;",
        "n",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        4,
        16,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "n = s . size ( ) ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "s >> s ;",
        "n = s . size ( ) ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        4,
        11,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "n = s . size ( ) ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        4,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "n = s . size ( ) ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "s >> s ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        16,
        11
      ],
      "mod_code": [
        "s >> s ;",
        "n",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        16,
        11,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "n",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        16,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "s >> s ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        11,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘char [16]’ and ‘char [16]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "n = s . size ( ) ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        4,
        16,
        11
      ],
      "mod_code": [
        "n = s . size ( ) ;",
        "n",
        "n"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        4,
        16,
        11,
        17
      ],
      "mod_code": [
        "n = s . size ( ) ;",
        "n",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        4,
        16,
        17
      ],
      "mod_code": [
        "n = s . size ( ) ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "n = s . size ( ) ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        4,
        11,
        17
      ],
      "mod_code": [
        "n = s . size ( ) ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "n = s . size ( ) ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char [16]’"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        11,
        17
      ],
      "mod_code": [
        "n",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}