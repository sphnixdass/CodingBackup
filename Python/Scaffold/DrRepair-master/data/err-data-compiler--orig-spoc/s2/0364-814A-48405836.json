{
  "meta": {
    "index": 364,
    "hitid": "3RTFSSG7T80BGRPL94UGW7OUP6ELW9",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "814A",
    "subid": "48405836"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints n , k , i , and m = 0 and int arrays a of size 200 and b of size 200",
      "code": "int n , k , a [ 200 ] , b [ 200 ] , i , m = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let bool flag = 1",
      "code": "bool flag = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ i ] is equal to 0 , increment m",
      "code": "if ( a [ i ] == 0 ) m ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to k exclusive , read b [ i ]",
      "code": "for ( i = 0 ; i < k ; i ++ ) { cin >> b [ i ] ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if m is greater than 1 , set flag to 0",
      "code": "if ( m > 1 ) flag = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if m is equal to 0",
      "code": "if ( m == 0 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n - 1 exclusive",
      "code": "for ( i = 0 ; i < n - 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if a [ i + 1 ] is greater than a [ i ]",
      "code": "if ( a [ i + 1 ] > a [ i ] )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "continue to next loop iteration",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set flag to 0",
      "code": "flag = 0 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if m is equal to 1",
      "code": "if ( m == 1 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if a [ i ] is equal to 0 , set a [ i ] to b [ 0 ]",
      "code": "if ( a [ i ] == 0 ) a [ i ] = b [ 0 ] ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "for i = 0 to n - 1 exclusive",
      "code": "for ( i = 0 ; i < n - 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if a [ i + 1 ] greater than a [ i ]",
      "code": "if ( a [ i + 1 ] > a [ i ] )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "continue to next loop iteration",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 26,
      "text": "set flag to 0",
      "code": "flag = 0 ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "if flag is truthy",
      "code": "if ( flag )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print \" No \"",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print \" Yes \"",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> a . at ( i ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘at’ in ‘a’, which is of non-class type ‘int [200]’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 26,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 32,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        14,
        18
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "n",
        "if ( ! m )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        14,
        18,
        26
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "n",
        "if ( ! m )",
        "int flag = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        14,
        18,
        3
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "n",
        "if ( ! m )",
        "while ( cin >> n >> k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        14,
        18,
        30
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "n",
        "if ( ! m )",
        "cout << \" No \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        14,
        26
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "n",
        "int flag = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        14,
        26,
        3
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "n",
        "int flag = 0 ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        14,
        26,
        30
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "n",
        "int flag = 0 ;",
        "cout << \" No \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        14,
        3
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "n",
        "while ( cin >> n >> k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        14,
        3,
        30
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "n",
        "while ( cin >> n >> k )",
        "cout << \" No \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        14,
        30
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "n",
        "cout << \" No \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "if ( ! m )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        18,
        26
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "if ( ! m )",
        "int flag = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        18,
        26,
        3
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "if ( ! m )",
        "int flag = 0 ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        18,
        26,
        30
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "if ( ! m )",
        "int flag = 0 ;",
        "cout << \" No \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        18,
        3
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "if ( ! m )",
        "while ( cin >> n >> k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        18,
        3,
        30
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "if ( ! m )",
        "while ( cin >> n >> k )",
        "cout << \" No \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        18,
        30
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "if ( ! m )",
        "cout << \" No \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        26
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "int flag = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        26,
        3
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "int flag = 0 ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        26,
        3,
        30
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "int flag = 0 ;",
        "while ( cin >> n >> k )",
        "cout << \" No \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        26,
        30
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "int flag = 0 ;",
        "cout << \" No \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        3,
        30
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "while ( cin >> n >> k )",
        "cout << \" No \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        1,
        30
      ],
      "mod_code": [
        "int n , a [ 200 ] , b [ 200 ] , k , k , m = 0 ;",
        "cout << \" No \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "n",
        "if ( ! m )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        18,
        26
      ],
      "mod_code": [
        "n",
        "if ( ! m )",
        "int flag = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        18,
        26,
        3
      ],
      "mod_code": [
        "n",
        "if ( ! m )",
        "int flag = 0 ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        18,
        26,
        30
      ],
      "mod_code": [
        "n",
        "if ( ! m )",
        "int flag = 0 ;",
        "cout << \" No \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        18,
        3
      ],
      "mod_code": [
        "n",
        "if ( ! m )",
        "while ( cin >> n >> k )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        18,
        3,
        30
      ],
      "mod_code": [
        "n",
        "if ( ! m )",
        "while ( cin >> n >> k )",
        "cout << \" No \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        18,
        30
      ],
      "mod_code": [
        "n",
        "if ( ! m )",
        "cout << \" No \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        26
      ],
      "mod_code": [
        "n",
        "int flag = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        26,
        3
      ],
      "mod_code": [
        "n",
        "int flag = 0 ;",
        "while ( cin >> n >> k )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        26,
        3,
        30
      ],
      "mod_code": [
        "n",
        "int flag = 0 ;",
        "while ( cin >> n >> k )",
        "cout << \" No \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        26,
        30
      ],
      "mod_code": [
        "n",
        "int flag = 0 ;",
        "cout << \" No \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "n",
        "while ( cin >> n >> k )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        3,
        30
      ],
      "mod_code": [
        "n",
        "while ( cin >> n >> k )",
        "cout << \" No \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        30
      ],
      "mod_code": [
        "n",
        "cout << \" No \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}