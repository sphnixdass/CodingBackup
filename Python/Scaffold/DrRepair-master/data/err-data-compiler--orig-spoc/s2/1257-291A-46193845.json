{
  "meta": {
    "index": 1257,
    "hitid": "3WRBLBQ2GR22M9AZ564FCKAISKI0GL",
    "workerid": "A277IUJ2DY3GZQ",
    "probid": "291A",
    "subid": "46193845"
  },
  "lines": [
    {
      "line": 0,
      "text": "let id an int array of length 1000 + 10",
      "code": "int id [ 1000 + 10 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let n and cnt ints with cnt = 0",
      "code": "int n , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let b a bool with value true",
      "code": "bool b = true ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read the first n values of id",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> id [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort the first n values of id",
      "code": "sort ( id , id + n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if id [ i ] same as id [ i + 1 ] and id [ i ] positive",
      "code": "if ( id [ i ] == id [ i + 1 ] && id [ i ] > 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if id [ i + 1 ] same as id [ i + 2 ] , set b to false",
      "code": "if ( id [ i + 1 ] == id [ i + 2 ] ) b = false ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if b",
      "code": "if ( b )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "otherwise",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int s [ 1000 + 10 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘id’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 15,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "otherwise"
      ],
      "err_line": 15,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        7
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "otherwise",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        7,
        10
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "otherwise",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        7,
        6
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "otherwise",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        15,
        7,
        13
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "otherwise",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ! b )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        10
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "otherwise",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;"
      ],
      "err_line": 15,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        10,
        6
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "otherwise",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        15,
        10,
        13
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "otherwise",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "if ( ! b )"
      ],
      "err_line": 15,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        6
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "otherwise",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        15,
        6,
        13
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "otherwise",
        "sort ( id , id + id ) ;",
        "if ( ! b )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        15,
        13
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "otherwise",
        "if ( ! b )"
      ],
      "err_line": 15,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        10
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        10,
        6
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        7,
        10,
        13
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "if ( ! b )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        6
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        7,
        6,
        13
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( id , id + id ) ;",
        "if ( ! b )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        7,
        13
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ! b )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        10,
        6
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        10,
        6,
        13
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "sort ( id , id + id ) ;",
        "if ( ! b )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        6,
        13
      ],
      "mod_code": [
        "if ( id [ i ] == id [ i + 1 ] && id [ i ] == ' id ' )",
        "sort ( id , id + id ) ;",
        "if ( ! b )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "otherwise",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        7,
        10
      ],
      "mod_code": [
        "otherwise",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        7,
        10,
        6
      ],
      "mod_code": [
        "otherwise",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        7,
        10,
        13
      ],
      "mod_code": [
        "otherwise",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "if ( ! b )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        7,
        6
      ],
      "mod_code": [
        "otherwise",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        7,
        6,
        13
      ],
      "mod_code": [
        "otherwise",
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( id , id + id ) ;",
        "if ( ! b )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        7,
        13
      ],
      "mod_code": [
        "otherwise",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ! b )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "otherwise",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;"
      ],
      "err_line": 15,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        10,
        6
      ],
      "mod_code": [
        "otherwise",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        10,
        6,
        13
      ],
      "mod_code": [
        "otherwise",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "sort ( id , id + id ) ;",
        "if ( ! b )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        10,
        13
      ],
      "mod_code": [
        "otherwise",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "if ( ! b )"
      ],
      "err_line": 15,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "otherwise",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        6,
        13
      ],
      "mod_code": [
        "otherwise",
        "sort ( id , id + id ) ;",
        "if ( ! b )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "otherwise",
        "if ( ! b )"
      ],
      "err_line": 15,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        10,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        10,
        6,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "sort ( id , id + id ) ;",
        "if ( ! b )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        10,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "if ( ! b )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        6,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "sort ( id , id + id ) ;",
        "if ( ! b )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( ! b )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "sort ( id , id + id ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        10,
        6,
        13
      ],
      "mod_code": [
        "if ( id [ i + 1 ] % id [ i + 2 ] ) b = false ;",
        "sort ( id , id + id ) ;",
        "if ( ! b )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "sort ( id , id + id ) ;",
        "if ( ! b )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [1010]’ and ‘int [1010]’ to binary ‘operator+’"
    }
  ]
}