{
  "meta": {
    "index": 2571,
    "hitid": "3KTZHH2ONI9KW8BOBDFPI40X62R8M4",
    "workerid": "A1APYLD4DUK33J",
    "probid": "24A",
    "subid": "41576022"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer maxn with maxn = 105",
      "code": "const int maxn = 105 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer arrays u , v , c with u size maxn , v size maxn , c size maxn",
      "code": "int u [ maxn ] , v [ maxn ] , c [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integer ans with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare dfs with integers s , index as arguments , returning void",
      "code": "void dfs ( int s , int index )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if index is i , break current loop iteration",
      "code": "if ( index == i ) continue ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if is is u [ i ]",
      "code": "if ( s == u [ i ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if v [ i ] is u [ i ] , return from function",
      "code": "if ( v [ i ] == u [ 1 ] ) return ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "run dfs with v [ i ] , i as arguments",
      "code": "dfs ( v [ i ] , i ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if s is v [ i ]",
      "code": "else if ( s == v [ i ] )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment ans by c [ i ]",
      "code": "ans += c [ i ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if u [ i ] is u [ 1 ] , return from function",
      "code": "if ( u [ i ] == u [ 1 ] ) return ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "run dfs with u [ i ] , i as arguments",
      "code": "dfs ( u [ i ] , i ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 18,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "create integer sum with sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "read u [ i ] read v [ i ] read c [ i ]",
      "code": "cin >> u [ i ] >> v [ i ] >> c [ i ] ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "increment sum by c [ i ]",
      "code": "sum += c [ i ] ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "run dfs with v [ 1 ] , 1 as arguments",
      "code": "dfs ( v [ 1 ] , 1 ) ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print minimum of ans and sum - ans , print newline",
      "code": "cout << min ( ans , sum - ans ) << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( is == u [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int u [ maxn ] , v [ maxn ] , c [ maxn ] , c [ maxn ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int c [105]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( ! is [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) { return from ; }"
      ],
      "err_line": 8,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "dfs ( ( v [ i ] , i ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( u [ i ] == u [ 1 ] ) return from ;"
      ],
      "err_line": 12,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "sum = 0 ;"
      ],
      "err_line": 19,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cin >> u [ i ] >> v [ i ] >> c . i ;"
      ],
      "err_line": 21,
      "err_msg": "request for member ‘i’ in ‘c’, which is of non-class type ‘int [105]’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "dfs ( ( v [ 1 ] , 1 ) ) ;"
      ],
      "err_line": 24,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "cout << min ( ans , sum - ans , endl ) << endl ;"
      ],
      "err_line": 25,
      "err_msg": "no matching function for call to ‘min(int&, int, <unresolved overloaded function type>)’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "if ( v [ i ] == u [ i ] ) return ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        24
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( v [ 1 ] , 1 ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        24,
        25
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        24,
        10
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        24,
        13
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        25
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "if ( v [ i ] == u [ i ] ) return ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        25,
        10
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "if ( v [ i ] == u [ i ] ) return ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        25,
        13
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "if ( v [ i ] == u [ i ] ) return ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        10
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "if ( v [ i ] == u [ i ] ) return ;",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        10,
        13
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "if ( v [ i ] == u [ i ] ) return ;",
        "else if ( s != v [ i ] )",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        13
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        24
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "dfs ( ( v [ 1 ] , 1 ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        24,
        25
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        24,
        25,
        10
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        24,
        25,
        13
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        24,
        10
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        24,
        10,
        13
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "else if ( s != v [ i ] )",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        24,
        13
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        25
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "cout << min ( ans , sum - ans , endl ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        25,
        10
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        25,
        10,
        13
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "else if ( s != v [ i ] )",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        25,
        13
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        13
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "else if ( s != v [ i ] )",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "if ( is == u [ i ] )",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        24
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( v [ 1 ] , 1 ) ) ;"
      ],
      "err_line": 24,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        8,
        24,
        25
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;"
      ],
      "err_line": 24,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        8,
        24,
        25,
        10
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 24,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        8,
        24,
        25,
        13
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        8,
        24,
        10
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 24,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        8,
        24,
        10,
        13
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "else if ( s != v [ i ] )",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        8,
        24,
        13
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        8,
        25
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;"
      ],
      "err_line": 25,
      "err_msg": "no matching function for call to ‘min(int&, int, <unresolved overloaded function type>)’"
    },
    {
      "mod_line": [
        8,
        25,
        10
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 25,
      "err_msg": "no matching function for call to ‘min(int&, int, <unresolved overloaded function type>)’"
    },
    {
      "mod_line": [
        8,
        25,
        10,
        13
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "else if ( s != v [ i ] )",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        8,
        25,
        13
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        8,
        10,
        13
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "else if ( s != v [ i ] )",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "if ( v [ i ] == u [ i ] ) return ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        24,
        25
      ],
      "mod_code": [
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;"
      ],
      "err_line": 24,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        24,
        25,
        10
      ],
      "mod_code": [
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 24,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        24,
        25,
        10,
        13
      ],
      "mod_code": [
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "else if ( s != v [ i ] )",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        24,
        25,
        13
      ],
      "mod_code": [
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        24,
        10
      ],
      "mod_code": [
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 24,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        24,
        10,
        13
      ],
      "mod_code": [
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "else if ( s != v [ i ] )",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        24,
        13
      ],
      "mod_code": [
        "dfs ( ( v [ 1 ] , 1 ) ) ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        25,
        10
      ],
      "mod_code": [
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "else if ( s != v [ i ] )"
      ],
      "err_line": 25,
      "err_msg": "no matching function for call to ‘min(int&, int, <unresolved overloaded function type>)’"
    },
    {
      "mod_line": [
        25,
        10,
        13
      ],
      "mod_code": [
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "else if ( s != v [ i ] )",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        25,
        13
      ],
      "mod_code": [
        "cout << min ( ans , sum - ans , endl ) << endl ;",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "else if ( s != v [ i ] )",
        "dfs ( ( u [ i ] , i ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "too few arguments to function ‘void dfs(int, int)’"
    }
  ]
}