{
  "meta": {
    "index": 1006,
    "hitid": "388FBO7JZRN5TWN60ISJUWDZ59MNYK",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "760A",
    "subid": "26098768"
  },
  "lines": [
    {
      "line": 0,
      "text": "integer as a [ 13 ] = 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31",
      "code": "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "integer as m , n",
      "code": "int m , n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read m , n",
      "code": "cin >> m >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "integer as ans = ( a [ m ] + n - 1 ) modulo 7",
      "code": "int ans = ( a [ m ] + n - 1 ) % 7 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if ans is greater than 0 then do the following",
      "code": "if ( ans > 0 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set ans to 1 + ( a [ m ] + n - 1 ) / 7",
      "code": "ans = 1 + ( a [ m ] + n - 1 ) / 7 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set ans to ( a [ m ] + n - 1 ) / 7",
      "code": "ans = ( a [ m ] + n - 1 ) / 7 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "output ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( ans > 0 )"
      ],
      "err_line": 7,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "int ans = ( a [ m ] + n - 1 ) + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        4,
        8
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "int ans = ( a [ m ] + n - 1 ) / 7 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        4,
        8,
        7
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        4,
        8,
        3
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        4,
        7
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        4,
        7,
        3
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "n",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        4,
        3
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "int ans = ( a [ m ] + n - 1 ) / 7 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        8,
        7
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        8,
        7,
        3
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "n",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        8,
        3
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        7,
        3
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "n",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 30 , 31 ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        8,
        0
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        8,
        0,
        7
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        8,
        0,
        3
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        8,
        7
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        8,
        7,
        3
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "n",
        "cin >> m >> m ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        0,
        7
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        0,
        7,
        3
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;",
        "n",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        0,
        3
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) + 7 ;",
        "n",
        "cin >> m >> m ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        0,
        7
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        0,
        7,
        3
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;",
        "n",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        0,
        3
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        7,
        3
      ],
      "mod_code": [
        "int ans = ( a [ m ] + n - 1 ) / 7 ;",
        "n",
        "cin >> m >> m ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        7,
        3
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;",
        "n",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int a [ 13 ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 ;",
        "cin >> m >> m ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘}’ before ‘;’ token"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "n",
        "cin >> m >> m ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}