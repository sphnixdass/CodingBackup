{
  "meta": {
    "index": 1204,
    "hitid": "33W1NHWFYHF3TZ2VT0GEH2ST0LAZTM",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "629A",
    "subid": "47540468"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "cnt = 0 = int",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s = 101x101 char matrix",
      "code": "char s [ 101 ] [ 101 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 1 to n inclusive , read s [ i ] [ j ]",
      "code": "for ( int j = 1 ; j <= n ; j ++ ) cin >> s [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 1 to n inclusive",
      "code": "for ( int j = 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if s [ i ] [ j ] = ' C '",
      "code": "if ( s [ i ] [ j ] == ' C ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "for u = i + 1 to n inclusive",
      "code": "for ( int u = i + 1 ; u <= n ; u ++ )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "if s [ u ] [ j ] = ' C ' then increment cnt",
      "code": "if ( s [ u ] [ j ] == ' C ' ) cnt ++ ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 13,
      "text": "for v = j + 1 to n inclusive",
      "code": "for ( int v = j + 1 ; v <= n ; v ++ )",
      "indent": 4
    },
    {
      "line": 14,
      "text": "if s [ i ] [ v ] = ' C ' then increment cnt",
      "code": "if ( s [ i ] [ v ] == ' C ' ) cnt ++ ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char s [ 110 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char s [ 50 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( u = i + 1 ; u <= n ; u ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( v = j + 1 ; v <= n ; v ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        10
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( u = i + 1 ; u <= n ; u ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        10,
        8
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        10,
        1
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        8
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        8,
        1
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( j = 1 ; j <= n ; j ++ )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        1
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( u = i + 1 ; u <= n ; u ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10,
        8
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10,
        8,
        1
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "for ( j = 1 ; j <= n ; j ++ )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10,
        1
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8,
        1
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "for ( j = 1 ; j <= n ; j ++ )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "char s [ 110 ] ;",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        10
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( u = i + 1 ; u <= n ; u ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        10,
        8
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        10,
        1
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        8
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        8,
        1
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( j = 1 ; j <= n ; j ++ )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13,
        1
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( u = i + 1 ; u <= n ; u ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10,
        8
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10,
        8,
        1
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "for ( j = 1 ; j <= n ; j ++ )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        10,
        1
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8,
        1
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "for ( j = 1 ; j <= n ; j ++ )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "char s [ 50 ] ;",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( u = i + 1 ; u <= n ; u ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10,
        8
      ],
      "mod_code": [
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10,
        8,
        1
      ],
      "mod_code": [
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "for ( j = 1 ; j <= n ; j ++ )",
        "bool n ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10,
        1
      ],
      "mod_code": [
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "bool n ;"
      ],
      "err_line": 10,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8,
        1
      ],
      "mod_code": [
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "for ( j = 1 ; j <= n ; j ++ )",
        "bool n ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "for ( v = j + 1 ; v <= n ; v ++ )",
        "bool n ;"
      ],
      "err_line": 13,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        1
      ],
      "mod_code": [
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "for ( j = 1 ; j <= n ; j ++ )",
        "bool n ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "for ( u = i + 1 ; u <= n ; u ++ )",
        "bool n ;"
      ],
      "err_line": 10,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "for ( j = 1 ; j <= n ; j ++ )",
        "bool n ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}