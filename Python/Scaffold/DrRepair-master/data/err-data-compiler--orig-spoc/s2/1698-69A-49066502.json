{
  "meta": {
    "index": 1698,
    "hitid": "379OL9DBSS8K4UJCZ89ECVIF0KW9YY",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "69A",
    "subid": "49066502"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , x , y , z , sum1 , sum2 , sum3 = integers with sum1 = 0 , sum2 = 0 , sum3 = 0",
      "code": "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum3 = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while n is not equal to 0",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "Read x , y , z",
      "code": "cin >> x >> y >> z ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set sum1 to sum1 + x",
      "code": "sum1 = sum1 + x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set sum2 to sum2 + y",
      "code": "sum2 = sum2 + y ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set sum3 to sum3 + z",
      "code": "sum3 = sum3 + z ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if sum1 is 0 and sum2 is 0 and sum3 is 0",
      "code": "if ( sum1 == 0 && sum2 == 0 && sum3 == 0 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print YES",
      "code": "cout << \" YES \"",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print a new line",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print NO",
      "code": "cout << \" NO \"",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print a new line",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> t ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "while ( n != 0 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        3,
        10
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "while ( n != 0 )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        3,
        10,
        11
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "while ( n != 0 )",
        "cout << \" YES \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        3,
        10,
        13
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "while ( n != 0 )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        3,
        10,
        14
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "while ( n != 0 )",
        "cout << \" YES \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        3,
        11
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "while ( n != 0 )",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        3,
        11,
        13
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "while ( n != 0 )",
        "cout << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        3,
        11,
        14
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "while ( n != 0 )",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        3,
        13
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "while ( n != 0 )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        14
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "while ( n != 0 )",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        3,
        14
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "while ( n != 0 )",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        10,
        11
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        10,
        11,
        13
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        10,
        11,
        14
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        10,
        13
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        10,
        13,
        14
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        10,
        14
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << \" YES \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        11,
        13
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        11,
        13,
        14
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        11,
        14
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        13,
        14
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int n , x , y , z , sum1 = 0 , sum2 = 0 , sum2 = 0 ;",
        "cout << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int sum2’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "while ( n != 0 )",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        13
      ],
      "mod_code": [
        "while ( n != 0 )",
        "cout << \" YES \" << endl ;",
        "cout << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        14
      ],
      "mod_code": [
        "while ( n != 0 )",
        "cout << \" YES \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        10,
        13
      ],
      "mod_code": [
        "while ( n != 0 )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        10,
        13,
        14
      ],
      "mod_code": [
        "while ( n != 0 )",
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        10,
        14
      ],
      "mod_code": [
        "while ( n != 0 )",
        "cout << \" YES \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "while ( n != 0 )",
        "cout << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        11,
        13
      ],
      "mod_code": [
        "while ( n != 0 )",
        "cout << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        11,
        13,
        14
      ],
      "mod_code": [
        "while ( n != 0 )",
        "cout << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        11,
        14
      ],
      "mod_code": [
        "while ( n != 0 )",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "while ( n != 0 )",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "while ( n != 0 )",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        11,
        13
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        13,
        14
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        13,
        14
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘cout’"
    }
  ]
}