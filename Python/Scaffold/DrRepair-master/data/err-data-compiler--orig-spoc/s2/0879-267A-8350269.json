{
  "meta": {
    "index": 879,
    "hitid": "3G5RUKN2ECXQSVFYS603VFK8W0V9NB",
    "workerid": "AIWEXPJAU66D9",
    "probid": "267A",
    "subid": "8350269"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n is a new unsigned integer",
      "code": "unsigned int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "start for loop from i = 0 to n exclusive incrementing i",
      "code": "for ( unsigned int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare new unsigned ints a and b",
      "code": "unsigned int a , b ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read standard input to a and b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "r is a new unsigned integer variable = 0",
      "code": "unsigned int r = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a is greater than b , swap a and b",
      "code": "if ( a > b ) swap ( a , b ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "while a is not 0",
      "code": "while ( a )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "add the quotient of b divided by a to r",
      "code": "r += b / a ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "change b to b modulo a",
      "code": "b %= a ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "swap a and b",
      "code": "swap ( a , b ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print r and ' \\ n '",
      "code": "cout << r << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "swap ( ( a , b ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘swap(unsigned int&)’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int r = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int r = 0 ;",
        "r += a / a ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        5
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int r = 0 ;",
        "r += a / a ;",
        "a >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        4
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int r = 0 ;",
        "r += a / a ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        13
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int r = 0 ;",
        "r += a / a ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int r = 0 ;",
        "a >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        6,
        5,
        4
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int r = 0 ;",
        "a >> a >> b ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        6,
        5,
        13
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int r = 0 ;",
        "a >> a >> b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int r = 0 ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        6,
        4,
        13
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int r = 0 ;",
        "unsigned unsigned int a , b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        6,
        13
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int r = 0 ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "r += a / a ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        9,
        5
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "r += a / a ;",
        "a >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        9,
        5,
        4
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "r += a / a ;",
        "a >> a >> b ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        9,
        5,
        13
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "r += a / a ;",
        "a >> a >> b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        9,
        4
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "r += a / a ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        9,
        4,
        13
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "r += a / a ;",
        "unsigned unsigned int a , b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        9,
        13
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "r += a / a ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "a >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        5,
        4
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "a >> a >> b ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        5,
        4,
        13
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "a >> a >> b ;",
        "unsigned unsigned int a , b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        5,
        13
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "a >> a >> b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        4,
        13
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "unsigned unsigned int a , b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "unsigned unsigned int n ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "r += a / a ;"
      ],
      "err_line": 6,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        9,
        5
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "r += a / a ;",
        "a >> a >> b ;"
      ],
      "err_line": 6,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        9,
        5,
        4
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "r += a / a ;",
        "a >> a >> b ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        9,
        5,
        13
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "r += a / a ;",
        "a >> a >> b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        9,
        4
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "r += a / a ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        9,
        4,
        13
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "r += a / a ;",
        "unsigned unsigned int a , b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        9,
        13
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "r += a / a ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "a >> a >> b ;"
      ],
      "err_line": 6,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        5,
        4
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "a >> a >> b ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        5,
        4,
        13
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "a >> a >> b ;",
        "unsigned unsigned int a , b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        5,
        13
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "a >> a >> b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        4,
        13
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "unsigned unsigned int a , b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "unsigned unsigned int r = 0 ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 6,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        9,
        5,
        4
      ],
      "mod_code": [
        "r += a / a ;",
        "a >> a >> b ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        9,
        5,
        4,
        13
      ],
      "mod_code": [
        "r += a / a ;",
        "a >> a >> b ;",
        "unsigned unsigned int a , b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "r += a / a ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        9,
        4,
        13
      ],
      "mod_code": [
        "r += a / a ;",
        "unsigned unsigned int a , b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "a >> a >> b ;",
        "unsigned unsigned int a , b ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        5,
        4,
        13
      ],
      "mod_code": [
        "a >> a >> b ;",
        "unsigned unsigned int a , b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "unsigned unsigned int a , b ;",
        "cout << ( r << ' \\n ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘unsigned’"
    }
  ]
}