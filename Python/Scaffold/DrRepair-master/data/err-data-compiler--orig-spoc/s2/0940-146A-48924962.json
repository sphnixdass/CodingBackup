{
  "meta": {
    "index": 940,
    "hitid": "3D5G8J4N5AYMKFXLS3RBWWFXCA0TVC",
    "workerid": "AIWEXPJAU66D9",
    "probid": "146A",
    "subid": "48924962"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let n , h1 , h2 , sum0 and sum1 be integers where sum0 and sum1 = 0",
      "code": "int n , h1 , h2 , sum0 = 0 , sum1 = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read standard input to n and str",
      "code": "cin >> n >> str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if value of str [ i ] is not ' 7 ' or ' 4 '",
      "code": "if ( str [ i ] != ' 4 ' && str [ i ] != ' 7 ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "change the value of h1 to n / 2",
      "code": "h1 = n / 2 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i from 0 to h1 exclusive , change the value of sum0 to str [ i ] - ' 0 ' + sum0",
      "code": "for ( int i = 0 ; i < h1 ; i ++ ) sum0 = str [ i ] - ' 0 ' + sum0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "in a for loop change i from h1 to n exclusive , setting sum1 to str [ i ] - ' 0 ' + sum1",
      "code": "for ( int i = h1 ; i < n ; i ++ ) sum1 = str [ i ] - ' 0 ' + sum1 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if sum0 = sum1",
      "code": "if ( sum0 == sum1 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }"
      ],
      "err_line": 12,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "n = n >> str ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( strstr ( str [ i ] ) != ' 7 ' )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ i ] - ' 0 ' + sum1 ; }"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        5,
        11
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "if ( str [ i ] != ' 7 ' || str [ i ] != ' 4 ' )",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5,
        11,
        12
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "if ( str [ i ] != ' 7 ' || str [ i ] != ' 4 ' )",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5,
        11,
        10
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "if ( str [ i ] != ' 7 ' || str [ i ] != ' 4 ' )",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "h1 *= 2 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5,
        12
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "if ( str [ i ] != ' 7 ' || str [ i ] != ' 4 ' )",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }"
      ],
      "err_line": 12,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        5,
        12,
        10
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "if ( str [ i ] != ' 7 ' || str [ i ] != ' 4 ' )",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "h1 *= 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11,
        12
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11,
        12,
        5
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "if ( strstr ( str [ i ] ) != ' 7 ' )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        2,
        11,
        12,
        10
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "h1 *= 2 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        11,
        5
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "if ( strstr ( str [ i ] ) != ' 7 ' )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        2,
        11,
        5,
        10
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "if ( strstr ( str [ i ] ) != ' 7 ' )",
        "h1 *= 2 ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        2,
        11,
        10
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "h1 *= 2 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }"
      ],
      "err_line": 12,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        12,
        5
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "if ( strstr ( str [ i ] ) != ' 7 ' )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        2,
        12,
        5,
        10
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "if ( strstr ( str [ i ] ) != ' 7 ' )",
        "h1 *= 2 ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        2,
        12,
        10
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "h1 *= 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "if ( strstr ( str [ i ] ) != ' 7 ' )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        2,
        5,
        10
      ],
      "mod_code": [
        "int n , h1 , h2 = 0 , sum0 = 0 , sum1 ;",
        "if ( strstr ( str [ i ] ) != ' 7 ' )",
        "h1 *= 2 ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' || str [ i ] != ' 4 ' )",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        11,
        12
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' || str [ i ] != ' 4 ' )",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        10
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' || str [ i ] != ' 4 ' )",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "h1 *= 2 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        11,
        10
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' || str [ i ] != ' 4 ' )",
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "h1 *= 2 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' || str [ i ] != ' 4 ' )",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }"
      ],
      "err_line": 12,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        12,
        10
      ],
      "mod_code": [
        "if ( str [ i ] != ' 7 ' || str [ i ] != ' 4 ' )",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "h1 *= 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        12,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "if ( strstr ( str [ i ] ) != ' 7 ' )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        11,
        12,
        5,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "if ( strstr ( str [ i ] ) != ' 7 ' )",
        "h1 *= 2 ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        11,
        12,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "h1 *= 2 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "if ( strstr ( str [ i ] ) != ' 7 ' )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        11,
        5,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "if ( strstr ( str [ i ] ) != ' 7 ' )",
        "h1 *= 2 ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < h1 ; i ++ ) sum0 [ i ] - ' 0 ' + sum0 + sum0 ;",
        "h1 *= 2 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "if ( strstr ( str [ i ] ) != ' 7 ' )"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        12,
        5,
        10
      ],
      "mod_code": [
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "if ( strstr ( str [ i ] ) != ' 7 ' )",
        "h1 *= 2 ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "for ( int i = h1 ; i < n ; i ++ ) { sum1 [ str [ i ] - ' 0 ' + sum1 ; }",
        "h1 *= 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "if ( strstr ( str [ i ] ) != ' 7 ' )",
        "h1 *= 2 ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘strstr(char&)’"
    }
  ]
}