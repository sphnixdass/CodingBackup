{
  "meta": {
    "index": 387,
    "hitid": "3KVQ0UJWPXFXE2M0HHE9FISX3GE5W5",
    "workerid": "A1AYVATMT88U1W",
    "probid": "215A",
    "subid": "47177010"
  },
  "lines": [
    {
      "line": 0,
      "text": "let n , m , mx , ans be integers",
      "code": "int n , m , mx , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = array of integers of length 200025 , b = array of integers of length 200025",
      "code": "int a [ 200025 ] , b [ 200025 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; ++ i ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to m inclusive , read b [ i ]",
      "code": "for ( int i = 1 ; i <= m ; ++ i ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; ++ j )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if float b [ j ] / a [ i ] is equal to int b [ j ] / a [ i ] and mx is less than b [ j ] / a [ i ] , mx is equal to b [ j ] / a [ i ]",
      "code": "if ( ( float ) b [ j ] / a [ i ] == ( int ) b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) { mx = b [ j ] / a [ i ] ; }",
      "indent": 3
    },
    {
      "line": 10,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; ++ j )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if float b [ j ] / a [ i ] is equal to int b [ j ] / a [ i ] and mx is equal to b [ j ] / a [ i ] , increment ans by 1",
      "code": "if ( ( float ) b [ j ] / a [ i ] == ( int ) b [ j ] / a [ i ] && mx == b [ j ] / a [ i ] ) ++ ans ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print ans and newline",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        9,
        12,
        8
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        8,
        3
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        8,
        1
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        9,
        12,
        3
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        9,
        12,
        3,
        1
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "n = getchar ( ) ;",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        9,
        12,
        1
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        3
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        3,
        1
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "n = getchar ( ) ;",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        9,
        8,
        3,
        12
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "n = getchar ( ) ;",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        1
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        9,
        8,
        1,
        12
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "int a [ 200025 ] , a [ 200025 ] ;",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        9,
        8,
        12
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        9,
        3,
        1
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "n = getchar ( ) ;",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        9,
        3,
        1,
        12
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "n = getchar ( ) ;",
        "int a [ 200025 ] , a [ 200025 ] ;",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        9,
        3,
        12
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "n = getchar ( ) ;",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        9,
        1,
        12
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "int a [ 200025 ] , a [ 200025 ] ;",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx < b [ j ] / a [ i ] ) mx = b [ j ] / a [ i ] ;",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8,
        3
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8,
        3,
        1
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "n = getchar ( ) ;",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        12,
        8,
        1
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "for ( j = 1 ; j <= m ; j ++ )",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        12,
        3,
        1
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "n = getchar ( ) ;",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "if ( b [ j ] / a [ i ] == int b [ j ] / a [ i ] && mx == b [ i ] / a [ i ] ) ans ++ ;",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        1
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "n = getchar ( ) ;",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        8,
        3,
        1,
        12
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "n = getchar ( ) ;",
        "int a [ 200025 ] , a [ 200025 ] ;",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        8,
        3,
        12
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "n = getchar ( ) ;",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        8,
        1,
        12
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "int a [ 200025 ] , a [ 200025 ] ;",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int a [ 200025 ] , a [ 200025 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        3,
        1,
        12
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int a [ 200025 ] , a [ 200025 ] ;",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int a [ 200025 ] , a [ 200025 ] ;",
        "if ( b [ j ] / a [ i ] == int ( b [ j ] / a [ i ] ) && mx == b [ i ] / a [ i ] ) ans ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int a [200025]’"
    }
  ]
}