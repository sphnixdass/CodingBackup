{
  "meta": {
    "index": 2589,
    "hitid": "3VQTAXTYN3FMBEE4NRQL0G7SSWYBUM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "83A",
    "subid": "46936537"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "new long long variable n",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create new vector of long longs v with size n filled with 0",
      "code": "vector < long long > v ( n , 0 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare vector of long longs sum with n elements filled with 0",
      "code": "vector < long long > sum ( n , 0 ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "in a for loop , change i from 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read standard input to v [ i ]",
      "code": "cin >> v [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if i > 0 and v [ i - 1 ] = v [ i ] , change sum [ i ] to the sum of sum [ i ] and sum [ i - 1 ]",
      "code": "if ( i > 0 && v [ i - 1 ] == v [ i ] ) sum [ i ] += sum [ i - 1 ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment sum [ i ] by one",
      "code": "sum [ i ] ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create long long variable with name ans = 0",
      "code": "long long ans = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "start for loop from i = 0 to n exclusive incrementing i",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if i > 0 and v [ i ] = v [ i - 1 ] , change ans to ans + sum [ i - 1 ]",
      "code": "if ( i > 0 && v [ i ] == v [ i - 1 ] ) { ans += sum [ i - 1 ] ; }",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "v >> v [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "sum [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "vector < long long > sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "vector < long long > sum = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        5
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "vector < long long > sum = 0 ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        13
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "vector < long long > sum = 0 ;",
        "n = getchar ( ) ;",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        11
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "vector < long long > sum = 0 ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "vector < long long > sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        13
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "vector < long long > sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        11
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "vector < long long > sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        4,
        13
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "vector < long long > sum = 0 ;",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        4,
        13,
        11
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "vector < long long > sum = 0 ;",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "vector < long long > sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        2,
        5,
        13
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        2,
        5,
        11
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        2,
        13
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "n = getchar ( ) ;",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        2,
        13,
        11
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "n = getchar ( ) ;",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        2,
        11
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        5,
        13
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        5,
        13,
        11
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        13,
        11
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "vector < long long > v ( n filled 0 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘filled’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        2,
        5
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        2,
        5,
        13
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        2,
        5,
        11
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        2,
        13
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "n = getchar ( ) ;",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        2,
        13,
        11
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "n = getchar ( ) ;",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        2,
        11
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        5,
        13
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        5,
        13,
        11
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        5,
        11
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        13,
        11
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "vector < long long > sum = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        13
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        13,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "if ( i > 0 && v [ i ] == v [ i - 1 ] ) ans ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}