{
  "meta": {
    "index": 494,
    "hitid": "3NFWQRSHVE8TJDPP8ON0FRXMYM7GF5",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "261A",
    "subid": "47840294"
  },
  "lines": [
    {
      "line": 0,
      "text": "integer array = a size 100005",
      "code": "int a [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer array = b size 100005",
      "code": "int b [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "integers = n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for h = 0 to less than m input array a",
      "code": "for ( int h = 0 ; h < m ; h ++ ) cin >> a [ h ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for h = 0 to less than n input array b",
      "code": "for ( int h = 0 ; h < n ; h ++ ) cin >> b [ h ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "sort the values of a to a + m",
      "code": "sort ( a , a + m ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "sort the values of b to b + n",
      "code": "sort ( b , b + n ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "reverse the order of b to b + n",
      "code": "reverse ( b , b + n ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "integer dis = a [ 0 ]",
      "code": "int dis = a [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "integer an = 0",
      "code": "int an = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "integers ct = 0",
      "code": "int ct = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for h = 0 to less than n ) do the following",
      "code": "for ( int h = 0 ; h < n ; )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "an equals an plus b [ h ]",
      "code": "an += b [ h ] ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "add one to ct",
      "code": "ct ++ ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if ct is greater than or equal to dis then do the following",
      "code": "if ( ct >= dis )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set ct to 0",
      "code": "ct = 0 ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "h equals h plus 3",
      "code": "h += 3 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "add one to h",
      "code": "h ++ ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "output an",
      "code": "cout << an << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "sort ( a + a + m ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [100005]’ and ‘int [100005]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "sort ( b + b + n ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [100005]’ and ‘int [100005]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int an [ 0 ] ;"
      ],
      "err_line": 15,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( h = 0 ; h < n ; h ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int an += b [ h ] ;"
      ],
      "err_line": 15,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "while ( ct >= dis )"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        23,
        17
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "cout << \" an \" ;",
        "while ( ct >= dis )"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        23,
        17,
        20
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "cout << \" an \" ;",
        "while ( ct >= dis )",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        23,
        17,
        19
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "cout << \" an \" ;",
        "while ( ct >= dis )",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        14,
        23,
        20
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "cout << \" an \" ;",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        23,
        20,
        19
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "cout << \" an \" ;",
        "n",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        14,
        23,
        19
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "cout << \" an \" ;",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "while ( ct >= dis )"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        17,
        20
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "while ( ct >= dis )",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        17,
        20,
        19
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "while ( ct >= dis )",
        "n",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        14,
        17,
        19
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "while ( ct >= dis )",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        20,
        19
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "n",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "for ( int h = 0 ; h < n ; h ++ )",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        23,
        17
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "while ( ct >= dis )"
      ],
      "err_line": 20,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        23,
        17,
        14
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "while ( ct >= dis )",
        "for ( h = 0 ; h < n ; h ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        17,
        14,
        20
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "while ( ct >= dis )",
        "for ( h = 0 ; h < n ; h ++ )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        17,
        14,
        19
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "while ( ct >= dis )",
        "for ( h = 0 ; h < n ; h ++ )",
        "h = h plus 3 ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        17,
        20
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "while ( ct >= dis )",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        17,
        20,
        19
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "while ( ct >= dis )",
        "n",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        23,
        17,
        19
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "while ( ct >= dis )",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        23,
        14
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "for ( h = 0 ; h < n ; h ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        14,
        20
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "for ( h = 0 ; h < n ; h ++ )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        14,
        20,
        19
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "for ( h = 0 ; h < n ; h ++ )",
        "n",
        "h = h plus 3 ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        14,
        19
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "for ( h = 0 ; h < n ; h ++ )",
        "h = h plus 3 ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        20
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        20,
        19
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "n",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        23,
        19
      ],
      "mod_code": [
        "cout << \" an \" ;",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        17,
        14
      ],
      "mod_code": [
        "while ( ct >= dis )",
        "for ( h = 0 ; h < n ; h ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        14,
        20
      ],
      "mod_code": [
        "while ( ct >= dis )",
        "for ( h = 0 ; h < n ; h ++ )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        14,
        20,
        19
      ],
      "mod_code": [
        "while ( ct >= dis )",
        "for ( h = 0 ; h < n ; h ++ )",
        "n",
        "h = h plus 3 ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        14,
        19
      ],
      "mod_code": [
        "while ( ct >= dis )",
        "for ( h = 0 ; h < n ; h ++ )",
        "h = h plus 3 ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "while ( ct >= dis )",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        20,
        19
      ],
      "mod_code": [
        "while ( ct >= dis )",
        "n",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "while ( ct >= dis )",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "for ( h = 0 ; h < n ; h ++ )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        20,
        19
      ],
      "mod_code": [
        "for ( h = 0 ; h < n ; h ++ )",
        "n",
        "h = h plus 3 ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "for ( h = 0 ; h < n ; h ++ )",
        "h = h plus 3 ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘h’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        19
      ],
      "mod_code": [
        "n",
        "h = h plus 3 ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘plus’"
    }
  ]
}