{
  "meta": {
    "index": 2103,
    "hitid": "31S7M7DAGGKJOALREZP59NHVLCWLTJ",
    "workerid": "A2O34N3Y3RJLJ6",
    "probid": "615A",
    "subid": "48871547"
  },
  "lines": [
    {
      "line": 0,
      "text": "define 101 - element int arrays num , flag",
      "code": "int num [ 101 ] , flag [ 101 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "define ints n , m , x , no , and signal , setting signal to 0",
      "code": "int n , m , x , no , signal = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while n , decrement n",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read into x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "while postdecremented x",
      "code": "while ( x -- )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read no",
      "code": "cin >> no ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set flag [ no ] to 1",
      "code": "flag [ no ] = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for int i from 1 to m by 1",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if flag [ i ] is 0",
      "code": "if ( flag [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "assign 1 to signal",
      "code": "signal = 1 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "break out of loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if ! signal",
      "code": "if ( ! signal )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" YES \" and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "otherwise",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" NO \" and a newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "while ( postdecremented )"
      ],
      "err_line": 6,
      "err_msg": "‘postdecremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "getline ( cin , x ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> a ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "* signal = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( ! l )"
      ],
      "err_line": 17,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 19,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "while ( postdecremented )",
        "if ( ! n )"
      ],
      "err_line": 6,
      "err_msg": "‘postdecremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        12
      ],
      "mod_code": [
        "while ( postdecremented )",
        "if ( ! n )",
        "if ( flag [ i ] == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘postdecremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        12,
        13
      ],
      "mod_code": [
        "while ( postdecremented )",
        "if ( ! n )",
        "if ( flag [ i ] == ' 0 ' )",
        "* signal = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘postdecremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        13
      ],
      "mod_code": [
        "while ( postdecremented )",
        "if ( ! n )",
        "* signal = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘postdecremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "while ( postdecremented )",
        "if ( flag [ i ] == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘postdecremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        17
      ],
      "mod_code": [
        "while ( postdecremented )",
        "if ( flag [ i ] == ' 0 ' )",
        "if ( ! l )"
      ],
      "err_line": 6,
      "err_msg": "‘postdecremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        17,
        13
      ],
      "mod_code": [
        "while ( postdecremented )",
        "if ( flag [ i ] == ' 0 ' )",
        "if ( ! l )",
        "* signal = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘postdecremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        13
      ],
      "mod_code": [
        "while ( postdecremented )",
        "if ( flag [ i ] == ' 0 ' )",
        "* signal = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘postdecremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "while ( postdecremented )",
        "if ( ! l )"
      ],
      "err_line": 6,
      "err_msg": "‘postdecremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        13
      ],
      "mod_code": [
        "while ( postdecremented )",
        "if ( ! l )",
        "* signal = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘postdecremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "while ( postdecremented )",
        "* signal = 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘postdecremented’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        6,
        12,
        13
      ],
      "mod_code": [
        "if ( ! n )",
        "while ( cin >> x )",
        "if ( flag [ i ] == ' 0 ' )",
        "* signal = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        17,
        6,
        13
      ],
      "mod_code": [
        "if ( ! n )",
        "while ( cin >> x )",
        "* signal = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        17,
        12,
        13
      ],
      "mod_code": [
        "if ( ! n )",
        "if ( flag [ i ] == ' 0 ' )",
        "* signal = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        17,
        13
      ],
      "mod_code": [
        "if ( ! n )",
        "* signal = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        12,
        17
      ],
      "mod_code": [
        "while ( cin >> x )",
        "if ( flag [ i ] == ' 0 ' )",
        "if ( ! l )"
      ],
      "err_line": 17,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        17,
        13
      ],
      "mod_code": [
        "while ( cin >> x )",
        "if ( flag [ i ] == ' 0 ' )",
        "if ( ! l )",
        "* signal = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        12,
        13
      ],
      "mod_code": [
        "while ( cin >> x )",
        "if ( flag [ i ] == ' 0 ' )",
        "* signal = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "while ( cin >> x )",
        "if ( ! l )"
      ],
      "err_line": 17,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        13
      ],
      "mod_code": [
        "while ( cin >> x )",
        "if ( ! l )",
        "* signal = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "while ( cin >> x )",
        "* signal = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "if ( flag [ i ] == ' 0 ' )",
        "if ( ! l )"
      ],
      "err_line": 17,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17,
        13
      ],
      "mod_code": [
        "if ( flag [ i ] == ' 0 ' )",
        "if ( ! l )",
        "* signal = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "if ( flag [ i ] == ' 0 ' )",
        "* signal = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        17,
        13
      ],
      "mod_code": [
        "if ( ! l )",
        "* signal = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    }
  ]
}