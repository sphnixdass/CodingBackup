{
  "meta": {
    "index": 1884,
    "hitid": "3FCO4VKOZ47IK6ESKAZ0RWZTNI9E7I",
    "workerid": "AIWEXPJAU66D9",
    "probid": "460A",
    "subid": "48874009"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare int variables n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read user input to n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n is less than m",
      "code": "if ( n < m )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print n",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integer d with value n / m",
      "code": "int d = n / m ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "t is a new integer variable with value d + n",
      "code": "int t = d + n ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "create integer d2 = t / m",
      "code": "int d2 = t / m ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "while d2 - d is not 0",
      "code": "while ( ( d2 - d ) != 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "change t to the sum of t and ( d2 - d )",
      "code": "t += ( d2 - d ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "declare integer variable temp",
      "code": "int temp ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "change temp to d2",
      "code": "temp = d2 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "assign temp to d",
      "code": "d = temp ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set d2 to t / m",
      "code": "d2 = t / m ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print t",
      "code": "cout << t << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "t = d + n ;"
      ],
      "err_line": 8,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "temp to d2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "int d = temp ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        6,
        1
      ],
      "mod_code": [
        "int d = temp ;",
        "n",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        6,
        1,
        3
      ],
      "mod_code": [
        "int d = temp ;",
        "n",
        "int n and m ;",
        "if ( n <= m )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        6,
        1,
        4
      ],
      "mod_code": [
        "int d = temp ;",
        "n",
        "int n and m ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        6,
        1,
        13
      ],
      "mod_code": [
        "int d = temp ;",
        "n",
        "int n and m ;",
        "temp to d2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        6,
        3
      ],
      "mod_code": [
        "int d = temp ;",
        "n",
        "if ( n <= m )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        6,
        3,
        4
      ],
      "mod_code": [
        "int d = temp ;",
        "n",
        "if ( n <= m )",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        6,
        3,
        13
      ],
      "mod_code": [
        "int d = temp ;",
        "n",
        "if ( n <= m )",
        "temp to d2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        6,
        4
      ],
      "mod_code": [
        "int d = temp ;",
        "n",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        6,
        4,
        13
      ],
      "mod_code": [
        "int d = temp ;",
        "n",
        "cin >> n ;",
        "temp to d2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        6,
        13
      ],
      "mod_code": [
        "int d = temp ;",
        "n",
        "temp to d2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "int d = temp ;",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        1,
        3
      ],
      "mod_code": [
        "int d = temp ;",
        "int n and m ;",
        "if ( n <= m )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        1,
        3,
        4
      ],
      "mod_code": [
        "int d = temp ;",
        "int n and m ;",
        "if ( n <= m )",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        1,
        3,
        13
      ],
      "mod_code": [
        "int d = temp ;",
        "int n and m ;",
        "if ( n <= m )",
        "temp to d2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        1,
        4
      ],
      "mod_code": [
        "int d = temp ;",
        "int n and m ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        1,
        4,
        13
      ],
      "mod_code": [
        "int d = temp ;",
        "int n and m ;",
        "cin >> n ;",
        "temp to d2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        1,
        13
      ],
      "mod_code": [
        "int d = temp ;",
        "int n and m ;",
        "temp to d2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        3,
        4,
        13
      ],
      "mod_code": [
        "int d = temp ;",
        "if ( n <= m )",
        "cin >> n ;",
        "temp to d2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        14,
        3,
        13
      ],
      "mod_code": [
        "int d = temp ;",
        "if ( n <= m )",
        "temp to d2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        14,
        4,
        13
      ],
      "mod_code": [
        "int d = temp ;",
        "cin >> n ;",
        "temp to d2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "int d = temp ;",
        "temp to d2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "n",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "n",
        "int n and m ;",
        "if ( n <= m )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        4
      ],
      "mod_code": [
        "n",
        "int n and m ;",
        "if ( n <= m )",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        13
      ],
      "mod_code": [
        "n",
        "int n and m ;",
        "if ( n <= m )",
        "temp to d2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        4
      ],
      "mod_code": [
        "n",
        "int n and m ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        4,
        13
      ],
      "mod_code": [
        "n",
        "int n and m ;",
        "cin >> n ;",
        "temp to d2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        1,
        13
      ],
      "mod_code": [
        "n",
        "int n and m ;",
        "temp to d2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "n",
        "if ( n <= m )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "n",
        "if ( n <= m )",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        3,
        4,
        13
      ],
      "mod_code": [
        "n",
        "if ( n <= m )",
        "cin >> n ;",
        "temp to d2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        3,
        13
      ],
      "mod_code": [
        "n",
        "if ( n <= m )",
        "temp to d2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "n",
        "cin >> n ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        4,
        13
      ],
      "mod_code": [
        "n",
        "cin >> n ;",
        "temp to d2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "n",
        "temp to d2 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n and m ;",
        "if ( n <= m )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int n and m ;",
        "if ( n <= m )",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        13
      ],
      "mod_code": [
        "int n and m ;",
        "if ( n <= m )",
        "cin >> n ;",
        "temp to d2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        3,
        13
      ],
      "mod_code": [
        "int n and m ;",
        "if ( n <= m )",
        "temp to d2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n and m ;",
        "cin >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        4,
        13
      ],
      "mod_code": [
        "int n and m ;",
        "cin >> n ;",
        "temp to d2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int n and m ;",
        "temp to d2 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        3,
        4,
        13
      ],
      "mod_code": [
        "if ( n <= m )",
        "cin >> n ;",
        "temp to d2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "if ( n <= m )",
        "temp to d2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "cin >> n ;",
        "temp to d2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘to’"
    }
  ]
}