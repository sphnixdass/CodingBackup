{
  "meta": {
    "index": 2113,
    "hitid": "36FQTHX3Z3L2CK1L87UKD7HSFJ63BY",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "615A",
    "subid": "48206351"
  },
  "lines": [
    {
      "line": 0,
      "text": "maxn = constant integer = 10005",
      "code": "const int maxn = 10005 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = integer array of size maxn",
      "code": "int a [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "set all contents of a to 0",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "n , m , d , b = integers",
      "code": "int n , m , d , b ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "flag = integer = 0",
      "code": "int flag = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read d",
      "code": "cin >> d ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for j = 1 to d inclusive",
      "code": "for ( int j = 1 ; j <= d ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "read b",
      "code": "cin >> b ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "a [ b ] = 1",
      "code": "a [ b ] = 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 1 to m inclusive",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if a [ i ] is 0 , then flag = 1",
      "code": "if ( a [ i ] == 0 ) { flag = 1 ; }",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if flag is 1",
      "code": "if ( flag == 1 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int * a [ maxn ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( j = 1 ; j <= d ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        0
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "flag = 0 ;",
        "const int maxn = 1e9 ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        0,
        1
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "flag = 0 ;",
        "const int maxn = 1e9 ;",
        "int * a [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        0,
        14
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "flag = 0 ;",
        "const int maxn = 1e9 ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        0,
        8
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "flag = 0 ;",
        "const int maxn = 1e9 ;",
        "d = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        1
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "flag = 0 ;",
        "int * a [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        1,
        14
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "flag = 0 ;",
        "int * a [ maxn ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        1,
        8
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "flag = 0 ;",
        "int * a [ maxn ] ;",
        "d = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        14
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "flag = 0 ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        14,
        8
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "flag = 0 ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "d = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        8
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "flag = 0 ;",
        "d = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        0,
        1
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "const int maxn = 1e9 ;",
        "int * a [ maxn ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        0,
        1,
        14
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "const int maxn = 1e9 ;",
        "int * a [ maxn ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        0,
        1,
        8
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "const int maxn = 1e9 ;",
        "int * a [ maxn ] ;",
        "d = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        0,
        14
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "const int maxn = 1e9 ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        0,
        14,
        8
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "const int maxn = 1e9 ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "d = getchar ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "int * a [ maxn ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        1,
        14
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "int * a [ maxn ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        1,
        14,
        8
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "int * a [ maxn ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "d = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        1,
        8
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "int * a [ maxn ] ;",
        "d = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        14,
        8
      ],
      "mod_code": [
        "b = getchar ( ) ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "d = getchar ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "flag = 0 ;",
        "const int maxn = 1e9 ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "const int maxn = 1e9 ;",
        "int * a [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        1,
        14
      ],
      "mod_code": [
        "flag = 0 ;",
        "const int maxn = 1e9 ;",
        "int * a [ maxn ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        1,
        8
      ],
      "mod_code": [
        "flag = 0 ;",
        "const int maxn = 1e9 ;",
        "int * a [ maxn ] ;",
        "d = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        14
      ],
      "mod_code": [
        "flag = 0 ;",
        "const int maxn = 1e9 ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        14,
        8
      ],
      "mod_code": [
        "flag = 0 ;",
        "const int maxn = 1e9 ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "d = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0,
        8
      ],
      "mod_code": [
        "flag = 0 ;",
        "const int maxn = 1e9 ;",
        "d = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "flag = 0 ;",
        "int * a [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        14
      ],
      "mod_code": [
        "flag = 0 ;",
        "int * a [ maxn ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        14,
        8
      ],
      "mod_code": [
        "flag = 0 ;",
        "int * a [ maxn ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "d = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1,
        8
      ],
      "mod_code": [
        "flag = 0 ;",
        "int * a [ maxn ] ;",
        "d = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14,
        8
      ],
      "mod_code": [
        "flag = 0 ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "d = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "flag = 0 ;",
        "d = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "const int maxn = 1e9 ;",
        "int * a [ maxn ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        1,
        14
      ],
      "mod_code": [
        "const int maxn = 1e9 ;",
        "int * a [ maxn ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        1,
        14,
        8
      ],
      "mod_code": [
        "const int maxn = 1e9 ;",
        "int * a [ maxn ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "d = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        1,
        8
      ],
      "mod_code": [
        "const int maxn = 1e9 ;",
        "int * a [ maxn ] ;",
        "d = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "const int maxn = 1e9 ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        14,
        8
      ],
      "mod_code": [
        "const int maxn = 1e9 ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "d = getchar ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int * a [ maxn ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14,
        8
      ],
      "mod_code": [
        "int * a [ maxn ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "d = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int * a [ maxn ] ;",
        "d = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "d = getchar ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}