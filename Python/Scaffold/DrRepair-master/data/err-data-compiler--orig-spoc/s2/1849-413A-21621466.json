{
  "meta": {
    "index": 1849,
    "hitid": "3MQKOF1EE2ISIF1TWNWSDUGPGXJDWS",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "413A",
    "subid": "21621466"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n , m , mx , mn , t , set ma = - 1 , mi = 101",
      "code": "int n , m , ma = - 1 , mi = 101 , mx , mn , t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , m , mn and max",
      "code": "cin >> n >> m >> mn >> mx ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to m exclusive , read t , set ma = max ( t , ma ) , mi = min ( t , mi )",
      "code": "for ( int i = 0 ; i < m ; i ++ ) cin >> t , ma = max ( t , ma ) , mi = min ( t , mi ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if mi < mn or ma > mx",
      "code": "if ( mi < mn || ma > mx )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print Incorrect",
      "code": "cout << \" Incorrect \" << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "li = 0",
      "code": "int li = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if mi different from mn , increment li",
      "code": "if ( mi != mn ) li ++ ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if ma different from mx , add 1 to li",
      "code": "if ( ma != mx ) li ++ ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if n - m > = li",
      "code": "if ( n - m >= li )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print Correct",
      "code": "cout << \" Correct \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print Incorrect",
      "code": "cout << \" Incorrect \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << Incorrect << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘Incorrect’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << Correct << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << Incorrect << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Incorrect’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , mx = 101 , mn = - 1 , mi = 101 ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> m , mn >> max ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "li = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘li’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cin >> n >> m >> mn >> max ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cin >> n >> m >> mn >> max ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        5
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cin >> n >> m >> mn >> max ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        12
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cin >> n >> m >> mn >> max ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        14
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cin >> n >> m >> mn >> max ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cin >> n >> m >> mn >> max ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        12
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cin >> n >> m >> mn >> max ;",
        "cout << Incorrect << endl ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        14
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cin >> n >> m >> mn >> max ;",
        "cout << Incorrect << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        1,
        2,
        12
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cin >> n >> m >> mn >> max ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        1,
        2,
        12,
        14
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cin >> n >> m >> mn >> max ;",
        "cout << Correct << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        1,
        2,
        14
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cin >> n >> m >> mn >> max ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        12
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        14
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        12
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        12,
        14
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Correct << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        14
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        12
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cout << Incorrect << endl ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        12,
        14
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cout << Incorrect << endl ;",
        "cout << Correct << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        14
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cout << Incorrect << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        14
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cout << Correct << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int n , m , mx = - 1 , mn = - 1 , mi = 101 ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        12
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        14
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        3,
        12
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        3,
        12,
        14
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Correct << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        3,
        14
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        5,
        12
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "cout << Incorrect << endl ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        5,
        12,
        14
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "cout << Incorrect << endl ;",
        "cout << Correct << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        5,
        14
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "cout << Incorrect << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        12,
        14
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "cout << Correct << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "cin >> n >> m >> mn >> max ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘<unresolved overloaded function type>’)"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        3,
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        3,
        5,
        12,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;",
        "cout << Correct << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        3,
        5,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        3,
        12,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Correct << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cin >> min ( t , ma ) , mi = min ( t , ma ) , mi = min ( t , mi ) ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const int’)"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "cout << Incorrect << endl ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘Incorrect’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        14
      ],
      "mod_code": [
        "cout << Incorrect << endl ;",
        "cout << Correct << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘Incorrect’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "cout << Incorrect << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘Incorrect’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "cout << Correct << endl ;",
        "cout << Incorrect << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘Correct’ was not declared in this scope"
    }
  ]
}