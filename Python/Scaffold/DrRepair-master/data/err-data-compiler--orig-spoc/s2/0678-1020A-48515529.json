{
  "meta": {
    "index": 678,
    "hitid": "3LOJFQ4BOX91NF7C79DPPJMUTQ5DKR",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1020A",
    "subid": "48515529"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer INF = 0x3f3f3f3f",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare constant double PI = acosign of - 1 . 0",
      "code": "const double PI = acos ( - 1.0 ) ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare integers n , h , a , b , k",
      "code": "int n , h , a , b , k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n read h read a read b read k",
      "code": "cin >> n >> h >> a >> b >> k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to k exclusive",
      "code": "for ( int i = 0 ; i < k ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare integers ta , fa , tb , fb , ans = 0",
      "code": "int ta , fa , tb , fb , ans = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read ta and fa and tb and fb",
      "code": "cin >> ta >> fa >> tb >> fb ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if ta is tb",
      "code": "if ( ta == tb )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print absolute value of ( fa - fb ) , newline",
      "code": "cout << abs ( fa - fb ) << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "end loop iteration",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "declare integer ff = fa",
      "code": "int ff = fa ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if fa is greater than b or fa is less than a",
      "code": "if ( fa > b or fa < a )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment ans by minimum of ( absolute value of ( fa - a ) and absolute value of ( fa - b ) )",
      "code": "ans += min ( abs ( fa - a ) , abs ( fa - b ) ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if absolute value of ( fa - a ) is less than absolute value of ( fa - b )",
      "code": "if ( abs ( fa - a ) < abs ( fa - b ) )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "let ff be a",
      "code": "ff = a ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 18,
      "text": "let ff be b",
      "code": "ff = b ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "increment ans by absolute value of ( ta - tb )",
      "code": "ans += abs ( ta - tb ) ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "increment ans by absolute value of ( ff - fb )",
      "code": "ans += abs ( ff - fb ) ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print ans , newline",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n , h , a + b , k ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> n >> h read a >> b >> k ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘read’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        14
      ],
      "mod_code": [
        "n",
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17,
        14,
        10
      ],
      "mod_code": [
        "n",
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "break ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17,
        14,
        10,
        12
      ],
      "mod_code": [
        "n",
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "break ;",
        "int ff = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17,
        14,
        10,
        18
      ],
      "mod_code": [
        "n",
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "break ;",
        "int ff = b ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17,
        14,
        10,
        9
      ],
      "mod_code": [
        "n",
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "break ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17,
        14,
        12
      ],
      "mod_code": [
        "n",
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "int ff = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17,
        14,
        12,
        18
      ],
      "mod_code": [
        "n",
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "int ff = 1 ;",
        "int ff = b ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17,
        14,
        12,
        9
      ],
      "mod_code": [
        "n",
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "int ff = 1 ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17,
        14,
        18
      ],
      "mod_code": [
        "n",
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "int ff = b ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17,
        14,
        18,
        9
      ],
      "mod_code": [
        "n",
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "int ff = b ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17,
        14,
        9
      ],
      "mod_code": [
        "n",
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        17,
        10
      ],
      "mod_code": [
        "n",
        "break ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        10,
        12
      ],
      "mod_code": [
        "n",
        "break ;",
        "int ff = 1 ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        10,
        12,
        18
      ],
      "mod_code": [
        "n",
        "break ;",
        "int ff = 1 ;",
        "int ff = b ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        10,
        12,
        9
      ],
      "mod_code": [
        "n",
        "break ;",
        "int ff = 1 ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        10,
        18
      ],
      "mod_code": [
        "n",
        "break ;",
        "int ff = b ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        10,
        18,
        9
      ],
      "mod_code": [
        "n",
        "break ;",
        "int ff = b ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        10,
        9
      ],
      "mod_code": [
        "n",
        "break ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        12
      ],
      "mod_code": [
        "n",
        "int ff = 1 ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        12,
        18
      ],
      "mod_code": [
        "n",
        "int ff = 1 ;",
        "int ff = b ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        12,
        18,
        9
      ],
      "mod_code": [
        "n",
        "int ff = 1 ;",
        "int ff = b ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        12,
        9
      ],
      "mod_code": [
        "n",
        "int ff = 1 ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "n",
        "int ff = b ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        18,
        9
      ],
      "mod_code": [
        "n",
        "int ff = b ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        9
      ],
      "mod_code": [
        "n",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "break ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        10,
        12
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "break ;",
        "int ff = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        10,
        12,
        18
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "break ;",
        "int ff = 1 ;",
        "int ff = b ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        10,
        12,
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "break ;",
        "int ff = 1 ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        10,
        18
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "break ;",
        "int ff = b ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        10,
        18,
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "break ;",
        "int ff = b ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        10,
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "break ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "int ff = 1 ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        12,
        18
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "int ff = 1 ;",
        "int ff = b ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        12,
        18,
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "int ff = 1 ;",
        "int ff = b ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        12,
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "int ff = 1 ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "int ff = b ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        18,
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "int ff = b ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fa - a ) ) , abs ( fa - b ) ;",
        "cout << abs ( fa - fb ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int)’"
    }
  ]
}