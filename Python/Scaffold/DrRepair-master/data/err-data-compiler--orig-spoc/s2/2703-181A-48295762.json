{
  "meta": {
    "index": 2703,
    "hitid": "3VP28W7DUNETAUKUYGBP0YDS8P1ZF2",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "181A",
    "subid": "48295762"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "set row = 0 and col equal to 0",
      "code": "int row = 0 , col = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create int r and c",
      "code": "int r , c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read r , c",
      "code": "cin >> r >> c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for k = 0 , i = 0 to r exclusive",
      "code": "for ( int i = 0 , k = 0 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to x exclusive",
      "code": "for ( int j = 0 ; j < c ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "create char a",
      "code": "char a ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if a = *",
      "code": "if ( a == ' * ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "row = row ^ i",
      "code": "row ^= i ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "assign col ^ j to col",
      "code": "col ^= j ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print row + 1 , \" \" , col + 1",
      "code": "cout << row + 1 << \" \" << col + 1 << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "row = 0 , col = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘row’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int r = c ;"
      ],
      "err_line": 2,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int k = 0 ; k < r ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < x ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char ans ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "getline ( cin , a ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char&)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( a == \" * \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "for ( int j = 0 ; j < x ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "for ( int j = 0 ; j < x ; j ++ )",
        "row *= i ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        10
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "for ( int j = 0 ; j < x ; j ++ )",
        "row *= i ;",
        "col = ( col * j ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        8
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "for ( int j = 0 ; j < x ; j ++ )",
        "row *= i ;",
        "if ( a == \" * \" )"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        3
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "for ( int j = 0 ; j < x ; j ++ )",
        "row *= i ;",
        "cin >> r >> r ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "for ( int j = 0 ; j < x ; j ++ )",
        "col = ( col * j ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        8
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "for ( int j = 0 ; j < x ; j ++ )",
        "col = ( col * j ) ;",
        "if ( a == \" * \" )"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        10,
        3
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "for ( int j = 0 ; j < x ; j ++ )",
        "col = ( col * j ) ;",
        "cin >> r >> r ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "for ( int j = 0 ; j < x ; j ++ )",
        "if ( a == \" * \" )"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        3
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "for ( int j = 0 ; j < x ; j ++ )",
        "if ( a == \" * \" )",
        "cin >> r >> r ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "for ( int j = 0 ; j < x ; j ++ )",
        "cin >> r >> r ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        10,
        8
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "row *= i ;",
        "col = ( col * j ) ;",
        "if ( a == \" * \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        8
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "row *= i ;",
        "if ( a == \" * \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9,
        8,
        3
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "row *= i ;",
        "if ( a == \" * \" )",
        "cin >> r >> r ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        8
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "col = ( col * j ) ;",
        "if ( a == \" * \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        8,
        3
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "col = ( col * j ) ;",
        "if ( a == \" * \" )",
        "cin >> r >> r ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "if ( a == \" * \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8,
        3
      ],
      "mod_code": [
        "for ( int k = 0 , i = 0 ; k < r ; k ++ )",
        "if ( a == \" * \" )",
        "cin >> r >> r ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "row *= i ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        10
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "row *= i ;",
        "col = ( col * j ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "row *= i ;",
        "col = ( col * j ) ;",
        "if ( a == \" * \" )"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        3
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "row *= i ;",
        "col = ( col * j ) ;",
        "cin >> r >> r ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "row *= i ;",
        "if ( a == \" * \" )"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        8,
        3
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "row *= i ;",
        "if ( a == \" * \" )",
        "cin >> r >> r ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        3
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "row *= i ;",
        "cin >> r >> r ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "col = ( col * j ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "col = ( col * j ) ;",
        "if ( a == \" * \" )"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        8,
        3
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "col = ( col * j ) ;",
        "if ( a == \" * \" )",
        "cin >> r >> r ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        3
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "col = ( col * j ) ;",
        "cin >> r >> r ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "if ( a == \" * \" )"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        3
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "if ( a == \" * \" )",
        "cin >> r >> r ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( int j = 0 ; j < x ; j ++ )",
        "cin >> r >> r ;"
      ],
      "err_line": 5,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        8
      ],
      "mod_code": [
        "row *= i ;",
        "col = ( col * j ) ;",
        "if ( a == \" * \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        8,
        3
      ],
      "mod_code": [
        "row *= i ;",
        "col = ( col * j ) ;",
        "if ( a == \" * \" )",
        "cin >> r >> r ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "row *= i ;",
        "if ( a == \" * \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        8,
        3
      ],
      "mod_code": [
        "row *= i ;",
        "if ( a == \" * \" )",
        "cin >> r >> r ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "col = ( col * j ) ;",
        "if ( a == \" * \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8,
        3
      ],
      "mod_code": [
        "col = ( col * j ) ;",
        "if ( a == \" * \" )",
        "cin >> r >> r ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( a == \" * \" )",
        "cin >> r >> r ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    }
  ]
}