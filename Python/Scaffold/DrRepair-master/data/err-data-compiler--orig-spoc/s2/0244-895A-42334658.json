{
  "meta": {
    "index": 244,
    "hitid": "379OL9DBSS8K4UJCZ89ECVIFZX3Y9J",
    "workerid": "A1APYLD4DUK33J",
    "probid": "895A",
    "subid": "42334658"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers x , i , j , min1 , create integer array a with size 400",
      "code": "int x , i , j , a [ 400 ] , min1 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "while read x is true",
      "code": "while ( cin >> x )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to x inclusive , read a [ i ]",
      "code": "for ( i = 1 ; i <= x ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 4,
      "text": "set min1 to 360",
      "code": "min1 = 360 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 0 to x inclusive",
      "code": "for ( i = 0 ; i <= x ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "create integer s with s = 0",
      "code": "int s = 0 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "for j = i to x exclusive",
      "code": "for ( j = i ; j < x ; j ++ )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment s by a [ j ]",
      "code": "s += a [ j ] ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "set min1 to minimum of absolute value of ( 360 - 2 * s ) and min1",
      "code": "min1 = min ( abs ( 360 - 2 * s ) , min1 ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print min1 print newline",
      "code": "cout << min1 << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( gets ( x ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool min1 = 360 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(int, bool&)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "min1 = min ( abs ( 360 - 2 * s ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "s = 0 ;",
        "bool min1 = 360 ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "s = 0 ;",
        "bool min1 = 360 ;",
        "while ( gets ( x ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        4,
        2,
        9
      ],
      "mod_code": [
        "s = 0 ;",
        "bool min1 = 360 ;",
        "while ( gets ( x ) )",
        "min1 = min ( abs ( 360 - 2 * s ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        4,
        9
      ],
      "mod_code": [
        "s = 0 ;",
        "bool min1 = 360 ;",
        "min1 = min ( abs ( 360 - 2 * s ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "s = 0 ;",
        "while ( gets ( x ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2,
        9
      ],
      "mod_code": [
        "s = 0 ;",
        "while ( gets ( x ) )",
        "min1 = min ( abs ( 360 - 2 * s ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "s = 0 ;",
        "min1 = min ( abs ( 360 - 2 * s ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "bool min1 = 360 ;",
        "while ( gets ( x ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        9
      ],
      "mod_code": [
        "bool min1 = 360 ;",
        "while ( gets ( x ) )",
        "min1 = min ( abs ( 360 - 2 * s ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "bool min1 = 360 ;",
        "min1 = min ( abs ( 360 - 2 * s ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "while ( gets ( x ) )",
        "min1 = min ( abs ( 360 - 2 * s ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}