{
  "meta": {
    "index": 486,
    "hitid": "3DWNFENNE3PTCZI1WDCKL0SB1OFJ4O",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "261A",
    "subid": "48448966"
  },
  "lines": [
    {
      "line": 0,
      "text": "PI = const double with PI = acos of - 1",
      "code": "const double PI = acos ( - 1 ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "MAX = const int with MAX = 2e9 + 7",
      "code": "const int MAX = 2e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "MOD = const long long with MOD = 1e18 + 7",
      "code": "const long long MOD = 1e18 + 7 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "in function solve",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "m , n = int",
      "code": "int m , n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "dis = int vector",
      "code": "vector < int > dis ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to m",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "x = int",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "append x to dis",
      "code": "dis . push_back ( x ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "sort dis",
      "code": "sort ( ( dis ) . begin ( ) , ( dis ) . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "b = int vector",
      "code": "vector < int > b ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "x = int",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "append x to b",
      "code": "b . push_back ( x ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "cnt = long long with cnt = 0",
      "code": "long long cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "sort b",
      "code": "sort ( ( b ) . begin ( ) , ( b ) . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "mn = int with mn = dis [ 0 ]",
      "code": "int mn = dis [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "l = int with l = 0",
      "code": "int l = 0 ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "reverse b",
      "code": "reverse ( ( b ) . begin ( ) , ( b ) . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "loop while l < n",
      "code": "while ( l < n )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "k = int with k = l",
      "code": "int k = l ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "for i = l to min of n , l + mn",
      "code": "for ( int i = l ; i < ( min ( n , l + mn ) ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "increment cnt by b [ i ]",
      "code": "cnt += b [ i ] ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "set k to i",
      "code": "k = i ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "set l to k + 3",
      "code": "l = k + 3 ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 36,
      "text": "call solve",
      "code": "solve ( ) ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int m , m ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "vector < int = dis ;"
      ],
      "err_line": 6,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "dis . append ( x ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "sort ( dis , dis + n ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "vector < int = b ;"
      ],
      "err_line": 14,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "b . append ( x ) ;"
      ],
      "err_line": 18,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "sort ( b , b + n ) ;"
      ],
      "err_line": 21,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "int * l = 0 ;"
      ],
      "err_line": 25,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "reverse ( b , b + n ) ;"
      ],
      "err_line": 24,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( i = l ; i < min ( n , l + mn ) ; i ++ )"
      ],
      "err_line": 27,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "solve solve ) ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        31,
        36
      ],
      "mod_code": [
        "l += 3 ;",
        "solve solve ) ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        31,
        36,
        8
      ],
      "mod_code": [
        "l += 3 ;",
        "solve solve ) ;",
        "bool x ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        31,
        36,
        8,
        9
      ],
      "mod_code": [
        "l += 3 ;",
        "solve solve ) ;",
        "bool x ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        31,
        36,
        8,
        2
      ],
      "mod_code": [
        "l += 3 ;",
        "solve solve ) ;",
        "bool x ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        31,
        36,
        8,
        29
      ],
      "mod_code": [
        "l += 3 ;",
        "solve solve ) ;",
        "bool x ;",
        "int k = i ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        31,
        36,
        9
      ],
      "mod_code": [
        "l += 3 ;",
        "solve solve ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        31,
        36,
        9,
        2
      ],
      "mod_code": [
        "l += 3 ;",
        "solve solve ) ;",
        "x = getchar ( ) ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        31,
        36,
        9,
        29
      ],
      "mod_code": [
        "l += 3 ;",
        "solve solve ) ;",
        "x = getchar ( ) ;",
        "int k = i ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        31,
        36,
        2
      ],
      "mod_code": [
        "l += 3 ;",
        "solve solve ) ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        31,
        36,
        2,
        29
      ],
      "mod_code": [
        "l += 3 ;",
        "solve solve ) ;",
        "const long long MOD += 7 ;",
        "int k = i ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        31,
        36,
        29
      ],
      "mod_code": [
        "l += 3 ;",
        "solve solve ) ;",
        "int k = i ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        31,
        8,
        9,
        2
      ],
      "mod_code": [
        "l += 3 ;",
        "bool x ;",
        "x = getchar ( ) ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        31,
        8,
        2
      ],
      "mod_code": [
        "l += 3 ;",
        "bool x ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        31,
        8,
        2,
        29
      ],
      "mod_code": [
        "l += 3 ;",
        "bool x ;",
        "const long long MOD += 7 ;",
        "int k = i ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        31,
        9,
        2
      ],
      "mod_code": [
        "l += 3 ;",
        "x = getchar ( ) ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        31,
        9,
        2,
        29
      ],
      "mod_code": [
        "l += 3 ;",
        "x = getchar ( ) ;",
        "const long long MOD += 7 ;",
        "int k = i ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        31,
        2
      ],
      "mod_code": [
        "l += 3 ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        31,
        2,
        29
      ],
      "mod_code": [
        "l += 3 ;",
        "const long long MOD += 7 ;",
        "int k = i ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        36,
        8
      ],
      "mod_code": [
        "solve solve ) ;",
        "bool x ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        36,
        8,
        9
      ],
      "mod_code": [
        "solve solve ) ;",
        "bool x ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        36,
        8,
        9,
        2
      ],
      "mod_code": [
        "solve solve ) ;",
        "bool x ;",
        "x = getchar ( ) ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        36,
        8,
        9,
        29
      ],
      "mod_code": [
        "solve solve ) ;",
        "bool x ;",
        "x = getchar ( ) ;",
        "int k = i ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        36,
        8,
        2
      ],
      "mod_code": [
        "solve solve ) ;",
        "bool x ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        36,
        8,
        2,
        29
      ],
      "mod_code": [
        "solve solve ) ;",
        "bool x ;",
        "const long long MOD += 7 ;",
        "int k = i ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        36,
        8,
        29
      ],
      "mod_code": [
        "solve solve ) ;",
        "bool x ;",
        "int k = i ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        36,
        9
      ],
      "mod_code": [
        "solve solve ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        36,
        9,
        2
      ],
      "mod_code": [
        "solve solve ) ;",
        "x = getchar ( ) ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        36,
        9,
        2,
        29
      ],
      "mod_code": [
        "solve solve ) ;",
        "x = getchar ( ) ;",
        "const long long MOD += 7 ;",
        "int k = i ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        36,
        9,
        29
      ],
      "mod_code": [
        "solve solve ) ;",
        "x = getchar ( ) ;",
        "int k = i ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        36,
        2
      ],
      "mod_code": [
        "solve solve ) ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        36,
        2,
        29
      ],
      "mod_code": [
        "solve solve ) ;",
        "const long long MOD += 7 ;",
        "int k = i ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        36,
        29
      ],
      "mod_code": [
        "solve solve ) ;",
        "int k = i ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        8,
        9,
        2
      ],
      "mod_code": [
        "bool x ;",
        "x = getchar ( ) ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        9,
        2,
        29
      ],
      "mod_code": [
        "bool x ;",
        "x = getchar ( ) ;",
        "const long long MOD += 7 ;",
        "int k = i ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "bool x ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        8,
        2,
        29
      ],
      "mod_code": [
        "bool x ;",
        "const long long MOD += 7 ;",
        "int k = i ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "const long long MOD += 7 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        9,
        2,
        29
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "const long long MOD += 7 ;",
        "int k = i ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        2,
        29
      ],
      "mod_code": [
        "const long long MOD += 7 ;",
        "int k = i ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘+=’ token"
    }
  ]
}