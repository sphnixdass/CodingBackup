{
  "meta": {
    "index": 1860,
    "hitid": "301KG0KX9CFNIF8O4ZQBG8FY4IF2H6",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "460A",
    "subid": "49046827"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function power of argument integer a , integer b , and integer modi that returns an integer",
      "code": "int power ( int a , int b , int modi )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "res = integer = 1",
      "code": "int res = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while b is nonzero",
      "code": "while ( b )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if b is odd , then res = ( res * a ) modulo modi",
      "code": "if ( b % 2 ) res = ( res * a ) % modi ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "b = b / 2",
      "code": "b /= 2 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "a = ( a * a ) modulo modi",
      "code": "a = ( a * a ) % modi ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return res",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "dirx = integer array where the the following integers are initialized starting at dirx [ 0 ] : - 1 , - 1 , - 1 , 0 , 0 , 1 , 1 , 1",
      "code": "int dirx [ ] = { - 1 , - 1 , - 1 , 0 , 0 , 1 , 1 , 1 } ;",
      "indent": 0
    },
    {
      "line": 10,
      "text": "diry = integer array where the the following integers are initialized starting at diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1",
      "code": "int diry [ ] = { - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
      "indent": 0
    },
    {
      "line": 11,
      "text": "dx = integer array where the the following integers are initialized starting at dx [ 0 ] : - 1 , 1 , 0 , 0",
      "code": "int dx [ ] = { - 1 , 1 , 0 , 0 } ;",
      "indent": 0
    },
    {
      "line": 12,
      "text": "dy = integer array where the the following integers are initialized starting at dy [ 0 ] : 0 , 0 , - 1 , 1",
      "code": "int dy [ ] = { 0 , 0 , - 1 , 1 } ;",
      "indent": 0
    },
    {
      "line": 13,
      "text": "k = x = y = integer , sum = ans = cur = integer = 0",
      "code": "int k , sum = 0 , ans = 0 , cur = 0 , x , y ;",
      "indent": 0
    },
    {
      "line": 14,
      "text": "n , m , r , c = integer",
      "code": "int n , m , r , c ;",
      "indent": 0
    },
    {
      "line": 15,
      "text": "a = integer array of size 1005",
      "code": "int a [ 1005 ] ;",
      "indent": 0
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 17,
      "text": "n , m = integer",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "c = n = integer",
      "code": "int c = n ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "i = integer = 1",
      "code": "int i = 1 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "while c > = i * m",
      "code": "while ( c >= i * m )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "increase c by 1",
      "code": "c ++ ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "increase i by 1",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int power ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int diry [ ] = { - diry , - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;"
      ],
      "err_line": 10,
      "err_msg": "wrong type argument to unary minus"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int dx [ 0 ] = { dx [ 0 ] : - 1 , 1 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int dy [ ] = { 0 [ 0 ] : 0 , 0 , - 1 , 1 } ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int sum’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        10,
        11
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        12
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        10,
        11,
        13
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        10,
        12
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        13
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        10,
        13
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        11,
        12
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        13
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        11,
        13
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        12,
        13
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 0 , 1 , 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        11,
        12
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        9
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        13
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        11,
        9
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        11,
        9,
        13
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        11,
        13
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        12,
        9
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        12,
        9,
        13
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        12,
        13
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        9,
        13
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "int diry [ ] = { diry [ 0 ] : - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        11,
        12,
        9
      ],
      "mod_code": [
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        11,
        12,
        9,
        13
      ],
      "mod_code": [
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        11,
        12,
        13
      ],
      "mod_code": [
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        11,
        9,
        13
      ],
      "mod_code": [
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "int dx [ ] = { dx [ 0 ] : - 1 , 1 , 0 , 0 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        12,
        9,
        13
      ],
      "mod_code": [
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "int dy [ ] = { dy [ 0 ] : 0 , 0 , - 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘}’ before ‘:’ token"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "int dirx [ ] = { dirx [ 0 ] : - 1 , - 1 , 0 , 0 , 1 , 1 , 1 , 1 } ;",
        "int k , x , sum = 0 , sum = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘}’ before ‘:’ token"
    }
  ]
}