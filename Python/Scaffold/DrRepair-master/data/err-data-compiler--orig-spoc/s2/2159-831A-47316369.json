{
  "meta": {
    "index": 2159,
    "hitid": "3LAZVA75NILXAWUB8CL10HCZFHTO25",
    "workerid": "A1APYLD4DUK33J",
    "probid": "831A",
    "subid": "47316369"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer num",
      "code": "int num ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read num",
      "code": "while ( cin >> num )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer array ara of size num , create integer counter with counter = 0",
      "code": "int ara [ num ] , counter = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "for i = 0 to num exclusive , read ara [ i ]",
      "code": "for ( int i = 0 ; i < num ; i ++ ) cin >> ara [ i ] ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "create booleans f1 , f2 , f3",
      "code": "bool f1 , f2 , f3 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set f1 to f2 to f3 to false",
      "code": "f1 = f2 = f3 = false ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for i = 1 to num exclusive",
      "code": "for ( int i = 1 ; i < num ; i ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if ara [ i ] is greater than ara [ i - 1 ]",
      "code": "if ( ara [ i ] > ara [ i - 1 ] )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if f1 is false",
      "code": "if ( f1 == false )",
      "indent": 4
    },
    {
      "line": 10,
      "text": "increment counter by 1",
      "code": "counter += 1 ;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "set f1 to true",
      "code": "f1 = true ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if f2 is true or f3 is true , set counter to 1000",
      "code": "if ( f2 == true || f3 == true ) counter = 1000 ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "set f2 to f3 to false",
      "code": "f2 = f3 = false ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else if ara [ i ] is ara [ i - 1 ]",
      "code": "else if ( ara [ i ] == ara [ i - 1 ] )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if f2 is false",
      "code": "if ( f2 == false )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "increment counter by 1",
      "code": "counter += 1 ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "set f2 to true",
      "code": "f2 = true ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 20,
      "text": "if f3 is true , set counter to 1000",
      "code": "if ( f3 == true ) counter = 1000 ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "set f1 to f3 to false",
      "code": "f1 = f3 = false ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if f3 is false",
      "code": "if ( f3 == false )",
      "indent": 4
    },
    {
      "line": 24,
      "text": "increment counter by 1",
      "code": "counter += 1 ;",
      "indent": 5
    },
    {
      "line": 25,
      "text": "set f3 to true",
      "code": "f3 = true ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 27,
      "text": "set f2 to f1 to false",
      "code": "f2 = f1 = false ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "if counter is greater than 3",
      "code": "if ( counter > 3 )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 33,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( { cin >> num )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int ara [ num ] , counter [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i < num ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 22,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 32,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        25,
        3
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "if ( f2 && f3 ) counter = 1000 ;",
        "bool f3 = true ;",
        "int ara [ num ] , counter [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        6,
        13,
        25,
        32
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "if ( f2 && f3 ) counter = 1000 ;",
        "bool f3 = true ;",
        "n"
      ],
      "err_line": 32,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        25,
        5
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "if ( f2 && f3 ) counter = 1000 ;",
        "bool f3 = true ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        6,
        13,
        3
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "if ( f2 && f3 ) counter = 1000 ;",
        "int ara [ num ] , counter [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        6,
        13,
        3,
        32
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "if ( f2 && f3 ) counter = 1000 ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        6,
        13,
        3,
        5
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "if ( f2 && f3 ) counter = 1000 ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        6,
        13,
        32
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "if ( f2 && f3 ) counter = 1000 ;",
        "n"
      ],
      "err_line": 32,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        32,
        5
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "if ( f2 && f3 ) counter = 1000 ;",
        "n",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        6,
        13,
        5
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "if ( f2 && f3 ) counter = 1000 ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        6,
        25,
        3
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "bool f3 = true ;",
        "int ara [ num ] , counter [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        6,
        25,
        3,
        32
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "bool f3 = true ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        6,
        25,
        3,
        5
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "bool f3 = true ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        6,
        25,
        32
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "bool f3 = true ;",
        "n"
      ],
      "err_line": 32,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        25,
        32,
        5
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "bool f3 = true ;",
        "n",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        6,
        25,
        5
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "bool f3 = true ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "int ara [ num ] , counter [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        6,
        3,
        32
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        6,
        3,
        32,
        5
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "n",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        6,
        32
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "n"
      ],
      "err_line": 32,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        32,
        5
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "n",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "f1 = f2 = f3 = f3 ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        13,
        25,
        3
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "bool f3 = true ;",
        "int ara [ num ] , counter [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        13,
        25,
        3,
        32
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "bool f3 = true ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        13,
        25,
        3,
        5
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "bool f3 = true ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        13,
        25,
        32
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "bool f3 = true ;",
        "n"
      ],
      "err_line": 32,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        32,
        5
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "bool f3 = true ;",
        "n",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        13,
        25,
        5
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "bool f3 = true ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "int ara [ num ] , counter [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        13,
        3,
        32
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        13,
        3,
        32,
        5
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "n",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        13,
        3,
        5
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        13,
        32
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "n"
      ],
      "err_line": 32,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        32,
        5
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "n",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "if ( f2 && f3 ) counter = 1000 ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        25,
        3
      ],
      "mod_code": [
        "bool f3 = true ;",
        "int ara [ num ] , counter [ 0 ] ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        25,
        3,
        32
      ],
      "mod_code": [
        "bool f3 = true ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        25,
        3,
        32,
        5
      ],
      "mod_code": [
        "bool f3 = true ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "n",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        25,
        3,
        5
      ],
      "mod_code": [
        "bool f3 = true ;",
        "int ara [ num ] , counter [ 0 ] ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        25,
        32
      ],
      "mod_code": [
        "bool f3 = true ;",
        "n"
      ],
      "err_line": 32,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        32,
        5
      ],
      "mod_code": [
        "bool f3 = true ;",
        "n",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        25,
        5
      ],
      "mod_code": [
        "bool f3 = true ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        3,
        32
      ],
      "mod_code": [
        "int ara [ num ] , counter [ 0 ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [0]’"
    },
    {
      "mod_line": [
        3,
        32,
        5
      ],
      "mod_code": [
        "int ara [ num ] , counter [ 0 ] ;",
        "n",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int ara [ num ] , counter [ 0 ] ;",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    },
    {
      "mod_line": [
        32,
        5
      ],
      "mod_code": [
        "n",
        "bool f1 , f2 , f3 , f3 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘bool f3’"
    }
  ]
}