{
  "meta": {
    "index": 391,
    "hitid": "3OQQD2WO8I0CZSFREHM1ZUL5A9P3I6",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "215A",
    "subid": "46466444"
  },
  "lines": [
    {
      "line": 0,
      "text": "set MAXN to 100",
      "code": "const int MAXN = 100 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create a [ MAXN ]",
      "code": "int a [ MAXN ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create int array b of size MAXN",
      "code": "int b [ MAXN ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create int c [ MAXN * MAXN ]",
      "code": "int c [ MAXN * MAXN ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "bool compare x and y",
      "code": "bool cmp ( int x , int y )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "return x less than y",
      "code": "return x > y ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "create int n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 0 to m exclusive , read b [ j ]",
      "code": "for ( int j = 0 ; j < m ; ++ j ) cin >> b [ j ] ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; ++ j )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if b [ j ] % a [ i ] equal to 0 , c [ cnt + 1 ] = b [ j ] / a [ i ]",
      "code": "if ( b [ j ] % a [ i ] == 0 ) c [ cnt ++ ] = b [ j ] / a [ i ] ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "call sort elements c , c + cnt , cmp",
      "code": "sort ( c , c + cnt , cmp ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for i = 0 to cnt exclusive",
      "code": "for ( int i = 0 ; i < cnt ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if c [ i ] equal to c [ 0 ] , increment ans",
      "code": "if ( c [ i ] == c [ 0 ] ) ans ++ ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool x , y ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "MAXN = 100 ;"
      ],
      "err_line": 0,
      "err_msg": "‘MAXN’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "a [ MAXN ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int arr [ MAXN ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int c [ MAXN ] ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool x , y + y ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int n , n ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cnt = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < cnt ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "bool x , y ;",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] = b [ j ] / a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        16,
        13
      ],
      "mod_code": [
        "bool x , y ;",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] = b [ j ] / a [ i ] ;",
        "cnt = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        16,
        13,
        15
      ],
      "mod_code": [
        "bool x , y ;",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] = b [ j ] / a [ i ] ;",
        "cnt = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        16,
        15
      ],
      "mod_code": [
        "bool x , y ;",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] = b [ j ] / a [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "bool x , y ;",
        "cnt = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13,
        15
      ],
      "mod_code": [
        "bool x , y ;",
        "cnt = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13,
        15,
        16
      ],
      "mod_code": [
        "bool x , y ;",
        "cnt = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] /= a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13,
        16
      ],
      "mod_code": [
        "bool x , y ;",
        "cnt = 0 ;",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] /= a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "bool x , y ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        15,
        16
      ],
      "mod_code": [
        "bool x , y ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] /= a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "bool x , y ;",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] /= a [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        13
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] = b [ j ] / a [ i ] ;",
        "cnt = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        13,
        15
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] = b [ j ] / a [ i ] ;",
        "cnt = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        13,
        15,
        4
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] = b [ j ] / a [ i ] ;",
        "cnt = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "bool x , y + y ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        16,
        13,
        4
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] = b [ j ] / a [ i ] ;",
        "cnt = 0 ;",
        "bool x , y + y ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        16,
        15
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] = b [ j ] / a [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        15,
        4
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] = b [ j ] / a [ i ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "bool x , y + y ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        16,
        4
      ],
      "mod_code": [
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] = b [ j ] / a [ i ] ;",
        "bool x , y + y ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "cnt = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        4
      ],
      "mod_code": [
        "cnt = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "bool x , y + y ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        13,
        15,
        4,
        16
      ],
      "mod_code": [
        "cnt = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "bool x , y + y ;",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] /= a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        13,
        15,
        16
      ],
      "mod_code": [
        "cnt = 0 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] /= a [ i ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "cnt = 0 ;",
        "bool x , y + y ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        13,
        4,
        16
      ],
      "mod_code": [
        "cnt = 0 ;",
        "bool x , y + y ;",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] /= a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "cnt = 0 ;",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] /= a [ i ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        4
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "bool x , y + y ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        15,
        4,
        16
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "bool x , y + y ;",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] /= a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] /= a [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "bool x , y + y ;",
        "if ( b [ j ] % a [ i ] == 0 ) c [ cnt + 1 ] /= a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    }
  ]
}