{
  "meta": {
    "index": 1003,
    "hitid": "3ZXNP4Z39RFWQCOK1WM44RPDWFB7LZ",
    "workerid": "A1AYVATMT88U1W",
    "probid": "627A",
    "subid": "17216772"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a , b be long integers",
      "code": "long long a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "long integer answer equals 1",
      "code": "long long answer = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "long integer count equals 1",
      "code": "long long count = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "long integer c equals a - b",
      "code": "long long c = a - b ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if bitwise and of c and 1 is true or bitwise and of c and b is true",
      "code": "if ( c & 1 || ( c >>= 1 ) & b )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print 0 and new line",
      "code": "cout << \" 0 \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "while b is not equal to 0",
      "code": "while ( b != 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if the last bit of b is 1 , multiply answer value by 2",
      "code": "if ( b & 1 ) answer *= 2 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "shift bitwise the value of b by 1",
      "code": "b >>= 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if c is 0 , decrement answer value by 2",
      "code": "if ( ! c ) answer -= 2 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print answer and ne wline",
      "code": "cout << answer << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘ne’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << answer << ' ' << ne << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘ne’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "cout << answer << \" \" << ne << endl ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        14,
        8
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "cout << answer << \" \" << ne << endl ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        14,
        8,
        11
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "cout << answer << \" \" << ne << endl ;",
        "n",
        "b >> 1 ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        14,
        8,
        4
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "cout << answer << \" \" << ne << endl ;",
        "n",
        "cin >> a , b ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        14,
        11
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "cout << answer << \" \" << ne << endl ;",
        "b >> 1 ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        14,
        11,
        4
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "cout << answer << \" \" << ne << endl ;",
        "b >> 1 ;",
        "cin >> a , b ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        14,
        4
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "cout << answer << \" \" << ne << endl ;",
        "cin >> a , b ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "n",
        "b >> 1 ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        8,
        11,
        4
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "n",
        "b >> 1 ;",
        "cin >> a , b ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        8,
        4
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "n",
        "cin >> a , b ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "b >> 1 ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        11,
        4
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "b >> 1 ;",
        "cin >> a , b ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( ! ( c & 1 ) || ( c . at ( c , b ) ) )",
        "cin >> a , b ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘c’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        11
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "n",
        "b >> 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        11,
        4
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "n",
        "b >> 1 ;",
        "cin >> a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        11,
        6
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "n",
        "b >> 1 ;",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        14,
        8,
        4
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "n",
        "cin >> a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        8,
        4,
        6
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "n",
        "cin >> a , b ;",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        14,
        8,
        6
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "n",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "b >> 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘ne’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        11,
        4
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "b >> 1 ;",
        "cin >> a , b ;"
      ],
      "err_line": 14,
      "err_msg": "‘ne’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        11,
        4,
        6
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "b >> 1 ;",
        "cin >> a , b ;",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        14,
        11,
        6
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "b >> 1 ;",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "cin >> a , b ;"
      ],
      "err_line": 14,
      "err_msg": "‘ne’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4,
        6
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "cin >> a , b ;",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "cout << answer << \" \" << ne << endl ;",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "n",
        "b >> 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        4
      ],
      "mod_code": [
        "n",
        "b >> 1 ;",
        "cin >> a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        4,
        6
      ],
      "mod_code": [
        "n",
        "b >> 1 ;",
        "cin >> a , b ;",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        8,
        11,
        6
      ],
      "mod_code": [
        "n",
        "b >> 1 ;",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "n",
        "cin >> a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        6
      ],
      "mod_code": [
        "n",
        "cin >> a , b ;",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "n",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        11,
        4,
        6
      ],
      "mod_code": [
        "b >> 1 ;",
        "cin >> a , b ;",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "b >> 1 ;",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "cin >> a , b ;",
        "if ( & ( c & 1 ) || ! c && b )"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as unary ‘&’ operand"
    }
  ]
}