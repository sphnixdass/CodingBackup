{
  "meta": {
    "index": 2395,
    "hitid": "3OEWW2KGQJ5KD6SR515IW033C8IDO3",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "543A",
    "subid": "48657598"
  },
  "lines": [
    {
      "line": 0,
      "text": "f = 2d integer array of 501 rows and columns",
      "code": "int f [ 501 ] [ 501 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n , m , b , mod = integer",
      "code": "int n , m , b , mod ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , m , b , mod",
      "code": "cin >> n >> m >> b >> mod ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "f [ 0 ] [ 0 ] = 1",
      "code": "f [ 0 ] [ 0 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "x = integer",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for k = x to b inclusive ( f [ j ] [ k ] = f [ j ] [ k ] + f [ j - 1 ] [ k - x ] ) = ( f [ j ] [ k ] = f [ j ] [ k ] + f [ j - 1 ] [ k - x ] ) modulo mod",
      "code": "for ( int k = x ; k <= b ; k ++ ) { ( f [ j ] [ k ] += f [ j - 1 ] [ k - x ] ) %= mod ; }",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "ans = integer with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to b inclusive ( ans = ans + f [ m ] [ i ] ) = ( ans = ans + f [ m ] [ i ] ) modulo mod",
      "code": "for ( int i = 0 ; i <= b ; i ++ ) { ( ans += f [ m ] [ i ] ) %= mod ; }",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( int k = x ; k <= b ; k ++ ) ( f [ j ] [ k ] = f [ j ] [ k ] + f [ j - 1 ] [ k - x ] + ( f [ j ] [ k - x ] [ k - x ] ) % mod ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f ;"
      ],
      "err_line": 13,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        9,
        13
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        9,
        13,
        5
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        9,
        13,
        3
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "cin >> n >> m >> b , mod ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        9,
        13,
        7
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        9,
        5
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        9,
        5,
        3
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> m >> b , mod ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        9,
        5,
        7
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        9,
        3
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "cin >> n >> m >> b , mod ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        9,
        3,
        7
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "cin >> n >> m >> b , mod ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        9,
        7
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        13,
        5
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        13,
        5,
        3
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> m >> b , mod ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        13,
        5,
        7
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        13,
        3
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "cin >> n >> m >> b , mod ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        13,
        3,
        7
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "cin >> n >> m >> b , mod ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        13,
        7
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        5,
        3
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> m >> b , mod ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        5,
        3,
        7
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> m >> b , mod ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        5,
        7
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "cin >> n >> m >> b , mod ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        3,
        7
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "cin >> n >> m >> b , mod ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int f [ 501 ] [ ] ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "declaration of ‘f’ as multidimensional array must have bounds for all dimensions except the first"
    },
    {
      "mod_line": [
        9,
        13,
        5
      ],
      "mod_code": [
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        5,
        3
      ],
      "mod_code": [
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> m >> b , mod ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        5,
        7
      ],
      "mod_code": [
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        3
      ],
      "mod_code": [
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> m >> b , mod ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        3,
        7
      ],
      "mod_code": [
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> m >> b , mod ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        7
      ],
      "mod_code": [
        "for ( int k = x ; k <= b ; k ++ ) { f [ j ] [ k ] = b ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> m >> b , mod ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5,
        3,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> m >> b , mod ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) ans += f [ m ] [ i ] = ( ans + f [ m ] [ i ] ) % mod ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> m >> b , mod ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "cin >> n >> m >> b , mod ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}