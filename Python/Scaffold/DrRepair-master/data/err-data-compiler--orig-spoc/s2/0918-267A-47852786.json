{
  "meta": {
    "index": 918,
    "hitid": "3VQTAXTYN3FMBEE4NRQL0G7SSWQUBX",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "267A",
    "subid": "47852786"
  },
  "lines": [
    {
      "line": 0,
      "text": "let in be the input file of path txt . in",
      "code": "ifstream in ( \" txt.in \" ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let out be an output file = txt . out",
      "code": "ofstream out ( \" txt.out \" ) ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "print fixed and setprecision of 12",
      "code": "cout << fixed << setprecision ( 12 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let t = long long",
      "code": "long long t ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read t while decrementing t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "a , b = long long",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read a and b",
      "code": "long long a , b ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "cnt = 0 = long long",
      "code": "long long cnt = 0 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "while a and b",
      "code": "while ( a && b )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if a > b",
      "code": "if ( a > b )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increment cnt by a / b , set a to a % b",
      "code": "cnt += a / b , a %= b ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment cnt by b / a , set b to b % a",
      "code": "cnt += b / a , b %= a ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print cnt and new line",
      "code": "cout << cnt << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "out << \" let \" ;"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> a >> b ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "out *= 5 ;"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> n >> b ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> n >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 13,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int in = getchar ( ) ;",
        "out << \" let \" ;"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        6
      ],
      "mod_code": [
        "int in = getchar ( ) ;",
        "out << \" let \" ;",
        "long long a , b ;"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        6,
        7
      ],
      "mod_code": [
        "int in = getchar ( ) ;",
        "out << \" let \" ;",
        "long long a , b ;",
        "cin >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        6,
        10
      ],
      "mod_code": [
        "int in = getchar ( ) ;",
        "out << \" let \" ;",
        "long long a , b ;",
        "while ( a , b )"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        7
      ],
      "mod_code": [
        "int in = getchar ( ) ;",
        "out << \" let \" ;",
        "cin >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        7,
        10
      ],
      "mod_code": [
        "int in = getchar ( ) ;",
        "out << \" let \" ;",
        "cin >> a >> b ;",
        "while ( a , b )"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        10
      ],
      "mod_code": [
        "int in = getchar ( ) ;",
        "out << \" let \" ;",
        "while ( a , b )"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int in = getchar ( ) ;",
        "cin >> a >> b ;"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        7,
        10
      ],
      "mod_code": [
        "int in = getchar ( ) ;",
        "cin >> a >> b ;",
        "while ( a , b )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "out << \" let \" ;",
        "long long a , b ;"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        7
      ],
      "mod_code": [
        "out << \" let \" ;",
        "long long a , b ;",
        "cin >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        7,
        10
      ],
      "mod_code": [
        "out << \" let \" ;",
        "long long a , b ;",
        "cin >> a >> b ;",
        "while ( a , b )"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        7,
        0
      ],
      "mod_code": [
        "out << \" let \" ;",
        "long long a , b ;",
        "cin >> a >> b ;",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        10
      ],
      "mod_code": [
        "out << \" let \" ;",
        "long long a , b ;",
        "while ( a , b )"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        10,
        0
      ],
      "mod_code": [
        "out << \" let \" ;",
        "long long a , b ;",
        "while ( a , b )",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        0
      ],
      "mod_code": [
        "out << \" let \" ;",
        "long long a , b ;",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "out << \" let \" ;",
        "cin >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7,
        10
      ],
      "mod_code": [
        "out << \" let \" ;",
        "cin >> a >> b ;",
        "while ( a , b )"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        0
      ],
      "mod_code": [
        "out << \" let \" ;",
        "cin >> a >> b ;",
        "while ( a , b )",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7,
        0
      ],
      "mod_code": [
        "out << \" let \" ;",
        "cin >> a >> b ;",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "out << \" let \" ;",
        "while ( a , b )"
      ],
      "err_line": 1,
      "err_msg": "‘out’ does not name a type"
    },
    {
      "mod_line": [
        1,
        10,
        0
      ],
      "mod_code": [
        "out << \" let \" ;",
        "while ( a , b )",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "out << \" let \" ;",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        6,
        7,
        10,
        0
      ],
      "mod_code": [
        "long long a , b ;",
        "cin >> a >> b ;",
        "while ( a , b )",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        6,
        7,
        0
      ],
      "mod_code": [
        "long long a , b ;",
        "cin >> a >> b ;",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        6,
        10,
        0
      ],
      "mod_code": [
        "long long a , b ;",
        "while ( a , b )",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "long long a , b ;",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "cin >> a >> b ;",
        "while ( a , b )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        0
      ],
      "mod_code": [
        "cin >> a >> b ;",
        "while ( a , b )",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "cin >> a >> b ;",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "while ( a , b )",
        "in = file ( path ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘in’ does not name a type"
    }
  ]
}