{
  "meta": {
    "index": 2626,
    "hitid": "36MUZ9VAE6WY1FF2BN2MRO9P9TAED9",
    "workerid": "AIWEXPJAU66D9",
    "probid": "552A",
    "subid": "40757379"
  },
  "lines": [
    {
      "line": 0,
      "text": "s is a new array of integers with size 105 by 105",
      "code": "int s [ 105 ] [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare ints t , x1 , x2 , y1 , y2 , mx , my , ix , iy , i , j and sum",
      "code": "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , i , j , sum ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "assign the new value = 0 to sum",
      "code": "sum = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read t from the input",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set values of mx and my to 0",
      "code": "mx = my = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "change ix and iy to 1000",
      "code": "ix = iy = 1000 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set first sizeof ( s ) bytes at the pointer s to 0",
      "code": "memset ( s , 0 , sizeof ( s ) ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while t ! = 0 , decrement it and continue the loop",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read user input to x1 , y1 , x2 and y2",
      "code": "cin >> x1 >> y1 >> x2 >> y2 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if x1 is less than ix , assign x1 to ix",
      "code": "if ( x1 < ix ) ix = x1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "assign x2 to mx if x2 is greater than mx",
      "code": "if ( x2 > mx ) mx = x2 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if y1 is less than iy , change iy to y1",
      "code": "if ( y1 < iy ) iy = y1 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "change the value of my to y2 if y2 is greater than my",
      "code": "if ( y2 > my ) my = y2 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "start for loop from i = y1 to y2 inclusive",
      "code": "for ( i = y1 ; i <= y2 ; i ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "in a for loop , change j from x1 to x2 inclusive , incrementing s [ i ] [ j ] on each loop iteration",
      "code": "for ( j = x1 ; j <= x2 ; j ++ ) s [ i ] [ j ] ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i from iy to my inclusive incrementing i",
      "code": "for ( i = iy ; i <= my ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for j = ix to mx inclusive , add s [ i ] [ j ] to sum",
      "code": "for ( j = ix ; j <= mx ; j ++ ) sum += s [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int mx’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "s [ 105 ] [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘s’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int ix = 1000 , iy = 1000 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int ix’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "memset ( s , 0 ) ;"
      ],
      "err_line": 7,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( x2 > mx ) mx assign x2 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘assign’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "ix = 1000 = 1000 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int mx’"
    },
    {
      "mod_line": [
        5,
        6,
        13
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "ix = 1000 = 1000 ;",
        "my = my > my ? y2 : y2 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int mx’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        9
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "ix = 1000 = 1000 ;",
        "my = my > my ? y2 : y2 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int mx’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        3
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "ix = 1000 = 1000 ;",
        "my = my > my ? y2 : y2 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        6,
        13,
        2
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "ix = 1000 = 1000 ;",
        "my = my > my ? y2 : y2 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "ix = 1000 = 1000 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int mx’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        3
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "ix = 1000 = 1000 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        2
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "ix = 1000 = 1000 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "ix = 1000 = 1000 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        2
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "ix = 1000 = 1000 ;",
        "int sum = 0 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        5,
        6,
        2
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "ix = 1000 = 1000 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "my = my > my ? y2 : y2 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int mx’"
    },
    {
      "mod_line": [
        5,
        13,
        9
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "my = my > my ? y2 : y2 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int mx’"
    },
    {
      "mod_line": [
        5,
        13,
        9,
        3
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "my = my > my ? y2 : y2 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        13,
        9,
        2
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "my = my > my ? y2 : y2 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        5,
        13,
        3
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "my = my > my ? y2 : y2 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        13,
        3,
        2
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "my = my > my ? y2 : y2 ;",
        "int sum = 0 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        5,
        13,
        2
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "my = my > my ? y2 : y2 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int mx’"
    },
    {
      "mod_line": [
        5,
        9,
        3
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        9,
        3,
        2
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int sum = 0 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "int sum = 0 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "int mx = 0 , my = 0 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "my = my > my ? y2 : y2 ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        13,
        9
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "my = my > my ? y2 : y2 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        13,
        9,
        3
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "my = my > my ? y2 : y2 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        6,
        13,
        9,
        2
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "my = my > my ? y2 : y2 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        6,
        13,
        3
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "my = my > my ? y2 : y2 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        6,
        13,
        3,
        2
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "my = my > my ? y2 : y2 ;",
        "int sum = 0 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        6,
        13,
        2
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "my = my > my ? y2 : y2 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        6,
        9,
        3,
        2
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int sum = 0 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "int sum = 0 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "ix = 1000 = 1000 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        13,
        9,
        3
      ],
      "mod_code": [
        "my = my > my ? y2 : y2 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        13,
        9,
        3,
        2
      ],
      "mod_code": [
        "my = my > my ? y2 : y2 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int sum = 0 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        13,
        9,
        2
      ],
      "mod_code": [
        "my = my > my ? y2 : y2 ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "my = my > my ? y2 : y2 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        13,
        3,
        2
      ],
      "mod_code": [
        "my = my > my ? y2 : y2 ;",
        "int sum = 0 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "my = my > my ? y2 : y2 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        9,
        3,
        2
      ],
      "mod_code": [
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int sum = 0 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int sum = 0 ;",
        "int t , x1 , x2 , y1 , y2 , mx , my , ix , iy , j , j , sum ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int j’"
    }
  ]
}