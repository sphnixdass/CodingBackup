{
  "meta": {
    "index": 400,
    "hitid": "3YO4AH2FPDETZY4D829R6YEKY7M0QB",
    "workerid": "A1APYLD4DUK33J",
    "probid": "215A",
    "subid": "46440160"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer M with M = 1e2 + 5",
      "code": "const int M = 1e2 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer arrays a , b , c , with a size M , b size M , c size 10000 + 5",
      "code": "int a [ M ] , b [ M ] , c [ 10000 + 5 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare gcd with integers a , b as arguments , returning integer",
      "code": "int gcd ( int a , int b )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "return result of run gcd with b , a % b as arguments if b is true , else a , from function",
      "code": "return b ? gcd ( b , a % b ) : a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "set bytes from c to size of c to value 0",
      "code": "memset ( c , 0 , sizeof ( c ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to m exclusive , read b [ i ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create integer ans with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if result of run gcd with a [ i ] , b [ j ] as arguments is a [ i ] , increment c [ b [ j ] / a [ i ] ]",
      "code": "if ( gcd ( a [ i ] , b [ j ] ) == a [ i ] ) c [ b [ j ] / a [ i ] ] ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for i = 10004 to 0 inclusive , decrementing i",
      "code": "for ( int i = 10004 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if c [ i ] is greater than 0",
      "code": "if ( c [ i ] > 0 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print c [ i ] print newline",
      "code": "cout << c [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if i is 0 , print \" 0 \" print newline",
      "code": "if ( i == 0 ) cout << \" 0 \" << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int gcd ( int a , int b ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n , m ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 10004 ; i >= 0 ; i -- )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) c [ b [ j ] / a [ i ] ] ++ ;",
        "ans = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12,
        10
      ],
      "mod_code": [
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) c [ b [ j ] / a [ i ] ] ++ ;",
        "ans = 0 ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12,
        10,
        8
      ],
      "mod_code": [
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) c [ b [ j ] / a [ i ] ] ++ ;",
        "ans = 0 ;",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12,
        10,
        13
      ],
      "mod_code": [
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) c [ b [ j ] / a [ i ] ] ++ ;",
        "ans = 0 ;",
        "m = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12,
        8
      ],
      "mod_code": [
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) c [ b [ j ] / a [ i ] ] ++ ;",
        "ans = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12,
        8,
        13
      ],
      "mod_code": [
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) c [ b [ j ] / a [ i ] ] ++ ;",
        "ans = 0 ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12,
        13
      ],
      "mod_code": [
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) c [ b [ j ] / a [ i ] ] ++ ;",
        "ans = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        10,
        8,
        13
      ],
      "mod_code": [
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) c [ b [ j ] / a [ i ] ] ++ ;",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        10,
        13
      ],
      "mod_code": [
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) c [ b [ j ] / a [ i ] ] ++ ;",
        "m = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        8,
        13
      ],
      "mod_code": [
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) c [ b [ j ] / a [ i ] ] ++ ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) c [ b [ j ] / a [ i ] ] ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "ans = 0 ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        8
      ],
      "mod_code": [
        "ans = 0 ;",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        8,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;",
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) { c [ b [ j ] / a [ i ] ] ++ ; }"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        8,
        13
      ],
      "mod_code": [
        "ans = 0 ;",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "m = getchar ( ) ;",
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) { c [ b [ j ] / a [ i ] ] ++ ; }"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        15,
        13
      ],
      "mod_code": [
        "ans = 0 ;",
        "m = getchar ( ) ;",
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) { c [ b [ j ] / a [ i ] ] ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        13
      ],
      "mod_code": [
        "ans = 0 ;",
        "m = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "ans = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "n = getchar ( ) ;",
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) { c [ b [ j ] / a [ i ] ] ++ ; }"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8,
        15,
        13
      ],
      "mod_code": [
        "ans = 0 ;",
        "n = getchar ( ) ;",
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) { c [ b [ j ] / a [ i ] ] ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8,
        13
      ],
      "mod_code": [
        "ans = 0 ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) { c [ b [ j ] / a [ i ] ] ++ ; }"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15,
        13
      ],
      "mod_code": [
        "ans = 0 ;",
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) { c [ b [ j ] / a [ i ] ] ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "ans = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8,
        15,
        13
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "n = getchar ( ) ;",
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) { c [ b [ j ] / a [ i ] ] ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        8,
        13
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        15,
        13
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) { c [ b [ j ] / a [ i ] ] ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        13
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) { c [ b [ j ] / a [ i ] ] ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "if ( gcd ( a [ i ] , b [ j ] ) == a [ j ] ) { c [ b [ j ] / a [ i ] ] ++ ; }",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}