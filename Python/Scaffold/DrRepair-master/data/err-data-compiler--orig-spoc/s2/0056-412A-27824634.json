{
  "meta": {
    "index": 56,
    "hitid": "37YYO3NWHDK9ZPPAF01GHUR43HJCCC",
    "workerid": "A1APYLD4DUK33J",
    "probid": "412A",
    "subid": "27824634"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare toInt with string myString as argument , returning integer",
      "code": "int toInt ( string myString )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create stringstream mySs initialized with myString",
      "code": "stringstream mySS ( myString ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer myInt",
      "code": "int myInt ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read myInt using mySS",
      "code": "mySS >> myInt ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return myInt",
      "code": "return myInt ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "declare parse with string myString as argument , returning string vector",
      "code": "vector < string > parse ( string myString )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "create string vector substrings",
      "code": "vector < string > substrings ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while 0 is 0",
      "code": "while ( 0 == 0 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if first index of \" \" in myString is end of string",
      "code": "if ( myString . find ( \" \" ) == string :: npos )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "add element myString to end of substrings",
      "code": "substrings . push_back ( myString ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "return substrings",
      "code": "return substrings ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "add element ( substring of myString from 0 to first index of \" \" in myString ) to end of substrings",
      "code": "substrings . push_back ( myString . substr ( 0 , myString . find ( \" \" ) ) ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "remove characters from 0 to first index of \" \" in myString + 1 from myString",
      "code": "myString . erase ( 0 , myString . find ( \" \" ) + 1 ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 18,
      "text": "create string slogan",
      "code": "string slogan ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "create integers n , k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "read line from cin to slogan",
      "code": "getline ( cin , slogan ) ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "create string vector vec",
      "code": "vector < string > vec ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set vec to result of run parse with slogan as argument",
      "code": "vec = parse ( slogan ) ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "set n to result of run toInt with vec [ 0 ] as argument",
      "code": "n = toInt ( vec [ 0 ] ) ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "set k to result of run toInt with vec [ 1 ] as argument",
      "code": "k = toInt ( vec [ 1 ] ) ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "read line from cin to slogan",
      "code": "getline ( cin , slogan ) ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "if k is less than or equal to n / 2",
      "code": "if ( k <= n / 2 )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "while k is not 1",
      "code": "while ( k != 1 )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "print \" LEFT \\ n \"",
      "code": "cout << \" LEFT\\n \" ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "decrement k by 1",
      "code": "k -= 1 ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "print \" PRINT \" print slogan [ k - 1 ] print \" \\ n \"",
      "code": "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "for f = 1 to n exclusive",
      "code": "for ( int f = 1 ; f < n ; f ++ )",
      "indent": 2
    },
    {
      "line": 33,
      "text": "print \" RIGHT \\ n \"",
      "code": "cout << \" RIGHT\\n \" ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "increment k by 1",
      "code": "k += 1 ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "print \" PRINT \" print slogan [ k - 1 ] print \" \\ n \"",
      "code": "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 37,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 38,
      "text": "while k is not n",
      "code": "while ( k != n )",
      "indent": 2
    },
    {
      "line": 39,
      "text": "print \" RIGHT \\ n \"",
      "code": "cout << \" RIGHT\\n \" ;",
      "indent": 3
    },
    {
      "line": 40,
      "text": "increment k",
      "code": "k += 1 ;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 42,
      "text": "print \" PRINT \" print slogan [ k - 1 ] print \" \\ n \"",
      "code": "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "for f = 1 to n exclusive",
      "code": "for ( int f = 1 ; f < n ; f ++ )",
      "indent": 2
    },
    {
      "line": 44,
      "text": "print \" LEFT \\ n \"",
      "code": "cout << \" LEFT\\n \" ;",
      "indent": 3
    },
    {
      "line": 45,
      "text": "decrement k by 1",
      "code": "k -= 1 ;",
      "indent": 3
    },
    {
      "line": 46,
      "text": "print \" PRINT \" print slogan [ k - 1 ] print \" \\ n \"",
      "code": "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "myInt << myInt << endl ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string toInt ( string myString )"
      ],
      "err_line": 4,
      "err_msg": "could not convert ‘myInt’ from ‘int’ to ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "stringstream mySs ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 3,
      "err_msg": "‘myInt’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "myInt >> myInt >> mySS ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘int’ and ‘std::stringstream {aka std::__cxx11::basic_stringstream<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "vector < int > substrings ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::vector<int>::push_back(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "substrings . push ( myString ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "return 1 ;"
      ],
      "err_line": 11,
      "err_msg": "could not convert ‘1’ from ‘int’ to ‘std::vector<std::__cxx11::basic_string<char> >’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "first . erase ( myString + 1 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 20,
      "err_msg": "‘slogan’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "n , k ;"
      ],
      "err_line": 19,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "getline ( int , cin ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "vector < int > vec ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "vec %= parse ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator%=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘std::vector<std::__cxx11::basic_string<char> >(std::__cxx11::string) {aka std::vector<std::__cxx11::basic_string<char> >(std::__cxx11::basic_string<char>)}’)"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "n = toInt toInt vec [ 0 ] ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘int (*)(std::__cxx11::string) {aka int (*)(std::__cxx11::basic_string<char>)}’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "k = toInt [ vec [ 1 ] ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "getline ( int , cin ) ;"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "<< \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 31,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "for ( f = 1 ; f < n ; f ++ )"
      ],
      "err_line": 32,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "<< \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 38,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "<< \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 42,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "for ( f = 1 ; f < n ; f ++ )"
      ],
      "err_line": 43,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "<< \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 46,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        9
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        13
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        14
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        9
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        13
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        14
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        13
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        14
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        13,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        14
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        28,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        28,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        28,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        28,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        28,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        28,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        28,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        31,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        31,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        31,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        31,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        31,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        31,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        33,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        33,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        33,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        33,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        33,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        35,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        35,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        35,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        35,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        39,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        39,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        39,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        42,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        42,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        44,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        3,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        13
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        14
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        13
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        14
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        13,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        14
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        14,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        14,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        14,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        14,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        14,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        14,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        14,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        14,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        28,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        28,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        28,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        28,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        28,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        28,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        28,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        31,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        31,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        31,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        31,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        31,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        31,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        33,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        33,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        33,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        33,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        33,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        35,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        35,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        35,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        35,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        39,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        39,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        39,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        42,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        42,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        44,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        13
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        14
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        14
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        14,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        14,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        14,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        14,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        14,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        14,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        14,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        14,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        28,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        28,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        28,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        28,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        28,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        28,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        28,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        31,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        31,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        31,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        31,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        31,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        31,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        33,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        33,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        33,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        33,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        33,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        35,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        35,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        35,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        35,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        39,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        39,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        39,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        42,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        42,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        44,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        14
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        28,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        28,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        28,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        28,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        28,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        28,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        28,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        31,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        31,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        31,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        31,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        31,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        31,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        33,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        33,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        33,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        33,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        33,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        35,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        35,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        35,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        35,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        39,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        39,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        39,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        42,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        42,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        44,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        28,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        28,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        28,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        28,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        28,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        28,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        28,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        31,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        31,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        31,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        31,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        31,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        31,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        33,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        33,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        33,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        33,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        33,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        35,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        35,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        35,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        35,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        39,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        39,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        39,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        42,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        42,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        44,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        31,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        31,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        31,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        31,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        31,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        31,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        33,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        33,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        33,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        33,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        33,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        35,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        35,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        35,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        35,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        39,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        39,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        39,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        42,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        42,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        44,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        28,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        33,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        33,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        33,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        33,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        33,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        35,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        35,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        35,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        35,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        39,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        39,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        39,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        42,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        42,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        44,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        31,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        35,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        35,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        35,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        35,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        39,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        39,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        39,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        42,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        42,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        44,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        33,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        35
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        35,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        35,
        39,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        35,
        39,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        35,
        39,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        35,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        35,
        42,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        35,
        42,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        35,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        35,
        44,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        35,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        39
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        39,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        39,
        42,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        39,
        42,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        39,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        39,
        44,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        39,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        42
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        42,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        42,
        44,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        42,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        44
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        44,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        46
      ],
      "mod_code": [
        "stringstream mySs ( myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘mySS’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        13
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        14
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        28
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        13
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        14
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        28
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        14
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        28
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        28
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        28,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        28,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        28,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        28,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        28,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        28,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        28,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        31,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        31,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        31,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        31,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        31,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        31,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        33,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        33,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        33,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        33,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        33,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        35,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        35,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        35,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        35,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        39,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        39,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        39,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        42,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        42,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        44,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        6,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        13
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        14
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        28
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        14
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        28
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        28
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        28,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        28,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        28,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        28,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        28,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        28,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        28,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        31,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        31,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        31,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        31,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        31,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        31,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        33,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        33,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        33,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        33,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        33,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        35,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        35,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        35,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        35,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        39,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        39,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        39,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        42,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        42,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        44,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        9,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        14
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        14,
        28
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        14,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        14,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        14,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        14,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        14,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        14,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        14,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        28
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        28,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        28,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        28,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        28,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        28,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        28,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        28,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        31,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        31,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        31,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        31,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        31,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        31,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        33,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        33,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        33,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        33,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        33,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        35,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        35,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        35,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        35,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        39,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        39,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        39,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        42,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        42,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        44,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        13,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        28
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        28,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        28,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        28,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        28,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        28,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        28,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        28,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        31,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        31,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        31,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        31,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        31,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        31,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        33,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        33,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        33,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        33,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        33,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        35,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        35,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        35,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        35,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        39,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        39,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        39,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        42,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        42,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        44,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        14,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        31,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        31,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        31,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        31,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        31,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        31,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        33,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        33,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        33,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        33,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        33,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        35,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        35,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        35,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        35,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        39,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        39,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        39,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        42,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        42,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        44,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        28,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        33,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        33,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        33,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        33,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        33,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        35,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        35,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        35,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        35,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        39,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        39,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        39,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        42,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        42,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        44,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        31,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        35,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        35,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        35,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        35,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        39,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        39,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        39,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        42,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        42,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        44,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        33,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        35
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        35,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        35,
        39,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        35,
        39,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        35,
        39,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        35,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        35,
        42,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        35,
        42,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        35,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        35,
        44,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        35,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        39
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        39,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        39,
        42,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        39,
        42,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        39,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        39,
        44,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        39,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        42
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        42,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        42,
        44,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        42,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        44
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        44,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        3,
        46
      ],
      "mod_code": [
        "myInt << myInt << endl ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        13
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        14
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        28
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        31
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        14
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        28
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        31
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        14,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        28
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        28,
        31
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        28,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        28,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        28,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        28,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        28,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        28,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        31
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        31,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        31,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        31,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        31,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        31,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        31,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        33,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        33,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        33,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        33,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        33,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        35,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        35,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        35,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        35,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        39,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        39,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        39,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        42,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        42,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        44,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        9,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "if ( myString . find ( \" \" ) )",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        28
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        31
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        28
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        28,
        31
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        28,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        28,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        28,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        28,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        28,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        28,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        31
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        31,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        31,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        31,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        31,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        31,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        31,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        33,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        33,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        33,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        33,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        33,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        35,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        35,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        35,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        35,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        39,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        39,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        39,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        42,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        42,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        44,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        28
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        28,
        31
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        28,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        28,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        28,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        28,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        28,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        28,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        31
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        31,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        31,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        31,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        31,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        31,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        31,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        33,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        33,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        33,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        33,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        33,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        35,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        35,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        35,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        35,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        39,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        39,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        39,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        42,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        42,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        44,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        14,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        31
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        31,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        31,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        31,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        31,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        31,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        31,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        33,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        33,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        33,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        33,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        33,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        35,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        35,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        35,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        35,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        39,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        39,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        39,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        42,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        42,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        44,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        28,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        33,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        33,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        33,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        33,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        33,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        35,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        35,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        35,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        35,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        39,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        39,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        39,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        42,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        42,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        44,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        31,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        35,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        35,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        35,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        35,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        39,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        39,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        39,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        42,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        42,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        44,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        33,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        35
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        35,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        35,
        39,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        35,
        39,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        35,
        39,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        35,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        35,
        42,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        35,
        42,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        35,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        35,
        44,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        35,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        39
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        39,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        39,
        42,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        39,
        42,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        39,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        39,
        44,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        39,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        42
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        42,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        42,
        44,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        42,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        44
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        44,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        46
      ],
      "mod_code": [
        "vector < string > parse ( string myString ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        14
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        28
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        31
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        33
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        35
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        39
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        28
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        28,
        31
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        28,
        33
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        28,
        35
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        28,
        39
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        28,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        28,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        28,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        31
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        31,
        33
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        31,
        35
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        31,
        39
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        31,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        31,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        31,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        33
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        33,
        35
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        33,
        39
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        33,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        33,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        33,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        35
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        35,
        39
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        35,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        35,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        35,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        39
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        39,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        39,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        39,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        42,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        42,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        44,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        13,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        28
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        28,
        31
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        28,
        33
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        28,
        35
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        28,
        39
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        28,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        28,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        28,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        31
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        31,
        33
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        31,
        35
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        31,
        39
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        31,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        31,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        31,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        33
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        33,
        35
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        33,
        39
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        33,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        33,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        33,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        35
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        35,
        39
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        35,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        35,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        35,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        39
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        39,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        39,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        39,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        42
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        42,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        42,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        44
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        44,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        46
      ],
      "mod_code": [
        "if ( myString . find ( \" \" ) )",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        28
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        31
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        33
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        35
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        31
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        31,
        33
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        31,
        35
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        31,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        31,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        31,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        31,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        33
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        33,
        35
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        33,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        33,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        33,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        33,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        35
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        35,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        35,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        35,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        35,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        39,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        39,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        39,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        42,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        42,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        44,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        14,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        31
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        31,
        33
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        31,
        35
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        31,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        31,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        31,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        31,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        33
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        33,
        35
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        33,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        33,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        33,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        33,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        35
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        35,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        35,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        35,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        35,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        39,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        39,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        39,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        42,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        42,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        44,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        28,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        33
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        33,
        35
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        33,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        33,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        33,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        33,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        35
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        35,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        35,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        35,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        35,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        39,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        39,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        39,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        42,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        42,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        44,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        31,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        35
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        35,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        35,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        35,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        35,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        39,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        39,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        39,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        42,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        42,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        44,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        33,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        35
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        35,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        35,
        39,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        35,
        39,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        35,
        39,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        35,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        35,
        42,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        35,
        42,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        35,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        35,
        44,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        35,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        39
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        39,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        39,
        42,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        39,
        42,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        39,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        39,
        44,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        39,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        42
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        42,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        42,
        44,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        42,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        44
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        44,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        13,
        46
      ],
      "mod_code": [
        "substrings . push_back ( myString . substr ( 0 ) , myString . end ( ) ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char>::iterator)’"
    },
    {
      "mod_line": [
        14,
        28
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        31
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        31,
        33
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        31,
        35
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        31,
        39
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        31,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        31,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        31,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        33
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        33,
        35
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        33,
        39
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        33,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        33,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        33,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        35
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        35,
        39
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        35,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        35,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        35,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        39
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        39,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        39,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        39,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        42,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        42,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        44,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        28,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        33
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        33,
        35
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        33,
        39
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        33,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        33,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        33,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        35
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        35,
        39
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        35,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        35,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        35,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        39
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        39,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        39,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        39,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        42,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        42,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        44,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        31,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        35
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        35,
        39
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        35,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        35,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        35,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        39
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        39,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        39,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        39,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        42,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        42,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        44,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        33,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        35
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        35,
        39
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        35,
        39,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        35,
        39,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        35,
        39,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        35,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        35,
        42,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        35,
        42,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        35,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        35,
        44,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        35,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        39
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        39,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        39,
        42,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        39,
        42,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        39,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        39,
        44,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        39,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        42
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        42,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        42,
        44,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        42,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        44
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        44,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" R\\n \" ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        46
      ],
      "mod_code": [
        "first . erase ( myString . begin ( ) + 1 , 0 ) ;",
        "cout << \" PRINT \" << slogan [ k - 1 ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "‘first’ was not declared in this scope"
    }
  ]
}