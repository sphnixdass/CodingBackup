{
  "meta": {
    "index": 1784,
    "hitid": "3VZYA8PITOS46CLFOALO8NJT2B650A",
    "workerid": "A1AYVATMT88U1W",
    "probid": "897A",
    "subid": "48382332"
  },
  "lines": [
    {
      "line": 0,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let op be a void function that accepts int l , int r , char c1 , char c2",
      "code": "void op ( int l , int r , char c1 , char c2 )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "for i = l - 1 to r exclusive",
      "code": "for ( int i = l - 1 ; i < r ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if s [ i ] is equal to c1 , s [ i ] is equal to c2",
      "code": "if ( s [ i ] == c1 ) s [ i ] = c2 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "let n , m be integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n , m , s",
      "code": "cin >> n >> m >> s ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let l , r be integers",
      "code": "int l , r ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "let c1 , c2 be characters",
      "code": "char c1 , c2 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "read l , r , c1 , c2",
      "code": "cin >> l >> r >> c1 >> c2 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "send l , r , c1 , c2 into op",
      "code": "op ( l , r , c1 , c2 ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print s and newline",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "op . send ( l , r , c1 , c2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘send’ in ‘op’, which is of non-class type ‘void(int, int, char, char)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "char ans , c2 ;"
      ],
      "err_line": 11,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "op . push_back ( l , r , c1 , c2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘push_back’ in ‘op’, which is of non-class type ‘void(int, int, char, char)’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        3,
        12
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "op . send ( l , r , c1 , c2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        3,
        12,
        0
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "op . send ( l , r , c1 , c2 ) ;",
        "string S ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        3,
        12,
        10
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "op . send ( l , r , c1 , c2 ) ;",
        "char ans , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        3,
        12,
        11
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "op . send ( l , r , c1 , c2 ) ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        3,
        0
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "string S ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        3,
        0,
        10
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "string S ;",
        "char ans , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        3,
        0,
        11
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "string S ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        3,
        10
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "char ans , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        3,
        10,
        11
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "char ans , c2 ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        3,
        11
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "op . send ( l , r , c1 , c2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        12,
        0
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "op . send ( l , r , c1 , c2 ) ;",
        "string S ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        12,
        0,
        10
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "op . send ( l , r , c1 , c2 ) ;",
        "string S ;",
        "char ans , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        12,
        0,
        11
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "op . send ( l , r , c1 , c2 ) ;",
        "string S ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        12,
        10
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "op . send ( l , r , c1 , c2 ) ;",
        "char ans , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        12,
        10,
        11
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "op . send ( l , r , c1 , c2 ) ;",
        "char ans , c2 ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        12,
        11
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "op . send ( l , r , c1 , c2 ) ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "string S ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        0,
        10
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "string S ;",
        "char ans , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        0,
        10,
        11
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "string S ;",
        "char ans , c2 ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        0,
        11
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "string S ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "char ans , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        10,
        11
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "char ans , c2 ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "void op ( int l , int r , char c2 , char c2 )",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘char c2’"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "op . send ( l , r , c1 , c2 ) ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘send’ in ‘op’, which is of non-class type ‘void(int, int, char, char)’"
    },
    {
      "mod_line": [
        3,
        12,
        0
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "op . send ( l , r , c1 , c2 ) ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        0,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "op . send ( l , r , c1 , c2 ) ;",
        "string S ;",
        "char ans , c2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        0,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "op . send ( l , r , c1 , c2 ) ;",
        "string S ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "op . send ( l , r , c1 , c2 ) ;",
        "char ans , c2 ;"
      ],
      "err_line": 11,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        10,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "op . send ( l , r , c1 , c2 ) ;",
        "char ans , c2 ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 11,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "op . send ( l , r , c1 , c2 ) ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘send’ in ‘op’, which is of non-class type ‘void(int, int, char, char)’"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "string S ;",
        "char ans , c2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        10,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "string S ;",
        "char ans , c2 ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "string S ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "char ans , c2 ;"
      ],
      "err_line": 11,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "if ( s [ i ] == ' c1 ' ) s [ i ] = c2 ;",
        "char ans , c2 ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 11,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "op . send ( l , r , c1 , c2 ) ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        0,
        10
      ],
      "mod_code": [
        "op . send ( l , r , c1 , c2 ) ;",
        "string S ;",
        "char ans , c2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        0,
        10,
        11
      ],
      "mod_code": [
        "op . send ( l , r , c1 , c2 ) ;",
        "string S ;",
        "char ans , c2 ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        0,
        11
      ],
      "mod_code": [
        "op . send ( l , r , c1 , c2 ) ;",
        "string S ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "op . send ( l , r , c1 , c2 ) ;",
        "char ans , c2 ;"
      ],
      "err_line": 11,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10,
        11
      ],
      "mod_code": [
        "op . send ( l , r , c1 , c2 ) ;",
        "char ans , c2 ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 11,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "op . send ( l , r , c1 , c2 ) ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 12,
      "err_msg": "request for member ‘send’ in ‘op’, which is of non-class type ‘void(int, int, char, char)’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "string S ;",
        "char ans , c2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        10,
        11
      ],
      "mod_code": [
        "string S ;",
        "char ans , c2 ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "string S ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "char ans , c2 ;",
        "cin >> l >> r >> c1 , c2 ;"
      ],
      "err_line": 11,
      "err_msg": "‘c1’ was not declared in this scope"
    }
  ]
}