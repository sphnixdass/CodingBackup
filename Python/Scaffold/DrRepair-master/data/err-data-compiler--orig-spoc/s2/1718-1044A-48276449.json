{
  "meta": {
    "index": 1718,
    "hitid": "3OEWW2KGQJ5KD6SR515IW033DVHODO",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1044A",
    "subid": "48276449"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer maxn = 1e5 + 7",
      "code": "const int maxn = 1e5 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer array x size maxn , integers n , m , ans",
      "code": "int x [ maxn ] , n , m , ans ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare boolean array vis size maxn",
      "code": "bool vis [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive , read x [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort elements from x to x + n",
      "code": "sort ( x , x + n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare u , v , y as integers",
      "code": "int u , v , y ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read u and v and y",
      "code": "cin >> u >> v >> y ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if u is 1",
      "code": "if ( u == 1 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if v is 1e9",
      "code": "if ( v == 1e9 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "end current loop iteration",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "declare integer k = ( first element larger than v between x and x + n ) - x - 1",
      "code": "int k = upper_bound ( x , x + n , v ) - x - 1 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "while bitwise not and vis [ k ] , decrement k",
      "code": "while ( ~ k && vis [ k ] ) k -- ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if bitwise not k , increment ans , let vis [ k ] be 1",
      "code": "if ( ~ k ) ans ++ , vis [ k ] = 1 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print ans , newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [100007]’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int x [ maxn ] , n , n , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool s [ maxn ] ;"
      ],
      "err_line": 16,
      "err_msg": "‘vis’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int k = ( x > v . first + x + n ) - x - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘v’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( ans != k ) ans [ k ] = vis [ k ] ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [100007]’"
    },
    {
      "mod_line": [
        15,
        16,
        17
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [100007]’"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        7
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        17,
        13
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "break ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [100007]’"
    },
    {
      "mod_line": [
        15,
        16,
        7
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        7,
        13
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "break ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        13
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;",
        "break ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [100007]’"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [100007]’"
    },
    {
      "mod_line": [
        15,
        17,
        7
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        17,
        7,
        16
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        17,
        7,
        13
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "break ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        17,
        16
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [100007]’"
    },
    {
      "mod_line": [
        15,
        17,
        16,
        13
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }",
        "break ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [100007]’"
    },
    {
      "mod_line": [
        15,
        17,
        13
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "break ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [100007]’"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        7,
        16
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        7,
        16,
        13
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }",
        "break ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        7,
        13
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "break ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [100007]’"
    },
    {
      "mod_line": [
        15,
        16,
        13
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }",
        "break ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [100007]’"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "int k = ( x . first + x + n ) - x - 1 ;",
        "break ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘first’ in ‘x’, which is of non-class type ‘int [100007]’"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        17,
        7
      ],
      "mod_code": [
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        17,
        7,
        13
      ],
      "mod_code": [
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "break ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        17,
        13
      ],
      "mod_code": [
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;",
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "break ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        7
      ],
      "mod_code": [
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        7,
        13
      ],
      "mod_code": [
        "while ( ! vis [ k ] && vis [ k ] ) k -- ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "break ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        7
      ],
      "mod_code": [
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        7,
        16
      ],
      "mod_code": [
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        7,
        16,
        13
      ],
      "mod_code": [
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }",
        "break ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        7,
        13
      ],
      "mod_code": [
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "break ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        16
      ],
      "mod_code": [
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        16,
        13
      ],
      "mod_code": [
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }",
        "break ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        13
      ],
      "mod_code": [
        "if ( ! k ) ans [ k ] ++ , vis [ k ] = 1 ;",
        "break ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        16,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "while ( ! vis [ k ] && vis [ k ] ) { k -- ; }",
        "break ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "break ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}