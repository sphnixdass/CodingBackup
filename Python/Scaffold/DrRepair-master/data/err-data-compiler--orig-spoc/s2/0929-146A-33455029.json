{
  "meta": {
    "index": 929,
    "hitid": "33EEIIWHK719SZ5TBZXGRR4AS31QVV",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "146A",
    "subid": "33455029"
  },
  "lines": [
    {
      "line": 0,
      "text": "set M to 300 +",
      "code": "const int M = 300 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create int n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set ok1 to true",
      "code": "bool ok1 = true ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "sum1 = 0",
      "code": "int sum1 = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "sum2 = 0",
      "code": "int sum2 = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if s [ i ] different from 4 and s [ i ] differento from 7 , set ok1 to false",
      "code": "if ( s [ i ] != ' 4 ' && s [ i ] != ' 7 ' ) { ok1 = false ; }",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if i less than n / 2",
      "code": "if ( i < n / 2 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "sum1 = sum1 + s [ i ] - 0",
      "code": "sum1 = sum1 + s [ i ] - ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "assign sum2 + s [ i ] - 0 to sum2",
      "code": "sum2 = sum2 + s [ i ] - ' 0 ' ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if ok1 and sum1 equal to sum2",
      "code": "if ( ok1 && sum1 == sum2 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "M = 300 + 300 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "ok1 = true ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "sum2 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum2’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "sum1 = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘sum1’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( s [ i ] != ' 4 ' && s [ i ] != ' 7 ' ) ok1 [ i ] = false ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( ok1 == sum2 ) { sum1 = sum2 ; }"
      ],
      "err_line": 19,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "ok1 = true ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        8
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "ok1 = true ;",
        "sum2 = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        8,
        14
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "ok1 = true ;",
        "sum2 = 0 ;",
        "sum2 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        8,
        17
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "ok1 = true ;",
        "sum2 = 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        8,
        12
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "ok1 = true ;",
        "sum2 = 0 ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        14
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "ok1 = true ;",
        "sum2 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        14,
        17
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "ok1 = true ;",
        "sum2 += s [ i ] - 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        14,
        12
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "ok1 = true ;",
        "sum2 += s [ i ] - 0 ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        17
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "ok1 = true ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        17,
        12
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "ok1 = true ;",
        "if ( ok1 == sum2 && sum1 == sum2 )",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        12
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "ok1 = true ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "sum2 = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        14
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "sum2 = 0 ;",
        "sum2 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        14,
        17
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "sum2 = 0 ;",
        "sum2 += s [ i ] - 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        14,
        12
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "sum2 = 0 ;",
        "sum2 += s [ i ] - 0 ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        17
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "sum2 = 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        17,
        12
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "sum2 = 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        12
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "sum2 = 0 ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "sum2 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        17
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "sum2 += s [ i ] - 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        17,
        12
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "sum2 += s [ i ] - 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14,
        12
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "sum2 += s [ i ] - 0 ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        17,
        12
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "M = 300 + 300 ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘M’ does not name a type"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "ok1 = true ;",
        "sum2 = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        14
      ],
      "mod_code": [
        "ok1 = true ;",
        "sum2 = 0 ;",
        "sum2 += s [ i ] - 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        17
      ],
      "mod_code": [
        "ok1 = true ;",
        "sum2 = 0 ;",
        "sum2 += s [ i ] - 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        12
      ],
      "mod_code": [
        "ok1 = true ;",
        "sum2 = 0 ;",
        "sum2 += s [ i ] - 0 ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        17
      ],
      "mod_code": [
        "ok1 = true ;",
        "sum2 = 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        17,
        12
      ],
      "mod_code": [
        "ok1 = true ;",
        "sum2 = 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        12
      ],
      "mod_code": [
        "ok1 = true ;",
        "sum2 = 0 ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "ok1 = true ;",
        "sum2 += s [ i ] - 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        17
      ],
      "mod_code": [
        "ok1 = true ;",
        "sum2 += s [ i ] - 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        17,
        12
      ],
      "mod_code": [
        "ok1 = true ;",
        "sum2 += s [ i ] - 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        12
      ],
      "mod_code": [
        "ok1 = true ;",
        "sum2 += s [ i ] - 0 ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "ok1 = true ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        17,
        12
      ],
      "mod_code": [
        "ok1 = true ;",
        "if ( ok1 == sum2 && sum1 == sum2 )",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "ok1 = true ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok1’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "sum2 = 0 ;",
        "sum2 += s [ i ] - 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum2’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        17
      ],
      "mod_code": [
        "sum2 = 0 ;",
        "sum2 += s [ i ] - 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 8,
      "err_msg": "‘sum2’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        12
      ],
      "mod_code": [
        "sum2 = 0 ;",
        "sum2 += s [ i ] - 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum2’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        14,
        12
      ],
      "mod_code": [
        "sum2 = 0 ;",
        "sum2 += s [ i ] - 0 ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum2’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "sum2 = 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )"
      ],
      "err_line": 8,
      "err_msg": "‘sum2’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        12
      ],
      "mod_code": [
        "sum2 = 0 ;",
        "if ( ok1 == sum2 && sum1 == sum2 )",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum2’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "sum2 = 0 ;",
        "sum1 += s [ i ] - 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘sum2’ was not declared in this scope"
    }
  ]
}