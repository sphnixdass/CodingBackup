{
  "meta": {
    "index": 1762,
    "hitid": "3HXK2V1N4K99IJDDKT8TV83XPI42G9",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "897A",
    "subid": "48790358"
  },
  "lines": [
    {
      "line": 0,
      "text": "create character array k of size 105",
      "code": "char k [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create characters s , t",
      "code": "char s , t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n values of k for k [ 1 ] to k [ n ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> k [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = 1 to m and increment i",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integers l , r",
      "code": "int l , r ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read l , r , s , t",
      "code": "cin >> l >> r >> s >> t ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for integer j = 1 to r and increment j",
      "code": "for ( int j = l ; j <= r ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if k [ j ] is equal to s then set k [ j ] to t",
      "code": "if ( k [ j ] == s ) k [ j ] = t ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print n values of k from k [ 1 ] to k [ n ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cout << k [ i ] ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print a new line",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char arr [ 105 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char ans , t ;"
      ],
      "err_line": 8,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "l , r ;"
      ],
      "err_line": 7,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "<< \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int j = 1 ; j <= r ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        9,
        13
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        6
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        14
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "<< \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        9,
        6
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        9,
        6,
        14
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "<< \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        9,
        14
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int j = 1 ; j <= r ; j ++ )",
        "<< \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        13,
        6
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        13,
        6,
        14
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "for ( int i = 1 ; i < m ; i ++ )",
        "<< \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        13,
        14
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "<< \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6,
        14
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "for ( int i = 1 ; i < m ; i ++ )",
        "<< \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "for ( int 1 = 0 ; i < n ; ++ n ) cin >> k [ i ] ;",
        "<< \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        13,
        6,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "for ( int i = 1 ; i < m ; i ++ )",
        "<< \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        13,
        6,
        5
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "for ( int i = 1 ; i < m ; i ++ )",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        13,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "<< \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        13,
        14,
        5
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "<< \" \\n \" ;",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        13,
        5
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        6,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "<< \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        6,
        14,
        5
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "<< \" \\n \" ;",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        6,
        5
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= r ; j ++ )",
        "<< \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        14,
        5
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= r ; j ++ )",
        "<< \" \\n \" ;",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "for ( int j = 1 ; j <= r ; j ++ )",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        13,
        6,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "for ( int i = 1 ; i < m ; i ++ )",
        "<< \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        6,
        14,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "for ( int i = 1 ; i < m ; i ++ )",
        "<< \" \\n \" ;",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        13,
        6,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "for ( int i = 1 ; i < m ; i ++ )",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "<< \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13,
        14,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "<< \" \\n \" ;",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; n < n ; n ++ ) { cout << k [ i ] ; }",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "for ( int i = 1 ; i < m ; i ++ )",
        "<< \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        14,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i < m ; i ++ )",
        "<< \" \\n \" ;",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i < m ; i ++ )",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "<< \" \\n \" ;",
        "for ( int 1 = 0 ; i < n ; ++ i ) cin >> k [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    }
  ]
}