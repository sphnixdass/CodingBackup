{
  "meta": {
    "index": 1287,
    "hitid": "3S8APUMBJXDXSWHES2VMEG6PHMIBFB",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "959A",
    "subid": "41567563"
  },
  "lines": [
    {
      "line": 0,
      "text": "n is long long",
      "code": "long long n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n and 1",
      "code": "if ( n & 1 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print \" Ehab \"",
      "code": "cout << \" Ehab \"",
      "indent": 2
    },
    {
      "line": 5,
      "text": "print newline",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" Mahmoud \"",
      "code": "cout << \" Mahmoud \"",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print newline",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << \" Ehab \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << \" Mahmoud \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "puts ( \" Ehab \" ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "puts ( \" Mahmoud \" ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << endl ;",
        "cout << \" Mahmoud \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << endl ;",
        "cout << \" Mahmoud \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << endl ;",
        "cout << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << endl ;",
        "cout << \" \\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << \" Mahmoud \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << \" Mahmoud \" ;",
        "cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << \" Mahmoud \" ;",
        "cout << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << \" Mahmoud \" ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << \" Mahmoud \" ;",
        "cout << \" \\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << \" Mahmoud \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << \" \\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Mahmoud \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Mahmoud \" ;",
        "cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        2
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Mahmoud \" ;",
        "cout << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Mahmoud \" ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        2
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Mahmoud \" ;",
        "cout << \" \\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Mahmoud \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        2
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        2
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" \\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cout << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "cout << \" Mahmoud \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "cout << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "cout << \" \\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘cout’"
    }
  ]
}