{
  "meta": {
    "index": 2768,
    "hitid": "33Q5P9PUSPGM7I0K7ELOSSSPCZACZG",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "900A",
    "subid": "48323654"
  },
  "lines": [
    {
      "line": 0,
      "text": "N = constant integer = 100010",
      "code": "const int N = 100 * 1000 + 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n = integer , cnt = integer = 0",
      "code": "int n , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "x , y = integer",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read x , y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if x > 0 , then increase cnt by 1",
      "code": "if ( x > 0 ) cnt ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if n - cnt < = 1 or cnt < = 1",
      "code": "if ( n - cnt <= 1 or cnt <= 1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print Yes",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print No",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> x , y ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> x , y ;",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> x , y ;",
        "cout << \" NO\\n \" ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> x , y ;",
        "cout << \" NO\\n \" ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        12,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> x , y ;",
        "cout << \" NO\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> x , y ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> x , y ;",
        "cout << \" YES\\n \" ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> x , y ;",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> x , y ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        11,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> x , y ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cin >> x , y ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" NO\\n \" ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        10,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" NO\\n \" ;",
        "cout << \" YES\\n \" ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        10,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" NO\\n \" ;",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" NO\\n \" ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        11,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" NO\\n \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" NO\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES\\n \" ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        11,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES\\n \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        10,
        11
      ],
      "mod_code": [
        "cin >> x , y ;",
        "cout << \" NO\\n \" ;",
        "cout << \" YES\\n \" ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        12,
        11
      ],
      "mod_code": [
        "cin >> x , y ;",
        "cout << \" NO\\n \" ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        12,
        11,
        3
      ],
      "mod_code": [
        "cin >> x , y ;",
        "cout << \" NO\\n \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "cin >> x , y ;",
        "cout << \" YES\\n \" ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        3
      ],
      "mod_code": [
        "cin >> x , y ;",
        "cout << \" YES\\n \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "cin >> x , y ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        11,
        3
      ],
      "mod_code": [
        "cin >> x , y ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        11
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;",
        "cout << \" YES\\n \" ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        11,
        3
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;",
        "cout << \" YES\\n \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        3
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        3
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}