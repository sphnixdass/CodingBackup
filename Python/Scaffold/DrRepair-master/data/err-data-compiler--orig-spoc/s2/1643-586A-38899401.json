{
  "meta": {
    "index": 1643,
    "hitid": "3L4YG5VW9NMT9912FSR2L6R49HEDDK",
    "workerid": "AIWEXPJAU66D9",
    "probid": "586A",
    "subid": "38899401"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , x and c be ints with c = 0",
      "code": "int n , x , c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare vector of integers v",
      "code": "vector < int > v ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i from 0 to n exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read from the input to x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "add element = x at the end of v",
      "code": "v . push_back ( x ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "increment c if v [ 0 ] is equal to 1",
      "code": "if ( v [ 0 ] == 1 ) { c ++ ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if n = 1",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "in a for loop , change i from 1 to n - 1 exclusive incrementing i",
      "code": "for ( int i = 1 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if v [ i ] = 1",
      "code": "if ( v [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment c by one",
      "code": "c ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increment c by one if v [ i + 1 ] = 1 and c > 0 and v [ i - 1 ] ! = 0",
      "code": "if ( v [ i + 1 ] == 1 && c > 0 && v [ i - 1 ] != 0 ) { c ++ ; }",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "add 1 to c if v [ n - 1 ] = 1",
      "code": "if ( v [ n - 1 ] == 1 ) { c ++ ; }",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "vector < int > v [ 4 ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘push_back’ in ‘v’, which is of non-class type ‘std::vector<int> [4]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "cin >> n >> n ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        3,
        13
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "cin >> n >> n ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        3,
        13,
        16
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "cin >> n >> n ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        3,
        13,
        5
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "cin >> n >> n ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        3,
        13,
        10
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "cin >> n >> n ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "cout << c ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        3,
        16
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        3,
        16,
        5
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "cin >> n >> n ;",
        "n",
        "x = getchar ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        3,
        16,
        10
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "cin >> n >> n ;",
        "n",
        "cout << c ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        3,
        5
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "cin >> n >> n ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        3,
        5,
        10
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "cin >> n >> n ;",
        "x = getchar ( ) ;",
        "cout << c ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        3,
        10
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "cin >> n >> n ;",
        "cout << c ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        13
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        13,
        16
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        13,
        16,
        5
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "n",
        "x = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        13,
        16,
        10
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "n",
        "cout << c ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        13,
        5
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        13,
        5,
        10
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "x = getchar ( ) ;",
        "cout << c ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        13,
        10
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "cout << c ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        16
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        16,
        5
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "n",
        "x = getchar ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        16,
        5,
        10
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "n",
        "x = getchar ( ) ;",
        "cout << c ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        16,
        10
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "n",
        "cout << c ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        5,
        10
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "x = getchar ( ) ;",
        "cout << c ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        10
      ],
      "mod_code": [
        "if ( v [ i + 1 ] == 1 && c [ i - 1 ] != 0 && v [ i - 1 ] ) c ++ ;",
        "cout << c ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13,
        16
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13,
        16,
        5
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "n",
        "x = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13,
        16,
        10
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "n",
        "cout << c ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13,
        5
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13,
        5,
        10
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "x = getchar ( ) ;",
        "cout << c ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13,
        10
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "cout << c ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        16,
        5
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "n",
        "x = getchar ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        16,
        5,
        10
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "n",
        "x = getchar ( ) ;",
        "cout << c ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        16,
        10
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "n",
        "cout << c ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        16,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "n",
        "x = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        16,
        5,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "n",
        "x = getchar ( ) ;",
        "cout << c ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        16,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "n",
        "cout << c ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "x = getchar ( ) ;",
        "cout << c ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i < n - 1 ; i ++ )",
        "cout << c ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "n",
        "x = getchar ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        5,
        10
      ],
      "mod_code": [
        "n",
        "x = getchar ( ) ;",
        "cout << c ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        10
      ],
      "mod_code": [
        "n",
        "cout << c ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}