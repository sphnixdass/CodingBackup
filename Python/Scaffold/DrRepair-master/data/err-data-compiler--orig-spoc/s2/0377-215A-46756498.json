{
  "meta": {
    "index": 377,
    "hitid": "36GJS3V78VK9OFBLREELUPPERTJGJ3",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "215A",
    "subid": "46756498"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "raed n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "v = int vector of size n",
      "code": "vector < int > v ( n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n values into v",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> v [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "m = int",
      "code": "int m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "vv = int vector of size m",
      "code": "vector < int > vv ( m ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read m values into vv",
      "code": "for ( int i = 0 ; i < m ; i ++ ) { cin >> vv [ i ] ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "ratios = int vector",
      "code": "vector < int > ratios ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to m",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for j = 0 to n",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if vv [ i ] is a multiple of v [ j ] then append vv [ i ] / v [ j ] to ratios",
      "code": "if ( vv [ i ] % v [ j ] == 0 ) { ratios . push_back ( vv [ i ] / v [ j ] ) ; }",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "gear = int with gear = 0",
      "code": "int gear = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "sort ratios",
      "code": "sort ( ratios . begin ( ) , ratios . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if size of ratios is greater than 0",
      "code": "if ( ratios . size ( ) > 0 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "MAX = int with MAX = last value of ratios",
      "code": "int MAX = ratios [ ratios . size ( ) - 1 ] ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "for i = size of ratios - 1 to 0 inclusive decrementing i",
      "code": "for ( int i = ratios . size ( ) - 1 ; i >= 0 ; i -- )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if ratios [ i ] is MAX",
      "code": "if ( ratios [ i ] == MAX )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "increment gear",
      "code": "gear ++ ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 23,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print gear",
      "code": "cout << gear << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int MAX = ratios . top ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "‘class std::vector<int>’ has no member named ‘top’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "vector < int = ratios ;"
      ],
      "err_line": 9,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "sort ( ratios , ratios + n ) ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int MAX = * ratios . top ( ) ;"
      ],
      "err_line": 18,
      "err_msg": "‘class std::vector<int>’ has no member named ‘top’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        12,
        18
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "int MAX = ratios . top ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        12,
        18,
        3
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "int MAX = ratios . top ( ) ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        12,
        18,
        10
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "int MAX = ratios . top ( ) ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        12,
        3
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        12,
        3,
        10
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "vector < int > v [ n ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        12,
        10
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "int MAX = ratios . top ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        18,
        3
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "int MAX = ratios . top ( ) ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        18,
        3,
        12
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "int MAX = ratios . top ( ) ;",
        "vector < int > v [ n ] ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        18,
        3,
        10
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "int MAX = ratios . top ( ) ;",
        "vector < int > v [ n ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        18,
        12
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "int MAX = ratios . top ( ) ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        18,
        12,
        10
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "int MAX = ratios . top ( ) ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        18,
        10
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "int MAX = ratios . top ( ) ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        3,
        12
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "vector < int > v [ n ] ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        3,
        12,
        10
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "vector < int > v [ n ] ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        3,
        10
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "vector < int > v [ n ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        12,
        10
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "vector < int > vv [ m ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "int MAX = ratios . top ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        12,
        18,
        3
      ],
      "mod_code": [
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "int MAX = ratios . top ( ) ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        18,
        3,
        10
      ],
      "mod_code": [
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "int MAX = ratios . top ( ) ;",
        "vector < int > v [ n ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        18,
        10
      ],
      "mod_code": [
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "int MAX = ratios . top ( ) ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        3,
        10
      ],
      "mod_code": [
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "vector < int > v [ n ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "if ( vv [ i ] % v [ j ] == 0 ) ratios += vv [ i ] / v [ j ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        3
      ],
      "mod_code": [
        "int MAX = ratios . top ( ) ;",
        "vector < int > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        18,
        3,
        12
      ],
      "mod_code": [
        "int MAX = ratios . top ( ) ;",
        "vector < int > v [ n ] ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        18,
        3,
        12,
        10
      ],
      "mod_code": [
        "int MAX = ratios . top ( ) ;",
        "vector < int > v [ n ] ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        18,
        3,
        10
      ],
      "mod_code": [
        "int MAX = ratios . top ( ) ;",
        "vector < int > v [ n ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        18,
        12
      ],
      "mod_code": [
        "int MAX = ratios . top ( ) ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;"
      ],
      "err_line": 12,
      "err_msg": "no ‘operator++(int)’ declared for postfix ‘++’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        12,
        10
      ],
      "mod_code": [
        "int MAX = ratios . top ( ) ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        10
      ],
      "mod_code": [
        "int MAX = ratios . top ( ) ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "vector < int > v [ n ] ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        12,
        10
      ],
      "mod_code": [
        "vector < int > v [ n ] ;",
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "vector < int > v [ n ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "if ( vv [ i ] % v [ j ] % v [ i ] == 0 ) ratios ++ ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}