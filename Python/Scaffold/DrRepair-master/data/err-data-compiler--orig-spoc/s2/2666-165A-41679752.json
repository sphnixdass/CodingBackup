{
  "meta": {
    "index": 2666,
    "hitid": "35A1YQPVFEAFD72VS0AUERJPO5FI5A",
    "workerid": "A1APYLD4DUK33J",
    "probid": "165A",
    "subid": "41679752"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer arrays x , y , with x size 201 , y size 201 , create 2d integer array a with size 2001 by 2001",
      "code": "int x [ 201 ] , y [ 201 ] , a [ 2001 ] [ 2001 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers n , x1 , y1 , x2 , y2",
      "code": "int n , x1 , y1 , x2 , y2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set x1 to y1 to - 10005",
      "code": "x1 = y1 = - 10005 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set x2 to y2 to 10005",
      "code": "x2 = y2 = 10005 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read x [ i ] read y [ i ]",
      "code": "cin >> x [ i ] >> y [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment x [ i ] by 1000",
      "code": "x [ i ] += 1000 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment y [ i ] by 1000",
      "code": "y [ i ] += 1000 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set a [ x [ i ] ] [ y [ i ] ] to 1",
      "code": "a [ x [ i ] ] [ y [ i ] ] = 1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if x1 is less than x [ i ] , set x1 to x [ i ]",
      "code": "if ( x1 < x [ i ] ) { x1 = x [ i ] ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if x2 is greater than x [ i ] , set x2 to x [ i ]",
      "code": "if ( x2 > x [ i ] ) { x2 = x [ i ] ; }",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if y1 is less than y [ i ] , set y1 to y [ i ]",
      "code": "if ( y1 < y [ i ] ) { y1 = y [ i ] ; }",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if y2 is greater than y [ i ] , set y2 to y [ i ]",
      "code": "if ( y2 > y [ i ] ) { y2 = y [ i ] ; }",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "create integers r , c0 , c1 , c2 , c3 , with r = 0",
      "code": "int r = 0 , c0 , c1 , c2 , c3 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set c0 to c1 to c2 to c3 to 0",
      "code": "c0 = c1 = c2 = c3 = 0 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "for j = x [ i ] + 1 to x1 inclusive",
      "code": "for ( int j = x [ i ] + 1 ; j <= x1 ; j ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if a [ j ] [ y [ i ] ] is true",
      "code": "if ( a [ j ] [ y [ i ] ] )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "set c0 to 1",
      "code": "c0 = 1 ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if c0 is true",
      "code": "if ( c0 )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "for j = x2 to x [ i ] exclusive",
      "code": "for ( int j = x2 ; j < x [ i ] ; j ++ )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "if a [ j ] [ y [ i ] ]",
      "code": "if ( a [ j ] [ y [ i ] ] )",
      "indent": 4
    },
    {
      "line": 28,
      "text": "set c1 to 1",
      "code": "c1 = 1 ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "break loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 32,
      "text": "if c1 is true",
      "code": "if ( c1 )",
      "indent": 3
    },
    {
      "line": 33,
      "text": "for j = y [ i ] + 1 to y1 inclusive",
      "code": "for ( int j = y [ i ] + 1 ; j <= y1 ; j ++ )",
      "indent": 4
    },
    {
      "line": 34,
      "text": "if a [ x [ i ] ] [ j ] is true",
      "code": "if ( a [ x [ i ] ] [ j ] )",
      "indent": 5
    },
    {
      "line": 35,
      "text": "set c2 to 1",
      "code": "c2 = 1 ;",
      "indent": 6
    },
    {
      "line": 36,
      "text": "break loop",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 39,
      "text": "if c2 is true",
      "code": "if ( c2 )",
      "indent": 4
    },
    {
      "line": 40,
      "text": "for j = y2 to y [ i ] exclusive",
      "code": "for ( int j = y2 ; j < y [ i ] ; j ++ )",
      "indent": 5
    },
    {
      "line": 41,
      "text": "if a [ x [ i ] ] [ j ]",
      "code": "if ( a [ x [ i ] ] [ j ] )",
      "indent": 6
    },
    {
      "line": 42,
      "text": "set c3 to 1",
      "code": "c3 = 1 ;",
      "indent": 7
    },
    {
      "line": 43,
      "text": "break loop",
      "code": "break ;",
      "indent": 7
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 6
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 49,
      "text": "if c3 is true , increment r",
      "code": "if ( c3 ) { r ++ ; }",
      "indent": 2
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 51,
      "text": "print r print newline",
      "code": "cout << r << endl ;",
      "indent": 1
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int x [ 2001 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "x2 = 10005 = 10005 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> x >> i >> y [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [201]’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "y [ i ] = y + 1000 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "a [ x [ i ] ] = y [ i ] ] = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [2001]’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int r , c0 , c1 = 0 , c2 = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "‘c3’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( j = x [ i ] + 1 ; j <= x1 ; j ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "c0 = l ;"
      ],
      "err_line": 21,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "for ( j = x2 ; j < x [ i ] ; j ++ )"
      ],
      "err_line": 26,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( j = y [ i ] + 1 ; j <= y1 ; j ++ )"
      ],
      "err_line": 33,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 34,
      "err_msg": "invalid types ‘int [201][int [201]]’ for array subscript"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "for ( j = y2 ; j < y [ i ] ; j ++ )"
      ],
      "err_line": 40,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 41,
      "err_msg": "invalid types ‘int [201][int [201]]’ for array subscript"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "c3 = l ;"
      ],
      "err_line": 42,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 43,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "int r , c0 , c1 = 0 , c2 , c3 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        16,
        43
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        16,
        43,
        21
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "break break ;",
        "c0 = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        16,
        43,
        41
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "break break ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        16,
        21
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "c0 = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        16,
        21,
        41
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "c0 = l ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        16,
        41
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        43
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "break break ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        43,
        16
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "break break ;",
        "int r , c0 , c1 = 0 , c2 = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        43,
        16,
        21
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "break break ;",
        "int r , c0 , c1 = 0 , c2 = 0 ;",
        "c0 = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        43,
        16,
        41
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "break break ;",
        "int r , c0 , c1 = 0 , c2 = 0 ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        43,
        21
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "break break ;",
        "c0 = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        43,
        21,
        41
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "break break ;",
        "c0 = l ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        43,
        41
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "break break ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "int r , c0 , c1 = 0 , c2 = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        16,
        21
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "int r , c0 , c1 = 0 , c2 = 0 ;",
        "c0 = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        16,
        21,
        41
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "int r , c0 , c1 = 0 , c2 = 0 ;",
        "c0 = l ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        16,
        41
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "int r , c0 , c1 = 0 , c2 = 0 ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "c0 = l ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        21,
        41
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "c0 = l ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        0,
        41
      ],
      "mod_code": [
        "int x [ 201 ] , y [ 201 ] , y [ 201 ] , y [ 201 ] ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [201]’"
    },
    {
      "mod_line": [
        16,
        43
      ],
      "mod_code": [
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "break break ;"
      ],
      "err_line": 43,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        16,
        43,
        21
      ],
      "mod_code": [
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "break break ;",
        "c0 = l ;"
      ],
      "err_line": 21,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        43,
        21,
        41
      ],
      "mod_code": [
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "break break ;",
        "c0 = l ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 21,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        43,
        41
      ],
      "mod_code": [
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "break break ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 41,
      "err_msg": "invalid types ‘int [201][int [201]]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "c0 = l ;"
      ],
      "err_line": 21,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        21,
        41
      ],
      "mod_code": [
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "c0 = l ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 21,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        41
      ],
      "mod_code": [
        "int r , c0 , c1 = 0 , c2 , c3 ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 41,
      "err_msg": "invalid types ‘int [201][int [201]]’ for array subscript"
    },
    {
      "mod_line": [
        43,
        16
      ],
      "mod_code": [
        "break break ;",
        "int r , c0 , c1 = 0 , c2 = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "‘c3’ was not declared in this scope"
    },
    {
      "mod_line": [
        43,
        16,
        21
      ],
      "mod_code": [
        "break break ;",
        "int r , c0 , c1 = 0 , c2 = 0 ;",
        "c0 = l ;"
      ],
      "err_line": 18,
      "err_msg": "‘c3’ was not declared in this scope"
    },
    {
      "mod_line": [
        43,
        16,
        21,
        41
      ],
      "mod_code": [
        "break break ;",
        "int r , c0 , c1 = 0 , c2 = 0 ;",
        "c0 = l ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 18,
      "err_msg": "‘c3’ was not declared in this scope"
    },
    {
      "mod_line": [
        43,
        16,
        41
      ],
      "mod_code": [
        "break break ;",
        "int r , c0 , c1 = 0 , c2 = 0 ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 18,
      "err_msg": "‘c3’ was not declared in this scope"
    },
    {
      "mod_line": [
        43,
        21
      ],
      "mod_code": [
        "break break ;",
        "c0 = l ;"
      ],
      "err_line": 21,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        43,
        21,
        41
      ],
      "mod_code": [
        "break break ;",
        "c0 = l ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 21,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        43,
        41
      ],
      "mod_code": [
        "break break ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 41,
      "err_msg": "invalid types ‘int [201][int [201]]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "int r , c0 , c1 = 0 , c2 = 0 ;",
        "c0 = l ;"
      ],
      "err_line": 18,
      "err_msg": "‘c3’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        21,
        41
      ],
      "mod_code": [
        "int r , c0 , c1 = 0 , c2 = 0 ;",
        "c0 = l ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 18,
      "err_msg": "‘c3’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        41
      ],
      "mod_code": [
        "int r , c0 , c1 = 0 , c2 = 0 ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 18,
      "err_msg": "‘c3’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        41
      ],
      "mod_code": [
        "c0 = l ;",
        "if ( a [ x [ x ] ] [ j ] )"
      ],
      "err_line": 21,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}