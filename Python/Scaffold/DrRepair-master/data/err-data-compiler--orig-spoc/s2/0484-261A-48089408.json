{
  "meta": {
    "index": 484,
    "hitid": "3BJKPTD2QC6UR8G4JJM1VZQUR4QTRM",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "261A",
    "subid": "48089408"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "N , M = int",
      "code": "int N , M ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read M",
      "code": "cin >> M ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "discountQuantity = 1000000007",
      "code": "int discountQuantity = 1000000007 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to m inclusive",
      "code": "for ( int i = 1 ; i <= M ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "quantity = int",
      "code": "int quantity ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read quantity",
      "code": "cin >> quantity ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "discountQuantity = min ( discountQuantity , quantity )",
      "code": "discountQuantity = min ( discountQuantity , quantity ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read N",
      "code": "cin >> N ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "prices = vector of int",
      "code": "vector < int > prices ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= N ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "price = int",
      "code": "int price ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "read price",
      "code": "cin >> price ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "add price at end of prices",
      "code": "prices . push_back ( price ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "sort prices",
      "code": "sort ( prices . begin ( ) , prices . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "costToPay = 0",
      "code": "int costToPay = 0 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "toPurchase = N - 1",
      "code": "int toPurchase = N - 1 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "while toPurchase > = 0",
      "code": "while ( toPurchase >= 0 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "purchaseQuantity = discountQuantity",
      "code": "int purchaseQuantity = discountQuantity ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "while purchaseQuantity and toPurchase > = 0",
      "code": "while ( purchaseQuantity && toPurchase >= 0 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "add prices [ toPurchase ] to costToPay",
      "code": "costToPay += prices [ toPurchase ] ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "decrement toPurchase",
      "code": "toPurchase -- ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "decrement purchaseQuantity",
      "code": "purchaseQuantity -- ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "subtract 2 from toPurchase",
      "code": "toPurchase -= 2 ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print costToPay",
      "code": "cout << costToPay << endl ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "sort ( prices , prices + n ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "toPurchase = N - 1 ;"
      ],
      "err_line": 18,
      "err_msg": "‘toPurchase’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 20,
      "err_msg": "‘purchaseQuantity’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int N , N ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int N’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "getline ( cin , M ) ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "const long long discountQuantity = 1000000007 ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘min(const long long int&, int&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "vector < int > prices ( vector ) ;"
      ],
      "err_line": 10,
      "err_msg": "missing template arguments before ‘)’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "price << price << endl ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "prices . push ( price ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘class std::vector<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "sort ( prices , prices + prices ) ;"
      ],
      "err_line": 16,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "costToPay = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "‘costToPay’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        11,
        16
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        11,
        18
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        11,
        20
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        11,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        16
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "sort ( prices , prices + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        16,
        18
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        16,
        20
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        16,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        18
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        18,
        20
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        18,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "toPurchase = N - 1 ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        20
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        20,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        11,
        16
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        11,
        16,
        18
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        11,
        16,
        20
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        11,
        16,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        11,
        18
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        11,
        18,
        20
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        11,
        18,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "toPurchase = N - 1 ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        11,
        20
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        11,
        20,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        11,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "sort ( prices , prices + n ) ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        16,
        18
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        16,
        18,
        20
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        16,
        18,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        16,
        20
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "sort ( prices , prices + n ) ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        16,
        20,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "sort ( prices , prices + n ) ;",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        16,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "sort ( prices , prices + n ) ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        18,
        20
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        18,
        20,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        18,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "toPurchase = N - 1 ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        20,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "const int discountQuantity = 1000000007 ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only variable ‘discountQuantity’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        16
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        18
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        18
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "toPurchase = N - 1 ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "sort ( prices , prices + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16,
        18
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16,
        18,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16,
        18,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        18,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        18,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        18,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "toPurchase = N - 1 ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        16,
        18
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        16,
        18,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        16,
        18,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        16,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        16,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        16,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "sort ( prices , prices + n ) ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "toPurchase = N - 1 ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20
      ],
      "mod_code": [
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        21
      ],
      "mod_code": [
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        21
      ],
      "mod_code": [
        "sort ( prices , prices + n ) ;",
        "toPurchase = N - 1 ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20
      ],
      "mod_code": [
        "sort ( prices , prices + n ) ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        21
      ],
      "mod_code": [
        "sort ( prices , prices + n ) ;",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "sort ( prices , prices + n ) ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20
      ],
      "mod_code": [
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;"
      ],
      "err_line": 18,
      "err_msg": "‘toPurchase’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        21
      ],
      "mod_code": [
        "toPurchase = N - 1 ;",
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 18,
      "err_msg": "‘toPurchase’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        21
      ],
      "mod_code": [
        "toPurchase = N - 1 ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 18,
      "err_msg": "‘toPurchase’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "purchaseQuantity = discountQuantity ;",
        "while ( purchaseQuantity >= 0 && toPurchase >= 0 )"
      ],
      "err_line": 20,
      "err_msg": "‘purchaseQuantity’ was not declared in this scope"
    }
  ]
}