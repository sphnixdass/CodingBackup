{
  "meta": {
    "index": 1313,
    "hitid": "32TZXEA1OLEMHI2X6O6EH0WP77F142",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "798A",
    "subid": "48499422"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read s",
      "code": "while ( cin >> s )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "c = 0",
      "code": "int c = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "n = s",
      "code": "string n = s ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 0 to length of s / 2 exclusive",
      "code": "for ( int i = 0 ; i < ( s . length ( ) ) / 2 ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "reverse s",
      "code": "reverse ( s . begin ( ) , s . end ( ) ) ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if s [ i ] is not s [ length of s - i - 1 ] increment c",
      "code": "if ( s [ i ] != s [ s . length ( ) - i - 1 ] ) { c ++ ; }",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if length of s is even and c is 1",
      "code": "if ( ( s . length ( ) ) % 2 == 0 && c == 1 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if length of s is odd and c < = 1",
      "code": "else if ( ( s . length ( ) ) % 2 == 1 && c <= 1 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "n = s ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( s >> s )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "c = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "n -= s ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "n = s ;",
        "else if ( s . size ( ) % 2 != 1 && c <= 1 )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        9
      ],
      "mod_code": [
        "n = s ;",
        "else if ( s . size ( ) % 2 != 1 && c <= 1 )",
        "if ( s . size ( ) % 2 == 1 && c == 1 )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        9,
        13
      ],
      "mod_code": [
        "n = s ;",
        "else if ( s . size ( ) % 2 != 1 && c <= 1 )",
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        9,
        6
      ],
      "mod_code": [
        "n = s ;",
        "else if ( s . size ( ) % 2 != 1 && c <= 1 )",
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        13
      ],
      "mod_code": [
        "n = s ;",
        "else if ( s . size ( ) % 2 != 1 && c <= 1 )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        6
      ],
      "mod_code": [
        "n = s ;",
        "else if ( s . size ( ) % 2 != 1 && c <= 1 )",
        "n",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        6
      ],
      "mod_code": [
        "n = s ;",
        "else if ( s . size ( ) % 2 != 1 && c <= 1 )",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "n = s ;",
        "if ( s . size ( ) % 2 == 1 && c == 1 )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11
      ],
      "mod_code": [
        "n = s ;",
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "else if ( s . length ( ) % 2 != 1 && c <= 1 )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        13
      ],
      "mod_code": [
        "n = s ;",
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "else if ( s . length ( ) % 2 != 1 && c <= 1 )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        6
      ],
      "mod_code": [
        "n = s ;",
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "else if ( s . length ( ) % 2 != 1 && c <= 1 )",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13
      ],
      "mod_code": [
        "n = s ;",
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        6
      ],
      "mod_code": [
        "n = s ;",
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "n",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        6
      ],
      "mod_code": [
        "n = s ;",
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "n = s ;",
        "else if ( s . length ( ) % 2 != 1 && c <= 1 )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        13
      ],
      "mod_code": [
        "n = s ;",
        "else if ( s . length ( ) % 2 != 1 && c <= 1 )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        6
      ],
      "mod_code": [
        "n = s ;",
        "else if ( s . length ( ) % 2 != 1 && c <= 1 )",
        "n",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        6
      ],
      "mod_code": [
        "n = s ;",
        "else if ( s . length ( ) % 2 != 1 && c <= 1 )",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "n = s ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        6
      ],
      "mod_code": [
        "n = s ;",
        "n",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "n = s ;",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        9,
        13
      ],
      "mod_code": [
        "else if ( s . size ( ) % 2 != 1 && c <= 1 )",
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        9,
        13,
        6
      ],
      "mod_code": [
        "else if ( s . size ( ) % 2 != 1 && c <= 1 )",
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "n",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "else if ( s . size ( ) % 2 != 1 && c <= 1 )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13,
        6
      ],
      "mod_code": [
        "else if ( s . size ( ) % 2 != 1 && c <= 1 )",
        "n",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        13
      ],
      "mod_code": [
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "else if ( s . length ( ) % 2 != 1 && c <= 1 )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        6
      ],
      "mod_code": [
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "else if ( s . length ( ) % 2 != 1 && c <= 1 )",
        "n",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        13,
        6
      ],
      "mod_code": [
        "if ( s . size ( ) % 2 == 1 && c == 1 )",
        "n",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "else if ( s . length ( ) % 2 != 1 && c <= 1 )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13,
        6
      ],
      "mod_code": [
        "else if ( s . length ( ) % 2 != 1 && c <= 1 )",
        "n",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "n",
        "reverse ( s , s + n ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}