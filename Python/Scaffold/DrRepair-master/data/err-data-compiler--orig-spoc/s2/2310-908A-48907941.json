{
  "meta": {
    "index": 2310,
    "hitid": "37J05LC5AXD6CV1UPODDO4MHE18JD1",
    "workerid": "AIWEXPJAU66D9",
    "probid": "908A",
    "subid": "48907941"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variable with name res = 0",
      "code": "int res = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create new string a = \" aeiou13579 \"",
      "code": "string a = \" aeiou13579 \" ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string variable str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read str from the input",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "in a for loop , change i from 0 to exclusive",
      "code": "for ( int i = 0 ; str [ i ] ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if there is part , that equals to str [ i ] , in a , increment res",
      "code": "if ( a . find ( str [ i ] ) != - 1 ) res ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < to ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( part == str [ i ] ) a ++ , res ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘part’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char str ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "str >> str ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( part == str [ i ] ) res ++ , res ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘part’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < to ; i ++ )",
        "if ( part == str [ i ] ) a ++ , res ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < to ; i ++ )",
        "if ( part == str [ i ] ) a ++ , res ++ ;",
        "char str ;"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < to ; i ++ )",
        "if ( part == str [ i ] ) a ++ , res ++ ;",
        "char str ;",
        "str >> str ;"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < to ; i ++ )",
        "if ( part == str [ i ] ) a ++ , res ++ ;",
        "str >> str ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < to ; i ++ )",
        "char str ;"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < to ; i ++ )",
        "char str ;",
        "if ( part == str [ i ] ) res ++ , res ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < to ; i ++ )",
        "char str ;",
        "if ( part == str [ i ] ) res ++ , res ++ ;",
        "str >> str ;"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < to ; i ++ )",
        "char str ;",
        "str >> str ;"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < to ; i ++ )",
        "if ( part == str [ i ] ) res ++ , res ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < to ; i ++ )",
        "if ( part == str [ i ] ) res ++ , res ++ ;",
        "str >> str ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < to ; i ++ )",
        "str >> str ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( part == str [ i ] ) a ++ , res ++ ;",
        "char str ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "if ( part == str [ i ] ) a ++ , res ++ ;",
        "char str ;",
        "for ( int i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘part’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        5,
        4
      ],
      "mod_code": [
        "if ( part == str [ i ] ) a ++ , res ++ ;",
        "char str ;",
        "for ( int i = 0 ; i < 3 ; i ++ )",
        "str >> str ;"
      ],
      "err_line": 6,
      "err_msg": "‘part’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "if ( part == str [ i ] ) a ++ , res ++ ;",
        "char str ;",
        "str >> str ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( part == str [ i ] ) a ++ , res ++ ;",
        "for ( int i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘part’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        4
      ],
      "mod_code": [
        "if ( part == str [ i ] ) a ++ , res ++ ;",
        "for ( int i = 0 ; i < 3 ; i ++ )",
        "str >> str ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( part == str [ i ] ) a ++ , res ++ ;",
        "str >> str ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "char str ;",
        "if ( part == str [ i ] ) res ++ , res ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "char str ;",
        "if ( part == str [ i ] ) res ++ , res ++ ;",
        "for ( int i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘part’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        5,
        4
      ],
      "mod_code": [
        "char str ;",
        "if ( part == str [ i ] ) res ++ , res ++ ;",
        "for ( int i = 0 ; i < 3 ; i ++ )",
        "str >> str ;"
      ],
      "err_line": 6,
      "err_msg": "‘part’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        4
      ],
      "mod_code": [
        "char str ;",
        "if ( part == str [ i ] ) res ++ , res ++ ;",
        "str >> str ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "char str ;",
        "for ( int i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        5,
        4
      ],
      "mod_code": [
        "char str ;",
        "for ( int i = 0 ; i < 3 ; i ++ )",
        "str >> str ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "char str ;",
        "str >> str ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( part == str [ i ] ) res ++ , res ++ ;",
        "for ( int i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘part’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        4
      ],
      "mod_code": [
        "if ( part == str [ i ] ) res ++ , res ++ ;",
        "for ( int i = 0 ; i < 3 ; i ++ )",
        "str >> str ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( part == str [ i ] ) res ++ , res ++ ;",
        "str >> str ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ )",
        "str >> str ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}