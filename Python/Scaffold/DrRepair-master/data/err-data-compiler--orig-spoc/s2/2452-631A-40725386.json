{
  "meta": {
    "index": 2452,
    "hitid": "3T8DUCXY0N0ON8KIP2MF4EQ0LIIT9X",
    "workerid": "AIWEXPJAU66D9",
    "probid": "631A",
    "subid": "40725386"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare new long longs a , b and n",
      "code": "long long a , b , n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "define function read that returns inline long long",
      "code": "inline long long read ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare new long longs x = 0 and tmp = 1",
      "code": "long long tmp = 1 , x = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create new character ch and read it from the input",
      "code": "char ch = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while isdigit ( ch ) is false",
      "code": "while ( ! isdigit ( ch ) )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if ch = ' - ' , change tmp to - 1",
      "code": "if ( ch == ' - ' ) tmp = - 1 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set ch to the character from the input",
      "code": "ch = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while isdigit ( ch ) returns true",
      "code": "while ( isdigit ( ch ) )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set x to x * 10 + ch - 48",
      "code": "x = x * 10 + ch - 48 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "change the value of ch to the character from the input",
      "code": "ch = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "return tmp * x",
      "code": "return tmp * x ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 15,
      "text": "set n to the resulf of read ( )",
      "code": "n = read ( ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 1 to n inclusive change a to a | = read ( )",
      "code": "for ( long long i = 1 ; i <= n ; i ++ ) a |= read ( ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "in a loop for i = 1 to n inclusive , set the value of b to b | = read ( )",
      "code": "for ( long long i = 1 ; i <= n ; i ++ ) b |= read ( ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print a + b",
      "code": "cout << a + b << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "inline long long read ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "{ ch = getchar ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "a function-definition is not allowed here before ‘{’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "ch to getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        16,
        17,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { a = read ( ) ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { b = b << read ( ) ; }",
        "inline long long read ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        17,
        1,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { a = read ( ) ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { b = b << read ( ) ; }",
        "inline long long read ( ) ;",
        "long long x = 0 , tmp = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        17,
        1,
        8
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { a = read ( ) ; }",
        "for ( int i = 1 ; i <= n ; i ++ ) { b = b << read ( ) ; }",
        "inline long long read ( ) ;",
        "while ( ! isdigit ( ch ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { a = read ( ) ; }",
        "inline long long read ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        1,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { a = read ( ) ; }",
        "inline long long read ( ) ;",
        "long long x = 0 , tmp = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        1,
        2,
        8
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { a = read ( ) ; }",
        "inline long long read ( ) ;",
        "long long x = 0 , tmp = 0 ;",
        "while ( ! isdigit ( ch ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        1,
        8
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { a = read ( ) ; }",
        "inline long long read ( ) ;",
        "while ( ! isdigit ( ch ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { b = b << read ( ) ; }",
        "inline long long read ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        1,
        16
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { b = b << read ( ) ; }",
        "inline long long read ( ) ;",
        "for ( int i = 1 ; i <= n ; i ++ ) a = read ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        1,
        16,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { b = b << read ( ) ; }",
        "inline long long read ( ) ;",
        "for ( int i = 1 ; i <= n ; i ++ ) a = read ( ) ;",
        "long long x = 0 , tmp = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        1,
        16,
        8
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { b = b << read ( ) ; }",
        "inline long long read ( ) ;",
        "for ( int i = 1 ; i <= n ; i ++ ) a = read ( ) ;",
        "while ( ! isdigit ( ch ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        1,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { b = b << read ( ) ; }",
        "inline long long read ( ) ;",
        "long long x = 0 , tmp = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        1,
        2,
        8
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { b = b << read ( ) ; }",
        "inline long long read ( ) ;",
        "long long x = 0 , tmp = 0 ;",
        "while ( ! isdigit ( ch ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        1,
        8
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { b = b << read ( ) ; }",
        "inline long long read ( ) ;",
        "while ( ! isdigit ( ch ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "inline long long read ( ) ;",
        "for ( int i = 1 ; i <= n ; i ++ ) a = read ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        2
      ],
      "mod_code": [
        "inline long long read ( ) ;",
        "for ( int i = 1 ; i <= n ; i ++ ) a = read ( ) ;",
        "long long x = 0 , tmp = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        2,
        8
      ],
      "mod_code": [
        "inline long long read ( ) ;",
        "for ( int i = 1 ; i <= n ; i ++ ) a = read ( ) ;",
        "long long x = 0 , tmp = 0 ;",
        "while ( ! isdigit ( ch ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        16,
        8
      ],
      "mod_code": [
        "inline long long read ( ) ;",
        "for ( int i = 1 ; i <= n ; i ++ ) a = read ( ) ;",
        "while ( ! isdigit ( ch ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "inline long long read ( ) ;",
        "long long x = 0 , tmp = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "inline long long read ( ) ;",
        "long long x = 0 , tmp = 0 ;",
        "while ( ! isdigit ( ch ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "inline long long read ( ) ;",
        "while ( ! isdigit ( ch ) )"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}