{
  "meta": {
    "index": 1862,
    "hitid": "31KSVEGZ34MMJPKYEORCIJXTVY7RW9",
    "workerid": "A1APYLD4DUK33J",
    "probid": "460A",
    "subid": "41743211"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read n and m is true",
      "code": "while ( cin >> n >> m )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer i",
      "code": "int i ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "for i = 1 to n , incrementing i",
      "code": "for ( i = 1 ; n ; i ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "decrement n",
      "code": "n -- ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "if not n , end loop",
      "code": "if ( ! n ) break ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if n and i % m is 0",
      "code": "if ( n && i % m == 0 ) n ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if i % m is 0 , increment i",
      "code": "if ( i % m == 0 ) i ++ ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print i and newline",
      "code": "cout << i << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( n && i % m == 0 )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int l , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( { cin >> n >> m )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( n % m == 0 && i % m == 0 )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( n && i % m == 0 )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        7,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( n && i % m == 0 )",
        "int l , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        1,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( n && i % m == 0 )",
        "int l , m ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( n && i % m == 0 )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int l , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int l , m ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        1,
        2,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int l , m ;",
        "while ( { cin >> n >> m )",
        "if ( n % m == 0 && i % m == 0 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "int l , m ;",
        "if ( n % m == 0 && i % m == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        2,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "while ( { cin >> n >> m )",
        "if ( n % m == 0 && i % m == 0 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )",
        "if ( n % m == 0 && i % m == 0 )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "if ( n && i % m == 0 )",
        "int l , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        4
      ],
      "mod_code": [
        "if ( n && i % m == 0 )",
        "int l , m ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        4,
        2
      ],
      "mod_code": [
        "if ( n && i % m == 0 )",
        "int l , m ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        1,
        2
      ],
      "mod_code": [
        "if ( n && i % m == 0 )",
        "int l , m ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( n && i % m == 0 )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "if ( n && i % m == 0 )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( n && i % m == 0 )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int l , m ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "int l , m ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        4,
        2,
        7
      ],
      "mod_code": [
        "int l , m ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( { cin >> n >> m )",
        "if ( n % m == 0 && i % m == 0 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        4,
        7
      ],
      "mod_code": [
        "int l , m ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( n % m == 0 && i % m == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int l , m ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2,
        7
      ],
      "mod_code": [
        "int l , m ;",
        "while ( { cin >> n >> m )",
        "if ( n % m == 0 && i % m == 0 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int l , m ;",
        "if ( n % m == 0 && i % m == 0 )"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        2,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "while ( { cin >> n >> m )",
        "if ( n % m == 0 && i % m == 0 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( n % m == 0 && i % m == 0 )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "while ( { cin >> n >> m )",
        "if ( n % m == 0 && i % m == 0 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    }
  ]
}