{
  "meta": {
    "index": 2340,
    "hitid": "3E6L1VR4XWGRMK0JWBEE30KX4836FS",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "939A",
    "subid": "48363897"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int and input = int array of size 10000",
      "code": "int n , input [ 10000 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n read input [ i + 1 ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> input [ i + 1 ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "ng = bool with ng = false",
      "code": "bool ng = false ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n + 1",
      "code": "for ( int i = 1 ; i < n + 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if i is input [ input [ input [ i ] ] ]",
      "code": "if ( i == input [ input [ input [ i ] ] ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set ng to true",
      "code": "ng = true ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if ng is false print \" NO \"",
      "code": "if ( ng == false ) { cout << \" NO \" << endl ; }",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( i == input [ input [ i ] ] ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "bool ng = true ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "bool ng = true ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        12
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "bool ng = true ;",
        "n = getchar ( ) ;",
        "if ( ng == false ) cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        1
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "bool ng = true ;",
        "n = getchar ( ) ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        6,
        8,
        12
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "bool ng = true ;",
        "if ( ng == false ) cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        1
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "bool ng = true ;",
        "if ( ng == false ) cout << \" NO \" ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "bool ng = true ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        2,
        12
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "n = getchar ( ) ;",
        "if ( ng == false ) cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        2,
        12,
        1
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "n = getchar ( ) ;",
        "if ( ng == false ) cout << \" NO \" ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        6,
        2,
        1
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "n = getchar ( ) ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "if ( ng == false ) cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        12,
        1
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "if ( ng == false ) cout << \" NO \" ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( i == input [ input [ input [ i ] ] ) ] ++ ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        8,
        2,
        12,
        6
      ],
      "mod_code": [
        "bool ng = true ;",
        "n = getchar ( ) ;",
        "if ( ng == false ) cout << \" NO \" ;",
        "if ( i == input [ input [ i ] ] ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        2,
        12,
        1
      ],
      "mod_code": [
        "bool ng = true ;",
        "n = getchar ( ) ;",
        "if ( ng == false ) cout << \" NO \" ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        8,
        2,
        6
      ],
      "mod_code": [
        "bool ng = true ;",
        "n = getchar ( ) ;",
        "if ( i == input [ input [ i ] ] ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        2,
        6,
        1
      ],
      "mod_code": [
        "bool ng = true ;",
        "n = getchar ( ) ;",
        "if ( i == input [ input [ i ] ] ] )",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        8,
        2,
        1
      ],
      "mod_code": [
        "bool ng = true ;",
        "n = getchar ( ) ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        8,
        12,
        6
      ],
      "mod_code": [
        "bool ng = true ;",
        "if ( ng == false ) cout << \" NO \" ;",
        "if ( i == input [ input [ i ] ] ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        12,
        6,
        1
      ],
      "mod_code": [
        "bool ng = true ;",
        "if ( ng == false ) cout << \" NO \" ;",
        "if ( i == input [ input [ i ] ] ] )",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        8,
        12,
        1
      ],
      "mod_code": [
        "bool ng = true ;",
        "if ( ng == false ) cout << \" NO \" ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "bool ng = true ;",
        "if ( i == input [ input [ i ] ] ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        8,
        6,
        1
      ],
      "mod_code": [
        "bool ng = true ;",
        "if ( i == input [ input [ i ] ] ] )",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "bool ng = true ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        2,
        12,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( ng == false ) cout << \" NO \" ;",
        "if ( i == input [ input [ i ] ] ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        12,
        6,
        1
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( ng == false ) cout << \" NO \" ;",
        "if ( i == input [ input [ i ] ] ] )",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        2,
        12,
        1
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( ng == false ) cout << \" NO \" ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( i == input [ input [ i ] ] ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        2,
        6,
        1
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( i == input [ input [ i ] ] ] )",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "if ( ng == false ) cout << \" NO \" ;",
        "if ( i == input [ input [ i ] ] ] )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        6,
        1
      ],
      "mod_code": [
        "if ( ng == false ) cout << \" NO \" ;",
        "if ( i == input [ input [ i ] ] ] )",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "if ( ng == false ) cout << \" NO \" ;",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( i == input [ input [ i ] ] ] )",
        "int n , n [ 10000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int n [10000]’"
    }
  ]
}