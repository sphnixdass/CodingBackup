{
  "meta": {
    "index": 2585,
    "hitid": "3MDWE879UHWORMQ1PGVU4KKEFBO9BT",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "83A",
    "subid": "46233547"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make long long int n",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create long long vector v of size n",
      "code": "vector < long long > v ( n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read v [ i ]",
      "code": "for ( long long i = 0 ; i < n ; i ++ ) { cin >> v [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create long long j = i",
      "code": "long long j = 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "make long long int ans = n",
      "code": "long long ans = n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set j to i + 1",
      "code": "j = i + 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "while j is less than n and v [ j ] is equal to v [ i ]",
      "code": "while ( j < n && v [ j ] == v [ i ] ) { j ++ ; }",
      "indent": 2
    },
    {
      "line": 10,
      "text": "make long long lon = j - i",
      "code": "long long lon = j - i ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set ans to ans + long * ( long - 1 ) / 2",
      "code": "ans += lon * ( lon - 1 ) / 2 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set i to j",
      "code": "i = j ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "show ans",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long j = i ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "while ( j < n && v [ j ] == v [ i ] )"
      ],
      "err_line": 11,
      "err_msg": "‘lon’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "ans += long long * ( long long - 1 ) / 2 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < long long > v [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<long long int>’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long int j = i ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "ans += ( long long - ( long long - - 1 ) / 2 ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int i = j ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "long long j = i ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        9
      ],
      "mod_code": [
        "long long j = i ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( j < n && v [ j ] == v [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        11
      ],
      "mod_code": [
        "long long j = i ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( j < n && v [ j ] == v [ i ] )",
        "ans += long long * ( long long - 1 ) / 2 ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        12
      ],
      "mod_code": [
        "long long j = i ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( j < n && v [ j ] == v [ i ] )",
        "int i = j ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        9,
        2
      ],
      "mod_code": [
        "long long j = i ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( j < n && v [ j ] == v [ i ] )",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        11
      ],
      "mod_code": [
        "long long j = i ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "ans += long long * ( long long - 1 ) / 2 ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        12
      ],
      "mod_code": [
        "long long j = i ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "int i = j ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        11,
        2
      ],
      "mod_code": [
        "long long j = i ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        12
      ],
      "mod_code": [
        "long long j = i ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "int i = j ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        12,
        2
      ],
      "mod_code": [
        "long long j = i ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "int i = j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "long long j = i ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "long long j = i ;",
        "while ( j < n && v [ j ] == v [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        11
      ],
      "mod_code": [
        "long long j = i ;",
        "while ( j < n && v [ j ] == v [ i ] )",
        "ans += long long * ( long long - 1 ) / 2 ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        12
      ],
      "mod_code": [
        "long long j = i ;",
        "while ( j < n && v [ j ] == v [ i ] )",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "int i = j ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        11,
        2
      ],
      "mod_code": [
        "long long j = i ;",
        "while ( j < n && v [ j ] == v [ i ] )",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        12
      ],
      "mod_code": [
        "long long j = i ;",
        "while ( j < n && v [ j ] == v [ i ] )",
        "int i = j ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        2
      ],
      "mod_code": [
        "long long j = i ;",
        "while ( j < n && v [ j ] == v [ i ] )",
        "int i = j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "long long j = i ;",
        "while ( j < n && v [ j ] == v [ i ] )",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "long long j = i ;",
        "ans += long long * ( long long - 1 ) / 2 ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11,
        12
      ],
      "mod_code": [
        "long long j = i ;",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "int i = j ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        2
      ],
      "mod_code": [
        "long long j = i ;",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "int i = j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11,
        2
      ],
      "mod_code": [
        "long long j = i ;",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "long long j = i ;",
        "int i = j ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        2
      ],
      "mod_code": [
        "long long j = i ;",
        "int i = j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "long long j = i ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( j < n && v [ j ] == v [ i ] )"
      ],
      "err_line": 11,
      "err_msg": "‘lon’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( j < n && v [ j ] == v [ i ] )",
        "ans += long long * ( long long - 1 ) / 2 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( j < n && v [ j ] == v [ i ] )",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "int i = j ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( j < n && v [ j ] == v [ i ] )",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        7,
        9,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( j < n && v [ j ] == v [ i ] )",
        "int i = j ;"
      ],
      "err_line": 11,
      "err_msg": "‘lon’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( j < n && v [ j ] == v [ i ] )",
        "int i = j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘lon’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( j < n && v [ j ] == v [ i ] )",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘lon’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "ans += long long * ( long long - 1 ) / 2 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        7,
        11,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "int i = j ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "int i = j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        7,
        11,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int i = j ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        7,
        12,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int i = j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "while ( j < n && v [ j ] == v [ i ] )",
        "ans += long long * ( long long - 1 ) / 2 ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        9,
        11,
        12
      ],
      "mod_code": [
        "while ( j < n && v [ j ] == v [ i ] )",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "int i = j ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        2
      ],
      "mod_code": [
        "while ( j < n && v [ j ] == v [ i ] )",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "int i = j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        9,
        11,
        2
      ],
      "mod_code": [
        "while ( j < n && v [ j ] == v [ i ] )",
        "ans += long long * ( long long - 1 ) / 2 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "while ( j < n && v [ j ] == v [ i ] )",
        "int i = j ;"
      ],
      "err_line": 11,
      "err_msg": "‘lon’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        2
      ],
      "mod_code": [
        "while ( j < n && v [ j ] == v [ i ] )",
        "int i = j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘lon’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "while ( j < n && v [ j ] == v [ i ] )",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘lon’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "ans += long long * ( long long - 1 ) / 2 ;",
        "int i = j ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        11,
        12,
        2
      ],
      "mod_code": [
        "ans += long long * ( long long - 1 ) / 2 ;",
        "int i = j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "ans += long long * ( long long - 1 ) / 2 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "int i = j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int i’"
    }
  ]
}