{
  "meta": {
    "index": 800,
    "hitid": "30IRMPJWDZDVOPQHPA89U83Y8RWRKB",
    "workerid": "AIWEXPJAU66D9",
    "probid": "255A",
    "subid": "47831361"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create new integer variables t , i and x",
      "code": "int t , i , x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "a is a new array of integers with 100 elements",
      "code": "int a [ 100 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read standard input to t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "start for loop from i = 0 to t exclusive , reading standard input to a [ i ] on each iteration",
      "code": "for ( i = 0 ; i < t ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integers c , b and k = 0",
      "code": "int c = 0 , b = 0 , k = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "in a for loop , change i from 0 to t exclusive incrementing i",
      "code": "for ( i = 0 ; i < t ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if i % 3 is equal to 1",
      "code": "if ( i % 3 == 1 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increase b by a [ i ]",
      "code": "b += a [ i ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if i % 3 = 2",
      "code": "else if ( i % 3 == 2 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increase k by a [ i ]",
      "code": "k += a [ i ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "change c to c + a [ i ]",
      "code": "c += a [ i ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if c > b and c > k",
      "code": "if ( c > b && c > k )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" chest \" to the standard output",
      "code": "cout << \" chest \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else if b > c and b > k",
      "code": "else if ( b > c && b > k )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" biceps \"",
      "code": "cout << \" biceps \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" back \" to the standard output",
      "code": "cout << \" back \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "a [ 100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 19,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" chest \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16,
        18
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16,
        18,
        20
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16,
        18,
        19
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16,
        18,
        1
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        16,
        20
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16,
        20,
        19
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" back \" ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16,
        20,
        1
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" back \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        16,
        19
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" chest \" ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        16,
        19,
        1
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" chest \" ;",
        "n",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        16,
        1
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" chest \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        20
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        20,
        19
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        20,
        1
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        18,
        19
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" biceps \" ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        18,
        19,
        1
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" biceps \" ;",
        "n",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        18,
        1
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" biceps \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        20
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" back \" ;"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        20,
        19
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" back \" ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        20,
        19,
        1
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" back \" ;",
        "n",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        20,
        1
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "cout << \" back \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        19
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        19,
        1
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "n",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "int c = 0 , b = 0 ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        19
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "n"
      ],
      "err_line": 19,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        20,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        16,
        18,
        19
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "n"
      ],
      "err_line": 19,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        19,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "n",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        16,
        18,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        16,
        20,
        19
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" back \" ;",
        "n"
      ],
      "err_line": 19,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        19,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" back \" ;",
        "n",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        16,
        20,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" back \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        16,
        19
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "n"
      ],
      "err_line": 19,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        19,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "n",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        20,
        19
      ],
      "mod_code": [
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "n"
      ],
      "err_line": 19,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        20,
        19,
        1
      ],
      "mod_code": [
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "n",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        20,
        1
      ],
      "mod_code": [
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "cout << \" biceps \" ;",
        "n"
      ],
      "err_line": 19,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        1
      ],
      "mod_code": [
        "cout << \" biceps \" ;",
        "n",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        1
      ],
      "mod_code": [
        "cout << \" biceps \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        20,
        19
      ],
      "mod_code": [
        "cout << \" back \" ;",
        "n"
      ],
      "err_line": 19,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        19,
        1
      ],
      "mod_code": [
        "cout << \" back \" ;",
        "n",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        20,
        1
      ],
      "mod_code": [
        "cout << \" back \" ;",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        19,
        1
      ],
      "mod_code": [
        "n",
        "int t , i + x ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    }
  ]
}