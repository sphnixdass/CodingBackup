{
  "meta": {
    "index": 688,
    "hitid": "3T2EL38U0ME1WOAOBEYYFC1V8E9XQ5",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "1020A",
    "subid": "48514971"
  },
  "lines": [
    {
      "line": 0,
      "text": "mod = const int = 998244353",
      "code": "const int mod = 998244353 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in long long function qpow that takes x = long long and y = long long",
      "code": "long long qpow ( long long x , long long y )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "s = 1 = long long",
      "code": "long long s = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while y isn ' t 0",
      "code": "while ( y )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if bitwise and of y is 1",
      "code": "if ( y & 1 ) s = s * x % mod ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "multiply x by x modulo mod",
      "code": "x = x * x % mod ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "y bitwise right shit 1",
      "code": "y >>= 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return s",
      "code": "return s ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "in inline int function read",
      "code": "inline int read ( )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "let x = 0 and f = 1 be ints",
      "code": "int x = 0 , f = 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "ch = char = get char",
      "code": "char ch = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "while ch < ' 0 ' and ch > ' 9 '",
      "code": "while ( ch < ' 0 ' || ch > ' 9 ' )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if ch = ' - ' and f = - 1",
      "code": "if ( ch == ' - ' ) f = - 1 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set ch to get char",
      "code": "ch = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "while ch is between ' 0 ' and ' 9 ' both inclusive , set x to x * 10 + ch - ' 0 ' , set ch to get char",
      "code": "while ( ch >= ' 0 ' && ch <= ' 9 ' ) x = x * 10 + ch - ' 0 ' , ch = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "return x * f",
      "code": "return x * f ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 20,
      "text": "in long long function inve that takes x = long long",
      "code": "long long inve ( long long x )",
      "indent": 0
    },
    {
      "line": 21,
      "text": "is x = 1 ? then return 1 , else return ( mod - mod / x ) * inve ( mod modulo x ) modulo mod",
      "code": "return x == 1 ? 1 : ( mod - mod / x ) * inve ( mod % x ) % mod ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 23,
      "text": "N = 1e4 + 5 = const int",
      "code": "const int N = 1e4 + 5 ;",
      "indent": 0
    },
    {
      "line": 24,
      "text": "let n , h , a , b , m be ints",
      "code": "int n , h , a , b , m ;",
      "indent": 0
    },
    {
      "line": 25,
      "text": "let ta , tb , fa , fb , ans be an int",
      "code": "int ta , tb , fa , fb , ans ;",
      "indent": 0
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 27,
      "text": "for reading n , h , a , b , m until isn ' t m , decrementing m",
      "code": "for ( cin >> n >> h >> a >> b >> m ; m ; m -- )",
      "indent": 1
    },
    {
      "line": 28,
      "text": "from input set ta , fa , tb , fb",
      "code": "cin >> ta >> fa >> tb >> fb ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "if fa < a and fb < a",
      "code": "if ( fa < a && fb < a )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "set ans = a + a - fa - fb + abs ( ta - tb )",
      "code": "ans = a + a - fa - fb + abs ( ta - tb ) ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "else if fa > b and fb > b",
      "code": "else if ( fa > b && fb > b )",
      "indent": 2
    },
    {
      "line": 32,
      "text": "set ans = fa - b + fb - b + abs ( ta - tb )",
      "code": "ans = fa - b + fb - b + abs ( ta - tb ) ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 34,
      "text": "set ans to abs ( ta - tb ) + abs ( fa - fb )",
      "code": "ans = abs ( ta - tb ) + abs ( fa - fb ) ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "if ta = tb then set ans to the abs of fa - fb",
      "code": "if ( ta == tb ) ans = abs ( fa - fb ) ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "print ans",
      "code": "cout << ans << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( & y == 1 )"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int mod = 998244353 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long qpow ( long long x = long long y )"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "inline int read ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "char ch = get ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘get’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( ch == ' - ' && f = - 1 )"
      ],
      "err_line": 14,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "ch = get ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘get’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "long long inve ( long long inve )"
      ],
      "err_line": 21,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "n , h , a , b , m ;"
      ],
      "err_line": 24,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "int ta , tb , fa , fb , ans , ans ;"
      ],
      "err_line": 25,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 34,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        27
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        27,
        1
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "long long qpow ( long long x = long long y )"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        27,
        1,
        32
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "long long qpow ( long long x = long long y )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        27,
        1,
        15
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "long long qpow ( long long x = long long y )",
        "ch = get ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        27,
        32
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        27,
        32,
        15
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;",
        "ch = get ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        27,
        15
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "ch = get ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        27
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        27,
        1
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "long long qpow ( long long x = long long y )"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        27,
        1,
        32
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "long long qpow ( long long x = long long y )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        27,
        1,
        15
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "long long qpow ( long long x = long long y )",
        "ch = get ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        27,
        32
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        27,
        32,
        15
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;",
        "ch = get ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        27,
        15
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "ch = get ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "long long qpow ( long long x = long long y )"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        1,
        32
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "long long qpow ( long long x = long long y )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        1,
        32,
        15
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "long long qpow ( long long x = long long y )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;",
        "ch = get ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        1,
        15
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "long long qpow ( long long x = long long y )",
        "ch = get ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        4,
        32
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        32,
        15
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;",
        "ch = get ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "if ( & y == 1 )",
        "ch = get ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        27,
        1
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "long long qpow ( long long x = long long y )"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        27,
        1,
        32
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "long long qpow ( long long x = long long y )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        27,
        1,
        32,
        15
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "long long qpow ( long long x = long long y )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;",
        "ch = get ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        27,
        1,
        15
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "long long qpow ( long long x = long long y )",
        "ch = get ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        27,
        32
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        32,
        15
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;",
        "ch = get ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘get’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        15
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b ) m >> m ; m -- )",
        "ch = get ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘get’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        1
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "long long qpow ( long long x = long long y )"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        27,
        1,
        32
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "long long qpow ( long long x = long long y )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        27,
        1,
        32,
        15
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "long long qpow ( long long x = long long y )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;",
        "ch = get ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        27,
        1,
        15
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "long long qpow ( long long x = long long y )",
        "ch = get ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        27,
        32
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        27,
        32,
        15
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;",
        "ch = get ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘get’ was not declared in this scope"
    },
    {
      "mod_line": [
        27,
        15
      ],
      "mod_code": [
        "for ( cin >> n >> h >> a >> b >> m ) m ; m += m ;",
        "ch = get ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘get’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        32
      ],
      "mod_code": [
        "long long qpow ( long long x = long long y )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        1,
        32,
        15
      ],
      "mod_code": [
        "long long qpow ( long long x = long long y )",
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;",
        "ch = get ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "long long qpow ( long long x = long long y )",
        "ch = get ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        32,
        15
      ],
      "mod_code": [
        "int ans = fa - b + fb - b + abs ( ta - tb ) ;",
        "ch = get ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "‘get’ was not declared in this scope"
    }
  ]
}