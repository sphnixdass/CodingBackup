{
  "meta": {
    "index": 861,
    "hitid": "37VHPF5VYCX7NMZXYOLBF8VLDQZC87",
    "workerid": "A1APYLD4DUK33J",
    "probid": "267A",
    "subid": "38210443"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare test , m , n , res , modu as integers",
      "code": "int test , m , n , res , modu ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read test",
      "code": "cin >> test ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement test is true",
      "code": "while ( test -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let res be 0",
      "code": "res = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if n is 1 or m is 1",
      "code": "if ( n == 1 || m == 1 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print maximum of ( n , m ) , newline",
      "code": "cout << max ( n , m ) << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "end loop iteration",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if n is m",
      "code": "if ( n == m )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print \" 1 \" , newline",
      "code": "cout << \" 1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "end loop iteration",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "while n is not m",
      "code": "while ( n != m )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if n is greater than m , swap values between n and m",
      "code": "if ( n > m ) swap ( n , m ) ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if m % n is 0",
      "code": "if ( m % n == 0 )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "let res be res + ( m / n )",
      "code": "res = res + ( m / n ) ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "let m be m % n",
      "code": "m = m % n ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "end loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 21,
      "text": "increment res by m / n",
      "code": "res += m / n ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "let m be m % n",
      "code": "m = m % n ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print res , newline",
      "code": "cout << res << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "end ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        3,
        19
      ],
      "mod_code": [
        "cin >> n ;",
        "break ;",
        "while ( test )",
        "end ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        3,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "break ;",
        "while ( test )",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        8,
        19
      ],
      "mod_code": [
        "cin >> n ;",
        "break ;",
        "end ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "break ;",
        "end ;",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        8,
        19,
        7
      ],
      "mod_code": [
        "cin >> n ;",
        "break ;",
        "end ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "break ;",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        8,
        11,
        7
      ],
      "mod_code": [
        "cin >> n ;",
        "break ;",
        "<< \" 1 \" << endl ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        3,
        19
      ],
      "mod_code": [
        "cin >> n ;",
        "while ( test )",
        "end ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        19,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "while ( test )",
        "end ;",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        3,
        19,
        7
      ],
      "mod_code": [
        "cin >> n ;",
        "while ( test )",
        "end ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "while ( test )",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        3,
        11,
        7
      ],
      "mod_code": [
        "cin >> n ;",
        "while ( test )",
        "<< \" 1 \" << endl ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "cin >> n ;",
        "end ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        19,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "end ;",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        19,
        11,
        7
      ],
      "mod_code": [
        "cin >> n ;",
        "end ;",
        "<< \" 1 \" << endl ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        19,
        7
      ],
      "mod_code": [
        "cin >> n ;",
        "end ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "cin >> n ;",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        11,
        7
      ],
      "mod_code": [
        "cin >> n ;",
        "<< \" 1 \" << endl ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        3,
        19
      ],
      "mod_code": [
        "break ;",
        "while ( test )",
        "end ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        19,
        11
      ],
      "mod_code": [
        "break ;",
        "while ( test )",
        "end ;",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        3,
        19,
        7
      ],
      "mod_code": [
        "break ;",
        "while ( test )",
        "end ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        11
      ],
      "mod_code": [
        "break ;",
        "while ( test )",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        3,
        11,
        7
      ],
      "mod_code": [
        "break ;",
        "while ( test )",
        "<< \" 1 \" << endl ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "break ;",
        "end ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        11
      ],
      "mod_code": [
        "break ;",
        "end ;",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        19,
        11,
        7
      ],
      "mod_code": [
        "break ;",
        "end ;",
        "<< \" 1 \" << endl ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        19,
        7
      ],
      "mod_code": [
        "break ;",
        "end ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "break ;",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        11,
        7
      ],
      "mod_code": [
        "break ;",
        "<< \" 1 \" << endl ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "while ( test )",
        "end ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19,
        11
      ],
      "mod_code": [
        "while ( test )",
        "end ;",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        19,
        11,
        7
      ],
      "mod_code": [
        "while ( test )",
        "end ;",
        "<< \" 1 \" << endl ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        19,
        7
      ],
      "mod_code": [
        "while ( test )",
        "end ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "while ( test )",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        11,
        7
      ],
      "mod_code": [
        "while ( test )",
        "<< \" 1 \" << endl ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        11
      ],
      "mod_code": [
        "end ;",
        "<< \" 1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        11,
        7
      ],
      "mod_code": [
        "end ;",
        "<< \" 1 \" << endl ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "end ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "<< \" 1 \" << endl ;",
        "cout << max ( n , m ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘<<’ token"
    }
  ]
}