{
  "meta": {
    "index": 1781,
    "hitid": "3V0TR1NRVAWIB6FX27Z7S1PSB1NA41",
    "workerid": "A1AYVATMT88U1W",
    "probid": "897A",
    "subid": "48032774"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m be integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read n , m",
      "code": "while ( cin >> n >> m )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; ++ i )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "let L , R be integers",
      "code": "int L , R ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "let fro , bac be characters",
      "code": "char fro , bac ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "read L , R , fro , bac",
      "code": "cin >> L >> R >> fro >> bac ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "for integer j = L - 1 to R - 1 inclusive , increment j by 1",
      "code": "for ( int j = L - 1 ; j <= R - 1 ; ++ j )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if s [ j ] is equal to fro , s [ j ] is equal to bac",
      "code": "if ( s [ j ] == fro ) s [ j ] = bac ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print s and newline",
      "code": "cout << s << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "fro , bac ;"
      ],
      "err_line": 7,
      "err_msg": "‘fro’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "string S ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        7
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "string S ;",
        "fro , bac ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        7,
        9
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "string S ;",
        "fro , bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        7,
        2
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "string S ;",
        "fro , bac ;",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        7,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "string S ;",
        "fro , bac ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        9
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "string S ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        9,
        2
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "string S ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        9,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "string S ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        2
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "string S ;",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        2,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "string S ;",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "string S ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "fro , bac ;"
      ],
      "err_line": 7,
      "err_msg": "‘fro’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        9
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "fro , bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘fro’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        9,
        2
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "fro , bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘fro’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        9,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "fro , bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        7,
        2
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "fro , bac ;",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘fro’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7,
        2,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "fro , bac ;",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        7,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "fro , bac ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        9,
        2,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        9,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        2,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "if ( s [ j ] == ' fro ' ) s [ j ] = bac ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "string S ;",
        "fro , bac ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        9
      ],
      "mod_code": [
        "string S ;",
        "fro , bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        2
      ],
      "mod_code": [
        "string S ;",
        "fro , bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        4
      ],
      "mod_code": [
        "string S ;",
        "fro , bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        2
      ],
      "mod_code": [
        "string S ;",
        "fro , bac ;",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        2,
        4
      ],
      "mod_code": [
        "string S ;",
        "fro , bac ;",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "string S ;",
        "fro , bac ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "string S ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "string S ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        2,
        4
      ],
      "mod_code": [
        "string S ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        4
      ],
      "mod_code": [
        "string S ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "string S ;",
        "while ( cin >> n )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "string S ;",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "string S ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "fro , bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘fro’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        2
      ],
      "mod_code": [
        "fro , bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘fro’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        2,
        4
      ],
      "mod_code": [
        "fro , bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        9,
        4
      ],
      "mod_code": [
        "fro , bac ;",
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "fro , bac ;",
        "while ( cin >> n )"
      ],
      "err_line": 7,
      "err_msg": "‘fro’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        4
      ],
      "mod_code": [
        "fro , bac ;",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "fro , bac ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        2,
        4
      ],
      "mod_code": [
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "for ( int j = L - 1 ; j >= R - 1 ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( cin >> n )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}