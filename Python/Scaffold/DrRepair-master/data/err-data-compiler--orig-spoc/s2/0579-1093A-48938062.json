{
  "meta": {
    "index": 579,
    "hitid": "35YHTYFL1GXC1AFKXJMMFS0WKEUVFX",
    "workerid": "A3S392MV6HWTTE",
    "probid": "1093A",
    "subid": "48938062"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "t , n = large long",
      "code": "long long t , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while t > 0",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if n remainder 7 = 0",
      "code": "if ( n % 7 == 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print n / 7",
      "code": "cout << n / 7 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print ( n / 7 ) + 1",
      "code": "cout << ( n / 7 ) + 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long t , n = large ;"
      ],
      "err_line": 1,
      "err_msg": "‘large’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        7
      ],
      "mod_code": [
        "while ( t > 0 )",
        "cout << n / 7 << endl ;",
        "cout << ( n / 7 ) + 1 << endl ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        4,
        7
      ],
      "mod_code": [
        "while ( t > 0 )",
        "cout << n / 7 << endl ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "while ( t > 0 )",
        "cout << n / 7 << endl ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        8
      ],
      "mod_code": [
        "while ( t > 0 )",
        "cout << n / 7 << endl ;",
        "n",
        "cout << ( n / 7 ) + 1 << \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        8,
        4,
        7
      ],
      "mod_code": [
        "while ( t > 0 )",
        "cout << ( n / 7 ) + 1 << endl ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        8,
        7
      ],
      "mod_code": [
        "while ( t > 0 )",
        "cout << ( n / 7 ) + 1 << endl ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "while ( t > 0 )",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        8
      ],
      "mod_code": [
        "while ( t > 0 )",
        "n = getchar ( ) ;",
        "n",
        "cout << ( n / 7 ) + 1 << \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "while ( t > 0 )",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "while ( t > 0 )",
        "n",
        "cout << ( n / 7 ) + 1 << \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        4,
        7
      ],
      "mod_code": [
        "cout << n / 7 << endl ;",
        "cout << ( n / 7 ) + 1 << endl ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        7
      ],
      "mod_code": [
        "cout << n / 7 << endl ;",
        "cout << ( n / 7 ) + 1 << endl ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        4,
        7
      ],
      "mod_code": [
        "cout << n / 7 << endl ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        4,
        7,
        8
      ],
      "mod_code": [
        "cout << n / 7 << endl ;",
        "n = getchar ( ) ;",
        "n",
        "cout << ( n / 7 ) + 1 << \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "cout << n / 7 << endl ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "cout << n / 7 << endl ;",
        "n",
        "cout << ( n / 7 ) + 1 << \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        4,
        7
      ],
      "mod_code": [
        "cout << ( n / 7 ) + 1 << endl ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "cout << ( n / 7 ) + 1 << endl ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n",
        "cout << ( n / 7 ) + 1 << \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "n",
        "cout << ( n / 7 ) + 1 << \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}