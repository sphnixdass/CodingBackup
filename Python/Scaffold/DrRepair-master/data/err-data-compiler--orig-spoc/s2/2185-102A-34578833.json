{
  "meta": {
    "index": 2185,
    "hitid": "3F6045TU7DI53TB4RWHYDEPORBJ99H",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "102A",
    "subid": "34578833"
  },
  "lines": [
    {
      "line": 0,
      "text": "make int arrays a of size 105 and b of size 105 with array of size 105",
      "code": "int a [ 105 ] , b [ 105 ] [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "make ints n , m , x , and y",
      "code": "int n , m , x , y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set all contents of b to 0",
      "code": "memset ( b , 0 , sizeof ( b ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to m",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read x and y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set b [ x ] [ y ] and b [ y ] [ x ] to 1",
      "code": "b [ x ] [ y ] = b [ y ] [ x ] = 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integer sum = 3000001",
      "code": "int sum = 3000001 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 1 to n - 2",
      "code": "for ( int i = 1 ; i <= n - 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = i + 1 to n - 1",
      "code": "for ( int j = i + 1 ; j <= n - 1 ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for k = j + 1 to n",
      "code": "for ( int k = j + 1 ; k <= n ; k ++ )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if b [ i ] [ j ] is equal to 1 and b [ i ] [ k ] is equal to 1 and b [ j ] [ k ] is equal to 1 , set sum to min ( sum , a [ i ] + a [ j ] + a [ k ] )",
      "code": "if ( b [ i ] [ j ] == 1 && b [ i ] [ k ] == 1 && b [ j ] [ k ] == 1 ) { sum = min ( sum , a [ i ] + a [ j ] + a [ k ] ) ; }",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if sum is equal to 3000001",
      "code": "if ( sum == 3000001 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "otherwise",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "output sum",
      "code": "cout << sum << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "b [ x ] [ y ] [ y ] = b [ y ] [ x ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n - 2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 20,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int j = i + 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        12,
        13
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int j = i + 1 ; j < n - 1 ; j ++ )",
        "for ( int k = j + 1 ; k < n ; k ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        12,
        13,
        14
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int j = i + 1 ; j < n - 1 ; j ++ )",
        "for ( int k = j + 1 ; k < n ; k ++ )",
        "if ( b [ i ] [ j ] == 1 && b [ i ] [ k ] == 1 && b [ j ] [ k ] == 1 && b [ j ] [ k ] == 1 ) sum = min ( sum , a [ k ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        12,
        13,
        6
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int j = i + 1 ; j < n - 1 ; j ++ )",
        "for ( int k = j + 1 ; k < n ; k ++ )",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        12,
        13,
        7
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int j = i + 1 ; j < n - 1 ; j ++ )",
        "for ( int k = j + 1 ; k < n ; k ++ )",
        "cin >> n >> y ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        12,
        14
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int j = i + 1 ; j < n - 1 ; j ++ )",
        "if ( b [ i ] [ j ] == 1 && b [ i ] [ k ] == 1 && b [ j ] [ k ] == 1 && b [ j ] [ k ] == 1 ) sum = min ( sum , a [ k ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        12,
        14,
        6
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int j = i + 1 ; j < n - 1 ; j ++ )",
        "if ( b [ i ] [ j ] == 1 && b [ i ] [ k ] == 1 && b [ j ] [ k ] == 1 && b [ j ] [ k ] == 1 ) sum = min ( sum , a [ k ] ) ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        12,
        14,
        7
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int j = i + 1 ; j < n - 1 ; j ++ )",
        "if ( b [ i ] [ j ] == 1 && b [ i ] [ k ] == 1 && b [ j ] [ k ] == 1 && b [ j ] [ k ] == 1 ) sum = min ( sum , a [ k ] ) ;",
        "cin >> n >> y ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        12,
        6
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int j = i + 1 ; j < n - 1 ; j ++ )",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        12,
        6,
        7
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int j = i + 1 ; j < n - 1 ; j ++ )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "cin >> n >> y ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        12,
        7
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int j = i + 1 ; j < n - 1 ; j ++ )",
        "cin >> n >> y ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int k = j + 1 ; k < n ; k ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        13,
        14
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int k = j + 1 ; k < n ; k ++ )",
        "if ( b [ i ] [ j ] == 1 && b [ i ] [ k ] == 1 && b [ j ] [ k ] == 1 && b [ j ] [ k ] == 1 ) sum = min ( sum , a [ k ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        13,
        14,
        6
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int k = j + 1 ; k < n ; k ++ )",
        "if ( b [ i ] [ j ] == 1 && b [ i ] [ k ] == 1 && b [ j ] [ k ] == 1 && b [ j ] [ k ] == 1 ) sum = min ( sum , a [ k ] ) ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        13,
        14,
        7
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int k = j + 1 ; k < n ; k ++ )",
        "if ( b [ i ] [ j ] == 1 && b [ i ] [ k ] == 1 && b [ j ] [ k ] == 1 && b [ j ] [ k ] == 1 ) sum = min ( sum , a [ k ] ) ;",
        "cin >> n >> y ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        13,
        6
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int k = j + 1 ; k < n ; k ++ )",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        13,
        6,
        7
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int k = j + 1 ; k < n ; k ++ )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "cin >> n >> y ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        13,
        7
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int k = j + 1 ; k < n ; k ++ )",
        "cin >> n >> y ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "if ( b [ i ] [ j ] == 1 && b [ i ] [ k ] == 1 && b [ j ] [ k ] == 1 && b [ j ] [ k ] == 1 ) sum = min ( sum , a [ k ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        14,
        6
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "if ( b [ i ] [ j ] == 1 && b [ i ] [ k ] == 1 && b [ j ] [ k ] == 1 && b [ j ] [ k ] == 1 ) sum = min ( sum , a [ k ] ) ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        14,
        6,
        7
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "if ( b [ i ] [ j ] == 1 && b [ i ] [ k ] == 1 && b [ j ] [ k ] == 1 && b [ j ] [ k ] == 1 ) sum = min ( sum , a [ k ] ) ;",
        "for ( int i = 1 ; i < m ; i ++ )",
        "cin >> n >> y ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        14,
        7
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "if ( b [ i ] [ j ] == 1 && b [ i ] [ k ] == 1 && b [ j ] [ k ] == 1 && b [ j ] [ k ] == 1 ) sum = min ( sum , a [ k ] ) ;",
        "cin >> n >> y ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        6,
        7
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "for ( int i = 1 ; i < m ; i ++ )",
        "cin >> n >> y ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int a [ 105 ] [ 105 ] , b [ 105 ] ;",
        "cin >> n >> y ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [105]’)"
    }
  ]
}