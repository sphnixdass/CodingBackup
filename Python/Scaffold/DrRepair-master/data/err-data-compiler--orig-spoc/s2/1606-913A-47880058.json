{
  "meta": {
    "index": 1606,
    "hitid": "3R6RZGK0XF6I11WF29EA4D7CRCGYV4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "913A",
    "subid": "47880058"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare const long long MAXN = 2 * 1e5 + 5",
      "code": "const long long MAXN = 2 * 1e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare const long long INF = 1e8 + 5",
      "code": "const long long INF = 1e8 + 5 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare const long long MOD = 1e9 + 7",
      "code": "const long long MOD = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare long longs N and M",
      "code": "long long N , M ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read input to N and M",
      "code": "cin >> N >> M ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare long long variable ans",
      "code": "long long ans ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if N is greater than 27",
      "code": "if ( N > 27 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "assign M to ans",
      "code": "ans = M ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set ans to M % ( 1 < < N )",
      "code": "ans = M % ( 1 << N ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> n >> M ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "ans %= ( 1 << N ) ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        10,
        9
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "ans %= ( 1 << N ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        10,
        9,
        5
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "ans %= ( 1 << N ) ;",
        "n",
        "cin >> n >> M ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        10,
        9,
        8
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "ans %= ( 1 << N ) ;",
        "n",
        "int ans = M ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        10,
        9,
        1
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "ans %= ( 1 << N ) ;",
        "n",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        10,
        5
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "ans %= ( 1 << N ) ;",
        "cin >> n >> M ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        10,
        5,
        8
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "ans %= ( 1 << N ) ;",
        "cin >> n >> M ;",
        "int ans = M ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        10,
        5,
        1
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "ans %= ( 1 << N ) ;",
        "cin >> n >> M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        10,
        8
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "ans %= ( 1 << N ) ;",
        "int ans = M ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        10,
        8,
        1
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "ans %= ( 1 << N ) ;",
        "int ans = M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        10,
        1
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "ans %= ( 1 << N ) ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        9,
        5
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "n",
        "cin >> n >> M ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        9,
        5,
        8
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "n",
        "cin >> n >> M ;",
        "int ans = M ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        9,
        5,
        1
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "n",
        "cin >> n >> M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        9,
        8
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "n",
        "int ans = M ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        9,
        8,
        1
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "n",
        "int ans = M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        9,
        1
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "n",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "cin >> n >> M ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        5,
        8
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "cin >> n >> M ;",
        "int ans = M ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        5,
        8,
        1
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "cin >> n >> M ;",
        "int ans = M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        5,
        1
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "cin >> n >> M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "int ans = M ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        8,
        1
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "int ans = M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "const long long const MAXN = 2 * 1e5 + 5 ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        5
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "n",
        "cin >> n >> M ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        5,
        8
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "n",
        "cin >> n >> M ;",
        "int ans = M ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        5,
        1
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "n",
        "cin >> n >> M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        10,
        9,
        8
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "n",
        "int ans = M ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        8,
        1
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "n",
        "int ans = M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        10,
        9,
        1
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "n",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "cin >> n >> M ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        8
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "cin >> n >> M ;",
        "int ans = M ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5,
        8,
        1
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "cin >> n >> M ;",
        "int ans = M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        10,
        5,
        1
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "cin >> n >> M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        10,
        8,
        1
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "int ans = M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "ans %= ( 1 << N ) ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "n",
        "cin >> n >> M ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        8
      ],
      "mod_code": [
        "n",
        "cin >> n >> M ;",
        "int ans = M ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        8,
        1
      ],
      "mod_code": [
        "n",
        "cin >> n >> M ;",
        "int ans = M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        9,
        5,
        1
      ],
      "mod_code": [
        "n",
        "cin >> n >> M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "n",
        "int ans = M ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        1
      ],
      "mod_code": [
        "n",
        "int ans = M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "n",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cin >> n >> M ;",
        "int ans = M ;"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        1
      ],
      "mod_code": [
        "cin >> n >> M ;",
        "int ans = M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "cin >> n >> M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "int ans = M ;",
        "const const long long INF = 1e8 + 5 ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘const’"
    }
  ]
}