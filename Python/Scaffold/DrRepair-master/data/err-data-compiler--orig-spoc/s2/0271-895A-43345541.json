{
  "meta": {
    "index": 271,
    "hitid": "35NNO802AVQJ3W81W06G88JBFQENI4",
    "workerid": "A1APYLD4DUK33J",
    "probid": "895A",
    "subid": "43345541"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer constant MOD with MOD = 1e9 + 7",
      "code": "int const MOD = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long constant oo with oo = 2e18",
      "code": "long long const oo = 2e18 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer constant ooi with ooi = 2e9",
      "code": "int const ooi = 2e9 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integer constant N with N = 1e5 + 10",
      "code": "int const N = 1e5 + 10 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create integer constant M with M = 1e6 + 100",
      "code": "int const M = 1e6 + 100 ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create integer n create integer array a with size 1000",
      "code": "int n , a [ 1000 ] ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; ++ i ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create integer mn with mn = ooi",
      "code": "int mn = ooi ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create integers s , sum , e , with s = i , sum = 0 , e = i",
      "code": "int s = i , sum = 0 , e = i ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "do",
      "code": "do",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment sum by a [ e ]",
      "code": "sum += a [ e ] ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set mn to minimum of ( mn and absolute value of ( 360 - 2 * sum ) )",
      "code": "mn = min ( mn , abs ( 360 - 2 * sum ) ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set e to ( e + 1 ) % n",
      "code": "e = ( e + 1 ) % n ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "while e is not s",
      "code": "while ( e != s ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print mn print newline",
      "code": "cout << mn << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int n [ 1000 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000]’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "while ( e != s )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int a [ 1000 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int s , sum = 0 , e = 0 , e = i ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "while ( e )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "while ( e != s )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000]’)"
    },
    {
      "mod_line": [
        5,
        16,
        14
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "while ( e != s )",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000]’)"
    },
    {
      "mod_line": [
        5,
        16,
        14,
        11
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "while ( e != s )",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int s , sum = 0 , e = 0 , e = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000]’)"
    },
    {
      "mod_line": [
        5,
        16,
        14,
        4
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "while ( e != s )",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        5,
        16,
        11
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "while ( e != s )",
        "int s , sum = 0 , e = 0 , e = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000]’)"
    },
    {
      "mod_line": [
        5,
        16,
        11,
        4
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "while ( e != s )",
        "int s , sum = 0 , e = 0 , e = i ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        5,
        16,
        4
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "while ( e != s )",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000]’)"
    },
    {
      "mod_line": [
        5,
        14,
        11
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int s , sum = 0 , e = 0 , e = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000]’)"
    },
    {
      "mod_line": [
        5,
        14,
        11,
        4
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int s , sum = 0 , e = 0 , e = i ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        5,
        14,
        4
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "int s , sum = 0 , e = 0 , e = i ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000]’)"
    },
    {
      "mod_line": [
        5,
        11,
        4
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "int s , sum = 0 , e = 0 , e = i ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int n [ 1000 ] ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "while ( e != s )",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        16,
        14,
        11
      ],
      "mod_code": [
        "while ( e != s )",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int s , sum = 0 , e = 0 , e = i ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        16,
        14,
        11,
        5
      ],
      "mod_code": [
        "while ( e != s )",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int s , sum = 0 , e = 0 , e = i ;",
        "int a [ 1000 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        14,
        11,
        4
      ],
      "mod_code": [
        "while ( e != s )",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int s , sum = 0 , e = 0 , e = i ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        14,
        5
      ],
      "mod_code": [
        "while ( e != s )",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int a [ 1000 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        14,
        5,
        4
      ],
      "mod_code": [
        "while ( e != s )",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int a [ 1000 ] ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        14,
        4
      ],
      "mod_code": [
        "while ( e != s )",
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "while ( e != s )",
        "int s , sum = 0 , e = 0 , e = i ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        16,
        11,
        5
      ],
      "mod_code": [
        "while ( e != s )",
        "int s , sum = 0 , e = 0 , e = i ;",
        "int a [ 1000 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        11,
        5,
        4
      ],
      "mod_code": [
        "while ( e != s )",
        "int s , sum = 0 , e = 0 , e = i ;",
        "int a [ 1000 ] ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        11,
        4
      ],
      "mod_code": [
        "while ( e != s )",
        "int s , sum = 0 , e = 0 , e = i ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "while ( e != s )",
        "int a [ 1000 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        5,
        4
      ],
      "mod_code": [
        "while ( e != s )",
        "int a [ 1000 ] ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        4
      ],
      "mod_code": [
        "while ( e != s )",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int s , sum = 0 , e = 0 , e = i ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int e’"
    },
    {
      "mod_line": [
        14,
        11,
        5
      ],
      "mod_code": [
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int s , sum = 0 , e = 0 , e = i ;",
        "int a [ 1000 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        11,
        5,
        4
      ],
      "mod_code": [
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int s , sum = 0 , e = 0 , e = i ;",
        "int a [ 1000 ] ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        11,
        4
      ],
      "mod_code": [
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int s , sum = 0 , e = 0 , e = i ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int a [ 1000 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5,
        4
      ],
      "mod_code": [
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "int a [ 1000 ] ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "mn = min ( mn ) , abs ( 360 - 2 * sum ) ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "int s , sum = 0 , e = 0 , e = i ;",
        "int a [ 1000 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5,
        4
      ],
      "mod_code": [
        "int s , sum = 0 , e = 0 , e = i ;",
        "int a [ 1000 ] ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "int s , sum = 0 , e = 0 , e = i ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int a [ 1000 ] ;",
        "const const int M = 1e6 + 100 ;"
      ],
      "err_line": 4,
      "err_msg": "duplicate ‘const’"
    }
  ]
}