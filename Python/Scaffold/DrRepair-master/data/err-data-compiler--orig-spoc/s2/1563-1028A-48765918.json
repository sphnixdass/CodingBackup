{
  "meta": {
    "index": 1563,
    "hitid": "3ATYLI1PRTWXGSSJFXRTZYYGIFIOJ6",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1028A",
    "subid": "48765918"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "define ints n , m , cnt , tmp and tmp1 with cnt = 0 , tmp and tmp1 = - 1",
      "code": "int n , m , cnt = 0 , tmp = - 1 , tmp1 = - 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "s is a new string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read user input to s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "start for loop from j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s [ j ] is equal to ' B '",
      "code": "if ( s [ j ] == ' B ' )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if tmp is less than 0 , set tmp to j + 1",
      "code": "if ( tmp < 0 ) { tmp = j + 1 ; }",
      "indent": 4
    },
    {
      "line": 9,
      "text": "assign the new value = i to tmp1 if tmp1 is less than 0",
      "code": "if ( tmp1 < 0 ) { tmp1 = i ; }",
      "indent": 4
    },
    {
      "line": 10,
      "text": "increment cnt by one",
      "code": "cnt ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if cnt is greater than 0 , stop the loop",
      "code": "if ( cnt > 0 ) break ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print cnt / 2 + tmp1 , \" \" and cnt / 2 + tmp to the standard output",
      "code": "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        15
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        15,
        5
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        6,
        15,
        9
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "tmp1 = tmp1 < 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        15,
        2
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        6,
        5,
        9
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "s >> s ;",
        "tmp1 = tmp1 < 0 ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        6,
        5,
        2
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "s >> s ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "tmp1 = tmp1 < 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        2
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "tmp1 = tmp1 < 0 ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        6,
        2
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        15,
        5
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        15,
        5,
        9
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "s >> s ;",
        "tmp1 = tmp1 < 0 ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        15,
        5,
        2
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "s >> s ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        15,
        9,
        2
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "tmp1 = tmp1 < 0 ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        15,
        2
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        5,
        9
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "s >> s ;",
        "tmp1 = tmp1 < 0 ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        5,
        9,
        2
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "s >> s ;",
        "tmp1 = tmp1 < 0 ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        5,
        2
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "s >> s ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        9,
        2
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "tmp1 = tmp1 < 0 ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , m , cnt = 0 , tmp = 0 , tmp1 = - 1 ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        15,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        15,
        5,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "s >> s ;",
        "tmp1 = tmp1 < 0 ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        15,
        5,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "s >> s ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        15,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "tmp1 = tmp1 < 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        15,
        9,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "tmp1 = tmp1 < 0 ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        15,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        5,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "s >> s ;",
        "tmp1 = tmp1 < 0 ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        5,
        9,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "s >> s ;",
        "tmp1 = tmp1 < 0 ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "s >> s ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "tmp1 = tmp1 < 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "tmp1 = tmp1 < 0 ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        5
      ],
      "mod_code": [
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15,
        5,
        9
      ],
      "mod_code": [
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "s >> s ;",
        "tmp1 = tmp1 < 0 ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15,
        5,
        9,
        2
      ],
      "mod_code": [
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "s >> s ;",
        "tmp1 = tmp1 < 0 ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        5,
        2
      ],
      "mod_code": [
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "s >> s ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        9,
        2
      ],
      "mod_code": [
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "tmp1 = tmp1 < 0 ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "cout << cnt / 2 + tmp1 << \" \" << cnt / 2 + tmp ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "tmp1 = tmp1 < 0 ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "tmp1 = tmp1 < 0 ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "tmp1 = tmp1 < 0 ;",
        "string s << endl ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘<<’ token"
    }
  ]
}