{
  "meta": {
    "index": 1979,
    "hitid": "3126F2F5F8X7QCISGWTHRIQENCDEPN",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "818A",
    "subid": "41449145"
  },
  "lines": [
    {
      "line": 0,
      "text": "MAX = const int with MAX = 1e5 + 10",
      "code": "const int MAX = 1e5 + 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "num = int array of size 205",
      "code": "int num [ 205 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in function getans taking long long x and returning long long",
      "code": "long long getans ( long long x )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "ans = long long with ans = 0",
      "code": "long long ans = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop while x",
      "code": "while ( x )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "increment ans by x mod 10",
      "code": "ans += x % 10 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set x to x / 10",
      "code": "x /= 10 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return ans",
      "code": "return ans ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "a , b = long long",
      "code": "long long a , b ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read a then b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "num = long long with num = a / ( ( b + 1 ) * 2 )",
      "code": "long long num = a / ( ( b + 1 ) * 2 ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print num and num * b and a - num * ( b + 1 )",
      "code": "cout << num << \" \" << num * b << \" \" << a - num * ( b + 1 ) << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int const MAX = 1e5 + 10 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int ( int [ 205 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "cout << num << \" \" << a * num * ( b + num ) * ( b + 1 ) << endl ;",
        "const int const MAX = 1e5 + 10 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        0,
        1
      ],
      "mod_code": [
        "cout << num << \" \" << a * num * ( b + num ) * ( b + 1 ) << endl ;",
        "const int const MAX = 1e5 + 10 ;",
        "int ( int [ 205 ] ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        0,
        1,
        12
      ],
      "mod_code": [
        "cout << num << \" \" << a * num * ( b + num ) * ( b + 1 ) << endl ;",
        "const int const MAX = 1e5 + 10 ;",
        "int ( int [ 205 ] ;",
        "a >> a >> b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        0,
        12
      ],
      "mod_code": [
        "cout << num << \" \" << a * num * ( b + num ) * ( b + 1 ) << endl ;",
        "const int const MAX = 1e5 + 10 ;",
        "a >> a >> b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "cout << num << \" \" << a * num * ( b + num ) * ( b + 1 ) << endl ;",
        "int ( int [ 205 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        14,
        1,
        12
      ],
      "mod_code": [
        "cout << num << \" \" << a * num * ( b + num ) * ( b + 1 ) << endl ;",
        "int ( int [ 205 ] ;",
        "a >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "const int const MAX = 1e5 + 10 ;",
        "cout << num << ' ' << a * num * ( b + num ) * ( b + 1 ) << endl ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        14,
        1
      ],
      "mod_code": [
        "const int const MAX = 1e5 + 10 ;",
        "cout << num << ' ' << a * num * ( b + num ) * ( b + 1 ) << endl ;",
        "int ( int [ 205 ] ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        14,
        1,
        12
      ],
      "mod_code": [
        "const int const MAX = 1e5 + 10 ;",
        "cout << num << ' ' << a * num * ( b + num ) * ( b + 1 ) << endl ;",
        "int ( int [ 205 ] ;",
        "a >> a >> b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        14,
        12
      ],
      "mod_code": [
        "const int const MAX = 1e5 + 10 ;",
        "cout << num << ' ' << a * num * ( b + num ) * ( b + 1 ) << endl ;",
        "a >> a >> b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "const int const MAX = 1e5 + 10 ;",
        "int ( int [ 205 ] ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        1,
        12
      ],
      "mod_code": [
        "const int const MAX = 1e5 + 10 ;",
        "int ( int [ 205 ] ;",
        "a >> a >> b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "const int const MAX = 1e5 + 10 ;",
        "a >> a >> b ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "cout << num << ' ' << a * num * ( b + num ) * ( b + 1 ) << endl ;",
        "int ( int [ 205 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        14,
        1,
        12
      ],
      "mod_code": [
        "cout << num << ' ' << a * num * ( b + num ) * ( b + 1 ) << endl ;",
        "int ( int [ 205 ] ;",
        "a >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int ( int [ 205 ] ;",
        "a >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘int’"
    }
  ]
}