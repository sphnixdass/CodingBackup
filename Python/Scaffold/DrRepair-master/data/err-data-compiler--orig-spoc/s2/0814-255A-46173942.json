{
  "meta": {
    "index": 814,
    "hitid": "3DWGDA5POFYLBVLCQK71QQW2KRA1VC",
    "workerid": "A1AYVATMT88U1W",
    "probid": "255A",
    "subid": "46173942"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , a , b , c , chest , biceps , back be integers with chest = 0 , biceps = 0 , back = 0",
      "code": "int n , a , b , c , chest = 0 , biceps = 0 , back = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n / 3 exclusive",
      "code": "for ( int i = 0 ; i < n / 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a , b , c",
      "code": "cin >> a >> b >> c ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increment chest by a",
      "code": "chest += a ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment biceps by b",
      "code": "biceps += b ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment back by c",
      "code": "back += c ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if n modulo 3 is equal to 1",
      "code": "if ( n % 3 == 1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment chest by a",
      "code": "chest += a ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else if n modulo 3 is equal to 2",
      "code": "else if ( n % 3 == 2 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment chest by a",
      "code": "chest += a ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment biceps by b",
      "code": "biceps += b ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if chest is greater than biceps and chest is greater than back",
      "code": "if ( chest > biceps && chest > back )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print chest and newline",
      "code": "cout << \" chest \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else if biceps is greater than back and biceps is greater than chest",
      "code": "else if ( biceps > back && biceps > chest )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print biceps and newline",
      "code": "cout << \" biceps \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print back and newline",
      "code": "cout << \" back \" << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a , b , c , chest = 0 , biceps = 0 , biceps = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n / 3 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "getline ( cin , a ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else if ( n % 3 == 2 2 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << chest << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        18,
        20
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << chest << endl ;",
        "cout << biceps << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        18,
        20,
        22
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << chest << endl ;",
        "cout << biceps << endl ;",
        "cout << back << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        18,
        20,
        22
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << chest << endl ;",
        "cout << biceps << endl ;",
        "cout << back << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        18,
        22
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << chest << endl ;",
        "cout << back << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        18,
        22
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << chest << endl ;",
        "cout << back << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << biceps << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        20,
        22
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << biceps << endl ;",
        "cout << back << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        20,
        22,
        18
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << biceps << endl ;",
        "cout << back << endl ;",
        "cout << chest << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        20,
        18
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << biceps << endl ;",
        "cout << chest << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        20,
        18,
        22
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << biceps << endl ;",
        "cout << chest << \" \\n \" ;",
        "cout << back << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        20,
        22
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << biceps << endl ;",
        "cout << back << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << back << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        22,
        18
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << back << endl ;",
        "cout << chest << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << chest << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        18,
        22
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << chest << \" \\n \" ;",
        "cout << back << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "int n , a , b , c , chest , biceps = 0 , biceps = 0 , back = 0 ;",
        "cout << back << \" \\n \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int biceps’"
    }
  ]
}