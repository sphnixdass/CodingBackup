{
  "meta": {
    "index": 1290,
    "hitid": "3WRAAIUSBJT99837MI1CPCMQ39SXAS",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "959A",
    "subid": "48529064"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n bitwise - and 1 is true",
      "code": "if ( n & 1 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print \" Ehab \"",
      "code": "cout << \" Ehab \" << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" Mahmoud \"",
      "code": "cout << \" Mahmoud \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        6,
        5
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << \" Mahmoud \" ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        6,
        5,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << \" Mahmoud \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        6,
        5,
        1
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "cout << \" Mahmoud \" ;",
        "n",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        5,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        5,
        2,
        1
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "n",
        "n = getchar ( ) ;",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "cout << \" Ehab \" ;",
        "n",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "cout << \" Mahmoud \" ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "cout << \" Mahmoud \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        2,
        1
      ],
      "mod_code": [
        "cout << \" Mahmoud \" ;",
        "n",
        "n = getchar ( ) ;",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        1
      ],
      "mod_code": [
        "cout << \" Mahmoud \" ;",
        "n",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        2,
        1
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "n",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}