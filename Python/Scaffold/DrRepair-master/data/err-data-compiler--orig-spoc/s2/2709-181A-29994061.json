{
  "meta": {
    "index": 2709,
    "hitid": "3HA5ODM5KAML5FK633MLMRJBARIVSL",
    "workerid": "A1APYLD4DUK33J",
    "probid": "181A",
    "subid": "29994061"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare Unset with integers a , i as arguments , returning integer",
      "code": "int Unset ( int a , int i )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer mask",
      "code": "int mask ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "set mask to 1 bitshift left i",
      "code": "mask = 1 << i ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set a bitwise and bit inverted mask",
      "code": "a = a & ~ mask ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return a from function",
      "code": "return a ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "create integers row , collumn",
      "code": "int row , collumn ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create string vector grid",
      "code": "vector < string > grid ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read row read collumn",
      "code": "cin >> row >> collumn ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for A = 0 to row exclusive",
      "code": "for ( int A = 0 ; A < row ; A ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create string temp",
      "code": "string temp ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "read temp",
      "code": "cin >> temp ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "add element temp to end of grid",
      "code": "grid . push_back ( temp ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "create pairs p1 , p2 , p3 , ans of integer , integer",
      "code": "pair < int , int > p1 , p2 , p3 , ans ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for A = 0 to row exclusive",
      "code": "for ( int A = 0 ; A < row ; A ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "create integer c1 with c1 = 0",
      "code": "int c1 = 0 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "for B = 0 to collumn exclusive",
      "code": "for ( int B = 0 ; B < collumn ; B ++ )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if grid [ A ] [ B ] is ' * ' , increment c1",
      "code": "if ( grid [ A ] [ B ] == ' * ' ) c1 ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if c1 is 2",
      "code": "if ( c1 == 2 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "set c1 to 0",
      "code": "c1 = 0 ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "for B = 0 to collumn exclusive",
      "code": "for ( int B = 0 ; B < collumn ; B ++ )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if grid [ A ] [ B ] is ' * '",
      "code": "if ( grid [ A ] [ B ] == ' * ' )",
      "indent": 4
    },
    {
      "line": 25,
      "text": "if c1 is 1 , set p2 to make pair from A and B",
      "code": "if ( c1 == 1 ) { p2 = make_pair ( A , B ) ; }",
      "indent": 5
    },
    {
      "line": 26,
      "text": "if c1 is 0 , set p1 to make pair from A and B",
      "code": "if ( c1 == 0 ) { p1 = make_pair ( A , B ) ; }",
      "indent": 5
    },
    {
      "line": 27,
      "text": "increment c1",
      "code": "c1 ++ ;",
      "indent": 5
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 30,
      "text": "else if c1 is 1",
      "code": "else if ( c1 == 1 )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "for B = 0 to collumn exclusive",
      "code": "for ( int B = 0 ; B < collumn ; B ++ )",
      "indent": 3
    },
    {
      "line": 32,
      "text": "if grid [ A ] [ B ] is ' * ' , set p3 to make pair from A and B",
      "code": "if ( grid [ A ] [ B ] == ' * ' ) { p3 = make_pair ( A , B ) ; }",
      "indent": 4
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "if second element of p1 is second element of p3",
      "code": "if ( p1 . second == p3 . second )",
      "indent": 1
    },
    {
      "line": 37,
      "text": "print first element of p3 + 1 print \" \" print second element of p2 + 1 print newline",
      "code": "cout << p3 . first + 1 << \" \" << p2 . second + 1 << endl ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 39,
      "text": "print first element of p3 + 1 print \" \" print second element of p1 + 1 print newline",
      "code": "cout << p3 . first + 1 << \" \" << p1 . second + 1 << endl ;",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "if ( c1 == 1 ) p2 = A + A ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;"
      ],
      "err_line": 26,
      "err_msg": "request for member ‘pair’ in ‘A’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;"
      ],
      "err_line": 32,
      "err_msg": "‘make’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int Unset ( int a , int i ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "row , collumn ;"
      ],
      "err_line": 7,
      "err_msg": "‘row’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "vector < int > grid ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<int>::push_back(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( A = 0 ; A < row ; A ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "char temp ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::push_back(char&)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "grid . push ( temp ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘push’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( A = 0 ; A < row ; A ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘A’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "c1 = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "‘c1’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "if ( c1 == 1 ) p2 = A + A + B ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( c1 == 0 ) p1 = A ( A , B ) ;"
      ],
      "err_line": 26,
      "err_msg": "‘A’ cannot be used as a function"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "else if ( c1 == l )"
      ],
      "err_line": 30,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = A ( A , B ) ;"
      ],
      "err_line": 32,
      "err_msg": "‘A’ cannot be used as a function"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "cout << p3 . first + 1 << \" \" << p2 + p2 . second + 1 << endl ;"
      ],
      "err_line": 37,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        38
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 38,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "cout << p3 . first + 1 << \" \" << p1 . second + p1 + 1 << endl ;"
      ],
      "err_line": 39,
      "err_msg": "no match for ‘operator+’ (operand types are ‘int’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        15,
        25
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 1 ) p2 = A + A ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        25,
        26
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 1 ) p2 = A + A ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        25,
        26,
        32
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 1 ) p2 = A + A ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        25,
        26,
        9
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 1 ) p2 = A + A ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        25,
        32
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 1 ) p2 = A + A ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        25,
        32,
        9
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 1 ) p2 = A + A ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        25,
        9
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 1 ) p2 = A + A ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        26
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        26,
        32
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        26,
        32,
        25
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "if ( c1 == 1 ) p2 = A + A + B ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        26,
        32,
        9
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        26,
        25
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( c1 == 1 ) p2 = A + A + B ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        26,
        25,
        9
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( c1 == 1 ) p2 = A + A + B ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        26,
        9
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        32
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        32,
        25
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "if ( c1 == 1 ) p2 = A + A + B ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        32,
        25,
        9
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "if ( c1 == 1 ) p2 = A + A + B ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        32,
        9
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        25
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 1 ) p2 = A + A + B ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        25,
        9
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "if ( c1 == 1 ) p2 = A + A + B ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "vector < int > p1 , p2 , p3 , ans , ans ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘std::vector<int> ans’"
    },
    {
      "mod_line": [
        25,
        26
      ],
      "mod_code": [
        "if ( c1 == 1 ) p2 = A + A ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        25,
        26,
        32
      ],
      "mod_code": [
        "if ( c1 == 1 ) p2 = A + A ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        25,
        26,
        32,
        9
      ],
      "mod_code": [
        "if ( c1 == 1 ) p2 = A + A ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        25,
        26,
        9
      ],
      "mod_code": [
        "if ( c1 == 1 ) p2 = A + A ;",
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        25,
        32
      ],
      "mod_code": [
        "if ( c1 == 1 ) p2 = A + A ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        25,
        32,
        9
      ],
      "mod_code": [
        "if ( c1 == 1 ) p2 = A + A ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        25,
        9
      ],
      "mod_code": [
        "if ( c1 == 1 ) p2 = A + A ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        26,
        32
      ],
      "mod_code": [
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;"
      ],
      "err_line": 26,
      "err_msg": "request for member ‘pair’ in ‘A’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        26,
        32,
        25
      ],
      "mod_code": [
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "if ( c1 == 1 ) p2 = A + A + B ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        26,
        32,
        25,
        9
      ],
      "mod_code": [
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "if ( c1 == 1 ) p2 = A + A + B ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        26,
        32,
        9
      ],
      "mod_code": [
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 26,
      "err_msg": "request for member ‘pair’ in ‘A’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        26,
        25
      ],
      "mod_code": [
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( c1 == 1 ) p2 = A + A + B ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        26,
        25,
        9
      ],
      "mod_code": [
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "if ( c1 == 1 ) p2 = A + A + B ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        26,
        9
      ],
      "mod_code": [
        "if ( c1 == 0 ) p1 = A . pair ( A , B ) ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 26,
      "err_msg": "request for member ‘pair’ in ‘A’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        32,
        25
      ],
      "mod_code": [
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "if ( c1 == 1 ) p2 = A + A + B ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        32,
        25,
        9
      ],
      "mod_code": [
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "if ( c1 == 1 ) p2 = A + A + B ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        32,
        9
      ],
      "mod_code": [
        "if ( grid [ A ] [ B ] == ' * ' ) p3 = make ( A , B ) ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 32,
      "err_msg": "‘make’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        9
      ],
      "mod_code": [
        "if ( c1 == 1 ) p2 = A + A + B ;",
        "row >> row >> collumn ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::pair<int, int>’ and ‘int’)"
    }
  ]
}