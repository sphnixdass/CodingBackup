{
  "meta": {
    "index": 2271,
    "hitid": "3P7RGTLO6E73P840NZMNZIEO8NBAKP",
    "workerid": "A1APYLD4DUK33J",
    "probid": "99A",
    "subid": "37351074"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long longs i , j , a , b , c , d , e , f , g , n",
      "code": "long long i , j , a , b , c , d , e , f , g , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let j be first index of \" . \" in s",
      "code": "j = s . find ( \" . \" ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if character at ( j - 1 ) in s is ' 9 '",
      "code": "if ( s . at ( j - 1 ) == ' 9 ' )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" GOTO Vasilisa . \" and newline",
      "code": "cout << \" GOTO Vasilisa. \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if character at ( j + 1 ) in s is greater than ' 4 ' , let character at ( j - 1 ) in s be character at ( j - 1 ) in s + 1",
      "code": "if ( s . at ( j + 1 ) > ' 4 ' ) { s . at ( j - 1 ) = s . at ( j - 1 ) + 1 ; }",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "remove j from s",
      "code": "s . erase ( j ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print s and newline",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘long long int’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘find’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "j = s . first = \" . \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (long long int)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::basic_string<char>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "s . pop ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘pop’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "j = s . first = \" . \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        9,
        4,
        8
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "j = s . first = \" . \" ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        9,
        4,
        8,
        3
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "j = s . first = \" . \" ;",
        "n",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        4,
        8,
        5
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "j = s . first = \" . \" ;",
        "n",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        9,
        4,
        3
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "j = s . first = \" . \" ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        4,
        3,
        5
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "j = s . first = \" . \" ;",
        "s >> s ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        4,
        5
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "j = s . first = \" . \" ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        8,
        3
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "n",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        8,
        3,
        5
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "n",
        "s >> s ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        8,
        5
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "n",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (long long int)’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        3,
        5
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "s >> s ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( s + ( j + 1 ) > ' 4 ' ) { s + ( j - 1 ) ; }",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (long long int)’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        4,
        8,
        3
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "n",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8,
        3,
        9
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "n",
        "s >> s ;",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8,
        3,
        5
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "n",
        "s >> s ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "n",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        5
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "n",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        4,
        8,
        5
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "n",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        3,
        9
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "s >> s ;",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        3,
        9,
        5
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "s >> s ;",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        3,
        5
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "s >> s ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        4,
        9,
        5
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "j = s . first = \" . \" ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 4,
      "err_msg": "‘std::__cxx11::string {aka class std::__cxx11::basic_string<char>}’ has no member named ‘first’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "n",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        3,
        9
      ],
      "mod_code": [
        "n",
        "s >> s ;",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        3,
        9,
        5
      ],
      "mod_code": [
        "n",
        "s >> s ;",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        3,
        5
      ],
      "mod_code": [
        "n",
        "s >> s ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "n",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        9,
        5
      ],
      "mod_code": [
        "n",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (long long int)’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "n",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (long long int)’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        9,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( s . at ( j + 1 ) > ' 4 ' ) s + ( j - 1 , s ) + ( j - 1 ) ;",
        "if ( s ( j - 1 ) == ' 9 ' )"
      ],
      "err_line": 5,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (long long int)’"
    }
  ]
}