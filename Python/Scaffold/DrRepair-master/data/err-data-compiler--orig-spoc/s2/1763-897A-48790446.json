{
  "meta": {
    "index": 1763,
    "hitid": "3I01FDIL6M266Z3MI37LPN00CQO2DZ",
    "workerid": "A59A6LMCQRBL3",
    "probid": "897A",
    "subid": "48790446"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m , l , r = int",
      "code": "int n , m , l , r ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "c1 , c2 = char",
      "code": "char c1 , c2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while n and m can be read",
      "code": "while ( cin >> n >> m )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "while m > 0",
      "code": "while ( m -- )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read l , r , c1 , c2",
      "code": "cin >> l >> r >> c1 >> c2 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "for int i = l to r inclusive",
      "code": "for ( int i = l ; i <= r ; i ++ )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if s [ i - 1 ] = = c1 , let s [ i - 1 ] = c2",
      "code": "if ( s [ i - 1 ] == c1 ) s [ i - 1 ] = c2 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char c1 , c1 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char c1’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( { cin >> n >> m )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "while ( m > 0 )",
        "string S ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "while ( m > 0 )",
        "string S ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        3,
        4,
        1
      ],
      "mod_code": [
        "while ( m > 0 )",
        "string S ;",
        "while ( { cin >> n >> m )",
        "int n , m , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        6,
        3,
        4,
        2
      ],
      "mod_code": [
        "while ( m > 0 )",
        "string S ;",
        "while ( { cin >> n >> m )",
        "char c1 , c1 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char c1’"
    },
    {
      "mod_line": [
        6,
        3,
        1
      ],
      "mod_code": [
        "while ( m > 0 )",
        "string S ;",
        "int n , m , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        6,
        3,
        1,
        2
      ],
      "mod_code": [
        "while ( m > 0 )",
        "string S ;",
        "int n , m , l , r , r ;",
        "char c1 , c1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "while ( m > 0 )",
        "string S ;",
        "char c1 , c1 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char c1’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "while ( m > 0 )",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        4,
        1
      ],
      "mod_code": [
        "while ( m > 0 )",
        "while ( { cin >> n >> m )",
        "int n , m , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        6,
        4,
        1,
        2
      ],
      "mod_code": [
        "while ( m > 0 )",
        "while ( { cin >> n >> m )",
        "int n , m , l , r , r ;",
        "char c1 , c1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "while ( m > 0 )",
        "while ( { cin >> n >> m )",
        "char c1 , c1 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char c1’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "while ( m > 0 )",
        "int n , m , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        6,
        1,
        2
      ],
      "mod_code": [
        "while ( m > 0 )",
        "int n , m , l , r , r ;",
        "char c1 , c1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "while ( m > 0 )",
        "char c1 , c1 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char c1’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "string S ;",
        "while ( { cin >> n >> m )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        1
      ],
      "mod_code": [
        "string S ;",
        "while ( { cin >> n >> m )",
        "int n , m , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        3,
        4,
        1,
        6
      ],
      "mod_code": [
        "string S ;",
        "while ( { cin >> n >> m )",
        "int n , m , l , r , r ;",
        "while ( m )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        3,
        4,
        1,
        2
      ],
      "mod_code": [
        "string S ;",
        "while ( { cin >> n >> m )",
        "int n , m , l , r , r ;",
        "char c1 , c1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "string S ;",
        "while ( { cin >> n >> m )",
        "while ( m )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        2
      ],
      "mod_code": [
        "string S ;",
        "while ( { cin >> n >> m )",
        "while ( m )",
        "char c1 , c1 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char c1’"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "string S ;",
        "while ( { cin >> n >> m )",
        "char c1 , c1 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char c1’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "string S ;",
        "int n , m , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "string S ;",
        "int n , m , l , r , r ;",
        "while ( m )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        3,
        1,
        6,
        2
      ],
      "mod_code": [
        "string S ;",
        "int n , m , l , r , r ;",
        "while ( m )",
        "char c1 , c1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "string S ;",
        "int n , m , l , r , r ;",
        "char c1 , c1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "string S ;",
        "while ( m )"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "string S ;",
        "while ( m )",
        "char c1 , c1 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char c1’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "string S ;",
        "char c1 , c1 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char c1’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "while ( { cin >> n >> m )",
        "int n , m , l , r , r ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        1,
        6
      ],
      "mod_code": [
        "while ( { cin >> n >> m )",
        "int n , m , l , r , r ;",
        "while ( m )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        1,
        6,
        2
      ],
      "mod_code": [
        "while ( { cin >> n >> m )",
        "int n , m , l , r , r ;",
        "while ( m )",
        "char c1 , c1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        1,
        2
      ],
      "mod_code": [
        "while ( { cin >> n >> m )",
        "int n , m , l , r , r ;",
        "char c1 , c1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "while ( { cin >> n >> m )",
        "while ( m )"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        6,
        2
      ],
      "mod_code": [
        "while ( { cin >> n >> m )",
        "while ( m )",
        "char c1 , c1 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char c1’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "while ( { cin >> n >> m )",
        "char c1 , c1 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char c1’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , m , l , r , r ;",
        "while ( m )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        1,
        6,
        2
      ],
      "mod_code": [
        "int n , m , l , r , r ;",
        "while ( m )",
        "char c1 , c1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , m , l , r , r ;",
        "char c1 , c1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "while ( m )",
        "char c1 , c1 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘char c1’"
    }
  ]
}