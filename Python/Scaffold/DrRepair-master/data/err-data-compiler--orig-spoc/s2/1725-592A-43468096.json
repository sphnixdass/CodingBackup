{
  "meta": {
    "index": 1725,
    "hitid": "32CAVSKPCEJLYGWCLUXWU4UJ6K41UQ",
    "workerid": "A1AYVATMT88U1W",
    "probid": "592A",
    "subid": "43468096"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a , b , i , j , k , l be integers",
      "code": "int a , b , i , j , k , l ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "a is equal to b is equal to 1000",
      "code": "a = b = 1000 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "map = array of strings of length 8",
      "code": "string map [ 8 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let key be a string with key = . BW",
      "code": "string key = \" .BW \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to 8 exclusive , read map [ i ]",
      "code": "for ( i = 0 ; i < 8 ; i ++ ) cin >> map [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to 8 exclusive",
      "code": "for ( i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j is equal to 0 , j is less than 8 and map [ j ] [ i ] is not equal to B , increment j by 1",
      "code": "for ( j = 0 ; j < 8 && map [ j ] [ i ] != ' B ' ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if map [ j ] [ i ] is equal to W , a is equal to minimum of a and j",
      "code": "if ( map [ j ] [ i ] == ' W ' ) a = min ( a , j ) ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "for j is equal to 7 , j > = 0 and map [ j ] [ i ] is not equal to W , decrement j by 1",
      "code": "for ( j = 7 ; j >= 0 && map [ j ] [ i ] != ' W ' ; j -- )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if map [ j ] [ i ] is equal to B , b is equal to minimum of b and 7 - j",
      "code": "if ( map [ j ] [ i ] == ' B ' ) b = min ( b , 7 - j ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if a < = b print A else print B and newline",
      "code": "cout << ( a <= b ? ' A ' : ' B ' ) << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "a = 1000 = 1000 ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < string , int > map ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string key = BW ;"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < string , string > map ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, std::__cxx11::basic_string<char> >’ and ‘int’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string key = str ;"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "puts ( a <= b ? A : B ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘A’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "map < string , int > map ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "map < string , int > map ;",
        "string key = BW ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        7
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "map < string , int > map ;",
        "string key = BW ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        9
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "map < string , int > map ;",
        "string key = BW ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        12
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "map < string , int > map ;",
        "string key = BW ;",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "map < string , int > map ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        9
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "map < string , int > map ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        12
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "map < string , int > map ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        3,
        9
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "map < string , int > map ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        3,
        9,
        12
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "map < string , int > map ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        3,
        12
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "map < string , int > map ;",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "string key = BW ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        4,
        7
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "string key = BW ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        9
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "string key = BW ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        4,
        7,
        12
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "string key = BW ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        4,
        9
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "string key = BW ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        12
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "string key = BW ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        4,
        12
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "string key = BW ;",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        7,
        9
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        7,
        9,
        12
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        7,
        12
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        9,
        12
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "a = 1000 = 1000 ;",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "map < string , int > map ;",
        "string key = BW ;"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "map < string , int > map ;",
        "string key = BW ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        9
      ],
      "mod_code": [
        "map < string , int > map ;",
        "string key = BW ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        12
      ],
      "mod_code": [
        "map < string , int > map ;",
        "string key = BW ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "map < string , int > map ;",
        "string key = BW ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        12
      ],
      "mod_code": [
        "map < string , int > map ;",
        "string key = BW ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        12
      ],
      "mod_code": [
        "map < string , int > map ;",
        "string key = BW ;",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "map < string , int > map ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        7,
        9
      ],
      "mod_code": [
        "map < string , int > map ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        7,
        9,
        12
      ],
      "mod_code": [
        "map < string , int > map ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        7,
        12
      ],
      "mod_code": [
        "map < string , int > map ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "map < string , int > map ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        9,
        12
      ],
      "mod_code": [
        "map < string , int > map ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "map < string , int > map ;",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<std::__cxx11::basic_string<char>, int>’ and ‘int’)"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "string key = BW ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "string key = BW ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        12
      ],
      "mod_code": [
        "string key = BW ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        12
      ],
      "mod_code": [
        "string key = BW ;",
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "string key = BW ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        12
      ],
      "mod_code": [
        "string key = BW ;",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "string key = BW ;",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘BW’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )"
      ],
      "err_line": 7,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        12
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 && map [ j ] [ i ] != B ; j ++ )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘B’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "for ( int j = 7 ; j >= 0 && j [ j ] != ' W ' ; j -- )",
        "cout << ( a <= b ? A : B ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}