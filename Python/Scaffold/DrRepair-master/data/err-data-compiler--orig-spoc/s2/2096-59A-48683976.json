{
  "meta": {
    "index": 2096,
    "hitid": "3ZRKL6Z1E8X2NIUBE8NZMQG1NCZSGY",
    "workerid": "AIWEXPJAU66D9",
    "probid": "59A",
    "subid": "48683976"
  },
  "lines": [
    {
      "line": 0,
      "text": "create string str",
      "code": "string str ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read input to str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare new integers s = 0 and c = length of str",
      "code": "int s = 0 , c = str . size ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to length of str exclusive , if str [ i ] > = ' a ' , add 1 to s",
      "code": "for ( int i = 0 ; i < str . size ( ) ; i ++ ) { s += str [ i ] >= ' a ' ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "decrease c by s",
      "code": "c -= s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if c is greater than s",
      "code": "if ( c > s )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "start for loop from i = 0 to length of str exclusive",
      "code": "for ( int i = 0 ; i < str . size ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if str [ i ] > = ' a ' , convert set str [ i ] to the upper case",
      "code": "if ( str [ i ] >= ' a ' ) str [ i ] = toupper ( str [ i ] ) ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to length of str exclusive incrementing i",
      "code": "for ( int i = 0 ; i < str . size ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if str [ i ] is less than ' a ' , change str [ i ] to the lower case",
      "code": "if ( str [ i ] < ' a ' ) str [ i ] = tolower ( str [ i ] ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print str to the standard output",
      "code": "cout << str << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "str >> str ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        6,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; str [ i ] >= ' a ' ; i ++ ) s += str [ i ] ;",
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "if ( c >= s )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        6,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; str [ i ] >= ' a ' ; i ++ ) s += str [ i ] ;",
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "if ( c >= s )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; str [ i ] >= ' a ' ; i ++ ) s += str [ i ] ;",
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        0,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; str [ i ] >= ' a ' ; i ++ ) s += str [ i ] ;",
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "string str << endl ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; str [ i ] >= ' a ' ; i ++ ) s += str [ i ] ;",
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; str [ i ] >= ' a ' ; i ++ ) s += str [ i ] ;",
        "if ( c >= s )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        0,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; str [ i ] >= ' a ' ; i ++ ) s += str [ i ] ;",
        "if ( c >= s )",
        "string str << endl ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        6,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; str [ i ] >= ' a ' ; i ++ ) s += str [ i ] ;",
        "if ( c >= s )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; str [ i ] >= ' a ' ; i ++ ) s += str [ i ] ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        0,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; str [ i ] >= ' a ' ; i ++ ) s += str [ i ] ;",
        "string str << endl ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; str [ i ] >= ' a ' ; i ++ ) s += str [ i ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        4,
        0
      ],
      "mod_code": [
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "if ( c >= s )",
        "for ( int i = 0 ; i < str . length ( ) ; i ++ ) s += str [ i ] ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        6,
        4,
        10
      ],
      "mod_code": [
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "if ( c >= s )",
        "for ( int i = 0 ; i < str . length ( ) ; i ++ ) s += str [ i ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        0
      ],
      "mod_code": [
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "if ( c >= s )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        6,
        0,
        10
      ],
      "mod_code": [
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "if ( c >= s )",
        "string str << endl ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        6,
        10
      ],
      "mod_code": [
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "if ( c >= s )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        0
      ],
      "mod_code": [
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "for ( int i = 0 ; i < str . length ( ) ; i ++ ) s += str [ i ] ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        4,
        0,
        10
      ],
      "mod_code": [
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "for ( int i = 0 ; i < str . length ( ) ; i ++ ) s += str [ i ] ;",
        "string str << endl ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        4,
        10
      ],
      "mod_code": [
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "for ( int i = 0 ; i < str . length ( ) ; i ++ ) s += str [ i ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        0,
        10
      ],
      "mod_code": [
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "string str << endl ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "if ( str [ i ] >= ' a ' ) str [ i ] = str [ i ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        0
      ],
      "mod_code": [
        "if ( c >= s )",
        "for ( int i = 0 ; i < str . length ( ) ; i ++ ) s += str [ i ] ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        4,
        0,
        10
      ],
      "mod_code": [
        "if ( c >= s )",
        "for ( int i = 0 ; i < str . length ( ) ; i ++ ) s += str [ i ] ;",
        "string str << endl ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        4,
        10
      ],
      "mod_code": [
        "if ( c >= s )",
        "for ( int i = 0 ; i < str . length ( ) ; i ++ ) s += str [ i ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "if ( c >= s )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        0,
        10
      ],
      "mod_code": [
        "if ( c >= s )",
        "string str << endl ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( c >= s )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i < str . length ( ) ; i ++ ) s += str [ i ] ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        0,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < str . length ( ) ; i ++ ) s += str [ i ] ;",
        "string str << endl ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < str . length ( ) ; i ++ ) s += str [ i ] ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "string str << endl ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    }
  ]
}