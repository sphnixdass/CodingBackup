{
  "meta": {
    "index": 333,
    "hitid": "3SSN80MU8CIFLLCTY9E1JQPM98MKX5",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "735A",
    "subid": "41544216"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , k , locg , loct be integers",
      "code": "int n , k , locg , loct ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let s be string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , k , s",
      "code": "cin >> n >> k >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 0 to size of s - 1 with increment i",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ i ] is equal to ' G ' then",
      "code": "if ( s [ i ] == ' G ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "assign i to locg",
      "code": "locg = i ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if s [ i ] is equal to ' T ' then",
      "code": "else if ( s [ i ] == ' T ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "assign i to loct",
      "code": "loct = i ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if absolute of ( locg - loct ) mod k is not equal to 0 then",
      "code": "if ( abs ( locg - loct ) % k )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else do",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "let yes be boolean with value 1",
      "code": "bool yes = 1 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for integer i = ( minimum of locg and loct ) to ( maximum of locg and loct ) with increment i by k",
      "code": "for ( int i = min ( locg , loct ) ; i <= max ( locg , loct ) ; i += k )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if s [ i ] is equal to ' # ' then",
      "code": "if ( s [ i ] == ' # ' )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "assign 0 to yes",
      "code": "yes = 0 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "break the for loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if yes is true then",
      "code": "if ( yes )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' G ' ) then ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘then’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "yes = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘yes’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "int locg = i ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        13,
        6,
        5
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "int locg = i ;",
        "if ( s [ i ] == ' G ' ) then ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘then’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        5,
        9
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "int locg = i ;",
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "if ( abs ( locg - loct ) - k != 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘then’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        5,
        2
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "int locg = i ;",
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "int locg = i ;",
        "if ( abs ( locg - loct ) - k != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        13,
        6,
        9,
        2
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "int locg = i ;",
        "if ( abs ( locg - loct ) - k != 0 )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6,
        2
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "int locg = i ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "if ( s [ i ] == ' G ' ) then ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘then’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5,
        9
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "if ( abs ( locg - loct ) - k != 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘then’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5,
        9,
        2
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "if ( abs ( locg - loct ) - k != 0 )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5,
        2
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "if ( abs ( locg - loct ) - k != 0 )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        13,
        9,
        2
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "if ( abs ( locg - loct ) - k != 0 )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i <= max ( locg ) ; i += k )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "int locg = i ;",
        "if ( s [ i ] == ' G ' ) then ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘then’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        9
      ],
      "mod_code": [
        "int locg = i ;",
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "if ( abs ( locg - loct ) - k != 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘then’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        9,
        13
      ],
      "mod_code": [
        "int locg = i ;",
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "if ( abs ( locg - loct ) - k != 0 )",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )"
      ],
      "err_line": 5,
      "err_msg": "‘then’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        9,
        2
      ],
      "mod_code": [
        "int locg = i ;",
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "if ( abs ( locg - loct ) - k != 0 )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        13
      ],
      "mod_code": [
        "int locg = i ;",
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )"
      ],
      "err_line": 5,
      "err_msg": "‘then’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        13,
        2
      ],
      "mod_code": [
        "int locg = i ;",
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "int locg = i ;",
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        13
      ],
      "mod_code": [
        "int locg = i ;",
        "if ( abs ( locg - loct ) - k != 0 )",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        2
      ],
      "mod_code": [
        "int locg = i ;",
        "if ( abs ( locg - loct ) - k != 0 )",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "int locg = i ;",
        "if ( abs ( locg - loct ) - k != 0 )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "int locg = i ;",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        6,
        13,
        2
      ],
      "mod_code": [
        "int locg = i ;",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "int locg = i ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "if ( abs ( locg - loct ) - k != 0 )"
      ],
      "err_line": 5,
      "err_msg": "‘then’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "if ( abs ( locg - loct ) - k != 0 )",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )"
      ],
      "err_line": 5,
      "err_msg": "‘then’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        13,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "if ( abs ( locg - loct ) - k != 0 )",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "if ( abs ( locg - loct ) - k != 0 )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )"
      ],
      "err_line": 5,
      "err_msg": "‘then’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' G ' ) then ++ ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "if ( abs ( locg - loct ) - k != 0 )",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘max(int&)’"
    },
    {
      "mod_line": [
        9,
        13,
        2
      ],
      "mod_code": [
        "if ( abs ( locg - loct ) - k != 0 )",
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "if ( abs ( locg - loct ) - k != 0 )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "for ( int i = ( min ) ( locg , loct ) ; i < max ( locg ) ; i += k )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    }
  ]
}