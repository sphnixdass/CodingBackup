{
  "meta": {
    "index": 2493,
    "hitid": "3TX9T2ZCB9VVLG6PO5LP4MZS3DBWZN",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "7A",
    "subid": "46678942"
  },
  "lines": [
    {
      "line": 0,
      "text": "mat = 2D array in strings with 9 rows and 9 columns",
      "code": "int mat [ 9 ] [ 9 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n = integer , set to 8",
      "code": "int n = 8 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 8 exclusive",
      "code": "for ( int i = 1 ; i <= 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "Read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 0 to 8 exclusive",
      "code": "for ( int j = 0 ; j < 8 ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s [ j ] is equal to B , then set mat [ i ] [ j + 1 ] = 1",
      "code": "if ( s [ j ] == ' B ' ) mat [ i ] [ j + 1 ] = 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "a1 , a2 = integer , both set to 0",
      "code": "int a1 = 0 , a2 = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to 8 exclusive",
      "code": "for ( int i = 1 ; i <= 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "f1 , f2 = integer , both set to 1",
      "code": "int f1 = 1 , f2 = 1 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for j = 0 to 8 exclusive",
      "code": "for ( int j = 1 ; j <= 8 ; j ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set f1 to f1 and mat [ j ] [ i ]",
      "code": "f1 = f1 & mat [ j ] [ i ] ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set f2 to f2 and mat [ i ] [ j ]",
      "code": "f2 = f2 & mat [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set a1 to a1 + f1",
      "code": "a1 += f1 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set a2 to a2 + f2",
      "code": "a2 += f2 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if a1 is equal to 8 OR a2 is equal to 8",
      "code": "if ( a1 == 8 || a2 == 8 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print 8 and a new line",
      "code": "cout << 8 << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print a1 + a2 and a new line",
      "code": "cout << a1 + a2 << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string mat [ 4 ] [ 9 ] ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int f1 = 1 ;"
      ],
      "err_line": 15,
      "err_msg": "‘f2’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( a1 == 8 OR a2 == 8 )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘)’ before ‘OR’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        4,
        11
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "for ( int i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        4,
        11,
        13
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "for ( int j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        4,
        11,
        14
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "f1 = f1 , mat [ j ] [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        4,
        11,
        15
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "f2 = f2 , mat [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        4,
        13
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "for ( int j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        4,
        13,
        14
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "f1 = f1 , mat [ j ] [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        4,
        13,
        15
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "f2 = f2 , mat [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        4,
        14
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "f1 = f1 , mat [ j ] [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        4,
        15
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "f2 = f2 , mat [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        11,
        13
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "for ( int j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        11,
        13,
        14
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "f1 = f1 , mat [ j ] [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        11,
        13,
        15
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "f2 = f2 , mat [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        11,
        14
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "f1 = f1 , mat [ j ] [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        11,
        15
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int i = 0 ; i < 8 ; i ++ )",
        "f2 = f2 , mat [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        13,
        14
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "f1 = f1 , mat [ j ] [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        13,
        15
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "f2 = f2 , mat [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "f1 = f1 , mat [ j ] [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "string mat [ 9 ] [ 9 ] ;",
        "f2 = f2 , mat [ i ] [ j ] ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator&’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}