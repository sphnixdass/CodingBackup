{
  "meta": {
    "index": 1570,
    "hitid": "3IV1AEQ4DR7UV0538G2X2C8G3AEJ8Y",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "1028A",
    "subid": "42360063"
  },
  "lines": [
    {
      "line": 0,
      "text": "integer as n , m",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character array s sized 116 by 116",
      "code": "char s [ 116 ] [ 116 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "integer as r = 0 , c = 0",
      "code": "int r = 0 , c = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "integer as flag = 0",
      "code": "int flag = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "integer as sumi = 0 , sumj = 0 , sum = 0",
      "code": "int sumi = 0 , sumj = 0 , sum = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to less than or equal to n do the following",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j = 1 to less than or equal to m input s [ i ] [ j ]",
      "code": "for ( int j = 1 ; j <= m ; j ++ ) cin >> s [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for i = 1 to less than or equal to n do the following",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for j = 1 to less than or equal to m do the following",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if s [ i ] [ j ] is B then do the following",
      "code": "if ( s [ i ] [ j ] == ' B ' )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "sumi equals sumi plus i",
      "code": "sumi += i ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "sumj equals sumj plus j",
      "code": "sumj += j ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "add one to sum",
      "code": "sum ++ ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "output sumi / sum and sumj / sum",
      "code": "cout << sumi / sum << \" \" << sumj / sum << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s [ 116 ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "+= += i ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "sumj = sumj plus j ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "cin >> n , m ;",
        "+= += i ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        6,
        12,
        13
      ],
      "mod_code": [
        "cin >> n , m ;",
        "+= += i ;",
        "sumj = sumj plus j ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        11
      ],
      "mod_code": [
        "cin >> n , m ;",
        "+= += i ;",
        "sumj = sumj plus j ;",
        "if ( ! s [ i ] [ j ] )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        18
      ],
      "mod_code": [
        "cin >> n , m ;",
        "+= += i ;",
        "sumj = sumj plus j ;",
        "cout << sumi / sum << sumj / sum << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        5
      ],
      "mod_code": [
        "cin >> n , m ;",
        "+= += i ;",
        "sumj = sumj plus j ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        6,
        12,
        11
      ],
      "mod_code": [
        "cin >> n , m ;",
        "+= += i ;",
        "if ( ! s [ i ] [ j ] )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        6,
        12,
        11,
        18
      ],
      "mod_code": [
        "cin >> n , m ;",
        "+= += i ;",
        "if ( ! s [ i ] [ j ] )",
        "cout << sumi / sum << sumj / sum << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        6,
        12,
        11,
        5
      ],
      "mod_code": [
        "cin >> n , m ;",
        "+= += i ;",
        "if ( ! s [ i ] [ j ] )",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        6,
        12,
        18
      ],
      "mod_code": [
        "cin >> n , m ;",
        "+= += i ;",
        "cout << sumi / sum << sumj / sum << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        6,
        12,
        18,
        5
      ],
      "mod_code": [
        "cin >> n , m ;",
        "+= += i ;",
        "cout << sumi / sum << sumj / sum << endl ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        6,
        12,
        5
      ],
      "mod_code": [
        "cin >> n , m ;",
        "+= += i ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "cin >> n , m ;",
        "sumj = sumj plus j ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        6,
        13,
        11
      ],
      "mod_code": [
        "cin >> n , m ;",
        "sumj = sumj plus j ;",
        "if ( ! s [ i ] [ j ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        6,
        13,
        11,
        18
      ],
      "mod_code": [
        "cin >> n , m ;",
        "sumj = sumj plus j ;",
        "if ( ! s [ i ] [ j ] )",
        "cout << sumi / sum << sumj / sum << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        6,
        13,
        11,
        5
      ],
      "mod_code": [
        "cin >> n , m ;",
        "sumj = sumj plus j ;",
        "if ( ! s [ i ] [ j ] )",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        6,
        13,
        18
      ],
      "mod_code": [
        "cin >> n , m ;",
        "sumj = sumj plus j ;",
        "cout << sumi / sum << sumj / sum << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        6,
        13,
        18,
        5
      ],
      "mod_code": [
        "cin >> n , m ;",
        "sumj = sumj plus j ;",
        "cout << sumi / sum << sumj / sum << endl ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        6,
        13,
        5
      ],
      "mod_code": [
        "cin >> n , m ;",
        "sumj = sumj plus j ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        6,
        11,
        18,
        5
      ],
      "mod_code": [
        "cin >> n , m ;",
        "if ( ! s [ i ] [ j ] )",
        "cout << sumi / sum << sumj / sum << endl ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        5
      ],
      "mod_code": [
        "cin >> n , m ;",
        "if ( ! s [ i ] [ j ] )",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        18,
        5
      ],
      "mod_code": [
        "cin >> n , m ;",
        "cout << sumi / sum << sumj / sum << endl ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "cin >> n , m ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "+= += i ;",
        "sumj = sumj plus j ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        13,
        11
      ],
      "mod_code": [
        "+= += i ;",
        "sumj = sumj plus j ;",
        "if ( ! s [ i ] [ j ] )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        13,
        11,
        18
      ],
      "mod_code": [
        "+= += i ;",
        "sumj = sumj plus j ;",
        "if ( ! s [ i ] [ j ] )",
        "cout << sumi / sum << sumj / sum << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        13,
        11,
        5
      ],
      "mod_code": [
        "+= += i ;",
        "sumj = sumj plus j ;",
        "if ( ! s [ i ] [ j ] )",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        13,
        18
      ],
      "mod_code": [
        "+= += i ;",
        "sumj = sumj plus j ;",
        "cout << sumi / sum << sumj / sum << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        5
      ],
      "mod_code": [
        "+= += i ;",
        "sumj = sumj plus j ;",
        "cout << sumi / sum << sumj / sum << endl ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        13,
        5
      ],
      "mod_code": [
        "+= += i ;",
        "sumj = sumj plus j ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "+= += i ;",
        "if ( ! s [ i ] [ j ] )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        11,
        18
      ],
      "mod_code": [
        "+= += i ;",
        "if ( ! s [ i ] [ j ] )",
        "cout << sumi / sum << sumj / sum << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        11,
        18,
        5
      ],
      "mod_code": [
        "+= += i ;",
        "if ( ! s [ i ] [ j ] )",
        "cout << sumi / sum << sumj / sum << endl ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        11,
        5
      ],
      "mod_code": [
        "+= += i ;",
        "if ( ! s [ i ] [ j ] )",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "+= += i ;",
        "cout << sumi / sum << sumj / sum << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        18,
        5
      ],
      "mod_code": [
        "+= += i ;",
        "cout << sumi / sum << sumj / sum << endl ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "+= += i ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘+=’ token"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "sumj = sumj plus j ;",
        "if ( ! s [ i ] [ j ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        13,
        11,
        18
      ],
      "mod_code": [
        "sumj = sumj plus j ;",
        "if ( ! s [ i ] [ j ] )",
        "cout << sumi / sum << sumj / sum << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        13,
        11,
        18,
        5
      ],
      "mod_code": [
        "sumj = sumj plus j ;",
        "if ( ! s [ i ] [ j ] )",
        "cout << sumi / sum << sumj / sum << endl ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        13,
        11,
        5
      ],
      "mod_code": [
        "sumj = sumj plus j ;",
        "if ( ! s [ i ] [ j ] )",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "sumj = sumj plus j ;",
        "cout << sumi / sum << sumj / sum << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        13,
        18,
        5
      ],
      "mod_code": [
        "sumj = sumj plus j ;",
        "cout << sumi / sum << sumj / sum << endl ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "sumj = sumj plus j ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        11,
        18,
        5
      ],
      "mod_code": [
        "if ( ! s [ i ] [ j ] )",
        "cout << sumi / sum << sumj / sum << endl ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "if ( ! s [ i ] [ j ] )",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        5
      ],
      "mod_code": [
        "cout << sumi / sum << sumj / sum << endl ;",
        "int sumi = 0 , sumj = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘sum’ was not declared in this scope"
    }
  ]
}