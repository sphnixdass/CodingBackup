{
  "meta": {
    "index": 42,
    "hitid": "3VO4XFFP15G7H94XT1U0LDO76LQQ7Z",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "63A",
    "subid": "47684718"
  },
  "lines": [
    {
      "line": 0,
      "text": "T = integer with T = 1",
      "code": "int T = 1 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in the function fun that takes vector of string reference v",
      "code": "void fun ( vector < string > & v )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "for i = 0 to v . size ( ) v [ i ] exclusive , print v [ i ]",
      "code": "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << endl ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "in the function solve",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "N = integer",
      "code": "int N ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read N",
      "code": "cin >> N ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "a , b = strings",
      "code": "string a , b ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "r , w , m , c = vectors of string",
      "code": "vector < string > r , w , m , c ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to N exclusive",
      "code": "for ( int i = 0 ; i < N ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if b [ 0 ] is r",
      "code": "if ( b [ 0 ] == ' r ' )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "append a in r",
      "code": "r . push_back ( a ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if b [ 0 ] is w or b is child",
      "code": "else if ( b [ 0 ] == ' w ' || b == \" child \" )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "append a in w",
      "code": "w . push_back ( a ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else if b [ 0 ] is m",
      "code": "else if ( b [ 0 ] == ' m ' )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "append a in m",
      "code": "m . push_back ( a ) ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "append a in c",
      "code": "c . push_back ( a ) ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "call fun on r",
      "code": "fun ( r ) ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "call fun on w",
      "code": "fun ( w ) ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "call fun on m",
      "code": "fun ( m ) ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "call fun on c",
      "code": "fun ( c ) ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 26,
      "text": "while decrement T , call solve",
      "code": "while ( T -- ) { solve ( ) ; }",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else if ( b [ 0 ] == w || b == child )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else if ( b [ 0 ] == m )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "solve ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected constructor, destructor, or type conversion before ‘;’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "strings , b ;"
      ],
      "err_line": 7,
      "err_msg": "‘strings’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "vectors vector < string > r , w , m , c ;"
      ],
      "err_line": 8,
      "err_msg": "‘vectors’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < N ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cin >> n >> b ;"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "r . append ( a ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘append’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else if ( b [ 0 ] == w or b == child )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "w . append ( a ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘append’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "m . append ( a ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘append’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "c . append ( a ) ;"
      ],
      "err_line": 18,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘append’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "fun ( r r ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘)’ before ‘r’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "fun ( w w ) ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘)’ before ‘w’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "fun ( fun ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid initialization of non-const reference of type ‘std::vector<std::__cxx11::basic_string<char> >&’ from an rvalue of type ‘void (*)(std::vector<std::__cxx11::basic_string<char> >&)’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "if ( b [ 0 ] == r )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        11,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == w || b == child )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        11,
        13,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == w || b == child )",
        "else if ( b [ 0 ] == m )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        11,
        13,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == w || b == child )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        11,
        13,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == w || b == child )",
        "m . append ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        11,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == m )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        11,
        15,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == m )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        11,
        15,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == m )",
        "m . append ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        11,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "if ( b [ 0 ] == r )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        11,
        17,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "if ( b [ 0 ] == r )",
        "n",
        "m . append ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        11,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "if ( b [ 0 ] == r )",
        "m . append ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "else if ( b [ 0 ] == w || b == child )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        13,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "else if ( b [ 0 ] == w || b == child )",
        "else if ( b [ 0 ] == m )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "else if ( b [ 0 ] == w || b == child )",
        "else if ( b [ 0 ] == m )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        13,
        15,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "else if ( b [ 0 ] == w || b == child )",
        "else if ( b [ 0 ] == m )",
        "m . append ( a ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        13,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "else if ( b [ 0 ] == w || b == child )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "else if ( b [ 0 ] == w || b == child )",
        "n",
        "m . append ( a ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        13,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "else if ( b [ 0 ] == w || b == child )",
        "m . append ( a ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "else if ( b [ 0 ] == m )"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        15,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "else if ( b [ 0 ] == m )",
        "n"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        15,
        17,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "else if ( b [ 0 ] == m )",
        "n",
        "m . append ( a ) ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        15,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "else if ( b [ 0 ] == m )",
        "m . append ( a ) ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        17,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "n",
        "m . append ( a ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘append’"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) cout << v [ i ] << v [ i ] ;",
        "m . append ( a ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘append’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == w || b == child )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        13,
        15
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == w || b == child )",
        "else if ( b [ 0 ] == m )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        17
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == w || b == child )",
        "else if ( b [ 0 ] == m )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        13,
        15,
        16
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == w || b == child )",
        "else if ( b [ 0 ] == m )",
        "m . append ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        13,
        17
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == w || b == child )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        16
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == w || b == child )",
        "n",
        "m . append ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        13,
        16
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == w || b == child )",
        "m . append ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == m )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        15,
        17
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == m )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        15,
        17,
        16
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == m )",
        "n",
        "m . append ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        15,
        16
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "else if ( b [ 0 ] == m )",
        "m . append ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        17,
        16
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "n",
        "m . append ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "if ( b [ 0 ] == r )",
        "m . append ( a ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "else if ( b [ 0 ] == w || b == child )",
        "else if ( b [ 0 ] == m )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        15,
        17
      ],
      "mod_code": [
        "else if ( b [ 0 ] == w || b == child )",
        "else if ( b [ 0 ] == m )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        15,
        17,
        16
      ],
      "mod_code": [
        "else if ( b [ 0 ] == w || b == child )",
        "else if ( b [ 0 ] == m )",
        "n",
        "m . append ( a ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        15,
        16
      ],
      "mod_code": [
        "else if ( b [ 0 ] == w || b == child )",
        "else if ( b [ 0 ] == m )",
        "m . append ( a ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "else if ( b [ 0 ] == w || b == child )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        17,
        16
      ],
      "mod_code": [
        "else if ( b [ 0 ] == w || b == child )",
        "n",
        "m . append ( a ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "else if ( b [ 0 ] == w || b == child )",
        "m . append ( a ) ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "else if ( b [ 0 ] == m )",
        "n"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        15,
        17,
        16
      ],
      "mod_code": [
        "else if ( b [ 0 ] == m )",
        "n",
        "m . append ( a ) ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "else if ( b [ 0 ] == m )",
        "m . append ( a ) ;"
      ],
      "err_line": 15,
      "err_msg": "no match for ‘operator==’ (operand types are ‘char’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        17,
        16
      ],
      "mod_code": [
        "n",
        "m . append ( a ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘class std::vector<std::__cxx11::basic_string<char> >’ has no member named ‘append’"
    }
  ]
}