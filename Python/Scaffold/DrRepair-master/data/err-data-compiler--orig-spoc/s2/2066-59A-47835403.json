{
  "meta": {
    "index": 2066,
    "hitid": "30IRMPJWDZDVOPQHPA89U83Y8RXKR5",
    "workerid": "A28TIENUWLMMIP",
    "probid": "59A",
    "subid": "47835403"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read in s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let cntup and cnt1w be integers , set cntup to 0 and cnt1w to 0",
      "code": "int cntup = 0 , cntlw = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let x and y be strings , set x to s and set y to s",
      "code": "string x = s , y = s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "iterate for length of s times",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s [ i ] is an upper case letter",
      "code": "if ( isupper ( s [ i ] ) )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment cntup",
      "code": "cntup ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment cnt1w",
      "code": "cntlw ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "x [ i ] is equal to toupper ( s [ i ] )",
      "code": "x [ i ] = toupper ( s [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "y [ i ] is equal to tolower ( s [ i ] )",
      "code": "y [ i ] = tolower ( s [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if cntup is greater than cnt1w",
      "code": "if ( cntup > cntlw )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print x and a newline",
      "code": "cout << x << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "or else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print y and a newline",
      "code": "cout << y << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string x , y = s , y = s ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cnt1w ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘cnt1w’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( cntup > cnt1w )"
      ],
      "err_line": 13,
      "err_msg": "‘cnt1w’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "‘cntlw’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string x = s + s ;"
      ],
      "err_line": 11,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; j < s . size ( ) ; ++ i )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "++ cnt1w ;"
      ],
      "err_line": 9,
      "err_msg": "‘cnt1w’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "x [ j ] = toupper ( s [ i ] ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "y [ j ] = tolower ( s [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( ( cntup > cnt1w ) )"
      ],
      "err_line": 13,
      "err_msg": "‘cnt1w’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "string x , y = s , y = s ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "string x , y = s , y = s ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        6
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "string x , y = s , y = s ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( s [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        9
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "string x , y = s , y = s ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "cnt1w ++ ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        13
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "string x , y = s , y = s ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "string x , y = s , y = s ;",
        "if ( s [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        9
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "string x , y = s , y = s ;",
        "if ( s [ i ] == ' 0 ' )",
        "cnt1w ++ ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        13
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "string x , y = s , y = s ;",
        "if ( s [ i ] == ' 0 ' )",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        4,
        9
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "string x , y = s , y = s ;",
        "cnt1w ++ ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        4,
        9,
        13
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "string x , y = s , y = s ;",
        "cnt1w ++ ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        4,
        13
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "string x , y = s , y = s ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( s [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        9
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( s [ i ] == ' 0 ' )",
        "cnt1w ++ ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        13
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( s [ i ] == ' 0 ' )",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        5,
        9
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "cnt1w ++ ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        5,
        9,
        13
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "cnt1w ++ ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        5,
        13
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "if ( s [ i ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        6,
        9
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "if ( s [ i ] == ' 0 ' )",
        "cnt1w ++ ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        6,
        9,
        13
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "if ( s [ i ] == ' 0 ' )",
        "cnt1w ++ ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        6,
        13
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "if ( s [ i ] == ' 0 ' )",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "cnt1w ++ ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        9,
        13
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "cnt1w ++ ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "int cntup = 0 , cnt1w = 0 , cnt1w = 0 ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int cnt1w’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( s [ i ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        9
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( s [ i ] == ' 0 ' )",
        "cnt1w ++ ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        13
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( s [ i ] == ' 0 ' )",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "cnt1w ++ ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        5,
        9,
        13
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "cnt1w ++ ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        5,
        13
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "if ( s [ i ] == ' 0 ' )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "if ( s [ i ] == ' 0 ' )",
        "cnt1w ++ ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        13
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "if ( s [ i ] == ' 0 ' )",
        "cnt1w ++ ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        6,
        13
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "if ( s [ i ] == ' 0 ' )",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "cnt1w ++ ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        9,
        13
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "cnt1w ++ ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "string x , y = s , y = s ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘std::__cxx11::string y’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( s [ i ] == ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( s [ i ] == ' 0 ' )",
        "cnt1w ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        13
      ],
      "mod_code": [
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( s [ i ] == ' 0 ' )",
        "cnt1w ++ ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        13
      ],
      "mod_code": [
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( s [ i ] == ' 0 ' )",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "cnt1w ++ ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        13
      ],
      "mod_code": [
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "cnt1w ++ ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "for ( int j = 0 ; j < s . size ( ) ; ++ j )",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' )",
        "cnt1w ++ ;"
      ],
      "err_line": 9,
      "err_msg": "‘cnt1w’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' )",
        "cnt1w ++ ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 9,
      "err_msg": "‘cnt1w’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "if ( s [ i ] == ' 0 ' )",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 13,
      "err_msg": "‘cnt1w’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "cnt1w ++ ;",
        "if ( cntup > cnt1w )"
      ],
      "err_line": 9,
      "err_msg": "‘cnt1w’ was not declared in this scope"
    }
  ]
}