{
  "meta": {
    "index": 2208,
    "hitid": "3MXX6RQ9EVZPYALZRQH4IWENANGP4P",
    "workerid": "A2O34N3Y3RJLJ6",
    "probid": "914A",
    "subid": "49033501"
  },
  "lines": [
    {
      "line": 0,
      "text": "define Boolean function cmp , consuming pass - by - reference int constants A and B",
      "code": "bool cmp ( const int & A , const int & B )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return A > B",
      "code": "return A > B ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "define 1 , 005 - element int array num",
      "code": "int num [ 1005 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "define int n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i from 0 to n ( exclusive ) by 1 , read num [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> num [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "sort ( num , num + n , cmp )",
      "code": "sort ( num , num + n , cmp ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "define int i and set it to 0",
      "code": "int i = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i from 0 to n ( exclusive ) by 1",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "define int p , set to squareroot of num [ i ]",
      "code": "int p = sqrt ( num [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if p ^ 2 isn ' t num [ i ] , then break",
      "code": "if ( p * p != num [ i ] ) break ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print num [ i ] and newline",
      "code": "cout << num [ i ] << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int p = squareroot ( num [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘squareroot’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 12,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - -- B )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int num [ element ] , 005 [ element ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(bool (&)(const int&, const int&))’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int i = 0 , i = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int p = squareroot . squareroot ( num [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘squareroot’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( p . 2 ( num [ i ] ) != num [ i ] ) break ;"
      ],
      "err_line": 12,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int num [ element ] , 005 , 005 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        3,
        10
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int num [ element ] , 005 , 005 ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        3,
        10,
        11
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int num [ element ] , 005 , 005 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "int p = squareroot ( num [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        3,
        10,
        12
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int num [ element ] , 005 , 005 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        3,
        10,
        8
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int num [ element ] , 005 , 005 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        3,
        11
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int num [ element ] , 005 , 005 ;",
        "int p = squareroot ( num [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        3,
        11,
        12
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int num [ element ] , 005 , 005 ;",
        "int p = squareroot ( num [ i ] ) ;",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        3,
        11,
        8
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int num [ element ] , 005 , 005 ;",
        "int p = squareroot ( num [ i ] ) ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        3,
        12
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int num [ element ] , 005 , 005 ;",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        3,
        12,
        8
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int num [ element ] , 005 , 005 ;",
        "if ( p . if ( ) != num [ i ] ) break ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        3,
        8
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int num [ element ] , 005 , 005 ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        11
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "int p = squareroot ( num [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        11,
        12
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "int p = squareroot ( num [ i ] ) ;",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        11,
        8
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "int p = squareroot ( num [ i ] ) ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        12
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        12,
        8
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( p . if ( ) != num [ i ] ) break ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        10,
        8
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int p = squareroot ( num [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        11,
        12
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int p = squareroot ( num [ i ] ) ;",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        11,
        12,
        8
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int p = squareroot ( num [ i ] ) ;",
        "if ( p . if ( ) != num [ i ] ) break ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        11,
        8
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "int p = squareroot ( num [ i ] ) ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        12,
        8
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "if ( p . if ( ) != num [ i ] ) break ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "bool cmp , int pass , int pass , int A - by - 1 ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "int p = squareroot ( num [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        12
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "int p = squareroot ( num [ i ] ) ;",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        8
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "int p = squareroot ( num [ i ] ) ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        12
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        12,
        8
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( p . if ( ) != num [ i ] ) break ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        8
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "int p = squareroot ( num [ i ] ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "int p = squareroot ( num [ i ] ) ;",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        8
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "int p = squareroot ( num [ i ] ) ;",
        "if ( p . if ( ) != num [ i ] ) break ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        8
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "int p = squareroot ( num [ i ] ) ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        8
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "if ( p . if ( ) != num [ i ] ) break ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int num [ element ] , 005 , 005 ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int p = squareroot ( num [ i ] ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘squareroot’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int p = squareroot ( num [ i ] ) ;",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 11,
      "err_msg": "‘squareroot’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int p = squareroot ( num [ i ] ) ;",
        "if ( p . if ( ) != num [ i ] ) break ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(bool (&)(const int&, const int&))’"
    },
    {
      "mod_line": [
        10,
        11,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "int p = squareroot ( num [ i ] ) ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(bool (&)(const int&, const int&))’"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 12,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        10,
        12,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( p . if ( ) != num [ i ] ) break ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(bool (&)(const int&, const int&))’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(bool (&)(const int&, const int&))’"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "int p = squareroot ( num [ i ] ) ;",
        "if ( p . if ( ) != num [ i ] ) break ;"
      ],
      "err_line": 11,
      "err_msg": "‘squareroot’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        8
      ],
      "mod_code": [
        "int p = squareroot ( num [ i ] ) ;",
        "if ( p . if ( ) != num [ i ] ) break ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(bool (&)(const int&, const int&))’"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "int p = squareroot ( num [ i ] ) ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(bool (&)(const int&, const int&))’"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "if ( p . if ( ) != num [ i ] ) break ;",
        "sort ( ( num , num + n , cmp ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(bool (&)(const int&, const int&))’"
    }
  ]
}