{
  "meta": {
    "index": 2354,
    "hitid": "3X55NP42EOA4GE2VRCCL8RMHWNO3PM",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "939A",
    "subid": "48938133"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , lzl = int with lzl = 0 and d = int array of size 5011",
      "code": "int n , d [ 5011 ] , lzl = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive read d [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> d [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for l = 1 to n inclusive",
      "code": "for ( int l = 1 ; l <= n ; l ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if d [ l ] is i",
      "code": "if ( d [ l ] == i )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "for c = 1 to n inclusive",
      "code": "for ( int c = 1 ; c <= n ; c ++ )",
      "indent": 4
    },
    {
      "line": 8,
      "text": "if d [ c ] is l and d [ i ] is c",
      "code": "if ( d [ c ] == l && d [ i ] == c )",
      "indent": 5
    },
    {
      "line": 9,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 6
    },
    {
      "line": 10,
      "text": "increment lzl",
      "code": "lzl ++ ;",
      "indent": 6
    },
    {
      "line": 11,
      "text": "set i to n + 1",
      "code": "i = n + 1 ;",
      "indent": 6
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if lzl is 0 print \" NO \"",
      "code": "if ( lzl == 0 ) { cout << \" NO \" << endl ; }",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "for ( l = 1 ; l <= n ; l ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( ! d [ l ] )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        9
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( ! d [ l ] )",
        "cout << \" YES \" ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        8
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( ! d [ l ] )",
        "if ( d [ c ] == ' l ' && d [ i ] == c )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        7
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( ! d [ l ] )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        5,
        9
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "for ( l = 1 ; l <= n ; l ++ )",
        "cout << \" YES \" ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        5,
        9,
        8
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "for ( l = 1 ; l <= n ; l ++ )",
        "cout << \" YES \" ;",
        "if ( d [ c ] == ' l ' && d [ i ] == c )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        5,
        9,
        7
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "for ( l = 1 ; l <= n ; l ++ )",
        "cout << \" YES \" ;",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        5,
        8
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( d [ c ] == ' l ' && d [ i ] == c )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        7
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( d [ c ] == ' l ' && d [ i ] == c )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        5,
        7
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "for ( l = 1 ; l <= n ; l ++ )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "if ( ! d [ l ] )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "if ( ! d [ l ] )",
        "cout << \" YES \" ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        8
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "if ( ! d [ l ] )",
        "cout << \" YES \" ;",
        "if ( d [ c ] == ' l ' && d [ i ] == c )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        7
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "if ( ! d [ l ] )",
        "cout << \" YES \" ;",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        6,
        8
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "if ( ! d [ l ] )",
        "if ( d [ c ] == ' l ' && d [ i ] == c )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        6,
        8,
        7
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "if ( ! d [ l ] )",
        "if ( d [ c ] == ' l ' && d [ i ] == c )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        6,
        7
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "if ( ! d [ l ] )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        9,
        8
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "cout << \" YES \" ;",
        "if ( d [ c ] == ' l ' && d [ i ] == c )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        9,
        8,
        7
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "cout << \" YES \" ;",
        "if ( d [ c ] == ' l ' && d [ i ] == c )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        9,
        7
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "cout << \" YES \" ;",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "if ( d [ c ] == ' l ' && d [ i ] == c )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        8,
        7
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "if ( d [ c ] == ' l ' && d [ i ] == c )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , lzl [ 5011 ] , lzl = 0 ;",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int lzl’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( ! d [ l ] )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( ! d [ l ] )",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        8
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( ! d [ l ] )",
        "cout << \" YES \" ;",
        "if ( d [ c ] == ' l ' && d [ i ] == c )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        7
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( ! d [ l ] )",
        "cout << \" YES \" ;",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( ! d [ l ] )",
        "if ( d [ c ] == ' l ' && d [ i ] == c )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        7
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( ! d [ l ] )",
        "if ( d [ c ] == ' l ' && d [ i ] == c )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( ! d [ l ] )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        8
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "cout << \" YES \" ;",
        "if ( d [ c ] == ' l ' && d [ i ] == c )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        8,
        7
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "cout << \" YES \" ;",
        "if ( d [ c ] == ' l ' && d [ i ] == c )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        7
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "cout << \" YES \" ;",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( d [ c ] == ' l ' && d [ i ] == c )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        7
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "if ( d [ c ] == ' l ' && d [ i ] == c )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( l = 1 ; l <= n ; l ++ )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        8,
        7
      ],
      "mod_code": [
        "if ( ! d [ l ] )",
        "cout << \" YES \" ;",
        "if ( d [ c ] == ' l ' && d [ i ] == c )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        7
      ],
      "mod_code": [
        "if ( ! d [ l ] )",
        "cout << \" YES \" ;",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        7
      ],
      "mod_code": [
        "if ( ! d [ l ] )",
        "if ( d [ c ] == ' l ' && d [ i ] == c )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( ! d [ l ] )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        7
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "if ( d [ c ] == ' l ' && d [ i ] == c )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( d [ c ] == ' l ' && d [ i ] == c )",
        "for ( c = 1 ; c <= n ; c ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘c’ was not declared in this scope"
    }
  ]
}