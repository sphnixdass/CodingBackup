{
  "meta": {
    "index": 2767,
    "hitid": "33CLA8O0MI5K83Y3OZHCEVBT0VJFR1",
    "workerid": "AIWEXPJAU66D9",
    "probid": "900A",
    "subid": "48700006"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare ints n , i and j",
      "code": "int n , i , j ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create new 2d array of integers a with size 100000 by 2",
      "code": "int a [ 100000 ] [ 2 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i from 0 to n exclusive incrementing i",
      "code": "for ( i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j from 0 to 1 inclusive , read a [ i ] [ j ] from the input",
      "code": "for ( j = 0 ; j <= 1 ; ++ j ) { cin >> a [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "define integers r and l = 0",
      "code": "int r = 0 , l = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "start for loop from i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if a [ i ] [ 0 ] is greater than 0",
      "code": "if ( a [ i ] [ 0 ] > 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "add 1 to r",
      "code": "r ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increase l by one",
      "code": "l ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if r or l < 2",
      "code": "if ( r < 2 || l < 2 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" Yes \" to the output",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" No \"",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , i + j ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a [ 100000 [ 100000 ] ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        17,
        1
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "cout << \" No \" ;",
        "int n , i + j ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        14,
        17,
        1,
        3
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "cout << \" No \" ;",
        "int n , i + j ;",
        "int a [ 100000 [ 100000 ] ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        14,
        17,
        1,
        2
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "cout << \" No \" ;",
        "int n , i + j ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        14,
        17,
        1,
        16
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "cout << \" No \" ;",
        "int n , i + j ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        14,
        17,
        3
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "cout << \" No \" ;",
        "int a [ 100000 [ 100000 ] ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17,
        3,
        2
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "cout << \" No \" ;",
        "int a [ 100000 [ 100000 ] ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17,
        3,
        16
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "cout << \" No \" ;",
        "int a [ 100000 [ 100000 ] ] ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17,
        2,
        16
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "cout << \" No \" ;",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        17,
        16
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "cout << \" No \" ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "int n , i + j ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        14,
        1,
        3
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "int n , i + j ;",
        "int a [ 100000 [ 100000 ] ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        14,
        1,
        3,
        2
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "int n , i + j ;",
        "int a [ 100000 [ 100000 ] ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        14,
        1,
        3,
        16
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "int n , i + j ;",
        "int a [ 100000 [ 100000 ] ] ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        14,
        1,
        2
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "int n , i + j ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        14,
        1,
        2,
        16
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "int n , i + j ;",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        14,
        1,
        16
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "int n , i + j ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "int a [ 100000 [ 100000 ] ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        3,
        2
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "int a [ 100000 [ 100000 ] ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        3,
        2,
        16
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "int a [ 100000 [ 100000 ] ] ;",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        3,
        16
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "int a [ 100000 [ 100000 ] ] ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        2,
        16
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "if ( r || l < 2 )",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        1
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "int n , i + j ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        17,
        1,
        3
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "int n , i + j ;",
        "int a [ 100000 [ 100000 ] ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        17,
        1,
        3,
        2
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "int n , i + j ;",
        "int a [ 100000 [ 100000 ] ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        17,
        1,
        3,
        16
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "int n , i + j ;",
        "int a [ 100000 [ 100000 ] ] ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        17,
        1,
        2
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "int n , i + j ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        17,
        1,
        2,
        16
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "int n , i + j ;",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        17,
        1,
        16
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "int n , i + j ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "int a [ 100000 [ 100000 ] ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        3,
        2
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "int a [ 100000 [ 100000 ] ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        3,
        2,
        16
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "int a [ 100000 [ 100000 ] ] ;",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        3,
        16
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "int a [ 100000 [ 100000 ] ] ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        2,
        16
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        16
      ],
      "mod_code": [
        "cout << \" No \" ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , i + j ;",
        "int a [ 100000 [ 100000 ] ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "int n , i + j ;",
        "int a [ 100000 [ 100000 ] ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        3,
        2,
        16
      ],
      "mod_code": [
        "int n , i + j ;",
        "int a [ 100000 [ 100000 ] ] ;",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        3,
        16
      ],
      "mod_code": [
        "int n , i + j ;",
        "int a [ 100000 [ 100000 ] ] ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , i + j ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        2,
        16
      ],
      "mod_code": [
        "int n , i + j ;",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "int n , i + j ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int a [ 100000 [ 100000 ] ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        2,
        16
      ],
      "mod_code": [
        "int a [ 100000 [ 100000 ] ] ;",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "int a [ 100000 [ 100000 ] ] ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        16
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}