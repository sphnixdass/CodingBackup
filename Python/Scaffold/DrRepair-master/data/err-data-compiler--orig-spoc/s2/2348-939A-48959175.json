{
  "meta": {
    "index": 2348,
    "hitid": "3TZ0XG8CBUE5POSUM4BKDIUD75Y98P",
    "workerid": "A1APYLD4DUK33J",
    "probid": "939A",
    "subid": "48959175"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integer array arr size 5005",
      "code": "int arr [ 5005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive , read arr [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if arr [ arr [ arr [ i ] ] ] is i",
      "code": "if ( arr [ arr [ arr [ i ] ] ] == i )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print \" YES \" and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" NO \" and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "arr [ 5005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( arr [ arr [ arr [ arr ] ] ] == i )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [5005][int [5005]]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "if ( arr [ arr [ arr [ arr ] ] ] == i )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        5
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        5,
        2
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        5,
        3
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        2
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "n ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        2,
        3
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        3
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        2
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        2,
        3
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        3
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "n ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        3
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "arr [ 5005 ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        2,
        3
      ],
      "mod_code": [
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        3
      ],
      "mod_code": [
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        3
      ],
      "mod_code": [
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( arr [ arr [ arr [ arr ] ] ] == i )",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [5005][int [5005]]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}