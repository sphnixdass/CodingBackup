{
  "meta": {
    "index": 2090,
    "hitid": "3TZ0XG8CBUE5POSUM4BKDIUD75X89N",
    "workerid": "AIWEXPJAU66D9",
    "probid": "59A",
    "subid": "48993144"
  },
  "lines": [
    {
      "line": 0,
      "text": "function toUpp with string argument s that returns string",
      "code": "string toUpp ( string s )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "for i from 0 to length of s exclusive incrementing i",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare new integer called n with value s [ i ]",
      "code": "int n = s [ i ] ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "if value of n is between 97 and 122 inclusive",
      "code": "if ( n >= 97 && n <= 122 )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "change n to n - 32",
      "code": "n -= 32 ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "change the value of s [ i ] to",
      "code": "s [ i ] = ( char ) n ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return s",
      "code": "return s ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "string function toLow with string argument s",
      "code": "string toLow ( string s )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "for i = 0 to length of s exclusive incrementing i",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create new integer called n = s [ i ]",
      "code": "int n = s [ i ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if value of n is between 65 and 90 inclusive",
      "code": "if ( n >= 65 && n <= 90 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increase n by 32",
      "code": "n += 32 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "assign the new value = to s [ i ]",
      "code": "s [ i ] = ( char ) n ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "return s",
      "code": "return s ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 21,
      "text": "s is a new string variable",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "read s from the input",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "create new ints n1 and n2 = 0",
      "code": "int n1 = 0 , n2 = 0 ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "in a for loop , change i from 0 to length of s exclusive incrementing i",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "n is a new integer variable",
      "code": "int n = ( int ) s [ i ] ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if n > = 65 and n < = 90",
      "code": "if ( n >= 65 && n <= 90 )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "increment n2",
      "code": "n2 ++ ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "else if n > = 97 and n < = 122",
      "code": "else if ( n >= 97 && n <= 122 )",
      "indent": 2
    },
    {
      "line": 29,
      "text": "increment n1",
      "code": "n1 ++ ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "if n1 > = n2",
      "code": "if ( n1 >= n2 )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print toLow ( s )",
      "code": "cout << toLow ( s ) << endl ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 34,
      "text": "print toUpp ( s ) to the standard output",
      "code": "cout << toUpp ( s ) << endl ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 65 && 90 < 90 )"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n [ i ] = s [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 < 122 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s [ i ] = ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘;’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "string toLow ( string s ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 65 && 90 )"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "s [ i ] = value [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘value’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 33,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        13
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "if ( strcmp ( n ) > 65 && 90 < 90 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        13,
        15
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "s [ i ] = s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        13,
        25
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "int n ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        13,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        5,
        15
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "s [ i ] = s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        15,
        25
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "s [ i ] = s [ i ] ;",
        "int n ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        15,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "s [ i ] = s [ i ] ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        5,
        25
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "int n ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        25,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "int n ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        5,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "if ( strcmp ( n ) > 65 && 90 < 90 )"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13,
        15
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "s [ i ] = s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13,
        15,
        25
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "s [ i ] = s [ i ] ;",
        "int n ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13,
        15,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "s [ i ] = s [ i ] ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        13,
        25
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "int n ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        13,
        25,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "int n ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        13,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        15,
        25
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "int n ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        15,
        25,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "int n ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        15,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "s [ i ] = s [ i ] ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        25
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "int n ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        25,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "int n ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 97 && 122 )",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "if ( strcmp ( n ) > 65 && 90 < 90 )"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13,
        15
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "s [ i ] = s [ i ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        25
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "s [ i ] = s [ i ] ;",
        "int n ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13,
        15,
        0
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "s [ i ] = s [ i ] ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        13,
        25
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "int n ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        13,
        25,
        0
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "int n ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        13,
        0
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        15,
        25,
        0
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "s [ i ] = s [ i ] ;",
        "int n ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        15,
        0
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "s [ i ] = s [ i ] ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        25,
        0
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "int n ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "s [ i ] = s [ i ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        15,
        25
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "s [ i ] = s [ i ] ;",
        "int n ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        15,
        25,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "s [ i ] = s [ i ] ;",
        "int n ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        15,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "s [ i ] = s [ i ] ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "int n ;"
      ],
      "err_line": 13,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        25,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "int n ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "if ( strcmp ( n ) > 65 && 90 < 90 )",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        25,
        0
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "int n ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "s [ i ] = s [ i ] ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        25,
        0
      ],
      "mod_code": [
        "int n ;",
        "string toUpp ( string s ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}