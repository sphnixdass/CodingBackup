{
  "meta": {
    "index": 836,
    "hitid": "3YKP7CX6G29KD328AJXAQOT8KLU7B9",
    "workerid": "AIWEXPJAU66D9",
    "probid": "255A",
    "subid": "40685113"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers i , m , n , cnt , tmp and sum with cnt , tmp and sum = 0 ; declare integer array a with size 10001",
      "code": "int i , m , n , cnt = 0 , tmp = 0 , sum = 0 , a [ 10001 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i from 0 to n exclusive , read standard input to a [ i ]",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i from 0 to n exclusive adding 3 to i , add a [ i ] to cnt",
      "code": "for ( i = 0 ; i < n ; i += 3 ) { cnt += a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n exclusive adding 3 to i , increase tmp by a [ i ]",
      "code": "for ( i = 1 ; i < n ; i += 3 ) { tmp += a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "in a for loop , change i from 2 to n exclusive increasing i by 3 , increasing sum by a [ i ] on each loop",
      "code": "for ( i = 2 ; i < n ; i += 3 ) { sum += a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if cnt > tmp and cnt > sum",
      "code": "if ( cnt > tmp && cnt > sum )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" chest \"",
      "code": "cout << \" chest \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else if tmp > cnt and tmp > sum",
      "code": "else if ( tmp > cnt && tmp > sum )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" biceps \"",
      "code": "cout << \" biceps \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else if sum > tmp and sum > cnt",
      "code": "else if ( sum > tmp && sum > cnt )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" back \"",
      "code": "cout << \" back \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" chest \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        8,
        10
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        12
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        2
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        2
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" back \" ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        8,
        2
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" chest \" ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        10,
        12
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        10,
        12,
        2
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        10,
        2
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" biceps \" ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" back \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        12,
        2
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cout << \" back \" ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , sum = 0 , sum = 0 ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        8,
        10,
        12,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        8,
        10,
        2,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "cin >> n >> n ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        8,
        10,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        8,
        12,
        2,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" back \" ;",
        "cin >> n >> n ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        8,
        12,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cout << \" back \" ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        8,
        2,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "cin >> n >> n ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        10,
        12,
        2,
        1
      ],
      "mod_code": [
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "cin >> n >> n ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        10,
        12,
        1
      ],
      "mod_code": [
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        10,
        2,
        1
      ],
      "mod_code": [
        "cout << \" biceps \" ;",
        "cin >> n >> n ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "cout << \" biceps \" ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        12,
        2,
        1
      ],
      "mod_code": [
        "cout << \" back \" ;",
        "cin >> n >> n ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "cout << \" back \" ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int i , m , n , cnt = 0 , tmp , tmp , tmp , tmp , sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp’"
    }
  ]
}