{
  "meta": {
    "index": 1421,
    "hitid": "3VJ4PFXFJ31HS49CHDQP55NMAEAUA7",
    "workerid": "AIWEXPJAU66D9",
    "probid": "155A",
    "subid": "45566866"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , a , mi , ma and ans with mi = 123456 , ans = 0 and ma = - 1",
      "code": "int n , a , mi = 123456 , ma = - 1 , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read user input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "in a for loop , change i from 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read from the input to a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if a is less than mi",
      "code": "if ( a < mi )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set mi to a",
      "code": "mi = a ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if a is greater than ma",
      "code": "if ( a > ma )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "change ma to a",
      "code": "ma = a ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print ans - 2 to the standard output",
      "code": "cout << ans - 2 << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "int mi = a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        6,
        10
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "int mi = a ;",
        "ma = ' a ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        6,
        10,
        9
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "int mi = a ;",
        "ma = ' a ' ;",
        "if ( a > ma ) return 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        6,
        10,
        4
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "int mi = a ;",
        "ma = ' a ' ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "int mi = a ;",
        "if ( a > ma ) return 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        4
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "int mi = a ;",
        "if ( a > ma ) return 1 ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "int mi = a ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "ma = ' a ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        10,
        9
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "ma = ' a ' ;",
        "if ( a > ma ) return 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        10,
        9,
        4
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "ma = ' a ' ;",
        "if ( a > ma ) return 1 ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        10,
        4
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "ma = ' a ' ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "if ( a > ma ) return 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        9,
        4
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "if ( a > ma ) return 1 ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = - 1 ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        6,
        10,
        9,
        1
      ],
      "mod_code": [
        "int mi = a ;",
        "ma = ' a ' ;",
        "if ( a > ma ) return 1 ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        6,
        10,
        1
      ],
      "mod_code": [
        "int mi = a ;",
        "ma = ' a ' ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        6,
        10,
        1,
        4
      ],
      "mod_code": [
        "int mi = a ;",
        "ma = ' a ' ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        6,
        9,
        1
      ],
      "mod_code": [
        "int mi = a ;",
        "if ( a > ma ) return 1 ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        6,
        9,
        1,
        4
      ],
      "mod_code": [
        "int mi = a ;",
        "if ( a > ma ) return 1 ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "int mi = a ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        6,
        1,
        4
      ],
      "mod_code": [
        "int mi = a ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        10,
        9,
        1
      ],
      "mod_code": [
        "ma = ' a ' ;",
        "if ( a > ma ) return 1 ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        10,
        9,
        1,
        4
      ],
      "mod_code": [
        "ma = ' a ' ;",
        "if ( a > ma ) return 1 ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "ma = ' a ' ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        10,
        1,
        4
      ],
      "mod_code": [
        "ma = ' a ' ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( a > ma ) return 1 ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        9,
        1,
        4
      ],
      "mod_code": [
        "if ( a > ma ) return 1 ;",
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , a , mi , ma = 0 , ma = 0 , ma = 0 ;",
        "a >> a ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ma’"
    }
  ]
}