{
  "meta": {
    "index": 2698,
    "hitid": "3S1L4CQSFXZS9MCMMOVQJ5MJZ4VAFD",
    "workerid": "A1AYVATMT88U1W",
    "probid": "181A",
    "subid": "23501535"
  },
  "lines": [
    {
      "line": 0,
      "text": "let n , m be integers",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let c [ 105 ] [ 105 ] be a 2d array of characters where the size of elements of rows and columns is equal to 105 respectively",
      "code": "char c [ 105 ] [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let row and col be integers with values assignes as 0 and 0 respectively",
      "code": "int row = 0 , col = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for ( integer i = 1 to n inclusive )",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for ( integer j = 1 to m inclusive )",
      "code": "for ( int j = 1 ; j <= m ; ++ j )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read c [ i ] [ j ]",
      "code": "cin >> c [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if ( c [ i ] [ j ] is equal to * ) , row ^ is equal to i , col ^ is equal to j",
      "code": "if ( c [ i ] [ j ] == ' * ' ) row ^= i , col ^= j ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print row and space and col",
      "code": "cout << row << \" \" << col << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘^’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 8,
      "err_msg": "‘row’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int row = 0 , assignes = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘col’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ( i ) ; }"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘^’ token"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        8,
        4
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "int row = 0 , assignes = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        8,
        4,
        7
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "int row = 0 , assignes = 0 ;",
        "cin >> c [ i ] >> j ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        8,
        4,
        3
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "int row = 0 , assignes = 0 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        8,
        7
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "cin >> c [ i ] >> j ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        8,
        7,
        3
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "cin >> c [ i ] >> j ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        8,
        3
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "int row = 0 , assignes = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        4,
        7
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "int row = 0 , assignes = 0 ;",
        "cin >> c [ i ] >> j ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        4,
        7,
        3
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "int row = 0 , assignes = 0 ;",
        "cin >> c [ i ] >> j ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        4,
        3
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "int row = 0 , assignes = 0 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "cin >> c [ i ] >> j ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        7,
        3
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "cin >> c [ i ] >> j ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "char c [ 105 ] [ 105 ] , c [ 105 ] ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char c [105]’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "int row = 0 , assignes = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘^’ token"
    },
    {
      "mod_line": [
        8,
        4,
        7
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "int row = 0 , assignes = 0 ;",
        "cin >> c [ i ] >> j ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘^’ token"
    },
    {
      "mod_line": [
        8,
        4,
        7,
        3
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "int row = 0 , assignes = 0 ;",
        "cin >> c [ i ] >> j ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘^’ token"
    },
    {
      "mod_line": [
        8,
        4,
        7,
        1
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "int row = 0 , assignes = 0 ;",
        "cin >> c [ i ] >> j ;",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [105][105]’)"
    },
    {
      "mod_line": [
        8,
        4,
        3
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "int row = 0 , assignes = 0 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘^’ token"
    },
    {
      "mod_line": [
        8,
        4,
        3,
        1
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "int row = 0 , assignes = 0 ;",
        "while ( cin >> n >> m )",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4,
        1
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "int row = 0 , assignes = 0 ;",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "cin >> c [ i ] >> j ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘^’ token"
    },
    {
      "mod_line": [
        8,
        7,
        3
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "cin >> c [ i ] >> j ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘^’ token"
    },
    {
      "mod_line": [
        8,
        7,
        3,
        1
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "cin >> c [ i ] >> j ;",
        "while ( cin >> n >> m )",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [105][105]’)"
    },
    {
      "mod_line": [
        8,
        7,
        1
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "cin >> c [ i ] >> j ;",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [105][105]’)"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "while ( cin >> n >> m )"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘^’ token"
    },
    {
      "mod_line": [
        8,
        3,
        1
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "while ( cin >> n >> m )",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "if ( c [ i ] [ j ] == ' * ' ) { ^ ^ ( i ) ; }",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "int row = 0 , assignes = 0 ;",
        "cin >> c [ i ] >> j ;"
      ],
      "err_line": 8,
      "err_msg": "‘col’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "int row = 0 , assignes = 0 ;",
        "cin >> c [ i ] >> j ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 8,
      "err_msg": "‘row’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        1
      ],
      "mod_code": [
        "int row = 0 , assignes = 0 ;",
        "cin >> c [ i ] >> j ;",
        "while ( cin >> n >> m )",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [105][105]’)"
    },
    {
      "mod_line": [
        4,
        7,
        1
      ],
      "mod_code": [
        "int row = 0 , assignes = 0 ;",
        "cin >> c [ i ] >> j ;",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [105][105]’)"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "int row = 0 , assignes = 0 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 8,
      "err_msg": "‘row’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "int row = 0 , assignes = 0 ;",
        "while ( cin >> n >> m )",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "int row = 0 , assignes = 0 ;",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "cin >> c [ i ] >> j ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 8,
      "err_msg": "‘row’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        1
      ],
      "mod_code": [
        "cin >> c [ i ] >> j ;",
        "while ( cin >> n >> m )",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [105][105]’)"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "cin >> c [ i ] >> j ;",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char [105][105]’)"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "char c [ 105 ] [ 105 ] [ 105 ] ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    }
  ]
}