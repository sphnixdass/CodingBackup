{
  "meta": {
    "index": 1730,
    "hitid": "3B9XR6P1WEPDXY3ABSM7TEYHBGXBJN",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "592A",
    "subid": "20037376"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character array polje with size 8 , 8",
      "code": "char polje [ 8 ] [ 8 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer W and assign 10 to it",
      "code": "int W = 10 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer B and assign 10 to it",
      "code": "int B = 10 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer x = 0 to 7 with increment x",
      "code": "for ( int x = 0 ; x < 8 ; x ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer y = 0 to 7 with increment y get polje [ y ] [ x ]",
      "code": "for ( int y = 0 ; y < 8 ; y ++ ) cin >> polje [ y ] [ x ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for integer x = 0 to 7 with increment x",
      "code": "for ( int x = 0 ; x < 8 ; x ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for integer y = 0 to 7 with increment y",
      "code": "for ( int y = 0 ; y < 8 ; y ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if polje [ x ] [ y ] is equal to ' W ' and y less than W",
      "code": "if ( polje [ x ] [ y ] == ' W ' && y < W )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set W to y",
      "code": "W = y ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else if polje [ x ] [ y ] is equal to ' B ' then",
      "code": "else if ( polje [ x ] [ y ] == ' B ' )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for integer y = 0 to 7 with increment y",
      "code": "for ( int y = 0 ; y < 8 ; y ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if polje [ x ] [ 7 - y ] is equal to ' B ' and y less than B",
      "code": "if ( polje [ x ] [ 7 - y ] == ' B ' && y < B )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set B to y",
      "code": "B = y ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else if polje [ x ] [ 7 - y ] is equal to ' W ' then",
      "code": "else if ( polje [ x ] [ 7 - y ] == ' W ' )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if B less than W then",
      "code": "if ( B < W )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print ' B '",
      "code": "cout << ' B ' << endl ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print \" A \"",
      "code": "cout << \" A \" << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int max = 10 ;"
      ],
      "err_line": 8,
      "err_msg": "‘W’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int * B = 10 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "puts ( ' B ' ) ;"
      ],
      "err_line": 21,
      "err_msg": "invalid conversion from ‘char’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "for ( int y = 0 ; y < 4 ; y ++ ) { y ++ ; }"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        6
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "for ( int y = 0 ; y < 4 ; y ++ ) { y ++ ; }",
        "for ( int x = 0 ; x < 4 ; x ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        21
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "for ( int y = 0 ; y < 4 ; y ++ ) { y ++ ; }",
        "cout << ' B ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        23
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "for ( int y = 0 ; y < 4 ; y ++ ) { y ++ ; }",
        "cout << \" A \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        6
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "for ( int x = 0 ; x < 4 ; x ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        6,
        21
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        6,
        23
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "cout << \" A \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        21
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        21,
        23
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "cout << ' B ' ;",
        "cout << \" A \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4,
        23
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "cout << \" A \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int y = 0 ; y < 4 ; y ++ ) { y ++ ; }"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int y = 0 ; y < 4 ; y ++ ) { y ++ ; }",
        "for ( int x = 0 ; x < 4 ; x ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        21
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int y = 0 ; y < 4 ; y ++ ) { y ++ ; }",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        23
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int y = 0 ; y < 4 ; y ++ ) { y ++ ; }",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "cout << \" A \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5,
        21
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int y = 0 ; y < 4 ; y ++ ) { y ++ ; }",
        "cout << ' B ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5,
        21,
        23
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int y = 0 ; y < 4 ; y ++ ) { y ++ ; }",
        "cout << ' B ' ;",
        "cout << \" A \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        5,
        23
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int y = 0 ; y < 4 ; y ++ ) { y ++ ; }",
        "cout << \" A \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        6,
        21
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "cout << ' B ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        6,
        21,
        23
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "cout << ' B ' ;",
        "cout << \" A \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        6,
        23
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "for ( int x = 0 ; x < 4 ; x ++ )",
        "cout << \" A \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "cout << ' B ' ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        21,
        23
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "cout << ' B ' ;",
        "cout << \" A \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        23
      ],
      "mod_code": [
        "char polje [ 8 ] , 8 [ 8 ] ;",
        "cout << \" A \" ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    }
  ]
}