{
  "meta": {
    "index": 1329,
    "hitid": "3RTFSSG7T80BGRPL94UGW7OUP6ILWD",
    "workerid": "A1APYLD4DUK33J",
    "probid": "798A",
    "subid": "48472538"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer y = size of s - 1",
      "code": "int y = s . size ( ) - 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to size of s / 2 exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s [ i ] is not s [ y ] , increment sum",
      "code": "if ( s [ i ] != s [ y ] ) { sum ++ ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if sum is 2",
      "code": "if ( sum == 2 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print \" NO \" and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "decrement y",
      "code": "y -- ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if sum is 1",
      "code": "if ( sum == 1 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" YES \" and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else if sum is 0 and size of s % 2 is not 0",
      "code": "else if ( sum == 0 && s . size ( ) % 2 != 0 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" YES \" and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" NO \" and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( ! sum )",
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        2
      ],
      "mod_code": [
        "if ( ! sum )",
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        2,
        13
      ],
      "mod_code": [
        "if ( ! sum )",
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "s >> s ;",
        "if ( ! sum )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        2,
        17
      ],
      "mod_code": [
        "if ( ! sum )",
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        2,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "s >> s ;",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        5,
        13
      ],
      "mod_code": [
        "if ( ! sum )",
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "if ( ! sum )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        13,
        17
      ],
      "mod_code": [
        "if ( ! sum )",
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "if ( ! sum )",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        13,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "if ( ! sum )",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        5,
        17
      ],
      "mod_code": [
        "if ( ! sum )",
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        17,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "n",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        5,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( ! sum )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        13
      ],
      "mod_code": [
        "if ( ! sum )",
        "s >> s ;",
        "if ( ! sum )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        13,
        17
      ],
      "mod_code": [
        "if ( ! sum )",
        "s >> s ;",
        "if ( ! sum )",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        13,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "s >> s ;",
        "if ( ! sum )",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        17
      ],
      "mod_code": [
        "if ( ! sum )",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        17,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "s >> s ;",
        "n",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "s >> s ;",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        13,
        17
      ],
      "mod_code": [
        "if ( ! sum )",
        "if ( ! sum )",
        "n"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "if ( ! sum )",
        "n",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        13,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "if ( ! sum )",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "if ( ! sum )",
        "n"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "n",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "s >> s ;",
        "if ( ! sum )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        13,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "s >> s ;",
        "if ( ! sum )",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        13,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "s >> s ;",
        "if ( ! sum )",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        17,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "s >> s ;",
        "n",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "s >> s ;",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "if ( ! sum )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "if ( ! sum )",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13,
        17,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "if ( ! sum )",
        "n",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        5,
        13,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "if ( ! sum )",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "n",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! sum )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        13,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! sum )",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        13,
        17,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! sum )",
        "n",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        13,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! sum )",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        17,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "n",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "if ( ! sum )",
        "n"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        17,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "n",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "n",
        "int y = strlen ( s ) - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    }
  ]
}