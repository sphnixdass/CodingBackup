{
  "meta": {
    "index": 902,
    "hitid": "3PUOXASB57XK9KTHVUBXQ2RH6E39ZS",
    "workerid": "A1APYLD4DUK33J",
    "probid": "267A",
    "subid": "15208496"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare solve with long longs a , b as arguments , returning long long",
      "code": "long long solve ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare res = 0 as long long",
      "code": "long long res = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while a * b is not 0",
      "code": "while ( a * b != 0 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if a is less than b , swap values between a and b",
      "code": "if ( a < b ) swap ( a , b ) ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "increment res by a / b",
      "code": "res += a / b ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "decrement a by ( a / b ) * b",
      "code": "a -= ( a / b ) * b ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return res from function",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "declare n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "while decrement n is true",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "declare a , b as long longs",
      "code": "long long a , b ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print result of run solve with a , b as arguments , newline",
      "code": "cout << solve ( a , b ) << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long solve ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        0
      ],
      "mod_code": [
        "while ( n )",
        "n = getchar ( ) ;",
        "long long solve ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        0,
        14
      ],
      "mod_code": [
        "while ( n )",
        "n = getchar ( ) ;",
        "long long solve ( long long a , long long b ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        0,
        15
      ],
      "mod_code": [
        "while ( n )",
        "n = getchar ( ) ;",
        "long long solve ( long long a , long long b ) ;",
        "cout << solve ( a , b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "while ( n )",
        "long long solve ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0,
        14
      ],
      "mod_code": [
        "while ( n )",
        "long long solve ( long long a , long long b ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0,
        14,
        15
      ],
      "mod_code": [
        "while ( n )",
        "long long solve ( long long a , long long b ) ;",
        "cin >> a , b ;",
        "cout << solve ( a , b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0,
        15
      ],
      "mod_code": [
        "while ( n )",
        "long long solve ( long long a , long long b ) ;",
        "cout << solve ( a , b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "long long solve ( long long a , long long b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        0,
        14
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "long long solve ( long long a , long long b ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        0,
        14,
        15
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "long long solve ( long long a , long long b ) ;",
        "cin >> a , b ;",
        "cout << solve ( a , b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        0,
        15
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "long long solve ( long long a , long long b ) ;",
        "cout << solve ( a , b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "long long solve ( long long a , long long b ) ;",
        "cin >> a , b ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        14,
        15
      ],
      "mod_code": [
        "long long solve ( long long a , long long b ) ;",
        "cin >> a , b ;",
        "cout << solve ( a , b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "long long solve ( long long a , long long b ) ;",
        "cout << solve ( a , b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}