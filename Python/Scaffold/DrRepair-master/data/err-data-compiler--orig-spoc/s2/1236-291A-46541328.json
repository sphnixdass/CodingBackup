{
  "meta": {
    "index": 1236,
    "hitid": "375VSR8FVW3QDKP3PBBJHNRBC0BRZZ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "291A",
    "subid": "46541328"
  },
  "lines": [
    {
      "line": 0,
      "text": "integer function getNextGap with int argument gap",
      "code": "int getNextGap ( int gap )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "change gap to ( gap * 10 ) / 13",
      "code": "gap = ( gap * 10 ) / 13 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return 1 if gap is less than 1",
      "code": "if ( gap < 1 ) return 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "return gap",
      "code": "return gap ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "void function combSort with long long int array argument a and long long int argument n",
      "code": "void combSort ( long long int a [ ] , long long int n )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create new integer variable gap = n",
      "code": "int gap = n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set boolean swapped to true",
      "code": "bool swapped = true ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while gap ! = 1 or swapped is true",
      "code": "while ( gap != 1 || swapped == true )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "assign the result of getNextGap ( gap ) to gap",
      "code": "gap = getNextGap ( gap ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set swapped = false",
      "code": "swapped = false ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "in a for loop , change i from 0 to n - gap exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n - gap ; i ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if a [ i ] is greater than a [ i + gap ]",
      "code": "if ( a [ i ] > a [ i + gap ] )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "swap a [ i ] and a [ i + gap ]",
      "code": "swap ( a [ i ] , a [ i + gap ] ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "swapped = true",
      "code": "swapped = true ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 20,
      "text": "declare new long long integer numofelements",
      "code": "long long int numofelements ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "read standard input to numofelements",
      "code": "cin >> numofelements ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "arr is a new array of long long integers with size numofelements",
      "code": "long long int arr [ numofelements ] ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "read numofelements into arr",
      "code": "for ( int i = 0 ; i < numofelements ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 24,
      "text": "call combSort ( arr , numofelements )",
      "code": "combSort ( arr , numofelements ) ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "declare integer variable counter = 0",
      "code": "int counter = 0 ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "for i from 0 to numofelements exclusive",
      "code": "for ( int i = 0 ; i < numofelements ; i ++ )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if arr [ i ] is equal to 0 , skip the rest of the loop",
      "code": "if ( arr [ i ] == 0 ) { continue ; }",
      "indent": 2
    },
    {
      "line": 28,
      "text": "if arr [ i ] = arr [ i + 1 ]",
      "code": "if ( arr [ i ] == arr [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 29,
      "text": "increment counter",
      "code": "counter ++ ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "if arr [ i + 1 ] = arr [ i + 2 ]",
      "code": "if ( arr [ i + 1 ] == arr [ i + 2 ] )",
      "indent": 3
    },
    {
      "line": 31,
      "text": "print \" - 1 \"",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "print counter",
      "code": "cout << counter << endl ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int getNextGap ( int gap ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "void combSort ( long long int a [ int ] , long long int n )"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gap = n ;"
      ],
      "err_line": 6,
      "err_msg": "‘gap’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "bool swapped to true ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘to’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "gap *= getNextGap ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int’ and ‘int(int)’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( a [ i ] ] > a [ i + gap ] )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘)’ before ‘]’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "swap a [ i ] , a [ i + gap ] ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "combSort ( arr , numofelements ) ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "counter = 0 ;"
      ],
      "err_line": 25,
      "err_msg": "‘counter’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )"
      ],
      "err_line": 26,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "if ( arr [ i ] [ arr [ i + 1 ] )"
      ],
      "err_line": 28,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        26
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < numofelements ; i ++ )"
      ],
      "err_line": 26,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        26,
        31
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "cout << \" -1 \" ;"
      ],
      "err_line": 26,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        26,
        31,
        13
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "cout << \" -1 \" ;",
        "swap a [ i ] , a [ i + gap ] ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        10,
        26,
        31,
        11
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "cout << \" -1 \" ;",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        26,
        31,
        25
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "cout << \" -1 \" ;",
        "counter = 0 ;"
      ],
      "err_line": 25,
      "err_msg": "‘counter’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        26,
        13
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "swap a [ i ] , a [ i + gap ] ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        10,
        26,
        13,
        11
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "swap a [ i ] , a [ i + gap ] ;",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        26,
        13,
        25
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "swap a [ i ] , a [ i + gap ] ;",
        "counter = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        10,
        26,
        11
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        26,
        11,
        25
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "for ( i = 0 ; i < n - gap ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        26,
        25
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 25,
      "err_msg": "‘counter’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        31,
        13
      ],
      "mod_code": [
        "bool swapped = false ;",
        "cout << \" -1 \" ;",
        "swap a [ i ] , a [ i + gap ] ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        10,
        31,
        13,
        11
      ],
      "mod_code": [
        "bool swapped = false ;",
        "cout << \" -1 \" ;",
        "swap a [ i ] , a [ i + gap ] ;",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        31,
        13,
        25
      ],
      "mod_code": [
        "bool swapped = false ;",
        "cout << \" -1 \" ;",
        "swap a [ i ] , a [ i + gap ] ;",
        "counter = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        10,
        31,
        11
      ],
      "mod_code": [
        "bool swapped = false ;",
        "cout << \" -1 \" ;",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        31,
        11,
        25
      ],
      "mod_code": [
        "bool swapped = false ;",
        "cout << \" -1 \" ;",
        "for ( i = 0 ; i < n - gap ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        31,
        25
      ],
      "mod_code": [
        "bool swapped = false ;",
        "cout << \" -1 \" ;",
        "counter = 0 ;"
      ],
      "err_line": 25,
      "err_msg": "‘counter’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "bool swapped = false ;",
        "swap a [ i ] , a [ i + gap ] ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        10,
        13,
        11
      ],
      "mod_code": [
        "bool swapped = false ;",
        "swap a [ i ] , a [ i + gap ] ;",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        11,
        25
      ],
      "mod_code": [
        "bool swapped = false ;",
        "swap a [ i ] , a [ i + gap ] ;",
        "for ( i = 0 ; i < n - gap ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13,
        25
      ],
      "mod_code": [
        "bool swapped = false ;",
        "swap a [ i ] , a [ i + gap ] ;",
        "counter = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        25
      ],
      "mod_code": [
        "bool swapped = false ;",
        "for ( i = 0 ; i < n - gap ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        25
      ],
      "mod_code": [
        "bool swapped = false ;",
        "counter = 0 ;"
      ],
      "err_line": 25,
      "err_msg": "‘counter’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "cout << \" -1 \" ;"
      ],
      "err_line": 26,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        26,
        31,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "cout << \" -1 \" ;",
        "swap a [ i ] , a [ i + gap ] ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        26,
        31,
        13,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "cout << \" -1 \" ;",
        "swap a [ i ] , a [ i + gap ] ;",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        13,
        25
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "cout << \" -1 \" ;",
        "swap a [ i ] , a [ i + gap ] ;",
        "counter = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        26,
        31,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "cout << \" -1 \" ;",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        11,
        25
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "cout << \" -1 \" ;",
        "for ( i = 0 ; i < n - gap ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        25
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "cout << \" -1 \" ;",
        "counter = 0 ;"
      ],
      "err_line": 25,
      "err_msg": "‘counter’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "swap a [ i ] , a [ i + gap ] ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        26,
        13,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "swap a [ i ] , a [ i + gap ] ;",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        13,
        11,
        25
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "swap a [ i ] , a [ i + gap ] ;",
        "for ( i = 0 ; i < n - gap ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        13,
        25
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "swap a [ i ] , a [ i + gap ] ;",
        "counter = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        26,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        11,
        25
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "for ( i = 0 ; i < n - gap ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        25
      ],
      "mod_code": [
        "for ( i = 0 ; i < numofelements ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 25,
      "err_msg": "‘counter’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        13
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "swap a [ i ] , a [ i + gap ] ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        31,
        13,
        11
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "swap a [ i ] , a [ i + gap ] ;",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        13,
        11,
        25
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "swap a [ i ] , a [ i + gap ] ;",
        "for ( i = 0 ; i < n - gap ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        13,
        25
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "swap a [ i ] , a [ i + gap ] ;",
        "counter = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        31,
        11
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        11,
        25
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "for ( i = 0 ; i < n - gap ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        25
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "counter = 0 ;"
      ],
      "err_line": 25,
      "err_msg": "‘counter’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "swap a [ i ] , a [ i + gap ] ;",
        "for ( i = 0 ; i < n - gap ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        11,
        25
      ],
      "mod_code": [
        "swap a [ i ] , a [ i + gap ] ;",
        "for ( i = 0 ; i < n - gap ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "swap a [ i ] , a [ i + gap ] ;",
        "counter = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘a’"
    },
    {
      "mod_line": [
        11,
        25
      ],
      "mod_code": [
        "for ( i = 0 ; i < n - gap ; i ++ )",
        "counter = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}