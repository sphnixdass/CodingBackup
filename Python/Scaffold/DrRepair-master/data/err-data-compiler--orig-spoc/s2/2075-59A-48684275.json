{
  "meta": {
    "index": 2075,
    "hitid": "3E22YV8GG10BKIV59VW0H5KN14EPNN",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "59A",
    "subid": "48684275"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let l = length of s be an int",
      "code": "int l = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "lower = upper = 0 = int",
      "code": "int lower = 0 , upper = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "ch = char",
      "code": "char ch ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "res = \" \" = string",
      "code": "string res = \" \" ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "chI = int",
      "code": "int chI ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 to l exclusive , increment i",
      "code": "for ( int i = 0 ; i < l ; ++ i )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set ch to s at i",
      "code": "ch = s . at ( i ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set chI to ch",
      "code": "chI = ch ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if chI is ascii uppercase",
      "code": "if ( chI >= 65 && chI <= 90 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment upper",
      "code": "upper ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if chI is ascii lowercase",
      "code": "else if ( chI >= 97 && chI <= 122 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment lower",
      "code": "lower ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to i < l , increment i",
      "code": "for ( int i = 0 ; i < l ; ++ i )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "set ch to s at i",
      "code": "ch = s . at ( i ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if lower > = upper",
      "code": "if ( lower >= upper )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set ch to lower ch",
      "code": "ch = tolower ( ch ) ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set ch to upper ch",
      "code": "ch = toupper ( ch ) ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "increment res by ch",
      "code": "res = res + ch ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print res and new line",
      "code": "cout << res << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int lower = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( chI == ascii )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else if ( chI == ascii )"
      ],
      "err_line": 13,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int lower = upper = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else if ( chI == ascii || chI == ascii )"
      ],
      "err_line": 13,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int ch = s [ i ] ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "ch = min ( ch ) ;"
      ],
      "err_line": 19,
      "err_msg": "no matching function for call to ‘min(char&)’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 20,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "int lower = 0 ;",
        "string res = \" \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        11
      ],
      "mod_code": [
        "int lower = 0 ;",
        "string res = \" \" ;",
        "if ( chI == ascii )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        13
      ],
      "mod_code": [
        "int lower = 0 ;",
        "string res = \" \" ;",
        "if ( chI == ascii )",
        "else if ( chI == ascii )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        21
      ],
      "mod_code": [
        "int lower = 0 ;",
        "string res = \" \" ;",
        "if ( chI == ascii )",
        "ch = ( ch ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        16
      ],
      "mod_code": [
        "int lower = 0 ;",
        "string res = \" \" ;",
        "if ( chI == ascii )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        13
      ],
      "mod_code": [
        "int lower = 0 ;",
        "string res = \" \" ;",
        "else if ( chI == ascii )"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        21
      ],
      "mod_code": [
        "int lower = 0 ;",
        "string res = \" \" ;",
        "else if ( chI == ascii )",
        "ch = ( ch ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        16
      ],
      "mod_code": [
        "int lower = 0 ;",
        "string res = \" \" ;",
        "else if ( chI == ascii )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        21
      ],
      "mod_code": [
        "int lower = 0 ;",
        "string res = \" \" ;",
        "ch = ( ch ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        21,
        16
      ],
      "mod_code": [
        "int lower = 0 ;",
        "string res = \" \" ;",
        "ch = ( ch ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        16
      ],
      "mod_code": [
        "int lower = 0 ;",
        "string res = \" \" ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "int lower = 0 ;",
        "if ( chI == ascii )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        13
      ],
      "mod_code": [
        "int lower = 0 ;",
        "if ( chI == ascii )",
        "else if ( chI == ascii )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        21
      ],
      "mod_code": [
        "int lower = 0 ;",
        "if ( chI == ascii )",
        "else if ( chI == ascii )",
        "ch = ( ch ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        16
      ],
      "mod_code": [
        "int lower = 0 ;",
        "if ( chI == ascii )",
        "else if ( chI == ascii )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        21
      ],
      "mod_code": [
        "int lower = 0 ;",
        "if ( chI == ascii )",
        "ch = ( ch ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        21,
        16
      ],
      "mod_code": [
        "int lower = 0 ;",
        "if ( chI == ascii )",
        "ch = ( ch ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        16
      ],
      "mod_code": [
        "int lower = 0 ;",
        "if ( chI == ascii )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "int lower = 0 ;",
        "else if ( chI == ascii )"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        21
      ],
      "mod_code": [
        "int lower = 0 ;",
        "else if ( chI == ascii )",
        "ch = ( ch ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        21,
        16
      ],
      "mod_code": [
        "int lower = 0 ;",
        "else if ( chI == ascii )",
        "ch = ( ch ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        16
      ],
      "mod_code": [
        "int lower = 0 ;",
        "else if ( chI == ascii )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "int lower = 0 ;",
        "ch = ( ch ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        16
      ],
      "mod_code": [
        "int lower = 0 ;",
        "ch = ( ch ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "int lower = 0 ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘upper’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "string res = \" \" ;",
        "if ( chI == ascii )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        13
      ],
      "mod_code": [
        "string res = \" \" ;",
        "if ( chI == ascii )",
        "else if ( chI == ascii )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        21
      ],
      "mod_code": [
        "string res = \" \" ;",
        "if ( chI == ascii )",
        "else if ( chI == ascii )",
        "ch = ( ch ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        13,
        16
      ],
      "mod_code": [
        "string res = \" \" ;",
        "if ( chI == ascii )",
        "else if ( chI == ascii )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        21
      ],
      "mod_code": [
        "string res = \" \" ;",
        "if ( chI == ascii )",
        "ch = ( ch ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        21,
        16
      ],
      "mod_code": [
        "string res = \" \" ;",
        "if ( chI == ascii )",
        "ch = ( ch ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        16
      ],
      "mod_code": [
        "string res = \" \" ;",
        "if ( chI == ascii )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "string res = \" \" ;",
        "else if ( chI == ascii )"
      ],
      "err_line": 13,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        21
      ],
      "mod_code": [
        "string res = \" \" ;",
        "else if ( chI == ascii )",
        "ch = ( ch ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        21,
        16
      ],
      "mod_code": [
        "string res = \" \" ;",
        "else if ( chI == ascii )",
        "ch = ( ch ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        16
      ],
      "mod_code": [
        "string res = \" \" ;",
        "else if ( chI == ascii )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        21,
        16
      ],
      "mod_code": [
        "string res = \" \" ;",
        "ch = ( ch ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "string res = \" \" ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "if ( chI == ascii )",
        "else if ( chI == ascii )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        21
      ],
      "mod_code": [
        "if ( chI == ascii )",
        "else if ( chI == ascii )",
        "ch = ( ch ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        21,
        16
      ],
      "mod_code": [
        "if ( chI == ascii )",
        "else if ( chI == ascii )",
        "ch = ( ch ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        16
      ],
      "mod_code": [
        "if ( chI == ascii )",
        "else if ( chI == ascii )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "if ( chI == ascii )",
        "ch = ( ch ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21,
        16
      ],
      "mod_code": [
        "if ( chI == ascii )",
        "ch = ( ch ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "if ( chI == ascii )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21
      ],
      "mod_code": [
        "else if ( chI == ascii )",
        "ch = ( ch ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        21,
        16
      ],
      "mod_code": [
        "else if ( chI == ascii )",
        "ch = ( ch ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "else if ( chI == ascii )",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘ascii’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        16
      ],
      "mod_code": [
        "ch = ( ch ) ;",
        "for ( i = 0 ; i < l ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}