{
  "meta": {
    "index": 1253,
    "hitid": "3SMIWMMK61ZEZHCFIIMHNUKD2XBUWG",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "291A",
    "subid": "34564575"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long int tc , i , j , c , co and p , set c = 0 , co = 0 , p = 0",
      "code": "long long int tc , i , j , c = 0 , co = 0 , p = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create long long int arr [ 1000 ]",
      "code": "long long int arr [ 1000 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let arra [ 1000 ] be int",
      "code": "int arra [ 1000 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read tc",
      "code": "cin >> tc ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to tc exclusive , read arr [ i ]",
      "code": "for ( i = 0 ; i < tc ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to tc exclusive",
      "code": "for ( i = 0 ; i < tc ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "co = 1",
      "code": "co = 1 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for j = i + 1 to tc exclusive",
      "code": "for ( j = i + 1 ; j < tc ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if arr [ i ] = arr [ j ] and arr [ j ] different from - 2 and 0",
      "code": "if ( arr [ i ] == arr [ j ] && arr [ j ] != - 2 && arr [ i ] != 0 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment co",
      "code": "co ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set arr [ j ] = - 2",
      "code": "arr [ j ] = - 2 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "assign co to arra [ p ]",
      "code": "arra [ p ] = co ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if co > 0 , increment p",
      "code": "if ( co > 0 ) p ++ ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "co = 0",
      "code": "co = 0 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 0 to p exclusive",
      "code": "for ( i = 0 ; i < p ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if arra [ i ] = 2",
      "code": "if ( arra [ i ] == 2 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else if arra [ i ] > 2",
      "code": "else if ( arra [ i ] > 2 )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "c = - 1",
      "code": "c = - 1 ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , co = 0 , p = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int co’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "arra [ p ] [ co ] = co ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int arra [ 1000 ] = { int ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        3,
        22
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int arra [ 1000 ] = { int ) ;",
        "int c = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        3,
        22,
        14
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int arra [ 1000 ] = { int ) ;",
        "int c = - 1 ;",
        "arra [ p ] [ co ] = co ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        3,
        22,
        2
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int arra [ 1000 ] = { int ) ;",
        "int c = - 1 ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        3,
        22,
        21
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int arra [ 1000 ] = { int ) ;",
        "int c = - 1 ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        3,
        14
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int arra [ 1000 ] = { int ) ;",
        "arra [ p ] [ co ] = co ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        2
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int arra [ 1000 ] = { int ) ;",
        "arra [ p ] [ co ] = co ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        3,
        14,
        21
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int arra [ 1000 ] = { int ) ;",
        "arra [ p ] [ co ] = co ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int arra [ 1000 ] = { int ) ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        3,
        2,
        21
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int arra [ 1000 ] = { int ) ;",
        "long long int int arr [ 1000 ] ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        3,
        21
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int arra [ 1000 ] = { int ) ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int c = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        22,
        14
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int c = - 1 ;",
        "arra [ p ] [ co ] = co ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        22,
        14,
        2
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int c = - 1 ;",
        "arra [ p ] [ co ] = co ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        22,
        14,
        21
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int c = - 1 ;",
        "arra [ p ] [ co ] = co ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        22,
        2
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int c = - 1 ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        22,
        2,
        21
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int c = - 1 ;",
        "long long int int arr [ 1000 ] ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        22,
        21
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "int c = - 1 ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "arra [ p ] [ co ] = co ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        14,
        2
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "arra [ p ] [ co ] = co ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        14,
        2,
        21
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "arra [ p ] [ co ] = co ;",
        "long long int int arr [ 1000 ] ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        14,
        21
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "arra [ p ] [ co ] = co ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        2,
        21
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "long long int int arr [ 1000 ] ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "long long int tc , i , j , c = 0 , co = 0 , p = 0 , p = 0 ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int p’"
    },
    {
      "mod_line": [
        3,
        22
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "int c = - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        3,
        22,
        14
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "int c = - 1 ;",
        "arra [ p ] [ co ] = co ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        3,
        22,
        14,
        2
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "int c = - 1 ;",
        "arra [ p ] [ co ] = co ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        3,
        22,
        14,
        21
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "int c = - 1 ;",
        "arra [ p ] [ co ] = co ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        3,
        22,
        2
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "int c = - 1 ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        3,
        22,
        2,
        21
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "int c = - 1 ;",
        "long long int int arr [ 1000 ] ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        3,
        22,
        21
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "int c = - 1 ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "arra [ p ] [ co ] = co ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        3,
        14,
        2
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "arra [ p ] [ co ] = co ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        3,
        14,
        2,
        21
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "arra [ p ] [ co ] = co ;",
        "long long int int arr [ 1000 ] ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        3,
        14,
        21
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "arra [ p ] [ co ] = co ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        3,
        2,
        21
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "long long int int arr [ 1000 ] ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "int arra [ 1000 ] = { int ) ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        22,
        14
      ],
      "mod_code": [
        "int c = - 1 ;",
        "arra [ p ] [ co ] = co ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        14,
        2
      ],
      "mod_code": [
        "int c = - 1 ;",
        "arra [ p ] [ co ] = co ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        22,
        14,
        2,
        21
      ],
      "mod_code": [
        "int c = - 1 ;",
        "arra [ p ] [ co ] = co ;",
        "long long int int arr [ 1000 ] ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        22,
        14,
        21
      ],
      "mod_code": [
        "int c = - 1 ;",
        "arra [ p ] [ co ] = co ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        22,
        2
      ],
      "mod_code": [
        "int c = - 1 ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        22,
        2,
        21
      ],
      "mod_code": [
        "int c = - 1 ;",
        "long long int int arr [ 1000 ] ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "arra [ p ] [ co ] = co ;",
        "long long int int arr [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        14,
        2,
        21
      ],
      "mod_code": [
        "arra [ p ] [ co ] = co ;",
        "long long int int arr [ 1000 ] ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    },
    {
      "mod_line": [
        14,
        21
      ],
      "mod_code": [
        "arra [ p ] [ co ] = co ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "long long int int arr [ 1000 ] ;",
        "else if ( arra [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "two or more data types in declaration of ‘arr’"
    }
  ]
}