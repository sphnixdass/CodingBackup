{
  "meta": {
    "index": 2172,
    "hitid": "3WRAAIUSBJT99837MI1CPCMQ39QAX3",
    "workerid": "AIWEXPJAU66D9",
    "probid": "831A",
    "subid": "46454338"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , i , j , tmp and tmp2",
      "code": "int n , i , j , tmp , tmp2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and tmp",
      "code": "cin >> n >> tmp ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n exclusive",
      "code": "for ( i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read tmp2",
      "code": "cin >> tmp2 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if tmp = tmp2",
      "code": "if ( tmp == tmp2 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = i + 1 to n exclusive",
      "code": "for ( i = i + 1 ; i < n ; i ++ )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "read tmp2",
      "code": "cin >> tmp2 ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "if tmp is greater than tmp2",
      "code": "if ( tmp > tmp2 )",
      "indent": 4
    },
    {
      "line": 9,
      "text": "assign value of tmp2 to tmp",
      "code": "tmp = tmp2 ;",
      "indent": 5
    },
    {
      "line": 10,
      "text": "for i = i + 1 to n exclusive",
      "code": "for ( i = i + 1 ; i < n ; i ++ )",
      "indent": 5
    },
    {
      "line": 11,
      "text": "read tmp2",
      "code": "cin >> tmp2 ;",
      "indent": 6
    },
    {
      "line": 12,
      "text": "if tmp < = tmp2",
      "code": "if ( tmp <= tmp2 )",
      "indent": 6
    },
    {
      "line": 13,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 7
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 7
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 6
    },
    {
      "line": 16,
      "text": "set value of tmp to tmp2",
      "code": "tmp = tmp2 ;",
      "indent": 6
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 18,
      "text": "else if tmp is less than tmp2",
      "code": "else if ( tmp < tmp2 )",
      "indent": 4
    },
    {
      "line": 19,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 5
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else if tmp is greater than tmp2",
      "code": "else if ( tmp > tmp2 )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set tmp to tmp2",
      "code": "tmp = tmp2 ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "for i = i + 1 to n exclusive",
      "code": "for ( i = i + 1 ; i < n ; i ++ )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "read tmp2",
      "code": "cin >> tmp2 ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "if tmp < = tmp2",
      "code": "if ( tmp <= tmp2 )",
      "indent": 4
    },
    {
      "line": 28,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 5
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 31,
      "text": "tmp = tmp2",
      "code": "tmp = tmp2 ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "assign value of tmp2 to tmp",
      "code": "tmp = tmp2 ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , i , j , tmp , tmp2 , tmp2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int tmp2’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "* tmp = tmp2 ;"
      ],
      "err_line": 16,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    }
  ]
}