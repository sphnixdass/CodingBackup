{
  "meta": {
    "index": 2127,
    "hitid": "3KQC8JMJGCMC3X478Z4GZIKQAWB3HE",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "615A",
    "subid": "48205297"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let m , n , ss , k be int",
      "code": "int m , n , ss , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read m and n",
      "code": "cin >> m >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let x be a boolean array of length n + 1 and flag a true bool",
      "code": "bool x [ n + 1 ] , flag = true ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "reset all x to false",
      "code": "memset ( x , false , sizeof ( x ) ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = 0 to k exclusive",
      "code": "for ( int j = 0 ; j < k ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read ss",
      "code": "cin >> ss ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "set x at ss as true",
      "code": "x [ ss ] = true ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if x at i isn ' t 0 then set flag to false",
      "code": "if ( ! x [ i ] ) flag = false ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if flag is not 0",
      "code": "if ( flag )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "x [ x ] = true ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘bool [(n + 1)][bool [(n + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( x . at ( i ) ) flag = false ;"
      ],
      "err_line": 13,
      "err_msg": "request for member ‘at’ in ‘x’, which is of non-class type ‘bool [(n + 1)]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int m , n , ss [ k ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool x [ n + 1 ] + flag ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "x [ x ] = true ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘bool [(n + 1)][bool [(n + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        13
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "x [ x ] = true ;",
        "if ( x . at ( i ) ) flag = false ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘bool [(n + 1)][bool [(n + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        7
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "x [ x ] = true ;",
        "if ( x . at ( i ) ) flag = false ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        13,
        5
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "x [ x ] = true ;",
        "if ( x . at ( i ) ) flag = false ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        7
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "x [ x ] = true ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        7,
        5
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "x [ x ] = true ;",
        "for ( j = 0 ; j < k ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        7,
        13
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "x [ x ] = true ;",
        "for ( j = 0 ; j < k ; j ++ )",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        5
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "x [ x ] = true ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        5,
        13
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "x [ x ] = true ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        13
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "x [ x ] = true ;",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘bool [(n + 1)][bool [(n + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "if ( x . at ( i ) ) flag = false ;"
      ],
      "err_line": 13,
      "err_msg": "request for member ‘at’ in ‘x’, which is of non-class type ‘bool [(n + 1)]’"
    },
    {
      "mod_line": [
        3,
        13,
        7
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "if ( x . at ( i ) ) flag = false ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        7,
        5
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "if ( x . at ( i ) ) flag = false ;",
        "for ( j = 0 ; j < k ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        5
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "if ( x . at ( i ) ) flag = false ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        5
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "for ( j = 0 ; j < k ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        5,
        13
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "for ( j = 0 ; j < k ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        13
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "for ( j = 0 ; j < k ; j ++ )",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        13
      ],
      "mod_code": [
        "bool x [ n + 1 ] , flag ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "x [ x ] = true ;",
        "if ( x . at ( i ) ) flag = false ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘bool [(n + 1)][bool [(n + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        13,
        7
      ],
      "mod_code": [
        "x [ x ] = true ;",
        "if ( x . at ( i ) ) flag = false ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        7,
        5
      ],
      "mod_code": [
        "x [ x ] = true ;",
        "if ( x . at ( i ) ) flag = false ;",
        "for ( j = 0 ; j < k ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        5
      ],
      "mod_code": [
        "x [ x ] = true ;",
        "if ( x . at ( i ) ) flag = false ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "x [ x ] = true ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        5
      ],
      "mod_code": [
        "x [ x ] = true ;",
        "for ( j = 0 ; j < k ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        5,
        13
      ],
      "mod_code": [
        "x [ x ] = true ;",
        "for ( j = 0 ; j < k ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        13
      ],
      "mod_code": [
        "x [ x ] = true ;",
        "for ( j = 0 ; j < k ; j ++ )",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "x [ x ] = true ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        13
      ],
      "mod_code": [
        "x [ x ] = true ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "x [ x ] = true ;",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘bool [(n + 1)][bool [(n + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "if ( x . at ( i ) ) flag = false ;",
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        5
      ],
      "mod_code": [
        "if ( x . at ( i ) ) flag = false ;",
        "for ( j = 0 ; j < k ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "if ( x . at ( i ) ) flag = false ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < k ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        13
      ],
      "mod_code": [
        "for ( j = 0 ; j < k ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "for ( j = 0 ; j < k ; j ++ )",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( x [ i ] != 0 ) flag = false ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}