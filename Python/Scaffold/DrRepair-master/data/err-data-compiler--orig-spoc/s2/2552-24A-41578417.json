{
  "meta": {
    "index": 2552,
    "hitid": "3HA5ODM5KAML5FK633MLMRJB9P9VS7",
    "workerid": "AIWEXPJAU66D9",
    "probid": "24A",
    "subid": "41578417"
  },
  "lines": [
    {
      "line": 0,
      "text": "let num be a 2d array of integers with size 105 by 105",
      "code": "int num [ 105 ] [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "vis is an array of integers of length 105",
      "code": "int vis [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer variable n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "counts = integer",
      "code": "int counts ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare integer variable en",
      "code": "int en ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "in the function dfs with integer argument k",
      "code": "void dfs ( int k )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "set en to k",
      "code": "en = k ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if k = 1 and vis [ 1 ] is equal to 1 , return",
      "code": "if ( k == 1 && vis [ 1 ] == 1 ) return ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set vis [ k ] to 1",
      "code": "vis [ k ] = 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if vis [ i ] is equal to 0",
      "code": "if ( vis [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if num [ k ] [ i ] is equal to - 1",
      "code": "if ( num [ k ] [ i ] == - 1 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if num [ i ] [ k ] ! = - 1",
      "code": "if ( num [ i ] [ k ] != - 1 )",
      "indent": 4
    },
    {
      "line": 13,
      "text": "increase counts by num [ i ] [ k ]",
      "code": "counts += num [ i ] [ k ] ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "invoke function dfs with argument i",
      "code": "dfs ( i ) ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 17,
      "text": "invoke function dfs with argument i",
      "code": "dfs ( i ) ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 23,
      "text": "declare integers called x , y and l",
      "code": "int x , y , l ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "declare integer variable sum",
      "code": "int sum ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "while can read input into n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "set sum to 0",
      "code": "sum = 0 ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "call memset with arguments num , - 1 and sizeof ( num )",
      "code": "memset ( num , - 1 , sizeof ( num ) ) ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "call memset with arguments vis , 0 and sizeof ( vis )",
      "code": "memset ( vis , 0 , sizeof ( vis ) ) ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "read x , y and l",
      "code": "cin >> x >> y >> l ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "set num [ x ] [ y ] to l",
      "code": "num [ x ] [ y ] = l ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "increase sum by l",
      "code": "sum += l ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "set counts to 0",
      "code": "counts = 0 ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "call dfs with argument 1",
      "code": "dfs ( 1 ) ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "if num [ en ] [ 1 ] is equal to - 1 , increase counts by num [ 1 ] [ en ]",
      "code": "if ( num [ en ] [ 1 ] == - 1 ) counts += num [ 1 ] [ en ] ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "print min of counts and sum - counts , and a new line",
      "code": "cout << min ( counts , sum - counts ) << endl ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int * vis [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool dfs ( int k )"
      ],
      "err_line": 7,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "C [ k ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "dfs ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘void dfs(int)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "dfs ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘void dfs(int)’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "x , y , l ;"
      ],
      "err_line": 23,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "while ( getline ( cin , n ) )"
      ],
      "err_line": 25,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "memset ( ( num , - 1 , sizeof ( num ) ) ) ;"
      ],
      "err_line": 27,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "vis ( vis , 0 , sizeof ( vis ) ) ;"
      ],
      "err_line": 28,
      "err_msg": "‘vis’ cannot be used as a function"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "int num [ x ] [ y ] = l ;"
      ],
      "err_line": 31,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "dfs ( 1 1 ) ;"
      ],
      "err_line": 35,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int en = k ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        6,
        17
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int en = k ;",
        "dfs ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        6,
        17,
        14
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int en = k ;",
        "dfs ( ) ;",
        "dfs ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        6,
        17,
        0
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int en = k ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        6,
        17,
        12
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int en = k ;",
        "dfs ( ) ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        6,
        14
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int en = k ;",
        "dfs ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        6,
        14,
        0
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int en = k ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        6,
        14,
        12
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int en = k ;",
        "dfs ( ) ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        6,
        0
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int en = k ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        6,
        0,
        12
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int en = k ;",
        "int * num [ 105 ] [ 105 ] ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        6,
        12
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int en = k ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "dfs ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        17,
        14
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "dfs ( ) ;",
        "dfs ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        17,
        14,
        0
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "dfs ( ) ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        17,
        14,
        12
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "dfs ( ) ;",
        "dfs ( ) ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        17,
        0
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        17,
        0,
        12
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        17,
        12
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "dfs ( ) ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "dfs ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        14,
        0
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        14,
        0,
        12
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        14,
        12
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "dfs ( ) ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        0,
        12
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "int * num [ 105 ] [ 105 ] ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "if ( k == 1 && vis [ 1 ] == 1 ) return , return 1 ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘,’ token"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "int en = k ;",
        "dfs ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘void dfs(int)’"
    },
    {
      "mod_line": [
        6,
        17,
        14
      ],
      "mod_code": [
        "int en = k ;",
        "dfs ( ) ;",
        "dfs ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘void dfs(int)’"
    },
    {
      "mod_line": [
        6,
        17,
        14,
        0
      ],
      "mod_code": [
        "int en = k ;",
        "dfs ( ) ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        17,
        14,
        12
      ],
      "mod_code": [
        "int en = k ;",
        "dfs ( ) ;",
        "dfs ( ) ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘void dfs(int)’"
    },
    {
      "mod_line": [
        6,
        17,
        0
      ],
      "mod_code": [
        "int en = k ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        17,
        0,
        12
      ],
      "mod_code": [
        "int en = k ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        17,
        12
      ],
      "mod_code": [
        "int en = k ;",
        "dfs ( ) ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘void dfs(int)’"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "int en = k ;",
        "dfs ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘void dfs(int)’"
    },
    {
      "mod_line": [
        6,
        14,
        0
      ],
      "mod_code": [
        "int en = k ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14,
        0,
        12
      ],
      "mod_code": [
        "int en = k ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        14,
        12
      ],
      "mod_code": [
        "int en = k ;",
        "dfs ( ) ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘void dfs(int)’"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "int en = k ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        0,
        12
      ],
      "mod_code": [
        "int en = k ;",
        "int * num [ 105 ] [ 105 ] ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        14
      ],
      "mod_code": [
        "dfs ( ) ;",
        "dfs ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘void dfs(int)’"
    },
    {
      "mod_line": [
        17,
        14,
        0
      ],
      "mod_code": [
        "dfs ( ) ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        14,
        0,
        12
      ],
      "mod_code": [
        "dfs ( ) ;",
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        14,
        12
      ],
      "mod_code": [
        "dfs ( ) ;",
        "dfs ( ) ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘void dfs(int)’"
    },
    {
      "mod_line": [
        17,
        0
      ],
      "mod_code": [
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        0,
        12
      ],
      "mod_code": [
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        12
      ],
      "mod_code": [
        "dfs ( ) ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 17,
      "err_msg": "too few arguments to function ‘void dfs(int)’"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        0,
        12
      ],
      "mod_code": [
        "dfs ( ) ;",
        "int * num [ 105 ] [ 105 ] ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "dfs ( ) ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 14,
      "err_msg": "too few arguments to function ‘void dfs(int)’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int * num [ 105 ] [ 105 ] ;",
        "if ( ! num [ i ] [ k ] != - 1 )"
      ],
      "err_line": 11,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    }
  ]
}