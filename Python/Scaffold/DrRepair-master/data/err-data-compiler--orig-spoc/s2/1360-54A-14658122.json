{
  "meta": {
    "index": 1360,
    "hitid": "37SOB9Z0SSREPTNXZKJERADXRDPL38",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "54A",
    "subid": "14658122"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k , c = integers",
      "code": "int n , k , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "a = array of 500 integers",
      "code": "int a [ 500 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "Read n , k , c",
      "code": "cin >> n >> k >> c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "Read n values into array a",
      "code": "for ( int i = 0 ; i < c ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "j = integer with 0",
      "code": "int j = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "cnt = integer with 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "diff = integer with 0",
      "code": "int diff = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if i is equal to a [ j ]",
      "code": "if ( i == a [ j ] )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set diff to 0",
      "code": "diff = 0 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment diff",
      "code": "diff ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if diff is equal to k",
      "code": "if ( diff == k )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "set diff to 0",
      "code": "diff = 0 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print cnt and a new line",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else if ( diff == k )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        17,
        15
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "int diff = 0 ;",
        "else if ( diff == k )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        17,
        15,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "int diff = 0 ;",
        "else if ( diff == k )",
        "int diff = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        17,
        15,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "int diff = 0 ;",
        "else if ( diff == k )",
        "cin >> n >> k , c ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "else if ( diff == k )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        15,
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "else if ( diff == k )",
        "int diff = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        15,
        12,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "else if ( diff == k )",
        "int diff = 0 ;",
        "cin >> n >> k , c ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        15,
        3
      ],
      "mod_code": [
        "for ( int i = 1 ; i < n ; i ++ )",
        "else if ( diff == k )",
        "cin >> n >> k , c ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        8
      ],
      "mod_code": [
        "int diff = 0 ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        8,
        15
      ],
      "mod_code": [
        "int diff = 0 ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "else if ( diff == k )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        8,
        15,
        12
      ],
      "mod_code": [
        "int diff = 0 ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "else if ( diff == k )",
        "int diff = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        8,
        15,
        3
      ],
      "mod_code": [
        "int diff = 0 ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "else if ( diff == k )",
        "cin >> n >> k , c ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        8,
        12
      ],
      "mod_code": [
        "int diff = 0 ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "int diff = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        8,
        12,
        3
      ],
      "mod_code": [
        "int diff = 0 ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "int diff = 0 ;",
        "cin >> n >> k , c ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        8,
        3
      ],
      "mod_code": [
        "int diff = 0 ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "cin >> n >> k , c ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        15
      ],
      "mod_code": [
        "int diff = 0 ;",
        "else if ( diff == k )"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        15,
        12
      ],
      "mod_code": [
        "int diff = 0 ;",
        "else if ( diff == k )",
        "int diff = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        15,
        12,
        3
      ],
      "mod_code": [
        "int diff = 0 ;",
        "else if ( diff == k )",
        "int diff = 0 ;",
        "cin >> n >> k , c ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        17,
        15,
        3
      ],
      "mod_code": [
        "int diff = 0 ;",
        "else if ( diff == k )",
        "cin >> n >> k , c ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i < n ; i ++ )",
        "else if ( diff == k )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i < n ; i ++ )",
        "else if ( diff == k )",
        "int diff = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        12,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i < n ; i ++ )",
        "else if ( diff == k )",
        "int diff = 0 ;",
        "cin >> n >> k , c ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i < n ; i ++ )",
        "else if ( diff == k )",
        "cin >> n >> k , c ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i < n ; i ++ )",
        "int diff = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i < n ; i ++ )",
        "int diff = 0 ;",
        "cin >> n >> k , c ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i < n ; i ++ )",
        "cin >> n >> k , c ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "else if ( diff == k )",
        "int diff = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        15,
        12,
        3
      ],
      "mod_code": [
        "else if ( diff == k )",
        "int diff = 0 ;",
        "cin >> n >> k , c ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "else if ( diff == k )",
        "cin >> n >> k , c ;"
      ],
      "err_line": 15,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}