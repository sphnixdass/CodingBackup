{
  "meta": {
    "index": 2535,
    "hitid": "3MQY1YVHS3EDR25247GFUXC08IB2BG",
    "workerid": "A2DPC3746ZVHNY",
    "probid": "499A",
    "subid": "47764259"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long variables n and x",
      "code": "long n , x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read in n and x",
      "code": "cin >> n >> x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create long arrays l and r with length n",
      "code": "long l [ n ] , r [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read in l [ i ] and r [ i ]",
      "code": "for ( long i = 0 ; i < n ; i ++ ) { cin >> l [ i ] >> r [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create long variables sum = 0 , k = 1",
      "code": "long sum = 0 , k = 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if k is less than l [ i ]",
      "code": "if ( k < l [ i ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "sum + = ( l [ i ] - k ) modulo x ;",
      "code": "sum += ( l [ i ] - k ) % x ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "k = l [ i ]",
      "code": "k = l [ i ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "while k is less than or equal to r [ i ]",
      "code": "while ( k <= r [ i ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment k by 1",
      "code": "k ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increment sum by 1",
      "code": "sum ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print sum and new line",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "sum -= ( l [ i ] - k ) % x ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        2
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "sum -= ( l [ i ] - k ) % x ;",
        "cin >> n >> n ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        2,
        11
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "sum -= ( l [ i ] - k ) % x ;",
        "cin >> n >> n ;",
        "while ( k >= r [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        2,
        9
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "sum -= ( l [ i ] - k ) % x ;",
        "cin >> n >> n ;",
        "int k = l [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        2,
        6
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "sum -= ( l [ i ] - k ) % x ;",
        "cin >> n >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        11
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "sum -= ( l [ i ] - k ) % x ;",
        "while ( k >= r [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        9
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "sum -= ( l [ i ] - k ) % x ;",
        "while ( k >= r [ i ] )",
        "int k = l [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        11,
        6
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "sum -= ( l [ i ] - k ) % x ;",
        "while ( k >= r [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "sum -= ( l [ i ] - k ) % x ;",
        "int k = l [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        6
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "sum -= ( l [ i ] - k ) % x ;",
        "int k = l [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "sum -= ( l [ i ] - k ) % x ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "cin >> n >> n ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        2,
        11
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "cin >> n >> n ;",
        "while ( k >= r [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        2,
        11,
        9
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "cin >> n >> n ;",
        "while ( k >= r [ i ] )",
        "int k = l [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        2,
        11,
        6
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "cin >> n >> n ;",
        "while ( k >= r [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        2,
        9
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "cin >> n >> n ;",
        "int k = l [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        2,
        9,
        6
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "cin >> n >> n ;",
        "int k = l [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "cin >> n >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "while ( k >= r [ i ] )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        11,
        9
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "while ( k >= r [ i ] )",
        "int k = l [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        11,
        9,
        6
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "while ( k >= r [ i ] )",
        "int k = l [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        11,
        6
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "while ( k >= r [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "int k = l [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        9,
        6
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "int k = l [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( k [ i ] < l [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        2,
        11,
        6
      ],
      "mod_code": [
        "sum -= ( l [ i ] - k ) % x ;",
        "cin >> n >> n ;",
        "while ( k >= r [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        2,
        9,
        6
      ],
      "mod_code": [
        "sum -= ( l [ i ] - k ) % x ;",
        "cin >> n >> n ;",
        "int k = l [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        2,
        6
      ],
      "mod_code": [
        "sum -= ( l [ i ] - k ) % x ;",
        "cin >> n >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        11,
        9,
        6
      ],
      "mod_code": [
        "sum -= ( l [ i ] - k ) % x ;",
        "while ( k >= r [ i ] )",
        "int k = l [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        11,
        6
      ],
      "mod_code": [
        "sum -= ( l [ i ] - k ) % x ;",
        "while ( k >= r [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        6
      ],
      "mod_code": [
        "sum -= ( l [ i ] - k ) % x ;",
        "int k = l [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "sum -= ( l [ i ] - k ) % x ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        9,
        6
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "while ( k >= r [ i ] )",
        "int k = l [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        11,
        6
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "while ( k >= r [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        9,
        6
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int k = l [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        6
      ],
      "mod_code": [
        "while ( k >= r [ i ] )",
        "int k = l [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "while ( k >= r [ i ] )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "int k = l [ i ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}