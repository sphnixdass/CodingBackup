{
  "meta": {
    "index": 723,
    "hitid": "3FULMHZ7OURJD7OMZAPC1SKS5I94MC",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "1065A",
    "subid": "48163290"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to t exclusive",
      "code": "for ( int i = 0 ; i < t ; ++ i )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create long long s , a , b and c",
      "code": "long long s , a , b , c ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read s , a , b and c",
      "code": "cin >> s >> a >> b >> c ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print s / ( a * c ) * b + s / c",
      "code": "cout << s / ( a * c ) * b + s / c << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int * t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        3
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "cout << s / ( a * c ) * b + s / c ;",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        3,
        1
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "cout << s / ( a * c ) * b + s / c ;",
        "for ( i = 0 ; i < t ; i ++ )",
        "int * t ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        3,
        5
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "cout << s / ( a * c ) * b + s / c ;",
        "for ( i = 0 ; i < t ; i ++ )",
        "cin >> s >> a , b >> c ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        1
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "cout << s / ( a * c ) * b + s / c ;",
        "int * t ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        1,
        5
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "cout << s / ( a * c ) * b + s / c ;",
        "int * t ;",
        "cin >> s >> a , b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        1
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "for ( i = 0 ; i < t ; i ++ )",
        "int * t ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        1,
        5
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "for ( i = 0 ; i < t ; i ++ )",
        "int * t ;",
        "cin >> s >> a , b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "for ( i = 0 ; i < t ; i ++ )",
        "cin >> s >> a , b >> c ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "int * t ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        1,
        5
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "int * t ;",
        "cin >> s >> a , b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "cout << s / ( a * c ) * b + s / c ;",
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        1
      ],
      "mod_code": [
        "cout << s / ( a * c ) * b + s / c ;",
        "for ( i = 0 ; i < t ; i ++ )",
        "int * t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        3,
        1,
        5
      ],
      "mod_code": [
        "cout << s / ( a * c ) * b + s / c ;",
        "for ( i = 0 ; i < t ; i ++ )",
        "int * t ;",
        "cin >> s >> a , b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "cout << s / ( a * c ) * b + s / c ;",
        "for ( i = 0 ; i < t ; i ++ )",
        "cin >> s >> a , b >> c ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "cout << s / ( a * c ) * b + s / c ;",
        "int * t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        1,
        5
      ],
      "mod_code": [
        "cout << s / ( a * c ) * b + s / c ;",
        "int * t ;",
        "cin >> s >> a , b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < t ; i ++ )",
        "int * t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < t ; i ++ )",
        "int * t ;",
        "cin >> s >> a , b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < t ; i ++ )",
        "cin >> s >> a , b >> c ;"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int * t ;",
        "cin >> s >> a , b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    }
  ]
}