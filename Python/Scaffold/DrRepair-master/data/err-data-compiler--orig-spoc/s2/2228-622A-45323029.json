{
  "meta": {
    "index": 2228,
    "hitid": "3D1TUISJWIUWYMSAT1I2M3B5NMCUI8",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "622A",
    "subid": "45323029"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , sum , x = long long",
      "code": "long long n , sum , x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read sum",
      "code": "while ( cin >> sum )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s = ( sqrt ( ( 8 * sum ) + 1 ) - 1 ) / 2",
      "code": "x = ( sqrt ( ( 8 * sum ) + 1 ) - 1 ) / 2 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "sum1 = ( x * ( x + 1 ) ) / 2",
      "code": "long long sum1 = ( x * ( x + 1 ) ) / 2 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if sum - sum1 is 0",
      "code": "if ( sum - sum1 == 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print x",
      "code": "cout << x << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print sum - sum1",
      "code": "cout << sum - sum1 << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "s = ( sqrt ( ( 8 * sum ) + 1 ) - 1 ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "sum1 = ( x * ( x + 1 ) ) / 2 ;"
      ],
      "err_line": 4,
      "err_msg": "‘sum1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( { cin >> sum )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "s = ( sqrt ( ( ( 8 * sum ) + 1 ) - 1 ) - 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "s = ( sqrt ( ( 8 * sum ) + 1 ) - 1 ) / 2 ;",
        "sum1 = ( x * ( x + 1 ) ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "s = ( sqrt ( ( 8 * sum ) + 1 ) - 1 ) / 2 ;",
        "sum1 = ( x * ( x + 1 ) ) / 2 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        2
      ],
      "mod_code": [
        "s = ( sqrt ( ( 8 * sum ) + 1 ) - 1 ) / 2 ;",
        "sum1 = ( x * ( x + 1 ) ) / 2 ;",
        "n",
        "while ( { cin >> sum )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "s = ( sqrt ( ( 8 * sum ) + 1 ) - 1 ) / 2 ;",
        "sum1 = ( x * ( x + 1 ) ) / 2 ;",
        "while ( { cin >> sum )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "s = ( sqrt ( ( 8 * sum ) + 1 ) - 1 ) / 2 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        2
      ],
      "mod_code": [
        "s = ( sqrt ( ( 8 * sum ) + 1 ) - 1 ) / 2 ;",
        "n",
        "while ( { cin >> sum )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "s = ( sqrt ( ( 8 * sum ) + 1 ) - 1 ) / 2 ;",
        "while ( { cin >> sum )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "sum1 = ( x * ( x + 1 ) ) / 2 ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘sum1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "sum1 = ( x * ( x + 1 ) ) / 2 ;",
        "n",
        "s = ( sqrt ( ( ( 8 * sum ) + 1 ) - 1 ) - 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        2
      ],
      "mod_code": [
        "sum1 = ( x * ( x + 1 ) ) / 2 ;",
        "n",
        "s = ( sqrt ( ( ( 8 * sum ) + 1 ) - 1 ) - 2 ) ;",
        "while ( { cin >> sum )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        7,
        2
      ],
      "mod_code": [
        "sum1 = ( x * ( x + 1 ) ) / 2 ;",
        "n",
        "while ( { cin >> sum )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "sum1 = ( x * ( x + 1 ) ) / 2 ;",
        "s = ( sqrt ( ( ( 8 * sum ) + 1 ) - 1 ) - 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "sum1 = ( x * ( x + 1 ) ) / 2 ;",
        "s = ( sqrt ( ( ( 8 * sum ) + 1 ) - 1 ) - 2 ) ;",
        "while ( { cin >> sum )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "sum1 = ( x * ( x + 1 ) ) / 2 ;",
        "while ( { cin >> sum )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "n",
        "s = ( sqrt ( ( ( 8 * sum ) + 1 ) - 1 ) - 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        3,
        2
      ],
      "mod_code": [
        "n",
        "s = ( sqrt ( ( ( 8 * sum ) + 1 ) - 1 ) - 2 ) ;",
        "while ( { cin >> sum )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "n",
        "while ( { cin >> sum )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "s = ( sqrt ( ( ( 8 * sum ) + 1 ) - 1 ) - 2 ) ;",
        "while ( { cin >> sum )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    }
  ]
}