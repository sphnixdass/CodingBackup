{
  "meta": {
    "index": 2175,
    "hitid": "31GN6YMHLPMYK4KBTDRH8T2PH0SWS4",
    "workerid": "A1APYLD4DUK33J",
    "probid": "102A",
    "subid": "37372844"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integers n , m",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer array ma size 110 by 110",
      "code": "int ma [ 110 ] [ 110 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer array a size 110",
      "code": "int a [ 110 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to m inclusive",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare integers u , v",
      "code": "int u , v ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read u , v",
      "code": "cin >> u >> v ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "let ma [ u ] [ v ] be ma [ v ] [ u ] be 1",
      "code": "ma [ u ] [ v ] = ma [ v ] [ u ] = 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare integer res = 0x3f3f3f3f",
      "code": "int res = 0x3f3f3f3f ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for j = i + 1 to n inclusive",
      "code": "for ( int j = i + 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for k = j + 1 to n inclusive",
      "code": "for ( int k = j + 1 ; k <= n ; k ++ )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if ma [ i ] [ j ] and ma [ j ] [ k ] and ma [ i ] [ k ] , let res be minimum of ( res and a [ i ] + a [ j ] + a [ k ] )",
      "code": "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma [ i ] [ k ] ) res = min ( res , a [ i ] + a [ j ] + a [ k ] ) ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if res is 0x3f3f3f3f",
      "code": "if ( res == 0x3f3f3f3f )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" - 1 \" and newline",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print res and newline",
      "code": "cout << res << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;"
      ],
      "err_line": 15,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int l , m ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "a [ 110 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int n , v ;"
      ],
      "err_line": 8,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "res = 0x3f3f3f3f ;"
      ],
      "err_line": 11,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( k = j + 1 ; k <= n ; k ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 15,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "int l , m ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        0,
        2
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "int l , m ;",
        "a [ 110 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        15,
        0,
        2,
        14
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "int l , m ;",
        "a [ 110 ] ;",
        "for ( k = j + 1 ; k <= n ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        15,
        0,
        2,
        1
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "int l , m ;",
        "a [ 110 ] ;",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        15,
        0,
        14
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "int l , m ;",
        "for ( k = j + 1 ; k <= n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        0,
        14,
        1
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "int l , m ;",
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        15,
        0,
        1
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "int l , m ;",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "a [ 110 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        15,
        2,
        14
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "a [ 110 ] ;",
        "for ( k = j + 1 ; k <= n ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        15,
        2,
        14,
        1
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "a [ 110 ] ;",
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        15,
        2,
        1
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "a [ 110 ] ;",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "for ( k = j + 1 ; k <= n ; k ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14,
        1
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        15,
        1
      ],
      "mod_code": [
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ k ] + a [ k ] ) ;",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int l , m ;",
        "a [ 110 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        14
      ],
      "mod_code": [
        "int l , m ;",
        "a [ 110 ] ;",
        "for ( k = j + 1 ; k <= n ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        14,
        1
      ],
      "mod_code": [
        "int l , m ;",
        "a [ 110 ] ;",
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        0,
        2,
        14,
        15
      ],
      "mod_code": [
        "int l , m ;",
        "a [ 110 ] ;",
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        2,
        1
      ],
      "mod_code": [
        "int l , m ;",
        "a [ 110 ] ;",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        0,
        2,
        1,
        15
      ],
      "mod_code": [
        "int l , m ;",
        "a [ 110 ] ;",
        "int ma 110 [ 110 ] ;",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        0,
        2,
        15
      ],
      "mod_code": [
        "int l , m ;",
        "a [ 110 ] ;",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "int l , m ;",
        "for ( k = j + 1 ; k <= n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        14,
        1
      ],
      "mod_code": [
        "int l , m ;",
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        0,
        14,
        1,
        15
      ],
      "mod_code": [
        "int l , m ;",
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "int ma 110 [ 110 ] ;",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        0,
        14,
        15
      ],
      "mod_code": [
        "int l , m ;",
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int l , m ;",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        0,
        1,
        15
      ],
      "mod_code": [
        "int l , m ;",
        "int ma 110 [ 110 ] ;",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "int l , m ;",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "a [ 110 ] ;",
        "for ( k = j + 1 ; k <= n ; k ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        2,
        14,
        1
      ],
      "mod_code": [
        "a [ 110 ] ;",
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        2,
        14,
        1,
        15
      ],
      "mod_code": [
        "a [ 110 ] ;",
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "int ma 110 [ 110 ] ;",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        2,
        14,
        15
      ],
      "mod_code": [
        "a [ 110 ] ;",
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "a [ 110 ] ;",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        2,
        1,
        15
      ],
      "mod_code": [
        "a [ 110 ] ;",
        "int ma 110 [ 110 ] ;",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "a [ 110 ] ;",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "int ma 110 [ 110 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        14,
        1,
        15
      ],
      "mod_code": [
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "int ma 110 [ 110 ] ;",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "for ( k = j + 1 ; k <= n ; k ++ )",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "int ma 110 [ 110 ] ;",
        "if ( ma [ i ] [ j ] && ma [ j ] [ k ] && ma = min ( res , a [ i ] + a [ j ] + a [ j ] + a [ k ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before numeric constant"
    }
  ]
}