{
  "meta": {
    "index": 1482,
    "hitid": "38O9DZ0A62H7LQO78GZ7JHQ8UHY26T",
    "workerid": "A1APYLD4DUK33J",
    "probid": "791A",
    "subid": "48911113"
  },
  "lines": [
    {
      "line": 0,
      "text": "create 2d integer array a with size 1001 by 3",
      "code": "int a [ 1001 ] [ 3 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers a , b",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read a read b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 6 exclusive",
      "code": "for ( int i = 0 ; i < 6 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "increment a by a * 3",
      "code": "a *= 3 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment b by b * 2",
      "code": "b *= 2 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a is greater than b",
      "code": "if ( a > b )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print i + 1 print newline",
      "code": "cout << i + 1 << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "a , b ;"
      ],
      "err_line": 2,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 6 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        6,
        9
      ],
      "mod_code": [
        "a += a * 3 ;",
        "b += b * 2 ;",
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        7
      ],
      "mod_code": [
        "a += a * 3 ;",
        "b += b * 2 ;",
        "break break ;",
        "if ( a > a )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        6,
        9,
        3
      ],
      "mod_code": [
        "a += a * 3 ;",
        "b += b * 2 ;",
        "break break ;",
        "a >> a >> b ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "a += a * 3 ;",
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        9,
        6
      ],
      "mod_code": [
        "a += a * 3 ;",
        "break break ;",
        "b += ( b * 2 ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        9,
        6,
        7
      ],
      "mod_code": [
        "a += a * 3 ;",
        "break break ;",
        "b += ( b * 2 ) ;",
        "if ( a > a )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        9,
        6,
        3
      ],
      "mod_code": [
        "a += a * 3 ;",
        "break break ;",
        "b += ( b * 2 ) ;",
        "a >> a >> b ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        9,
        7
      ],
      "mod_code": [
        "a += a * 3 ;",
        "break break ;",
        "if ( a > a )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        9,
        7,
        3
      ],
      "mod_code": [
        "a += a * 3 ;",
        "break break ;",
        "if ( a > a )",
        "a >> a >> b ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        5,
        9,
        3
      ],
      "mod_code": [
        "a += a * 3 ;",
        "break break ;",
        "a >> a >> b ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "b += b * 2 ;",
        "break break ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        9,
        7
      ],
      "mod_code": [
        "b += b * 2 ;",
        "break break ;",
        "if ( a > a )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        9,
        7,
        3
      ],
      "mod_code": [
        "b += b * 2 ;",
        "break break ;",
        "if ( a > a )",
        "a >> a >> b ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "b += b * 2 ;",
        "break break ;",
        "a >> a >> b ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "break break ;",
        "b += ( b * 2 ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        6,
        7
      ],
      "mod_code": [
        "break break ;",
        "b += ( b * 2 ) ;",
        "if ( a > a )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        6,
        7,
        3
      ],
      "mod_code": [
        "break break ;",
        "b += ( b * 2 ) ;",
        "if ( a > a )",
        "a >> a >> b ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        6,
        3
      ],
      "mod_code": [
        "break break ;",
        "b += ( b * 2 ) ;",
        "a >> a >> b ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "break break ;",
        "if ( a > a )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        7,
        3
      ],
      "mod_code": [
        "break break ;",
        "if ( a > a )",
        "a >> a >> b ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "break break ;",
        "a >> a >> b ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}