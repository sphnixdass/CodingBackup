{
  "meta": {
    "index": 1697,
    "hitid": "35U0MRQMUJ167NSDWM5C2M9AD2GOVI",
    "workerid": "AIWEXPJAU66D9",
    "probid": "69A",
    "subid": "48770496"
  },
  "lines": [
    {
      "line": 0,
      "text": "create ints n , x , y and z and array of integers sum with 3 elements",
      "code": "int n , x , y , z , sum [ 3 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "decrement n and loop further , while n ! = 0",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x , y and z",
      "code": "cin >> x >> y >> z ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "add x to sum [ 0 ]",
      "code": "sum [ 0 ] += x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "add y to sum [ 1 ]",
      "code": "sum [ 1 ] += y ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "add z to sum [ 2 ]",
      "code": "sum [ 2 ] += z ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if sum [ 0 ] , sum [ 1 ] and sum [ 2 ] are all false",
      "code": "if ( ! sum [ 0 ] && ! sum [ 1 ] && ! sum [ 2 ] )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , x , y [ 3 ] , y [ 3 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "sum [ 0 ] = sum + x ;"
      ],
      "err_line": 5,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "if ( n -- )"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        3,
        2
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "if ( n -- )",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        3,
        2,
        4
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "if ( n -- )",
        "n = getchar ( ) ;",
        "cin >> x , y >> z ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        3,
        2,
        6
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "if ( n -- )",
        "n = getchar ( ) ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        3,
        4
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "if ( n -- )",
        "cin >> x , y >> z ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        3,
        4,
        6
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "if ( n -- )",
        "cin >> x , y >> z ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        3,
        6
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "if ( n -- )",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        2,
        4
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "n = getchar ( ) ;",
        "cin >> x , y >> z ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        2,
        4,
        6
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "n = getchar ( ) ;",
        "cin >> x , y >> z ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        2,
        6
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "n = getchar ( ) ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "cin >> x , y >> z ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        4,
        6
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "cin >> x , y >> z ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int n , x , y , sum , sum [ 3 ] ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int sum [3]’"
    },
    {
      "mod_line": [
        3,
        2,
        4,
        0
      ],
      "mod_code": [
        "if ( n -- )",
        "n = getchar ( ) ;",
        "cin >> x , y >> z ;",
        "int n , x , y [ 3 ] , y [ 3 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        3,
        2,
        4,
        6
      ],
      "mod_code": [
        "if ( n -- )",
        "n = getchar ( ) ;",
        "cin >> x , y >> z ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2,
        0
      ],
      "mod_code": [
        "if ( n -- )",
        "n = getchar ( ) ;",
        "int n , x , y [ 3 ] , y [ 3 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        3,
        2,
        0,
        6
      ],
      "mod_code": [
        "if ( n -- )",
        "n = getchar ( ) ;",
        "int n , x , y [ 3 ] , y [ 3 ] ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "if ( n -- )",
        "n = getchar ( ) ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        0
      ],
      "mod_code": [
        "if ( n -- )",
        "cin >> x , y >> z ;",
        "int n , x , y [ 3 ] , y [ 3 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        3,
        4,
        0,
        6
      ],
      "mod_code": [
        "if ( n -- )",
        "cin >> x , y >> z ;",
        "int n , x , y [ 3 ] , y [ 3 ] ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "if ( n -- )",
        "cin >> x , y >> z ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "if ( n -- )",
        "int n , x , y [ 3 ] , y [ 3 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        3,
        0,
        6
      ],
      "mod_code": [
        "if ( n -- )",
        "int n , x , y [ 3 ] , y [ 3 ] ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "if ( n -- )",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> x , y >> z ;",
        "int n , x , y [ 3 ] , y [ 3 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        2,
        4,
        0,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> x , y >> z ;",
        "int n , x , y [ 3 ] , y [ 3 ] ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        2,
        4,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> x , y >> z ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int n , x , y [ 3 ] , y [ 3 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        2,
        0,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int n , x , y [ 3 ] , y [ 3 ] ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "cin >> x , y >> z ;",
        "int n , x , y [ 3 ] , y [ 3 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        4,
        0,
        6
      ],
      "mod_code": [
        "cin >> x , y >> z ;",
        "int n , x , y [ 3 ] , y [ 3 ] ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "cin >> x , y >> z ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int n , x , y [ 3 ] , y [ 3 ] ;",
        "sum [ 1 ] = sum + y ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int y [3]’"
    }
  ]
}