{
  "meta": {
    "index": 968,
    "hitid": "3HUR21WDDUJA5Q1A2OFSSY4X60TYX1",
    "workerid": "A1APYLD4DUK33J",
    "probid": "778A",
    "subid": "49029808"
  },
  "lines": [
    {
      "line": 0,
      "text": "create character array pal with size 200100",
      "code": "char pal [ 200100 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create character array busca with size 200100",
      "code": "char busca [ 200100 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer array seq with size 200100",
      "code": "int seq [ 200100 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integers n , m",
      "code": "int n , m ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create boolean array deleta with size 200100",
      "code": "bool deleta [ 200100 ] ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare solve with integer qtd as argument , returning boolean",
      "code": "bool solve ( int qtd )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "create integer i",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n inclusive , set deleta [ i ] to 0",
      "code": "for ( i = 1 ; i <= n ; i ++ ) { deleta [ i ] = 0 ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to qtd inclusive , set deleta [ seq [ i ] ] to 1",
      "code": "for ( i = 1 ; i <= qtd ; i ++ ) { deleta [ seq [ i ] ] = 1 ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create integer j with j = 1",
      "code": "int j = 1 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if not deleta [ i ] and pal [ i ] is busca [ j ]",
      "code": "if ( ! deleta [ i ] && pal [ i ] == busca [ j ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if j is m + 1 , return true from function",
      "code": "if ( j == m + 1 ) return true ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "return false from function",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 19,
      "text": "read address of pal [ 1 ]",
      "code": "cin >> & pal [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "read address of busca [ 1 ]",
      "code": "cin >> & busca [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "set n to integer casted string length of address of pal [ 1 ]",
      "code": "n = ( int ) strlen ( & pal [ 1 ] ) ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set m to integer casted string length of address of busca [ 1 ]",
      "code": "m = ( int ) strlen ( & busca [ 1 ] ) ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 1 to n inclusive , read seq [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> seq [ i ] ; }",
      "indent": 1
    },
    {
      "line": 24,
      "text": "create integers l , r , meio",
      "code": "int l , r , meio ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "create integer res with res = - 1",
      "code": "int res = - 1 ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "set l to 0",
      "code": "l = 0 ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "set r to n",
      "code": "r = n ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "while l is less than or equal to r",
      "code": "while ( l <= r )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "set meio to ( l + r ) / 2",
      "code": "meio = ( l + r ) / 2 ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "if result of run solve with meio as argument is true",
      "code": "if ( solve ( meio ) )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "set res to meio",
      "code": "res = meio ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "set l to meio + 1",
      "code": "l = meio + 1 ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 34,
      "text": "set r to meio - 1",
      "code": "r = meio - 1 ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "print res print newline",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘char (*)[200100]’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char a [ 200100 ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘pal’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s [ 200100 ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘busca’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool s [ 200100 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘deleta’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool solve ( int qtd ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "j = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "pal & pal [ 1 ] ) ;"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘char [200100]’ and ‘char’ to binary ‘operator&’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "busca & busca [ 1 ] ;"
      ],
      "err_line": 20,
      "err_msg": "invalid operands of types ‘char [200100]’ and ‘char’ to binary ‘operator&’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal ( pal [ 1 ] ) ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘char (*)[200100]’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "m = strlen ( & busca [ 1 ] . size ( ) ) ;"
      ],
      "err_line": 22,
      "err_msg": "request for member ‘size’ in ‘busca[1]’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "l , r , meio ;"
      ],
      "err_line": 24,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "res = - 1 ;"
      ],
      "err_line": 25,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "int l = 0 ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "int r = n ;"
      ],
      "err_line": 27,
      "err_msg": "redeclaration of ‘int r’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "meio += r ) / 2 ;"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 34,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        28
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "while ( l >= r )"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘char (*)[200100]’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        21,
        28,
        31
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "while ( l >= r )",
        "int res = meio ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘char (*)[200100]’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        21,
        28,
        31,
        26
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "while ( l >= r )",
        "int res = meio ;",
        "int l = 0 ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘char (*)[200100]’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        21,
        28,
        31,
        2
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "while ( l >= r )",
        "int res = meio ;",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        21,
        28,
        31,
        3
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "while ( l >= r )",
        "int res = meio ;",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        21,
        28,
        26
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "while ( l >= r )",
        "int l = 0 ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘char (*)[200100]’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        21,
        28,
        26,
        2
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "while ( l >= r )",
        "int l = 0 ;",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        21,
        28,
        26,
        3
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "while ( l >= r )",
        "int l = 0 ;",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        21,
        28,
        2
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "while ( l >= r )",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        21,
        28,
        2,
        3
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "while ( l >= r )",
        "seq [ 200100 ] ;",
        "n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        21,
        28,
        3
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "while ( l >= r )",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        21,
        31
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "int res = meio ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘char (*)[200100]’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        21,
        31,
        26
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "int res = meio ;",
        "int l = 0 ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘char (*)[200100]’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        21,
        31,
        26,
        2
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "int res = meio ;",
        "int l = 0 ;",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        21,
        31,
        26,
        3
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "int res = meio ;",
        "int l = 0 ;",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        21,
        31,
        2
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "int res = meio ;",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        21,
        31,
        2,
        3
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "int res = meio ;",
        "seq [ 200100 ] ;",
        "n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        21,
        31,
        3
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "int res = meio ;",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        21,
        26
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "int l = 0 ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘char (*)[200100]’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        21,
        26,
        2
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "int l = 0 ;",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        21,
        26,
        2,
        3
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "int l = 0 ;",
        "seq [ 200100 ] ;",
        "n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        21,
        26,
        3
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "int l = 0 ;",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        21,
        2
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        21,
        2,
        3
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "seq [ 200100 ] ;",
        "n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        21,
        3
      ],
      "mod_code": [
        "n = strlen ( & pal ) & pal . size ( ) ;",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        28,
        31,
        26
      ],
      "mod_code": [
        "while ( l >= r )",
        "int res = meio ;",
        "int l = 0 ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        28,
        31,
        26,
        2
      ],
      "mod_code": [
        "while ( l >= r )",
        "int res = meio ;",
        "int l = 0 ;",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        28,
        31,
        26,
        3
      ],
      "mod_code": [
        "while ( l >= r )",
        "int res = meio ;",
        "int l = 0 ;",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        28,
        31,
        2
      ],
      "mod_code": [
        "while ( l >= r )",
        "int res = meio ;",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        28,
        31,
        2,
        3
      ],
      "mod_code": [
        "while ( l >= r )",
        "int res = meio ;",
        "seq [ 200100 ] ;",
        "n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        28,
        31,
        3
      ],
      "mod_code": [
        "while ( l >= r )",
        "int res = meio ;",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        28,
        26
      ],
      "mod_code": [
        "while ( l >= r )",
        "int l = 0 ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        28,
        26,
        2
      ],
      "mod_code": [
        "while ( l >= r )",
        "int l = 0 ;",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        28,
        26,
        2,
        3
      ],
      "mod_code": [
        "while ( l >= r )",
        "int l = 0 ;",
        "seq [ 200100 ] ;",
        "n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        28,
        26,
        3
      ],
      "mod_code": [
        "while ( l >= r )",
        "int l = 0 ;",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        28,
        2
      ],
      "mod_code": [
        "while ( l >= r )",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        28,
        2,
        3
      ],
      "mod_code": [
        "while ( l >= r )",
        "seq [ 200100 ] ;",
        "n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        28,
        3
      ],
      "mod_code": [
        "while ( l >= r )",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        31,
        26
      ],
      "mod_code": [
        "int res = meio ;",
        "int l = 0 ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int l’"
    },
    {
      "mod_line": [
        31,
        26,
        2
      ],
      "mod_code": [
        "int res = meio ;",
        "int l = 0 ;",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        31,
        26,
        2,
        3
      ],
      "mod_code": [
        "int res = meio ;",
        "int l = 0 ;",
        "seq [ 200100 ] ;",
        "n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        31,
        26,
        3
      ],
      "mod_code": [
        "int res = meio ;",
        "int l = 0 ;",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        31,
        2
      ],
      "mod_code": [
        "int res = meio ;",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        31,
        2,
        3
      ],
      "mod_code": [
        "int res = meio ;",
        "seq [ 200100 ] ;",
        "n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        31,
        3
      ],
      "mod_code": [
        "int res = meio ;",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        26,
        2
      ],
      "mod_code": [
        "int l = 0 ;",
        "seq [ 200100 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        26,
        2,
        3
      ],
      "mod_code": [
        "int l = 0 ;",
        "seq [ 200100 ] ;",
        "n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    },
    {
      "mod_line": [
        26,
        3
      ],
      "mod_code": [
        "int l = 0 ;",
        "n , m ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "seq [ 200100 ] ;",
        "n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘seq’ does not name a type"
    }
  ]
}