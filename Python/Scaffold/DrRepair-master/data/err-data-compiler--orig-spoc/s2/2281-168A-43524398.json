{
  "meta": {
    "index": 2281,
    "hitid": "3AJA9FLWSCS7F4VKYCN303A2DZTFIQ",
    "workerid": "A1APYLD4DUK33J",
    "probid": "168A",
    "subid": "43524398"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , x , y",
      "code": "int n , x , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer p with p = 1",
      "code": "int p = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read y",
      "code": "cin >> y ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set p to n * y",
      "code": "p = n * y ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if p % 100 is not 0",
      "code": "if ( p % 100 != 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set p to p / 100 + 1",
      "code": "p = p / 100 + 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set p to p / 100",
      "code": "p = p / 100 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if p is less than or equal to x",
      "code": "if ( p <= x )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print 0 print newline",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print p - x print newline",
      "code": "cout << p - x << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "n , x , y ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "p = 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n , x , y ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        13
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n , x , y ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        13,
        9
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n , x , y ;",
        "n",
        "n"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        13,
        3
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n , x , y ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        13,
        11
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n , x , y ;",
        "n",
        "if ( p >= x )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        9
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n , x , y ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        9,
        3
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n , x , y ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        9,
        11
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n , x , y ;",
        "n",
        "if ( p >= x )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        3
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n , x , y ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        3,
        11
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n , x , y ;",
        "n = getchar ( ) ;",
        "if ( p >= x )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        11
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n , x , y ;",
        "if ( p >= x )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13,
        9
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n",
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13,
        9,
        3
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13,
        9,
        11
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n",
        "n",
        "if ( p >= x )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13,
        3
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13,
        3,
        11
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n",
        "n = getchar ( ) ;",
        "if ( p >= x )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13,
        11
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n",
        "if ( p >= x )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        9,
        3
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        9,
        3,
        11
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n",
        "n = getchar ( ) ;",
        "if ( p >= x )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        9,
        11
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n",
        "if ( p >= x )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "n , x , y ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        9
      ],
      "mod_code": [
        "n , x , y ;",
        "n",
        "n"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        9,
        3
      ],
      "mod_code": [
        "n , x , y ;",
        "n",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        9,
        11
      ],
      "mod_code": [
        "n , x , y ;",
        "n",
        "n",
        "if ( p >= x )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        3
      ],
      "mod_code": [
        "n , x , y ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        3,
        11
      ],
      "mod_code": [
        "n , x , y ;",
        "n",
        "n = getchar ( ) ;",
        "if ( p >= x )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13,
        11
      ],
      "mod_code": [
        "n , x , y ;",
        "n",
        "if ( p >= x )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "n , x , y ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        3
      ],
      "mod_code": [
        "n , x , y ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        3,
        11
      ],
      "mod_code": [
        "n , x , y ;",
        "n",
        "n = getchar ( ) ;",
        "if ( p >= x )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9,
        11
      ],
      "mod_code": [
        "n , x , y ;",
        "n",
        "if ( p >= x )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "n , x , y ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        11
      ],
      "mod_code": [
        "n , x , y ;",
        "n = getchar ( ) ;",
        "if ( p >= x )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "n , x , y ;",
        "if ( p >= x )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        9,
        3
      ],
      "mod_code": [
        "n",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        9,
        3,
        11
      ],
      "mod_code": [
        "n",
        "n",
        "n = getchar ( ) ;",
        "if ( p >= x )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        9,
        11
      ],
      "mod_code": [
        "n",
        "n",
        "if ( p >= x )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        3,
        11
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;",
        "if ( p >= x )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "n",
        "if ( p >= x )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        3,
        11
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;",
        "if ( p >= x )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "n",
        "if ( p >= x )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}