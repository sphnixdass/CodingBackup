{
  "meta": {
    "index": 2706,
    "hitid": "3XUSYT70ITVZAP083G376Z7LE53D0E",
    "workerid": "A36Q5TAZ7L6HOS",
    "probid": "181A",
    "subid": "46889856"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare void and empty function Fast_Read_Out",
      "code": "void Fast_Read_Out ( ) { }",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in void function Random",
      "code": "void Random ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare seed as unsigned integer",
      "code": "unsigned int seed ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "asm ( \" rdtsc \" : \" = A \" ( seed ) )",
      "code": "asm ( \" rdtsc \" : \" =A \" ( seed ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "srand ( seed )",
      "code": "srand ( seed ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "in function Time returning an unsigned integer",
      "code": "unsigned int Time ( )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declared unsigned integer time set to clock ( ) / 1000 . 00",
      "code": "unsigned int time = clock ( ) / 1000.00 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return time",
      "code": "return time ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "declare constant integer inf set to int ( 1e9 ) + 123",
      "code": "const int inf = int ( 1e9 ) + 123 ;",
      "indent": 0
    },
    {
      "line": 11,
      "text": "declare character array a of size 101 to 101",
      "code": "char a [ 101 ] [ 101 ] ;",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "call Random ( )",
      "code": "Random ( ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "call Fast_Read_Out ( )",
      "code": "Fast_Read_Out ( ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "n , m = integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for 1 to m inclusive read a [ i ] [ j ]",
      "code": "for ( int j = 1 ; j <= m ; j ++ ) cin >> a [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "for 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "assign character cur to a [ i ] [ j ]",
      "code": "char cur = a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "if cur is equal to ' * ' continue",
      "code": "if ( cur == ' * ' ) continue ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "assign integer pos to 0",
      "code": "int pos = 0 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "for 1 to m inclusive",
      "code": "for ( int j1 = 1 ; j1 <= m ; j1 ++ )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "if a [ i ] [ j1 ] = = ' * ' & & j ! = j1 set pos to j1",
      "code": "if ( a [ i ] [ j1 ] == ' * ' && j != j1 ) pos = j1 ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "if pos is equal to 0 continue",
      "code": "if ( pos == 0 ) continue ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "for 1 to n inclusive",
      "code": "for ( int i1 = 1 ; i1 <= n ; i1 ++ )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "if a [ i1 ] [ j ] = = ' * ' & & i ! = i1 print i and j",
      "code": "if ( a [ i1 ] [ j ] == ' * ' && i != i1 ) cout << i << ' ' << j << endl ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "unsigned int Time ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 21,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘char [101][double(double) throw ()]’ for array subscript"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 28,
      "err_msg": "‘i1’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "unsigned unsigned unsigned int seed = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" = \" ( seed ) ) ;"
      ],
      "err_line": 3,
      "err_msg": "impossible constraint in ‘asm’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( srand ( seed ) )"
      ],
      "err_line": 4,
      "err_msg": "could not convert ‘srand(seed)’ from ‘void’ to ‘bool’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( ) / 5.0 ;"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "char a [ 101 ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "Random ( ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "Fast_Read_Out ( ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "char a [ i ] [ j ] = cur ;"
      ],
      "err_line": 21,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "pos = 0 ;"
      ],
      "err_line": 23,
      "err_msg": "‘pos’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( int 1 = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        6
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        7
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        20
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        21
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        6,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        20
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        21
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        20
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        20,
        21
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        20,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        20,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        21
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        21,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        21,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        24,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        3,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        7
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        20
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        21
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        7,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        20
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        20,
        21
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        20,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        20,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        21
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        21,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        21,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        24,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        6,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        7,
        20
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        7,
        20,
        21
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        7,
        20,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        7,
        20,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        7,
        21
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        7,
        21,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        7,
        21,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        7,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        7,
        24,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        7,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        20
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        20,
        21
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        20,
        21,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        20,
        21,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        20,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        20,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        21,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        21,
        24,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        21,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        24
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        24,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        2,
        27
      ],
      "mod_code": [
        "unsigned unsigned int seed = 0 ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        20
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        21
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        24
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        20
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        20,
        21
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        20,
        24
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        20,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        21
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        21,
        24
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        21,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        24
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        24,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        6,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        7,
        20
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        7,
        20,
        21
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        7,
        20,
        24
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        7,
        20,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        7,
        21
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        7,
        21,
        24
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        7,
        21,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        7,
        24
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        7,
        24,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        7,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        20,
        21
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        20,
        21,
        24
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        20,
        21,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        20,
        24
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        20,
        24,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        20,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        21,
        24
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        21,
        24,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        21,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        24
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        24,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        3,
        27
      ],
      "mod_code": [
        "asm ( \" rdtsc \" : \" A \" ( seed ) ) ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "output operand constraint lacks ‘=’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        20
      ],
      "mod_code": [
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        20,
        21
      ],
      "mod_code": [
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        20,
        24
      ],
      "mod_code": [
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        20,
        27
      ],
      "mod_code": [
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        21
      ],
      "mod_code": [
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        21,
        24
      ],
      "mod_code": [
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        21,
        27
      ],
      "mod_code": [
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        24
      ],
      "mod_code": [
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        24,
        27
      ],
      "mod_code": [
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        27
      ],
      "mod_code": [
        "unsigned int Time ;",
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        20,
        21
      ],
      "mod_code": [
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        20,
        21,
        24
      ],
      "mod_code": [
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        20,
        21,
        27
      ],
      "mod_code": [
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        20,
        24
      ],
      "mod_code": [
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        20,
        24,
        27
      ],
      "mod_code": [
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        20,
        27
      ],
      "mod_code": [
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21
      ],
      "mod_code": [
        "unsigned int Time ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        24
      ],
      "mod_code": [
        "unsigned int Time ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        24,
        27
      ],
      "mod_code": [
        "unsigned int Time ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        21,
        27
      ],
      "mod_code": [
        "unsigned int Time ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        24
      ],
      "mod_code": [
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        24,
        27
      ],
      "mod_code": [
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        27
      ],
      "mod_code": [
        "unsigned int Time ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        20
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        20,
        21
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        20,
        21,
        24
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        20,
        21,
        27
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        20,
        24
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        20,
        24,
        27
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        20,
        27
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        21,
        24
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        21,
        24,
        27
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        21,
        27
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        24
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        24,
        27
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        27
      ],
      "mod_code": [
        "unsigned unsigned time = clock ( clock ) / 0.5 ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;"
      ],
      "err_line": 21,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        21,
        24
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        21,
        24,
        27
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        21,
        27
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        27
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        27
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        24
      ],
      "mod_code": [
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        24,
        27
      ],
      "mod_code": [
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        27
      ],
      "mod_code": [
        "a [ i ] [ j ] = cur ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘cur’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        27
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= m ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘char [101][double(double) throw ()]’ for array subscript"
    }
  ]
}