{
  "meta": {
    "index": 2762,
    "hitid": "3126F2F5F8X7QCISGWTHRIQENCGPE1",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "900A",
    "subid": "40871632"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "a , b = int",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "c , d = int",
      "code": "int c , d ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop while reading n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set a and b to 0",
      "code": "a = b = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read c then d",
      "code": "cin >> c >> d ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if c > 0",
      "code": "if ( c > 0 )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment a",
      "code": "a ++ ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment b",
      "code": "b ++ ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if a < = 1 or b < = 1",
      "code": "if ( a <= 1 || b <= 1 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print \" Yes \"",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print \" No \"",
      "code": "cout << \" No \" << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int a , a ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n , d ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7,
        10
      ],
      "mod_code": [
        "bool n ;",
        "cin >> n >> d ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        8
      ],
      "mod_code": [
        "bool n ;",
        "cin >> n >> d ;",
        "n",
        "if ( c )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        14
      ],
      "mod_code": [
        "bool n ;",
        "cin >> n >> d ;",
        "n",
        "cout << \" Yes \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7,
        10,
        15
      ],
      "mod_code": [
        "bool n ;",
        "cin >> n >> d ;",
        "n",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        15
      ],
      "mod_code": [
        "bool n ;",
        "cin >> n >> d ;",
        "if ( c )",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7,
        14,
        15
      ],
      "mod_code": [
        "bool n ;",
        "cin >> n >> d ;",
        "cout << \" Yes \" ;",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7,
        15
      ],
      "mod_code": [
        "bool n ;",
        "cin >> n >> d ;",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "bool n ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        8
      ],
      "mod_code": [
        "bool n ;",
        "n",
        "if ( c )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        8,
        14
      ],
      "mod_code": [
        "bool n ;",
        "n",
        "if ( c )",
        "cout << \" Yes \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        8,
        15
      ],
      "mod_code": [
        "bool n ;",
        "n",
        "if ( c )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        14
      ],
      "mod_code": [
        "bool n ;",
        "n",
        "cout << \" Yes \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        14,
        15
      ],
      "mod_code": [
        "bool n ;",
        "n",
        "cout << \" Yes \" ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        10,
        15
      ],
      "mod_code": [
        "bool n ;",
        "n",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        14,
        15
      ],
      "mod_code": [
        "bool n ;",
        "if ( c )",
        "cout << \" Yes \" ;",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        8,
        15
      ],
      "mod_code": [
        "bool n ;",
        "if ( c )",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        14,
        15
      ],
      "mod_code": [
        "bool n ;",
        "cout << \" Yes \" ;",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "bool n ;",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "cin >> n >> d ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        10,
        8
      ],
      "mod_code": [
        "cin >> n >> d ;",
        "n",
        "if ( c )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        10,
        8,
        14
      ],
      "mod_code": [
        "cin >> n >> d ;",
        "n",
        "if ( c )",
        "cout << \" Yes \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        10,
        8,
        15
      ],
      "mod_code": [
        "cin >> n >> d ;",
        "n",
        "if ( c )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        10,
        14
      ],
      "mod_code": [
        "cin >> n >> d ;",
        "n",
        "cout << \" Yes \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        10,
        14,
        15
      ],
      "mod_code": [
        "cin >> n >> d ;",
        "n",
        "cout << \" Yes \" ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        10,
        15
      ],
      "mod_code": [
        "cin >> n >> d ;",
        "n",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        15
      ],
      "mod_code": [
        "cin >> n >> d ;",
        "if ( c )",
        "cout << \" Yes \" ;",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        15
      ],
      "mod_code": [
        "cin >> n >> d ;",
        "if ( c )",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        15
      ],
      "mod_code": [
        "cin >> n >> d ;",
        "cout << \" Yes \" ;",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "cin >> n >> d ;",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "n",
        "if ( c )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        8,
        14
      ],
      "mod_code": [
        "n",
        "if ( c )",
        "cout << \" Yes \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        8,
        14,
        15
      ],
      "mod_code": [
        "n",
        "if ( c )",
        "cout << \" Yes \" ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        8,
        15
      ],
      "mod_code": [
        "n",
        "if ( c )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "n",
        "cout << \" Yes \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        14,
        15
      ],
      "mod_code": [
        "n",
        "cout << \" Yes \" ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        14,
        15
      ],
      "mod_code": [
        "if ( c )",
        "cout << \" Yes \" ;",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "if ( c )",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "cout << \" Yes \" ;",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}