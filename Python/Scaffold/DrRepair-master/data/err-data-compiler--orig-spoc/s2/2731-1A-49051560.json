{
  "meta": {
    "index": 2731,
    "hitid": "37G6BXQPLQFSQOJ7G986RNGOS8UQEL",
    "workerid": "A1AYVATMT88U1W",
    "probid": "1A",
    "subid": "49051560"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m , a be long integers",
      "code": "long long n , m , a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , m , a",
      "code": "cin >> n >> m >> a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n modulo a is equal to 0",
      "code": "if ( n % a == 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "the value of n = n / a",
      "code": "n /= a ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "the value of n = n / a + 1",
      "code": "n = n / a + 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if m modulo a is equal to 0",
      "code": "if ( m % a == 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "the value of m = m / a",
      "code": "m /= a ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "the value of m = m / a + 1",
      "code": "m = m / a + 1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print n * m and newline",
      "code": "cout << n * m << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        2,
        6,
        9
      ],
      "mod_code": [
        "cin >> n >> m , a ;",
        "n -= a + 1 ;",
        "else do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        2,
        6,
        9,
        8
      ],
      "mod_code": [
        "cin >> n >> m , a ;",
        "n -= a + 1 ;",
        "else do",
        "m -= a ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        2,
        6,
        9,
        5
      ],
      "mod_code": [
        "cin >> n >> m , a ;",
        "n -= a + 1 ;",
        "else do",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        2,
        6,
        8,
        5
      ],
      "mod_code": [
        "cin >> n >> m , a ;",
        "n -= a + 1 ;",
        "m -= a ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "cin >> n >> m , a ;",
        "n -= a + 1 ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "cin >> n >> m , a ;",
        "else do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        2,
        9,
        8
      ],
      "mod_code": [
        "cin >> n >> m , a ;",
        "else do",
        "m -= a ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        2,
        9,
        8,
        5
      ],
      "mod_code": [
        "cin >> n >> m , a ;",
        "else do",
        "m -= a ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        2,
        9,
        5
      ],
      "mod_code": [
        "cin >> n >> m , a ;",
        "else do",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        2,
        8,
        5
      ],
      "mod_code": [
        "cin >> n >> m , a ;",
        "m -= a ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cin >> n >> m , a ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "n -= a + 1 ;",
        "else do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        8
      ],
      "mod_code": [
        "n -= a + 1 ;",
        "else do",
        "m -= a ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        6,
        9,
        8,
        5
      ],
      "mod_code": [
        "n -= a + 1 ;",
        "else do",
        "m -= a ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        6,
        9,
        5
      ],
      "mod_code": [
        "n -= a + 1 ;",
        "else do",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "n -= a + 1 ;",
        "m -= a ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "n -= a + 1 ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "else do",
        "m -= a ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        8,
        5
      ],
      "mod_code": [
        "else do",
        "m -= a ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "else do",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "m -= a ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘while’ before ‘(’ token"
    }
  ]
}