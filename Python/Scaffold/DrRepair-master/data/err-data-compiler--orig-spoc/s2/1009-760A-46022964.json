{
  "meta": {
    "index": 1009,
    "hitid": "3D42WVSDH8PT54AP2U96MR4Q3I0FY5",
    "workerid": "A1AYVATMT88U1W",
    "probid": "760A",
    "subid": "46022964"
  },
  "lines": [
    {
      "line": 0,
      "text": "month = array of integers of length 13",
      "code": "int month [ 13 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let set_month be a void function",
      "code": "void set_month ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "month [ 1 ] is equal to 31",
      "code": "month [ 1 ] = 31 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "month [ 2 ] is equal to 28",
      "code": "month [ 2 ] = 28 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "month [ 3 ] is equal to 31",
      "code": "month [ 3 ] = 31 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "month [ 4 ] is equal to 30",
      "code": "month [ 4 ] = 30 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "month [ 5 ] is equal to 31",
      "code": "month [ 5 ] = 31 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "month [ 6 ] is equal to 30",
      "code": "month [ 6 ] = 30 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "month [ 7 ] is equal to 31",
      "code": "month [ 7 ] = 31 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "month [ 8 ] is equal to 31",
      "code": "month [ 8 ] = 31 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "month [ 9 ] is equal to 30",
      "code": "month [ 9 ] = 30 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "month [ 10 ] is equal to 31",
      "code": "month [ 10 ] = 31 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "month [ 11 ] = 30",
      "code": "month [ 11 ] = 30 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "month [ 12 ] = 31",
      "code": "month [ 12 ] = 31 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 15,
      "text": "let m , d , ans be integers",
      "code": "int m , d , ans ;",
      "indent": 0
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 17,
      "text": "call the function set_month",
      "code": "set_month ( ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "read m , d",
      "code": "cin >> m >> d ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "ans is equal to 1",
      "code": "ans = 1 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 2 to month [ m ] inclusive",
      "code": "for ( int i = 2 ; i <= month [ m ] ; i ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "increment d by 1",
      "code": "d ++ ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if d is greater than 7",
      "code": "if ( d > 7 )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "d is equal to 1",
      "code": "d = 1 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "increment ans by 1",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "month [ 13 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘month’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void set_month ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "const int month [ 1 ] = { } ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of read-only location ‘month[2]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "const int month [ 3 ] = { } ;"
      ],
      "err_line": 5,
      "err_msg": "assignment of read-only location ‘month[4]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int month [ 4 ] = 30 ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "const int month [ 5 ] = { } ;"
      ],
      "err_line": 7,
      "err_msg": "assignment of read-only location ‘month[6]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int month [ 6 ] = 30 ;"
      ],
      "err_line": 7,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "const int month [ 7 ] = { } ;"
      ],
      "err_line": 9,
      "err_msg": "assignment of read-only location ‘month[8]’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "const int month [ 8 ] = { } ;"
      ],
      "err_line": 10,
      "err_msg": "assignment of read-only location ‘month[9]’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "const int month [ 9 ] = { 30 } ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only location ‘month[10]’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "void set_month ( )"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "ans = l ;"
      ],
      "err_line": 19,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "d = l ;"
      ],
      "err_line": 23,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "void set_month ( )"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        17,
        18
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "void set_month ( )",
        "cin >> m , d ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        22
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "void set_month ( )",
        "cin >> m , d ;",
        "if ( d >= 7 )"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        23
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "void set_month ( )",
        "cin >> m , d ;",
        "d = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        17,
        18,
        19
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "void set_month ( )",
        "cin >> m , d ;",
        "ans = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        17,
        22
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "void set_month ( )",
        "if ( d >= 7 )"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        17,
        22,
        23
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "void set_month ( )",
        "if ( d >= 7 )",
        "d = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        17,
        22,
        19
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "void set_month ( )",
        "if ( d >= 7 )",
        "ans = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        17,
        23
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "void set_month ( )",
        "d = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        17,
        23,
        19
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "void set_month ( )",
        "d = l ;",
        "ans = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        17,
        19
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "void set_month ( )",
        "ans = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "cin >> m , d ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        18,
        22
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "cin >> m , d ;",
        "if ( d >= 7 )"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        18,
        22,
        23
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "cin >> m , d ;",
        "if ( d >= 7 )",
        "d = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        18,
        22,
        19
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "cin >> m , d ;",
        "if ( d >= 7 )",
        "ans = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        18,
        23
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "cin >> m , d ;",
        "d = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        18,
        23,
        19
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "cin >> m , d ;",
        "d = l ;",
        "ans = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        18,
        19
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "cin >> m , d ;",
        "ans = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        22
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "if ( d >= 7 )"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        22,
        23
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "if ( d >= 7 )",
        "d = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        22,
        23,
        19
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "if ( d >= 7 )",
        "d = l ;",
        "ans = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        22,
        19
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "if ( d >= 7 )",
        "ans = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        23
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "d = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        23,
        19
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "d = l ;",
        "ans = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "const int month [ 11 ] = { } ;",
        "ans = l ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of read-only location ‘month[12]’"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "void set_month ( )",
        "cin >> m , d ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        18,
        22
      ],
      "mod_code": [
        "void set_month ( )",
        "cin >> m , d ;",
        "if ( d >= 7 )"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        18,
        22,
        23
      ],
      "mod_code": [
        "void set_month ( )",
        "cin >> m , d ;",
        "if ( d >= 7 )",
        "d = l ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        18,
        22,
        19
      ],
      "mod_code": [
        "void set_month ( )",
        "cin >> m , d ;",
        "if ( d >= 7 )",
        "ans = l ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        18,
        23
      ],
      "mod_code": [
        "void set_month ( )",
        "cin >> m , d ;",
        "d = l ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        18,
        23,
        19
      ],
      "mod_code": [
        "void set_month ( )",
        "cin >> m , d ;",
        "d = l ;",
        "ans = l ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        18,
        19
      ],
      "mod_code": [
        "void set_month ( )",
        "cin >> m , d ;",
        "ans = l ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        22
      ],
      "mod_code": [
        "void set_month ( )",
        "if ( d >= 7 )"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        22,
        23
      ],
      "mod_code": [
        "void set_month ( )",
        "if ( d >= 7 )",
        "d = l ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        22,
        23,
        19
      ],
      "mod_code": [
        "void set_month ( )",
        "if ( d >= 7 )",
        "d = l ;",
        "ans = l ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        22,
        19
      ],
      "mod_code": [
        "void set_month ( )",
        "if ( d >= 7 )",
        "ans = l ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        23
      ],
      "mod_code": [
        "void set_month ( )",
        "d = l ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        23,
        19
      ],
      "mod_code": [
        "void set_month ( )",
        "d = l ;",
        "ans = l ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "void set_month ( )",
        "ans = l ;"
      ],
      "err_line": 18,
      "err_msg": "expected initializer before ‘cin’"
    },
    {
      "mod_line": [
        18,
        22,
        23
      ],
      "mod_code": [
        "cin >> m , d ;",
        "if ( d >= 7 )",
        "d = l ;"
      ],
      "err_line": 23,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        22,
        23,
        19
      ],
      "mod_code": [
        "cin >> m , d ;",
        "if ( d >= 7 )",
        "d = l ;",
        "ans = l ;"
      ],
      "err_line": 19,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        22,
        19
      ],
      "mod_code": [
        "cin >> m , d ;",
        "if ( d >= 7 )",
        "ans = l ;"
      ],
      "err_line": 19,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        23
      ],
      "mod_code": [
        "cin >> m , d ;",
        "d = l ;"
      ],
      "err_line": 23,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        23,
        19
      ],
      "mod_code": [
        "cin >> m , d ;",
        "d = l ;",
        "ans = l ;"
      ],
      "err_line": 19,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "cin >> m , d ;",
        "ans = l ;"
      ],
      "err_line": 19,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "if ( d >= 7 )",
        "d = l ;"
      ],
      "err_line": 23,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        23,
        19
      ],
      "mod_code": [
        "if ( d >= 7 )",
        "d = l ;",
        "ans = l ;"
      ],
      "err_line": 19,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        19
      ],
      "mod_code": [
        "if ( d >= 7 )",
        "ans = l ;"
      ],
      "err_line": 19,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        19
      ],
      "mod_code": [
        "d = l ;",
        "ans = l ;"
      ],
      "err_line": 19,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}