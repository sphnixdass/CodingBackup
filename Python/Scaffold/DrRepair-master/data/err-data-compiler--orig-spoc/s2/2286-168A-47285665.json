{
  "meta": {
    "index": 2286,
    "hitid": "3E9ZFLPWOYMOFQM5Y6TP6AA9H4PXIZ",
    "workerid": "A1APYLD4DUK33J",
    "probid": "168A",
    "subid": "47285665"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant long long mod with mod = 1e9 + 7",
      "code": "const long long mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create constant integer N with N = 1e5 + 5",
      "code": "const int N = 1e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare gcd with long longs a , b as arguments , returning long long",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "return result of run gcd with b , a % b as arguments if b is true , else a",
      "code": "return b ? gcd ( b , a % b ) : a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare pwr with long longs x , y as arguments , returning long long",
      "code": "long long pwr ( long long x , long long y ) ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "declare isprime with long long x as argument , returning boolean",
      "code": "bool isprime ( long long x ) ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "create integers n , x , y",
      "code": "int n , x , y ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read n read x read y",
      "code": "cin >> n >> x >> y ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integer ans with ans = ( ( n * y ) / 100 + boolean casted ( ( n * y ) % 100 )",
      "code": "int ans = ( ( n * y ) / 100 + bool ( ( n * y ) % 100 ) ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if x is greater than ans",
      "code": "if ( x > ans )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print 0 print newline",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print ans - x print newline",
      "code": "cout << ( ans - x ) << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "declare pwr with long longs x , y as arguments , returning long long",
      "code": "long long pwr ( long long x , long long y )",
      "indent": 0
    },
    {
      "line": 19,
      "text": "create long long ans with ans = 1",
      "code": "long long ans = 1 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set x to x % mod",
      "code": "x = x % mod ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "while y is greater than 0",
      "code": "while ( y > 0 )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if y bitwise and 1 , set ans to ( x * ans ) % mod",
      "code": "if ( y & 1 ) ans = ( x * ans ) % mod ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "set x to ( x * x ) % mod",
      "code": "x = ( x * x ) % mod ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set y to y / 2",
      "code": "y = y / 2 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "return ans from function",
      "code": "return ans ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 28,
      "text": "declare isprime with long long x as argument , returning boolean",
      "code": "bool isprime ( long long x )",
      "indent": 0
    },
    {
      "line": 29,
      "text": "if x is less than 2 , return false from function",
      "code": "if ( x < 2 ) return false ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if x is less than 4 , return true from function",
      "code": "if ( x < 4 ) return true ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "if x % 2 is 0 or x % 3 is 0 , return false from fucntion",
      "code": "if ( x % 2 == 0 || x % 3 == 0 ) return false ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "for i = 5 to i * i is less than or equal to x , increment i by 6",
      "code": "for ( long long i = 5 ; i * i <= x ; i += 6 )",
      "indent": 1
    },
    {
      "line": 33,
      "text": "if x % i is 0 or x % ( i + 2 ) is 0 , return false from function",
      "code": "if ( x % i == 0 || x % ( i + 2 ) == 0 ) return false ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "return true from function",
      "code": "return true ;",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "bool isprime ( long long x )"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long gcd ( long long a , long long b ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n , x , y ;"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "while ( cin >> n >> x >> y )"
      ],
      "err_line": 11,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "return ans )"
      ],
      "err_line": 26,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "for ( i = 5 ; i * i <= x ; i += 6 )"
      ],
      "err_line": 32,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        6,
        10
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        32
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "for ( i = 5 ; i * i <= x ; i += 6 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        28
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        6,
        10,
        18
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        6,
        32
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x )",
        "for ( i = 5 ; i * i <= x ; i += 6 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        6,
        32,
        28
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x )",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        6,
        32,
        18
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x )",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        6,
        28
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x )",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        6,
        28,
        18
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x )",
        "bool isprime ( long long x ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        6,
        18
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x )",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        10,
        32
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "for ( i = 5 ; i * i <= x ; i += 6 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        10,
        32,
        28
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        10,
        32,
        18
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        10,
        28
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        10,
        28,
        18
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "bool isprime ( long long x ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        10,
        18
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        32
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "for ( i = 5 ; i * i <= x ; i += 6 )"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        32,
        28
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        32,
        28,
        18
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "bool isprime ( long long x ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        32,
        18
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        28
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        28,
        18
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "bool isprime ( long long x ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "long long pwr ( long long x , long long y )",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘bool’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        10,
        32
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "for ( i = 5 ; i * i <= x ; i += 6 )"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        10,
        32,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        10,
        32,
        18
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        10,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        10,
        28,
        18
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "bool isprime ( long long x ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        10,
        18
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        32
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "for ( i = 5 ; i * i <= x ; i += 6 )"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        32,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        32,
        28,
        18
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "bool isprime ( long long x ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        32,
        18
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        28
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        28,
        18
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "bool isprime ( long long x ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        6,
        18
      ],
      "mod_code": [
        "bool isprime ( long long x )",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        10,
        32
      ],
      "mod_code": [
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "for ( i = 5 ; i * i <= x ; i += 6 )"
      ],
      "err_line": 32,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        32,
        28
      ],
      "mod_code": [
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        32,
        28,
        18
      ],
      "mod_code": [
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "bool isprime ( long long x ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        32,
        18
      ],
      "mod_code": [
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        28
      ],
      "mod_code": [
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        28,
        18
      ],
      "mod_code": [
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "bool isprime ( long long x ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        18
      ],
      "mod_code": [
        "int ans = ( ( n * y ) / 100 + ( ( n * y ) % 100 ) ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        28
      ],
      "mod_code": [
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "bool isprime ( long long x ) ;"
      ],
      "err_line": 29,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        28,
        18
      ],
      "mod_code": [
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "bool isprime ( long long x ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        18
      ],
      "mod_code": [
        "for ( i = 5 ; i * i <= x ; i += 6 )",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        18
      ],
      "mod_code": [
        "bool isprime ( long long x ) ;",
        "long long pwr ( long long x , long long y ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}