{
  "meta": {
    "index": 2079,
    "hitid": "3IVKZBIBJ03GNEPMYE5H7QS22CCSHX",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "59A",
    "subid": "48888008"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make integer upper = 0",
      "code": "int upper = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let int lower = 0",
      "code": "int lower = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "make int i",
      "code": "int i ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to s . size ( ) exclusive",
      "code": "for ( i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] is uppercase",
      "code": "if ( isupper ( s [ i ] ) )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment upper",
      "code": "++ upper ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment lower",
      "code": "++ lower ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if upper is greater than lower",
      "code": "if ( upper > lower )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to s . size ( ) exclusive , set s [ i ] to uppercase of s [ i ]",
      "code": "for ( i = 0 ; i < s . size ( ) ; i ++ ) s [ i ] = toupper ( s [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else do",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 0 to size of s exclusive , set s [ i ] to tolower ( s [ i ] )",
      "code": "for ( i = 0 ; i < s . size ( ) ; i ++ ) s [ i ] = tolower ( s [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int * upper = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int * lower = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 9,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "else do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        14,
        2
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "else do",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        14,
        2,
        3
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "else do",
        "s >> s ;",
        "int * upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        14,
        2,
        4
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "else do",
        "s >> s ;",
        "int * lower = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        14,
        3
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "else do",
        "int * upper = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        14,
        3,
        4
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "else do",
        "int * upper = 0 ;",
        "int * lower = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        7,
        14,
        4
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "else do",
        "int * lower = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        3
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "s >> s ;",
        "int * upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        3,
        4
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "s >> s ;",
        "int * upper = 0 ;",
        "int * lower = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        2,
        4
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "s >> s ;",
        "int * lower = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "int * upper = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( s [ i ] )",
        "int * lower = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "else do",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        2,
        7
      ],
      "mod_code": [
        "else do",
        "s >> s ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        2,
        7,
        3
      ],
      "mod_code": [
        "else do",
        "s >> s ;",
        "if ( ! s [ i ] )",
        "int * upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        2,
        7,
        4
      ],
      "mod_code": [
        "else do",
        "s >> s ;",
        "if ( ! s [ i ] )",
        "int * lower = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        2,
        3
      ],
      "mod_code": [
        "else do",
        "s >> s ;",
        "int * upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        2,
        3,
        4
      ],
      "mod_code": [
        "else do",
        "s >> s ;",
        "int * upper = 0 ;",
        "int * lower = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        2,
        4
      ],
      "mod_code": [
        "else do",
        "s >> s ;",
        "int * lower = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "else do",
        "if ( ! s [ i ] )"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        7,
        3
      ],
      "mod_code": [
        "else do",
        "if ( ! s [ i ] )",
        "int * upper = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        7,
        3,
        4
      ],
      "mod_code": [
        "else do",
        "if ( ! s [ i ] )",
        "int * upper = 0 ;",
        "int * lower = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        7,
        4
      ],
      "mod_code": [
        "else do",
        "if ( ! s [ i ] )",
        "int * lower = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "else do",
        "int * upper = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        3,
        4
      ],
      "mod_code": [
        "else do",
        "int * upper = 0 ;",
        "int * lower = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "else do",
        "int * lower = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        7,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! s [ i ] )",
        "int * upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        7,
        3,
        4
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! s [ i ] )",
        "int * upper = 0 ;",
        "int * lower = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        7,
        4
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! s [ i ] )",
        "int * lower = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "s >> s ;",
        "int * upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "s >> s ;",
        "int * upper = 0 ;",
        "int * lower = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "s >> s ;",
        "int * lower = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "if ( ! s [ i ] )",
        "int * upper = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( ! s [ i ] )",
        "int * lower = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    }
  ]
}