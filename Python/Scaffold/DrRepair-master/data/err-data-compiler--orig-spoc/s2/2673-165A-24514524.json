{
  "meta": {
    "index": 2673,
    "hitid": "39O6Z4JLX2RT1W65XDS8LZ03P6LXVW",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "165A",
    "subid": "24514524"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , y , l = integer . arr = integer array of size 200 and width 2 , c = integer = 0",
      "code": "int n , arr [ 200 ] [ 2 ] , c = 0 , y , l ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "low = 0 = boolean , upper = 0 = boolean , right = 0 = boolean , left = 0 = boolean ,",
      "code": "bool low = 0 , upper = 0 , right = 0 , left = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for y = 0 to n exclusive , read arr [ y ] [ 0 ] , arr [ y ] [ 1 ]",
      "code": "for ( y = 0 ; y < n ; y ++ ) cin >> arr [ y ] [ 0 ] >> arr [ y ] [ 1 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for y = 0 to n exclusive",
      "code": "for ( y = 0 ; y < n ; y ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for l = 0 to n exclusive",
      "code": "for ( l = 0 ; l < n ; l ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if arr [ l ] [ 0 ] > arr [ y ] [ 0 ] and arr [ l ] [ 1 ] is arr [ y ] [ 1 ]",
      "code": "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] == arr [ y ] [ 1 ] )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "right = 1",
      "code": "right = 1 ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else if arr [ l ] [ 0 ] < arr [ y ] [ 0 ] and arr [ l ] [ 1 ] is arr [ y ] [ 1 ]",
      "code": "else if ( arr [ l ] [ 0 ] < arr [ y ] [ 0 ] && arr [ l ] [ 1 ] == arr [ y ] [ 1 ] )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "left = 1",
      "code": "left = 1 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "for q = 0 to n exclusive",
      "code": "for ( int q = 0 ; q < n ; q ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if arr [ q ] [ 1 ] > arr [ y ] [ 1 ] and arr [ q ] [ 0 ] is arr [ y ] [ 0 ]",
      "code": "if ( arr [ q ] [ 1 ] > arr [ y ] [ 1 ] && arr [ q ] [ 0 ] == arr [ y ] [ 0 ] )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "upper = 1",
      "code": "upper = 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else if arr [ q ] [ 1 ] < arr [ y ] [ 1 ] and arr [ q ] [ 0 ] is arr [ y ] [ 0 ]",
      "code": "else if ( arr [ q ] [ 1 ] < arr [ y ] [ 1 ] && arr [ q ] [ 0 ] == arr [ y ] [ 0 ] )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "low = 1",
      "code": "low = 1 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if right and left and upper and low are nonzero , then increase c by 1",
      "code": "if ( right && left && upper && low ) c ++ ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "low = 0",
      "code": "low = 0 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "left = 0",
      "code": "left = 0 ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "upper = 0",
      "code": "upper = 0 ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "right = 0",
      "code": "right = 0 ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 2 ] , c = 0 , l = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][2]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , right = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( arr [ l ] [ 0 ] [ 0 ] < arr [ y ] [ 0 ] && arr [ l ] [ 1 ] == arr [ y ] )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( q = 0 ; q < n ; q ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        1,
        2,
        18
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        1,
        2,
        18,
        19
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "int low = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        1,
        2,
        18,
        21
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "int upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        1,
        2,
        18,
        7
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        1,
        2,
        19
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "int low = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        1,
        2,
        19,
        21
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "int low = 0 ;",
        "int upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        1,
        2,
        19,
        7
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "int low = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        1,
        2,
        21
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "int upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        1,
        2,
        21,
        7
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "int upper = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        1,
        2,
        7
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        18,
        19
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "int low = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        18,
        19,
        21
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "int low = 0 ;",
        "int upper = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        18,
        19,
        7
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "int low = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        18,
        21
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "int upper = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        18,
        21,
        7
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "int upper = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        18,
        7
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "int low = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        19,
        21
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "int low = 0 ;",
        "int upper = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        19,
        21,
        7
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "int low = 0 ;",
        "int upper = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        19,
        7
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "int low = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "int upper = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        21,
        7
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "int upper = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , y [ 200 ] [ 200 ] , c = 0 , l = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [200][200]’"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        18,
        19
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "int low = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        21
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "int low = 0 ;",
        "int upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        18,
        19,
        7
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "int low = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        18,
        21
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "int upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        18,
        21,
        7
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "int upper = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        18,
        7
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( ! right && left && low == upper ) c ++ ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "int low = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        19,
        21
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "int low = 0 ;",
        "int upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        19,
        21,
        7
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "int low = 0 ;",
        "int upper = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        19,
        7
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "int low = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "int upper = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        21,
        7
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "int upper = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "bool low = 0 , upper = 0 , upper = 0 , left = 0 ;",
        "if ( arr [ l ] [ 0 ] > arr [ y ] [ 0 ] && arr [ l ] [ 1 ] != arr [ y ] [ 1 ] )"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘bool upper’"
    }
  ]
}