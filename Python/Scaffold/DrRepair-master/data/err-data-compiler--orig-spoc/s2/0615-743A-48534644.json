{
  "meta": {
    "index": 615,
    "hitid": "3BKZLF990ZTQWT0YGAK0YQ84AK1YQA",
    "workerid": "AIWEXPJAU66D9",
    "probid": "743A",
    "subid": "48534644"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , a and b",
      "code": "int n , a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare int variable ans",
      "code": "int ans ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n , a , b and s",
      "code": "cin >> n >> a >> b >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ a - 1 ] = s [ b - 1 ]",
      "code": "if ( s [ a - 1 ] == s [ b - 1 ] )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set ans to 0",
      "code": "ans = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set ans to 1",
      "code": "ans = 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print ans and ' \\ n '",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> n >> a , b >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , a + b ;",
        "string S ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        2,
        10
      ],
      "mod_code": [
        "int n , a + b ;",
        "string S ;",
        "cout << ( ans << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        7
      ],
      "mod_code": [
        "int n , a + b ;",
        "string S ;",
        "cout << ( ans << ' \\n ' ) ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        6
      ],
      "mod_code": [
        "int n , a + b ;",
        "string S ;",
        "cout << ( ans << ' \\n ' ) ;",
        "int ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "string S ;",
        "cout << ( ans << ' \\n ' ) ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        2,
        7
      ],
      "mod_code": [
        "int n , a + b ;",
        "string S ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        6
      ],
      "mod_code": [
        "int n , a + b ;",
        "string S ;",
        "n",
        "int ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "string S ;",
        "n",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        2,
        6
      ],
      "mod_code": [
        "int n , a + b ;",
        "string S ;",
        "int ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        2,
        6,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "string S ;",
        "int ans = 0 ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "string S ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n , a + b ;",
        "cout << ( ans << ' \\n ' ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        10,
        7
      ],
      "mod_code": [
        "int n , a + b ;",
        "cout << ( ans << ' \\n ' ) ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        10,
        7,
        6
      ],
      "mod_code": [
        "int n , a + b ;",
        "cout << ( ans << ' \\n ' ) ;",
        "n",
        "int ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        10,
        7,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "cout << ( ans << ' \\n ' ) ;",
        "n",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        10,
        6
      ],
      "mod_code": [
        "int n , a + b ;",
        "cout << ( ans << ' \\n ' ) ;",
        "int ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        10,
        6,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "cout << ( ans << ' \\n ' ) ;",
        "int ans = 0 ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        10,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "cout << ( ans << ' \\n ' ) ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , a + b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        7,
        6
      ],
      "mod_code": [
        "int n , a + b ;",
        "n",
        "int ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        7,
        6,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "n",
        "int ans = 0 ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        7,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "n",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , a + b ;",
        "int ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "int ans = 0 ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "string S ;",
        "cout << ( ans << ' \\n ' ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        7
      ],
      "mod_code": [
        "string S ;",
        "cout << ( ans << ' \\n ' ) ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        7,
        6
      ],
      "mod_code": [
        "string S ;",
        "cout << ( ans << ' \\n ' ) ;",
        "n",
        "int ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        7,
        5
      ],
      "mod_code": [
        "string S ;",
        "cout << ( ans << ' \\n ' ) ;",
        "n",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        6
      ],
      "mod_code": [
        "string S ;",
        "cout << ( ans << ' \\n ' ) ;",
        "int ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        6,
        5
      ],
      "mod_code": [
        "string S ;",
        "cout << ( ans << ' \\n ' ) ;",
        "int ans = 0 ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10,
        5
      ],
      "mod_code": [
        "string S ;",
        "cout << ( ans << ' \\n ' ) ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "string S ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        6
      ],
      "mod_code": [
        "string S ;",
        "n",
        "int ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        6,
        5
      ],
      "mod_code": [
        "string S ;",
        "n",
        "int ans = 0 ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        5
      ],
      "mod_code": [
        "string S ;",
        "n",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "string S ;",
        "int ans = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "string S ;",
        "int ans = 0 ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "string S ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "cout << ( ans << ' \\n ' ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        7,
        6
      ],
      "mod_code": [
        "cout << ( ans << ' \\n ' ) ;",
        "n",
        "int ans = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        7,
        6,
        5
      ],
      "mod_code": [
        "cout << ( ans << ' \\n ' ) ;",
        "n",
        "int ans = 0 ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        7,
        5
      ],
      "mod_code": [
        "cout << ( ans << ' \\n ' ) ;",
        "n",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "n",
        "int ans = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        6,
        5
      ],
      "mod_code": [
        "n",
        "int ans = 0 ;",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "n",
        "if ( s [ a - 1 ] = s [ b - 1 ] )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}