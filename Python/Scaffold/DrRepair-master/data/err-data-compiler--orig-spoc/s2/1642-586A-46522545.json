{
  "meta": {
    "index": 1642,
    "hitid": "3K1H3NEY7LTWLTBTHISARRU1M9UDGU",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "586A",
    "subid": "46522545"
  },
  "lines": [
    {
      "line": 0,
      "text": "create ints n and tot and int array a of size 101",
      "code": "int n , a [ 101 ] , tot ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create bool v",
      "code": "bool v ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a [ i ] is equal to 1",
      "code": "if ( a [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment tot",
      "code": "tot ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set v to true",
      "code": "v = true ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if a [ i + 1 ] is equal to 1 , v is truthy , and a [ i ] + a [ i - 1 ] is greater than or equal to 1",
      "code": "else if ( a [ i + 1 ] == 1 && v && a [ i ] + a [ i - 1 ] >= 1 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment tot",
      "code": "tot ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "show tot",
      "code": "cout << tot << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool S ;"
      ],
      "err_line": 8,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        9,
        8
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "bool v = true ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        9,
        8,
        13
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "bool v = true ;",
        "cout << ' tot ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        9,
        8,
        5
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "bool v = true ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        9,
        13
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "cout << ' tot ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        9,
        13,
        5
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "cout << ' tot ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        9,
        5
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "bool v = true ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        8,
        13
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "bool v = true ;",
        "cout << ' tot ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        8,
        13,
        5
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "bool v = true ;",
        "cout << ' tot ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        8,
        13,
        9
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "bool v = true ;",
        "cout << ' tot ' ;",
        "else if ( a [ i + 1 ] == 1 , v && a [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        8,
        5
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "bool v = true ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        8,
        5,
        9
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "bool v = true ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( a [ i + 1 ] == 1 , v && a [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        8,
        9
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "bool v = true ;",
        "else if ( a [ i + 1 ] == 1 , v && a [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "cout << ' tot ' ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        13,
        5
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "cout << ' tot ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        13,
        5,
        9
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "cout << ' tot ' ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( a [ i + 1 ] == 1 , v && a [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        13,
        9
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "cout << ' tot ' ;",
        "else if ( a [ i + 1 ] == 1 , v && a [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        5,
        9
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( a [ i + 1 ] == 1 , v && a [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int n , tot [ 101 ] , n ;",
        "else if ( a [ i + 1 ] == 1 , v && a [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "bool v = true ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        8,
        13
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "bool v = true ;",
        "cout << ' tot ' ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        8,
        13,
        5
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "bool v = true ;",
        "cout << ' tot ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        8,
        5
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "bool v = true ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "cout << ' tot ' ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        13,
        5
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "cout << ' tot ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "else if ( a [ i + 1 ] == 1 && v [ i ] + a [ i - 1 ] >= 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        5
      ],
      "mod_code": [
        "bool v = true ;",
        "cout << ' tot ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        5,
        9
      ],
      "mod_code": [
        "bool v = true ;",
        "cout << ' tot ' ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( a [ i + 1 ] == 1 , v && a [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "bool v = true ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        5,
        9
      ],
      "mod_code": [
        "bool v = true ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( a [ i + 1 ] == 1 , v && a [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "cout << ' tot ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5,
        9
      ],
      "mod_code": [
        "cout << ' tot ' ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( a [ i + 1 ] == 1 , v && a [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( a [ i + 1 ] == 1 , v && a [ i ] + a [ i - 1 ] >= 1 )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}