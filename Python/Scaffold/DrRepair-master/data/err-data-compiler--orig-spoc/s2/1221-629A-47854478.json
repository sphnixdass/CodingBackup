{
  "meta": {
    "index": 1221,
    "hitid": "3N3WJQXELSKP4BREVK598085LZQ2LF",
    "workerid": "A1AYVATMT88U1W",
    "probid": "629A",
    "subid": "47854478"
  },
  "lines": [
    {
      "line": 0,
      "text": "let gcdf be a function that accepts long long a , long long b and returns a long integer",
      "code": "long long gcdf ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if a is equal to 0",
      "code": "if ( a == 0 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return the value of b",
      "code": "return b ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else if b is equal to 0",
      "code": "else if ( b == 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return the value of a",
      "code": "return a ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a is greater than b",
      "code": "if ( a > b )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "gcdf of b and a modulo b",
      "code": "gcdf ( b , a % b ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "gcdf of a and b modulo a",
      "code": "gcdf ( a , b % a ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "let T , n , a , b , i , j , k be integers",
      "code": "long long T , n , a , b , i , j , k ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "T is equal to 1",
      "code": "T = 1 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "while T is decremented by 1",
      "code": "while ( T -- )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "let s be a string",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "the nth element of integer array row is equal to 0",
      "code": "int row [ n ] = { 0 } ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "the nth element of integer array col is equal to 0",
      "code": "int col [ n ] = { 0 } ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "s = \" \"",
      "code": "s = \" \" ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "for j = 0 to n exclusive",
      "code": "for ( j = 0 ; j < n ; j ++ )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if s [ j ] is equal to C",
      "code": "if ( s [ j ] == ' C ' )",
      "indent": 4
    },
    {
      "line": 25,
      "text": "increment row [ i ] by 1",
      "code": "row [ i ] ++ ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "increment col [ j ] by 1",
      "code": "col [ j ] ++ ;",
      "indent": 5
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "a is equal to 0",
      "code": "a = 0 ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "for i = 0 to n exclusive , increment a by ( ( ( row [ i ] * ( row [ i ] - 1 ) ) / 2 ) + ( ( col [ i ] * ( col [ i ] - 1 ) ) / 2 ) )",
      "code": "for ( i = 0 ; i < n ; i ++ ) { a += ( ( ( row [ i ] * ( row [ i ] - 1 ) ) / 2 ) + ( ( col [ i ] * ( col [ i ] - 1 ) ) / 2 ) ) ; }",
      "indent": 2
    },
    {
      "line": 32,
      "text": "print a",
      "code": "cout << a ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "b ( b , a % b ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int a [ a ] , b % a ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 11,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "b . push_back ( b , a % b ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘push_back’ in ‘b’, which is of non-class type ‘long long int’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int a [ 4 ] , b % a ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "while ( T is 1 )"
      ],
      "err_line": 15,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 21,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 22,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "if ( s [ j ] == C )"
      ],
      "err_line": 24,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int a [ a ] , b % a ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        9,
        18
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int a [ a ] , b % a ;",
        "int row [ 4 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        19
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int a [ a ] , b % a ;",
        "int row [ 4 ] = { 0 } ;",
        "int col [ 4 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        32
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int a [ a ] , b % a ;",
        "int row [ 4 ] = { 0 } ;",
        "cout << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        9,
        18,
        16
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int a [ a ] , b % a ;",
        "int row [ 4 ] = { 0 } ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        9,
        19
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int a [ a ] , b % a ;",
        "int col [ 4 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        9,
        19,
        32
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int a [ a ] , b % a ;",
        "int col [ 4 ] = { 0 } ;",
        "cout << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        9,
        19,
        16
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int a [ a ] , b % a ;",
        "int col [ 4 ] = { 0 } ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        9,
        32
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int a [ a ] , b % a ;",
        "cout << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        9,
        32,
        16
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int a [ a ] , b % a ;",
        "cout << a << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        9,
        16
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int a [ a ] , b % a ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int row [ 4 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        18,
        19
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int row [ 4 ] = { 0 } ;",
        "int col [ 4 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        18,
        19,
        32
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int row [ 4 ] = { 0 } ;",
        "int col [ 4 ] = { 0 } ;",
        "cout << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        18,
        19,
        16
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int row [ 4 ] = { 0 } ;",
        "int col [ 4 ] = { 0 } ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        18,
        32
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int row [ 4 ] = { 0 } ;",
        "cout << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        18,
        32,
        16
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int row [ 4 ] = { 0 } ;",
        "cout << a << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        18,
        16
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int row [ 4 ] = { 0 } ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        19
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int col [ 4 ] = { 0 } ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        19,
        32
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int col [ 4 ] = { 0 } ;",
        "cout << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        19,
        32,
        16
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int col [ 4 ] = { 0 } ;",
        "cout << a << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        19,
        16
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "int col [ 4 ] = { 0 } ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        32
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "cout << a << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        32,
        16
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "cout << a << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "b ( b , a % b ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘b’ cannot be used as a function"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "int row [ 4 ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        18,
        19
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "int row [ 4 ] = { 0 } ;",
        "int col [ 4 ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        18,
        19,
        32
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "int row [ 4 ] = { 0 } ;",
        "int col [ 4 ] = { 0 } ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        18,
        19,
        16
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "int row [ 4 ] = { 0 } ;",
        "int col [ 4 ] = { 0 } ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        18,
        32
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "int row [ 4 ] = { 0 } ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        18,
        32,
        16
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "int row [ 4 ] = { 0 } ;",
        "cout << a << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        18,
        16
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "int row [ 4 ] = { 0 } ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "int col [ 4 ] = { 0 } ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        19,
        32
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "int col [ 4 ] = { 0 } ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        19,
        32,
        16
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "int col [ 4 ] = { 0 } ;",
        "cout << a << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        19,
        16
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "int col [ 4 ] = { 0 } ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        32
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "cout << a << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        32,
        16
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "cout << a << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "int a [ a ] , b % a ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected initializer before ‘%’ token"
    }
  ]
}