{
  "meta": {
    "index": 1805,
    "hitid": "3WKGUBL7SZGZ7P61ZYOX1F535DGL4O",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "222A",
    "subid": "48473210"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k = int",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n then k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "arr = int vector",
      "code": "vector < int > arr ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "x = int",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "append x to arr",
      "code": "arr . push_back ( x ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "same = bool with same = true",
      "code": "bool same = true ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "decrement k then for i = k to n and same set same to arr [ i ] is arr [ k ]",
      "code": "for ( int i = -- k ; i < n && same ; i ++ ) { same = arr [ i ] == arr [ k ] ; }",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if same is false",
      "code": "if ( ! same )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" - 1 \"",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "ans = int with ans = - 1",
      "code": "int ans = - 1 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if arr [ i ] is not arr [ k ] set ans to max of ans and i",
      "code": "if ( arr [ i ] != arr [ k ] ) { ans = max ( ans , i ) ; }",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print ans + 1",
      "code": "cout << ans + 1 << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int = arr ;"
      ],
      "err_line": 3,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int * ans = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( arr [ i ] != arr [ k ] ) ans = max ( ans [ i ] ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        10,
        2,
        6
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cin >> n then k ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        10,
        2,
        6,
        12
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cin >> n then k ;",
        "x = getchar ( ) ;",
        "cout << \" -1 \" ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        10,
        2,
        6,
        15
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cin >> n then k ;",
        "x = getchar ( ) ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        10,
        2,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cin >> n then k ;",
        "x = getchar ( ) ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        10,
        2,
        12
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cin >> n then k ;",
        "cout << \" -1 \" ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        10,
        2,
        12,
        15
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cin >> n then k ;",
        "cout << \" -1 \" ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        10,
        2,
        12,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cin >> n then k ;",
        "cout << \" -1 \" ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        10,
        2,
        15
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cin >> n then k ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        10,
        2,
        15,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cin >> n then k ;",
        "int * ans = - 1 ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        10,
        2,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cin >> n then k ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        10,
        6,
        12,
        15
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "x = getchar ( ) ;",
        "cout << \" -1 \" ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6,
        12,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "x = getchar ( ) ;",
        "cout << \" -1 \" ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        10,
        6,
        15
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "x = getchar ( ) ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        6,
        15,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "x = getchar ( ) ;",
        "int * ans = - 1 ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        10,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "x = getchar ( ) ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        10,
        12,
        15
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cout << \" -1 \" ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        12,
        15,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cout << \" -1 \" ;",
        "int * ans = - 1 ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        10,
        12,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "cout << \" -1 \" ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        15,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "int * ans = - 1 ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "for ( int i = k ; i < n && i ; i ++ ) k = arr [ i ] ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cin >> n then k ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        6,
        12
      ],
      "mod_code": [
        "cin >> n then k ;",
        "x = getchar ( ) ;",
        "cout << \" -1 \" ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        6,
        12,
        15
      ],
      "mod_code": [
        "cin >> n then k ;",
        "x = getchar ( ) ;",
        "cout << \" -1 \" ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        6,
        12,
        7
      ],
      "mod_code": [
        "cin >> n then k ;",
        "x = getchar ( ) ;",
        "cout << \" -1 \" ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        6,
        15
      ],
      "mod_code": [
        "cin >> n then k ;",
        "x = getchar ( ) ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        6,
        15,
        7
      ],
      "mod_code": [
        "cin >> n then k ;",
        "x = getchar ( ) ;",
        "int * ans = - 1 ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        6,
        7
      ],
      "mod_code": [
        "cin >> n then k ;",
        "x = getchar ( ) ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "cin >> n then k ;",
        "cout << \" -1 \" ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        12,
        15
      ],
      "mod_code": [
        "cin >> n then k ;",
        "cout << \" -1 \" ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        12,
        15,
        7
      ],
      "mod_code": [
        "cin >> n then k ;",
        "cout << \" -1 \" ;",
        "int * ans = - 1 ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        12,
        7
      ],
      "mod_code": [
        "cin >> n then k ;",
        "cout << \" -1 \" ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "cin >> n then k ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        15,
        7
      ],
      "mod_code": [
        "cin >> n then k ;",
        "int * ans = - 1 ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cin >> n then k ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        6,
        12,
        15
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "cout << \" -1 \" ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        7
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "cout << \" -1 \" ;",
        "int * ans = - 1 ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        6,
        12,
        7
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "cout << \" -1 \" ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        15,
        7
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "int * ans = - 1 ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "int * ans = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        15,
        7
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "int * ans = - 1 ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "int * ans = - 1 ;",
        "arr . append ( x ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘class std::vector<int>’ has no member named ‘append’"
    }
  ]
}