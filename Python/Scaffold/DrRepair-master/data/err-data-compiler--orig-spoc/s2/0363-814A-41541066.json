{
  "meta": {
    "index": 363,
    "hitid": "3N7PQ0KLI5J0JND5IYWAEFNDIGJ3EY",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "814A",
    "subid": "41541066"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k = int",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "arr = array of n int , arr1 = array of k int",
      "code": "int arr [ n ] , arr1 [ k ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive read arr [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to k exclusive read arr1 [ i ]",
      "code": "for ( int i = 0 ; i < k ; i ++ ) cin >> arr1 [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort first k item of arr1",
      "code": "sort ( arr1 , arr1 + k ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "flag = true",
      "code": "bool flag = true ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "c = 0 , for i = 0 to n exclusive",
      "code": "for ( int i = 0 , c = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if arr [ i ] is 0",
      "code": "if ( arr [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "arr [ i ] = arr1 [ c ]",
      "code": "arr [ i ] = arr1 [ c ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for i = 1 to k exclusive",
      "code": "for ( int i = 1 ; i < k ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if arr1 [ i - 1 ] ! = arr1 [ i ]",
      "code": "if ( arr1 [ i - 1 ] != arr1 [ i ] )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "flag = false",
      "code": "flag = false ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if not flag",
      "code": "if ( ! flag )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" Yes \"",
      "code": "cout << \" Yes\\n \" ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 0 to n - 1 exclusive",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if arr [ i ] > arr [ i + 1 ] and arr [ i ] ! = 0 and arr [ i + 1 ] ! = 0",
      "code": "if ( arr [ i ] > arr [ i + 1 ] && arr [ i ] != 0 && arr [ i + 1 ] != 0 )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "print \" Yes \"",
      "code": "cout << \" Yes\\n \" ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "print \" No \"",
      "code": "cout << \" No\\n \" ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "flag = true ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int arr [ n ] , arr [ k ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr [k]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sort ( arr1 , arr1 + arr1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { c = 0 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( arr1 , arr1 + arr1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        8,
        6,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "for ( i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        8,
        6,
        15
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "bool flag = false ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        8,
        6,
        20
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        8,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        15
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = 1 ; i < k ; i ++ )",
        "bool flag = false ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        13,
        20
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = 1 ; i < k ; i ++ )",
        "n"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        15
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool flag = false ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        15,
        20
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool flag = false ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        20
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "n"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "flag = true ;",
        "sort ( arr1 , arr1 + arr1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        6,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "for ( i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        6,
        13,
        15
      ],
      "mod_code": [
        "flag = true ;",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "for ( i = 1 ; i < k ; i ++ )",
        "bool flag = false ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        6,
        13,
        20
      ],
      "mod_code": [
        "flag = true ;",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "for ( i = 1 ; i < k ; i ++ )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        6,
        15
      ],
      "mod_code": [
        "flag = true ;",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "bool flag = false ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        6,
        15,
        20
      ],
      "mod_code": [
        "flag = true ;",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "bool flag = false ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        6,
        20
      ],
      "mod_code": [
        "flag = true ;",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "flag = true ;",
        "for ( i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        15
      ],
      "mod_code": [
        "flag = true ;",
        "for ( i = 1 ; i < k ; i ++ )",
        "bool flag = false ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        20
      ],
      "mod_code": [
        "flag = true ;",
        "for ( i = 1 ; i < k ; i ++ )",
        "bool flag = false ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        20
      ],
      "mod_code": [
        "flag = true ;",
        "for ( i = 1 ; i < k ; i ++ )",
        "n"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "flag = true ;",
        "bool flag = false ;"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        20
      ],
      "mod_code": [
        "flag = true ;",
        "bool flag = false ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        20
      ],
      "mod_code": [
        "flag = true ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( arr1 , arr1 + arr1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        6,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "for ( i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        6,
        13,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "for ( i = 1 ; i < k ; i ++ )",
        "bool flag = false ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        6,
        13,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "for ( i = 1 ; i < k ; i ++ )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        6,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "bool flag = false ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        6,
        15,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "bool flag = false ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        6,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "sort ( arr1 , arr1 + arr1 ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = 1 ; i < k ; i ++ )",
        "bool flag = false ;"
      ],
      "err_line": 10,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = 1 ; i < k ; i ++ )",
        "bool flag = false ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = 1 ; i < k ; i ++ )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool flag = false ;"
      ],
      "err_line": 10,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool flag = false ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "sort ( arr1 , arr1 + arr1 ) ;",
        "for ( i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        13,
        15
      ],
      "mod_code": [
        "sort ( arr1 , arr1 + arr1 ) ;",
        "for ( i = 1 ; i < k ; i ++ )",
        "bool flag = false ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        20
      ],
      "mod_code": [
        "sort ( arr1 , arr1 + arr1 ) ;",
        "for ( i = 1 ; i < k ; i ++ )",
        "bool flag = false ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        13,
        20
      ],
      "mod_code": [
        "sort ( arr1 , arr1 + arr1 ) ;",
        "for ( i = 1 ; i < k ; i ++ )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "sort ( arr1 , arr1 + arr1 ) ;",
        "bool flag = false ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        15,
        20
      ],
      "mod_code": [
        "sort ( arr1 , arr1 + arr1 ) ;",
        "bool flag = false ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "sort ( arr1 , arr1 + arr1 ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i < k ; i ++ )",
        "bool flag = false ;"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        15,
        20
      ],
      "mod_code": [
        "for ( i = 1 ; i < k ; i ++ )",
        "bool flag = false ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "for ( i = 1 ; i < k ; i ++ )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20
      ],
      "mod_code": [
        "bool flag = false ;",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}