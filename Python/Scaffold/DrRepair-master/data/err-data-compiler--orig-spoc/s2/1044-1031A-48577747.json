{
  "meta": {
    "index": 1044,
    "hitid": "3H781YYV6TC5I4BZXD21WSRBCFZTE8",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1031A",
    "subid": "48577747"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints w , h , and k",
      "code": "int w , h , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read w , h , and k",
      "code": "cin >> w >> h >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make int cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to k",
      "code": "for ( int i = 1 ; i <= k ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create int size = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) )",
      "code": "int size = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if size is less than or equal to 0",
      "code": "if ( size <= 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "break loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set cnt to cnt + ( w - 4 * ( i - 1 ) ) * 2 + ( h - 4 * ( i - 1 ) - 2 ) * 2",
      "code": "cnt += ( w - 4 * ( i - 1 ) ) * 2 + ( h - 4 * ( i - 1 ) - 2 ) * 2 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "display cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int w , h , k , k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int cnt = 1 ;",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        3,
        5,
        7
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int cnt = 1 ;",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "break break ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        3,
        5,
        4
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int cnt = 1 ;",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "for ( int i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        3,
        5,
        8
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int cnt = 1 ;",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        3,
        7
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int cnt = 1 ;",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        3,
        7,
        4
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int cnt = 1 ;",
        "break break ;",
        "for ( int i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        3,
        7,
        8
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int cnt = 1 ;",
        "break break ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        3,
        4,
        8
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int cnt = 1 ;",
        "for ( int i = 1 ; i < k ; i ++ )",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        3,
        8
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int cnt = 1 ;",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        5,
        7
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "break break ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        5,
        7,
        4
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "break break ;",
        "for ( int i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        5,
        7,
        8
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "break break ;",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        5,
        4
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "for ( int i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        5,
        4,
        8
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "for ( int i = 1 ; i < k ; i ++ )",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        5,
        8
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        7,
        4
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "break break ;",
        "for ( int i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        7,
        4,
        8
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "break break ;",
        "for ( int i = 1 ; i < k ; i ++ )",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "break break ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        4,
        8
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "for ( int i = 1 ; i < k ; i ++ )",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( size >= 0 )",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "break break ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        3,
        5,
        7,
        4
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "break break ;",
        "for ( int i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        3,
        5,
        7,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "break break ;",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        3,
        5,
        4
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "for ( int i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        3,
        5,
        4,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "for ( int i = 1 ; i < k ; i ++ )",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        3,
        5,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "break break ;",
        "for ( int i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "break break ;",
        "for ( int i = 1 ; i < k ; i ++ )",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "break break ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        3,
        4,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "for ( int i = 1 ; i < k ; i ++ )",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "break break ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "break break ;",
        "for ( int i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        5,
        7,
        4,
        8
      ],
      "mod_code": [
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "break break ;",
        "for ( int i = 1 ; i < k ; i ++ )",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "break break ;",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "for ( int i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        5,
        4,
        8
      ],
      "mod_code": [
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "for ( int i = 1 ; i < k ; i ++ )",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "int int = ( w - 4 * ( i - 1 ) ) * ( h - 4 * ( i - 1 ) ) ;",
        "else do"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘=’ token"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "break break ;",
        "for ( int i = 1 ; i < k ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        7,
        4,
        8
      ],
      "mod_code": [
        "break break ;",
        "for ( int i = 1 ; i < k ; i ++ )",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "break break ;",
        "else do"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "for ( int i = 1 ; i < k ; i ++ )",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}