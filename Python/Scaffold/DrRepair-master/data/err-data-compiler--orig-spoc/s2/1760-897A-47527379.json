{
  "meta": {
    "index": 1760,
    "hitid": "3GL25Y6843OAB9CWJLRHY3HQYDGXMM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "897A",
    "subid": "47527379"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "define new ints n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "define string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , m and s from the input",
      "code": "cin >> n >> m >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop , decrementing m , while it is not 0",
      "code": "while ( m -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare int variables l and r",
      "code": "int l , r ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "define new chars from and to",
      "code": "char from , to ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read standard input to l , r , from and to",
      "code": "cin >> l >> r >> from >> to ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "decrement l and r by one",
      "code": "l -- , r -- ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "start for loop from i = l to r inclusive incrementing i",
      "code": "for ( int i = l ; i <= r ; i ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if s [ i ] = from , set s [ i ] to to",
      "code": "if ( s [ i ] == from ) s [ i ] = to ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "char from = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( it -- )"
      ],
      "err_line": 4,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int l l , r ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = l ; i <= r ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "char from = 0 ;",
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        5
      ],
      "mod_code": [
        "char from = 0 ;",
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "int l l , r ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        6,
        10,
        5,
        2
      ],
      "mod_code": [
        "char from = 0 ;",
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "int l l , r ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        6,
        10,
        5,
        8
      ],
      "mod_code": [
        "char from = 0 ;",
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "int l l , r ;",
        "l -- , r ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        6,
        10,
        5,
        3
      ],
      "mod_code": [
        "char from = 0 ;",
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "int l l , r ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        6,
        10,
        2
      ],
      "mod_code": [
        "char from = 0 ;",
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        2,
        8
      ],
      "mod_code": [
        "char from = 0 ;",
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "char s ;",
        "l -- , r ++ ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        2,
        3
      ],
      "mod_code": [
        "char from = 0 ;",
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "char s ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        8
      ],
      "mod_code": [
        "char from = 0 ;",
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "l -- , r ++ ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        8,
        3
      ],
      "mod_code": [
        "char from = 0 ;",
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "l -- , r ++ ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        3
      ],
      "mod_code": [
        "char from = 0 ;",
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "char from = 0 ;",
        "int l l , r ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "char from = 0 ;",
        "int l l , r ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        6,
        5,
        2,
        8
      ],
      "mod_code": [
        "char from = 0 ;",
        "int l l , r ;",
        "char s ;",
        "l -- , r ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        6,
        5,
        2,
        3
      ],
      "mod_code": [
        "char from = 0 ;",
        "int l l , r ;",
        "char s ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        6,
        5,
        8
      ],
      "mod_code": [
        "char from = 0 ;",
        "int l l , r ;",
        "l -- , r ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        6,
        5,
        8,
        3
      ],
      "mod_code": [
        "char from = 0 ;",
        "int l l , r ;",
        "l -- , r ++ ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        6,
        5,
        3
      ],
      "mod_code": [
        "char from = 0 ;",
        "int l l , r ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "char from = 0 ;",
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        8
      ],
      "mod_code": [
        "char from = 0 ;",
        "char s ;",
        "l -- , r ++ ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        8,
        3
      ],
      "mod_code": [
        "char from = 0 ;",
        "char s ;",
        "l -- , r ++ ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        3
      ],
      "mod_code": [
        "char from = 0 ;",
        "char s ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "char from = 0 ;",
        "l -- , r ++ ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8,
        3
      ],
      "mod_code": [
        "char from = 0 ;",
        "l -- , r ++ ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "char from = 0 ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 7,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "int l l , r ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        10,
        5,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "int l l , r ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        10,
        5,
        2,
        8
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "int l l , r ;",
        "char s ;",
        "l -- , r ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        10,
        5,
        2,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "int l l , r ;",
        "char s ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        10,
        5,
        8
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "int l l , r ;",
        "l -- , r ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        10,
        5,
        8,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "int l l , r ;",
        "l -- , r ++ ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        10,
        5,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "int l l , r ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "char s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        2,
        8
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "char s ;",
        "l -- , r ++ ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        2,
        8,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "char s ;",
        "l -- , r ++ ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        2,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "char s ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "l -- , r ++ ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        8,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "l -- , r ++ ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' from ' ) s [ i ] = to [ i ] ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "int l l , r ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        5,
        2,
        8
      ],
      "mod_code": [
        "int l l , r ;",
        "char s ;",
        "l -- , r ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        5,
        2,
        8,
        3
      ],
      "mod_code": [
        "int l l , r ;",
        "char s ;",
        "l -- , r ++ ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "int l l , r ;",
        "char s ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "int l l , r ;",
        "l -- , r ++ ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        5,
        8,
        3
      ],
      "mod_code": [
        "int l l , r ;",
        "l -- , r ++ ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int l l , r ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘l’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "char s ;",
        "l -- , r ++ ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        8,
        3
      ],
      "mod_code": [
        "char s ;",
        "l -- , r ++ ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "char s ;",
        "cin >> n >> m , s ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}