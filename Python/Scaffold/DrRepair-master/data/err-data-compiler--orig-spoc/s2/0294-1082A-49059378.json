{
  "meta": {
    "index": 294,
    "hitid": "3Y40HMYLL1CTOHH5SNI3PDYKBZFXUA",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1082A",
    "subid": "49059378"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while t - - is truthy",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create ints n , x , y , d , tmp , ans , and ans2",
      "code": "int n , x , y , d , tmp , ans1 , ans2 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read n , x , y , and d",
      "code": "cin >> n >> x >> y >> d ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if abs ( x - y ) modulo d is 0",
      "code": "if ( abs ( x - y ) % d == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print abs ( x - y ) / d",
      "code": "cout << abs ( x - y ) / d << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set tmp to abs ( x - n ) / d",
      "code": "tmp = abs ( x - n ) / d ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if abs ( x - n ) modulo d is not 0 , increment tmp",
      "code": "if ( abs ( x - n ) % d != 0 ) { tmp ++ ; }",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if abs ( n - y ) modulo d is not equal to 0",
      "code": "if ( abs ( n - y ) % d != 0 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set ans1 to - 1",
      "code": "ans1 = - 1 ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set ans1 to tmp + abs ( n - y ) / d",
      "code": "ans1 = tmp + abs ( n - y ) / d ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set tmp to abs ( x - 1 ) / d",
      "code": "tmp = abs ( x - 1 ) / d ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if abs ( x - 1 ) modulo d is not equal to 0 , increase tmp by 1",
      "code": "if ( abs ( x - 1 ) % d != 0 ) { tmp ++ ; }",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if abs ( 1 - y ) modulo d is not 0",
      "code": "if ( abs ( 1 - y ) % d != 0 )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "set ans2 to - 1",
      "code": "ans2 = - 1 ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "otherwise",
      "code": "else",
      "indent": 3
    },
    {
      "line": 21,
      "text": "set ans2 to tmp + abs ( 1 - y ) / d",
      "code": "ans2 = tmp + abs ( 1 - y ) / d ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if ans1 is equal to - 1 and ans2 is equal to - 1",
      "code": "if ( ans1 == - 1 && ans2 == - 1 )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "print \" - 1 \\ n \"",
      "code": "cout << \" -1\\n \" ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "else if min ( ans1 , ans2 ) is equal to - 1",
      "code": "else if ( min ( ans1 , ans2 ) == - 1 )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "print max ( ans1 , ans2 )",
      "code": "cout << max ( ans1 , ans2 ) << \" \\n \" ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 28,
      "text": "print the max of ans1 and ans2",
      "code": "cout << min ( ans2 , ans1 ) << \" \\n \" ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 , ans2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int ans2’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 31,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 20,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "cout << \" \\ \" ;"
      ],
      "err_line": 24,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 28,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans1 += abs ( n - y ) / d ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        21
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans1 += abs ( n - y ) / d ;",
        "ans2 += abs ( 1 - y ) / d ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        21,
        28
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans1 += abs ( n - y ) / d ;",
        "ans2 += abs ( 1 - y ) / d ;",
        "cout << max ( ans1 , ans2 ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        21,
        13
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans1 += abs ( n - y ) / d ;",
        "ans2 += abs ( 1 - y ) / d ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        21,
        28
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans1 += abs ( n - y ) / d ;",
        "ans2 += abs ( 1 - y ) / d ;",
        "cout << max ( ans1 , ans2 ) << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        28
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans1 += abs ( n - y ) / d ;",
        "cout << max ( ans1 , ans2 ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        28,
        13
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans1 += abs ( n - y ) / d ;",
        "cout << max ( ans1 , ans2 ) << endl ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        13
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans1 += abs ( n - y ) / d ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        13,
        28
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans1 += abs ( n - y ) / d ;",
        "n",
        "cout << max ( ans1 , ans2 ) << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        28
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans1 += abs ( n - y ) / d ;",
        "cout << max ( ans1 , ans2 ) << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans2 += abs ( 1 - y ) / d ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        28
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans2 += abs ( 1 - y ) / d ;",
        "cout << max ( ans1 , ans2 ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        28,
        13
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans2 += abs ( 1 - y ) / d ;",
        "cout << max ( ans1 , ans2 ) << endl ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        13
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans2 += abs ( 1 - y ) / d ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        13,
        28
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans2 += abs ( 1 - y ) / d ;",
        "n",
        "cout << max ( ans1 , ans2 ) << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21,
        28
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "ans2 += abs ( 1 - y ) / d ;",
        "cout << max ( ans1 , ans2 ) << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        28
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "cout << max ( ans1 , ans2 ) << endl ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        28,
        13
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "cout << max ( ans1 , ans2 ) << endl ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        28
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "n",
        "cout << max ( ans1 , ans2 ) << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        28
      ],
      "mod_code": [
        "int n , x , y , d , tmp , ans , ans2 ;",
        "cout << max ( ans1 , ans2 ) << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘ans1’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        21,
        28,
        13
      ],
      "mod_code": [
        "ans1 += abs ( n - y ) / d ;",
        "ans2 += abs ( 1 - y ) / d ;",
        "cout << max ( ans1 , ans2 ) << endl ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        21,
        13
      ],
      "mod_code": [
        "ans1 += abs ( n - y ) / d ;",
        "ans2 += abs ( 1 - y ) / d ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        21,
        13,
        28
      ],
      "mod_code": [
        "ans1 += abs ( n - y ) / d ;",
        "ans2 += abs ( 1 - y ) / d ;",
        "n",
        "cout << max ( ans1 , ans2 ) << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        28,
        13
      ],
      "mod_code": [
        "ans1 += abs ( n - y ) / d ;",
        "cout << max ( ans1 , ans2 ) << endl ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "ans1 += abs ( n - y ) / d ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        13,
        28
      ],
      "mod_code": [
        "ans1 += abs ( n - y ) / d ;",
        "n",
        "cout << max ( ans1 , ans2 ) << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        28,
        13
      ],
      "mod_code": [
        "ans2 += abs ( 1 - y ) / d ;",
        "cout << max ( ans1 , ans2 ) << endl ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        13
      ],
      "mod_code": [
        "ans2 += abs ( 1 - y ) / d ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        13,
        28
      ],
      "mod_code": [
        "ans2 += abs ( 1 - y ) / d ;",
        "n",
        "cout << max ( ans1 , ans2 ) << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        13
      ],
      "mod_code": [
        "cout << max ( ans1 , ans2 ) << endl ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        28
      ],
      "mod_code": [
        "n",
        "cout << max ( ans1 , ans2 ) << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}