{
  "meta": {
    "index": 304,
    "hitid": "34D9ZRXCYRO1DRH8S8VPQ45YPHQSAQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "735A",
    "subid": "48453088"
  },
  "lines": [
    {
      "line": 0,
      "text": "define constant integer variable maxn = 100005",
      "code": "const int maxn = 100005 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "define ints n , k , S and T",
      "code": "int n , k , S , T ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare int arrays N and vis with size 1000",
      "code": "int N [ 1000 ] , vis [ 1000 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "int function BFS with int argument s",
      "code": "int BFS ( int s ) ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "set values of first sizeof ( vis ) bytes at the pointer vis to 0",
      "code": "memset ( vis , 0 , sizeof ( vis ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read input to n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create new array of characters str with size 1000",
      "code": "char str [ 1000 ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read str from the user input",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "in a for loop , increment i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if str [ i ] = ' # '",
      "code": "if ( str [ i ] == ' # ' )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "assign the new value = 0 to N [ i ]",
      "code": "N [ i ] = 0 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "assign 1 to N [ i ]",
      "code": "N [ i ] = 1 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if str [ i ] is equal to ' G '",
      "code": "if ( str [ i ] == ' G ' )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set S to i",
      "code": "S = i ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else if str [ i ] is equal to ' T '",
      "code": "else if ( str [ i ] == ' T ' )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set T to i",
      "code": "T = i ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "declare integer variable with name flag and value 0",
      "code": "int flag = 0 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if S is less than T",
      "code": "if ( S < T )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = S to n exclusive adding k to i",
      "code": "for ( int i = S ; i < n ; i += k )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "if N [ i ] is false , break the loop",
      "code": "if ( ! N [ i ] ) break ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if i is equal to T",
      "code": "if ( i == T )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "change the value of flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 29,
      "text": "in a for loop , change i from S to 0 inclusive decreasing i by k",
      "code": "for ( int i = S ; i >= 0 ; i -= k )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "if N [ i ] is 0 , break the loop",
      "code": "if ( ! N [ i ] ) break ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "if i is equal to T",
      "code": "if ( i == T )",
      "indent": 3
    },
    {
      "line": 32,
      "text": "assign the new value = 1 to flag",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "if flag is not 0",
      "code": "if ( flag )",
      "indent": 1
    },
    {
      "line": 38,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 39,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 40,
      "text": "print \" NO \" to the standard output",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int BFS ( int s )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int vis [ 1000 ] , vis [ 1000 ] ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘int vis [1000]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "memset ( vis , 0 ) ;"
      ],
      "err_line": 5,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char arr [ 1000 ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "str >> str ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘char [1000]’ and ‘char [1000]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int N [ i ] = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int N [ i ] = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int flag , flag ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "flag = l ;"
      ],
      "err_line": 24,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "flag = l ;"
      ],
      "err_line": 32,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 40,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int S = i ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        15,
        13
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int S = i ;",
        "int N [ i ] = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        15,
        13,
        38
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int S = i ;",
        "int N [ i ] = 1 ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        15,
        13,
        19
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int S = i ;",
        "int N [ i ] = 1 ;",
        "int flag , flag ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        15,
        13,
        21
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int S = i ;",
        "int N [ i ] = 1 ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        15,
        38
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int S = i ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        15,
        38,
        19
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int S = i ;",
        "cout << \" YES \" ;",
        "int flag , flag ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        15,
        38,
        21
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int S = i ;",
        "cout << \" YES \" ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        15,
        19
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int S = i ;",
        "int flag , flag ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        15,
        19,
        21
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int S = i ;",
        "int flag , flag ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        15,
        21
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int S = i ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int N [ i ] = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        13,
        38
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int N [ i ] = 1 ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        13,
        38,
        19
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int N [ i ] = 1 ;",
        "cout << \" YES \" ;",
        "int flag , flag ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        13,
        38,
        21
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int N [ i ] = 1 ;",
        "cout << \" YES \" ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        13,
        19
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int N [ i ] = 1 ;",
        "int flag , flag ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        13,
        19,
        21
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int N [ i ] = 1 ;",
        "int flag , flag ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        13,
        21
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int N [ i ] = 1 ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        38
      ],
      "mod_code": [
        "int BFS ( int s )",
        "cout << \" YES \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        38,
        19
      ],
      "mod_code": [
        "int BFS ( int s )",
        "cout << \" YES \" ;",
        "int flag , flag ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        38,
        19,
        21
      ],
      "mod_code": [
        "int BFS ( int s )",
        "cout << \" YES \" ;",
        "int flag , flag ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        38,
        21
      ],
      "mod_code": [
        "int BFS ( int s )",
        "cout << \" YES \" ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int flag , flag ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        19,
        21
      ],
      "mod_code": [
        "int BFS ( int s )",
        "int flag , flag ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "int BFS ( int s )",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        15,
        13
      ],
      "mod_code": [
        "int S = i ;",
        "int N [ i ] = 1 ;"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15,
        13,
        38
      ],
      "mod_code": [
        "int S = i ;",
        "int N [ i ] = 1 ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15,
        13,
        38,
        19
      ],
      "mod_code": [
        "int S = i ;",
        "int N [ i ] = 1 ;",
        "cout << \" YES \" ;",
        "int flag , flag ;"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15,
        13,
        38,
        21
      ],
      "mod_code": [
        "int S = i ;",
        "int N [ i ] = 1 ;",
        "cout << \" YES \" ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15,
        13,
        19
      ],
      "mod_code": [
        "int S = i ;",
        "int N [ i ] = 1 ;",
        "int flag , flag ;"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15,
        13,
        19,
        21
      ],
      "mod_code": [
        "int S = i ;",
        "int N [ i ] = 1 ;",
        "int flag , flag ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15,
        13,
        21
      ],
      "mod_code": [
        "int S = i ;",
        "int N [ i ] = 1 ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15,
        38,
        19
      ],
      "mod_code": [
        "int S = i ;",
        "cout << \" YES \" ;",
        "int flag , flag ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        15,
        38,
        19,
        21
      ],
      "mod_code": [
        "int S = i ;",
        "cout << \" YES \" ;",
        "int flag , flag ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        15,
        38,
        21
      ],
      "mod_code": [
        "int S = i ;",
        "cout << \" YES \" ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        19
      ],
      "mod_code": [
        "int S = i ;",
        "int flag , flag ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        15,
        19,
        21
      ],
      "mod_code": [
        "int S = i ;",
        "int flag , flag ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        15,
        21
      ],
      "mod_code": [
        "int S = i ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        38
      ],
      "mod_code": [
        "int N [ i ] = 1 ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        13,
        38,
        19
      ],
      "mod_code": [
        "int N [ i ] = 1 ;",
        "cout << \" YES \" ;",
        "int flag , flag ;"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        13,
        38,
        19,
        21
      ],
      "mod_code": [
        "int N [ i ] = 1 ;",
        "cout << \" YES \" ;",
        "int flag , flag ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        13,
        38,
        21
      ],
      "mod_code": [
        "int N [ i ] = 1 ;",
        "cout << \" YES \" ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "int N [ i ] = 1 ;",
        "int flag , flag ;"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        13,
        19,
        21
      ],
      "mod_code": [
        "int N [ i ] = 1 ;",
        "int flag , flag ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        13,
        21
      ],
      "mod_code": [
        "int N [ i ] = 1 ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        38,
        19
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int flag , flag ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        38,
        19,
        21
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int flag , flag ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        38,
        21
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        21
      ],
      "mod_code": [
        "int flag , flag ;",
        "for ( i = S ; i < n ; i += k )"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int flag’"
    }
  ]
}