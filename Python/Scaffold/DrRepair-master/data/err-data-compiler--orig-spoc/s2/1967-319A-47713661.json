{
  "meta": {
    "index": 1967,
    "hitid": "3EQPA8A374Q9FW6QH62AFW5K2JBZJ9",
    "workerid": "AIWEXPJAU66D9",
    "probid": "319A",
    "subid": "47713661"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare long long variable mod = 1e9 + 7",
      "code": "long long mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long array arr with 101 element",
      "code": "long long arr [ 101 ] = { } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "set arr [ 0 ] to 1",
      "code": "arr [ 0 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "assign 2 to arr [ 1 ]",
      "code": "arr [ 1 ] = 2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare int variables i , j and k",
      "code": "int i , j , k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "loop i from 2 to 101 exclusive , set arr [ i ] to ( arr [ i - 1 ] * 2 ) modulo mod",
      "code": "for ( i = 2 ; i < 101 ; i ++ ) { arr [ i ] = ( arr [ i - 1 ] * 2 ) % mod ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "declare long long ans = 0",
      "code": "long long ans = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if s [ i ] is equal to ' 1 '",
      "code": "if ( s [ i ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "add arr [ length of s - 1 - i ] to ans",
      "code": "ans += arr [ s . size ( ) - 1 - i ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "change ans to ans modulo mod",
      "code": "ans %= mod ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "multiply ans by arr [ length of s - 1 ]",
      "code": "ans *= arr [ s . size ( ) - 1 ] ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "change ans to ans modulo mod",
      "code": "ans %= mod ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int arr [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int i , j , k , k ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "int arr [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        5,
        3,
        7
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "int arr [ 0 ] = 1 ;",
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        5,
        3,
        7,
        8
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "int arr [ 0 ] = 1 ;",
        "char s ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        5,
        3,
        7,
        4
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "int arr [ 0 ] = 1 ;",
        "char s ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        5,
        3,
        8
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "int arr [ 0 ] = 1 ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        5,
        3,
        8,
        4
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "int arr [ 0 ] = 1 ;",
        "s >> s ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        5,
        3,
        4
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "int arr [ 0 ] = 1 ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "char s ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        4
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "char s ;",
        "s >> s ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "char s ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        5,
        8,
        4
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "s >> s ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int i , j , k , k ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int arr [ 0 ] = 1 ;",
        "char s ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "int arr [ 0 ] = 1 ;",
        "char s ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        4
      ],
      "mod_code": [
        "int arr [ 0 ] = 1 ;",
        "char s ;",
        "s >> s ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "int arr [ 0 ] = 1 ;",
        "char s ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int arr [ 0 ] = 1 ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        3,
        8,
        4
      ],
      "mod_code": [
        "int arr [ 0 ] = 1 ;",
        "s >> s ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int arr [ 0 ] = 1 ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 3,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "char s ;",
        "s >> s ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        7,
        8,
        4
      ],
      "mod_code": [
        "char s ;",
        "s >> s ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "char s ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "s >> s ;",
        "arr [ 1 ] [ 2 ] = 2 ;"
      ],
      "err_line": 4,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    }
  ]
}