{
  "meta": {
    "index": 1375,
    "hitid": "3MWOYZD5WVITZIJ4UVJLS5FXRZLNO7",
    "workerid": "AIWEXPJAU66D9",
    "probid": "54A",
    "subid": "40993214"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare int variables i , j , k , l , m and n",
      "code": "int i , j , k , l , m , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , m and l from the input",
      "code": "cin >> n >> m >> l ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a is an array of integers with l elements",
      "code": "int a [ l ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read l sequential elements to a from the input in a loop",
      "code": "for ( i = 0 ; i < l ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "b is a new array of integers with size 1000",
      "code": "int b [ 1000 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create new integers q and w",
      "code": "int q , w ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "change the value of q to 0",
      "code": "q = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set w to 0",
      "code": "w = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "in a for loop , change i from 0 to n inclusive",
      "code": "for ( i = 0 ; i <= n ; )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "change i to i + m",
      "code": "i = i + m ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if i > = a [ w ] and w < l",
      "code": "if ( ( ( i ) >= a [ w ] ) && ( w < l ) )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set i to a [ w ]",
      "code": "i = a [ w ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increment w",
      "code": "w ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set b [ i ] to 1",
      "code": "b [ i ] = 1 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set b [ i ] to 1",
      "code": "b [ i ] = 1 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "assign 0 to w",
      "code": "w = 0 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "in a for loop , change i from 0 to n inclusive incrementing i",
      "code": "for ( i = 0 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if b [ i ] = 1 , increment w",
      "code": "if ( b [ i ] == 1 ) { w ++ ; }",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print w and \" \\ n \" to the standard output",
      "code": "cout << w << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , j , k , l , m , m ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "b [ 1000 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "q , w ;"
      ],
      "err_line": 6,
      "err_msg": "‘q’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int q = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int q’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int w = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int w = 0 ;"
      ],
      "err_line": 19,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "puts ( w ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ )",
        "int w = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        9,
        8,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ )",
        "int w = 0 ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        9,
        8,
        15,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ )",
        "int w = 0 ;",
        "n",
        "b [ i ] = ' 1 ' ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        9,
        8,
        15,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ )",
        "int w = 0 ;",
        "n",
        "cin >> n >> m , l ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        9,
        8,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ )",
        "int w = 0 ;",
        "b [ i ] = ' 1 ' ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        9,
        8,
        16,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ )",
        "int w = 0 ;",
        "b [ i ] = ' 1 ' ;",
        "cin >> n >> m , l ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        9,
        8,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ )",
        "int w = 0 ;",
        "cin >> n >> m , l ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        15,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ )",
        "n",
        "b [ i ] = ' 1 ' ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        15,
        16,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ )",
        "n",
        "b [ i ] = ' 1 ' ;",
        "cin >> n >> m , l ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        15,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ )",
        "n",
        "cin >> n >> m , l ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "int w = 0 ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        15,
        16
      ],
      "mod_code": [
        "int w = 0 ;",
        "n",
        "b [ i ] = ' 1 ' ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        2
      ],
      "mod_code": [
        "int w = 0 ;",
        "n",
        "b [ i ] = ' 1 ' ;",
        "cin >> n >> m , l ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        9
      ],
      "mod_code": [
        "int w = 0 ;",
        "n",
        "b [ i ] = ' 1 ' ;",
        "for ( int i = 0 ; i <= n ; ++ i )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        15,
        2
      ],
      "mod_code": [
        "int w = 0 ;",
        "n",
        "cin >> n >> m , l ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        15,
        2,
        9
      ],
      "mod_code": [
        "int w = 0 ;",
        "n",
        "cin >> n >> m , l ;",
        "for ( int i = 0 ; i <= n ; ++ i )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        15,
        9
      ],
      "mod_code": [
        "int w = 0 ;",
        "n",
        "for ( int i = 0 ; i <= n ; ++ i )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "int w = 0 ;",
        "b [ i ] = ' 1 ' ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        16,
        2
      ],
      "mod_code": [
        "int w = 0 ;",
        "b [ i ] = ' 1 ' ;",
        "cin >> n >> m , l ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        16,
        2,
        9
      ],
      "mod_code": [
        "int w = 0 ;",
        "b [ i ] = ' 1 ' ;",
        "cin >> n >> m , l ;",
        "for ( int i = 0 ; i <= n ; ++ i )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        16,
        9
      ],
      "mod_code": [
        "int w = 0 ;",
        "b [ i ] = ' 1 ' ;",
        "for ( int i = 0 ; i <= n ; ++ i )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "int w = 0 ;",
        "cin >> n >> m , l ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        2,
        9
      ],
      "mod_code": [
        "int w = 0 ;",
        "cin >> n >> m , l ;",
        "for ( int i = 0 ; i <= n ; ++ i )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "int w = 0 ;",
        "for ( int i = 0 ; i <= n ; ++ i )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int w’"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "n",
        "b [ i ] = ' 1 ' ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        16,
        2
      ],
      "mod_code": [
        "n",
        "b [ i ] = ' 1 ' ;",
        "cin >> n >> m , l ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        16,
        2,
        9
      ],
      "mod_code": [
        "n",
        "b [ i ] = ' 1 ' ;",
        "cin >> n >> m , l ;",
        "for ( int i = 0 ; i <= n ; ++ i )"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        16,
        9
      ],
      "mod_code": [
        "n",
        "b [ i ] = ' 1 ' ;",
        "for ( int i = 0 ; i <= n ; ++ i )"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "n",
        "cin >> n >> m , l ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        2,
        9
      ],
      "mod_code": [
        "n",
        "cin >> n >> m , l ;",
        "for ( int i = 0 ; i <= n ; ++ i )"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "n",
        "for ( int i = 0 ; i <= n ; ++ i )"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}