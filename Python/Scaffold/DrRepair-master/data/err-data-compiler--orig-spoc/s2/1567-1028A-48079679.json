{
  "meta": {
    "index": 1567,
    "hitid": "3EQVJH0T40FH2E21NEA7HVOO4VVTHS",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "1028A",
    "subid": "48079679"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m , p1 , p2 , c = int with c = 0",
      "code": "int n , m , p1 , p2 , c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "area = two dimensional char array of sizes 120 and 120",
      "code": "char area [ 120 ] [ 120 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "cek = bool with cek = 0",
      "code": "bool cek = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n then m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read area [ i ] [ j ]",
      "code": "cin >> area [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if area [ i ] [ j ] is ' B '",
      "code": "if ( area [ i ] [ j ] == ' B ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if not cek",
      "code": "if ( ! cek )",
      "indent": 4
    },
    {
      "line": 10,
      "text": "set p1 to i",
      "code": "p1 = i ;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "set p2 to j",
      "code": "p2 = j ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "set cek to 1",
      "code": "cek = 1 ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 14,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set c to sqrt of c",
      "code": "c = sqrt ( c ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "increment p1 by c / 2",
      "code": "p1 += c / 2 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "increment p2 by c / 2",
      "code": "p2 += c / 2 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print p1 and p2",
      "code": "cout << p1 << ' ' << p2 << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char area [ char ] [ 120 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘char’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool cek = l ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> area [ i ] >> j ] ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        3
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "bool cek = l ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        11
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "bool cek = l ;",
        "int p2 = j ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        11,
        8
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "bool cek = l ;",
        "int p2 = j ;",
        "if ( ! area [ i ] [ j ] == ' B ' )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        11,
        12
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "bool cek = l ;",
        "int p2 = j ;",
        "int cek = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        11,
        9
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "bool cek = l ;",
        "int p2 = j ;",
        "if ( cek != cek )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        8
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "bool cek = l ;",
        "if ( ! area [ i ] [ j ] == ' B ' )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        8,
        12
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "bool cek = l ;",
        "if ( ! area [ i ] [ j ] == ' B ' )",
        "int cek = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        8,
        9
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "bool cek = l ;",
        "if ( ! area [ i ] [ j ] == ' B ' )",
        "if ( cek != cek )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        12
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "bool cek = l ;",
        "int cek = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        12,
        9
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "bool cek = l ;",
        "int cek = 1 ;",
        "if ( cek != cek )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        3,
        9
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "bool cek = l ;",
        "if ( cek != cek )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "int p2 = j ;"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        11,
        8
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "int p2 = j ;",
        "if ( ! area [ i ] [ j ] == ' B ' )"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        11,
        8,
        12
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "int p2 = j ;",
        "if ( ! area [ i ] [ j ] == ' B ' )",
        "int cek = 1 ;"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        11,
        8,
        9
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "int p2 = j ;",
        "if ( ! area [ i ] [ j ] == ' B ' )",
        "if ( cek != cek )"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        11,
        12
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "int p2 = j ;",
        "int cek = 1 ;"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        11,
        12,
        9
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "int p2 = j ;",
        "int cek = 1 ;",
        "if ( cek != cek )"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        11,
        9
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "int p2 = j ;",
        "if ( cek != cek )"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        8
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "if ( ! area [ i ] [ j ] == ' B ' )"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        8,
        12
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "if ( ! area [ i ] [ j ] == ' B ' )",
        "int cek = 1 ;"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        8,
        12,
        9
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "if ( ! area [ i ] [ j ] == ' B ' )",
        "int cek = 1 ;",
        "if ( cek != cek )"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        8,
        9
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "if ( ! area [ i ] [ j ] == ' B ' )",
        "if ( cek != cek )"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        12
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "int cek = 1 ;"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        12,
        9
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "int cek = 1 ;",
        "if ( cek != cek )"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        18,
        9
      ],
      "mod_code": [
        "int c = sqrt ( c ) ;",
        "if ( cek != cek )"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int c’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "bool cek = l ;",
        "int p2 = j ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        8
      ],
      "mod_code": [
        "bool cek = l ;",
        "int p2 = j ;",
        "if ( ! area [ i ] [ j ] == ' B ' )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        8,
        12
      ],
      "mod_code": [
        "bool cek = l ;",
        "int p2 = j ;",
        "if ( ! area [ i ] [ j ] == ' B ' )",
        "int cek = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        8,
        9
      ],
      "mod_code": [
        "bool cek = l ;",
        "int p2 = j ;",
        "if ( ! area [ i ] [ j ] == ' B ' )",
        "if ( cek != cek )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "bool cek = l ;",
        "int p2 = j ;",
        "int cek = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        9
      ],
      "mod_code": [
        "bool cek = l ;",
        "int p2 = j ;",
        "int cek = 1 ;",
        "if ( cek != cek )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        9
      ],
      "mod_code": [
        "bool cek = l ;",
        "int p2 = j ;",
        "if ( cek != cek )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "bool cek = l ;",
        "if ( ! area [ i ] [ j ] == ' B ' )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        12
      ],
      "mod_code": [
        "bool cek = l ;",
        "if ( ! area [ i ] [ j ] == ' B ' )",
        "int cek = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        9
      ],
      "mod_code": [
        "bool cek = l ;",
        "if ( ! area [ i ] [ j ] == ' B ' )",
        "int cek = 1 ;",
        "if ( cek != cek )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        9
      ],
      "mod_code": [
        "bool cek = l ;",
        "if ( ! area [ i ] [ j ] == ' B ' )",
        "if ( cek != cek )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "bool cek = l ;",
        "int cek = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        9
      ],
      "mod_code": [
        "bool cek = l ;",
        "int cek = 1 ;",
        "if ( cek != cek )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "bool cek = l ;",
        "if ( cek != cek )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}