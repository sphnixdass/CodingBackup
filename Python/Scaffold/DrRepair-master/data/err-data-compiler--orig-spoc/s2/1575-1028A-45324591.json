{
  "meta": {
    "index": 1575,
    "hitid": "3OREP8RUT2536WD93M14W161JOIGBQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1028A",
    "subid": "45324591"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s is a new 2d array of characters with size 150 by 150",
      "code": "char s [ 150 ] [ 150 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let n , m and cnt be ints where cnt = 0",
      "code": "int n , m , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integers x and y = - 1",
      "code": "int x = - 1 , y = - 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n elements of s from the input in a loop",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> s [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for integer i = 0 to n exclusive incrementing i",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j from 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s [ i ] [ j ] = ' B '",
      "code": "if ( s [ i ] [ j ] == ' B ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if both x and y = - 1",
      "code": "if ( x == - 1 && y == - 1 )",
      "indent": 4
    },
    {
      "line": 10,
      "text": "change the value of x to i + 1",
      "code": "x = i + 1 ;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "set y to j + 1",
      "code": "y = j + 1 ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "increment cnt by one",
      "code": "cnt ++ ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 14,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if cnt is true , stop the loop",
      "code": "if ( cnt ) break ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print x + cnt / 2 , \" \" and y + cnt / 2 to the standard output",
      "code": "cout << x + cnt / 2 << \" \" << y + cnt / 2 << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s [ 150 [ 150 ] ;"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "n",
        "if ( ! x && y == - 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        9,
        3
      ],
      "mod_code": [
        "n",
        "if ( ! x && y == - 1 )",
        "int x , y = - 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        9,
        3,
        1
      ],
      "mod_code": [
        "n",
        "if ( ! x && y == - 1 )",
        "int x , y = - 1 ;",
        "char s [ 150 [ 150 ] ;"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        9,
        3,
        7
      ],
      "mod_code": [
        "n",
        "if ( ! x && y == - 1 )",
        "int x , y = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        9,
        1
      ],
      "mod_code": [
        "n",
        "if ( ! x && y == - 1 )",
        "char s [ 150 [ 150 ] ;"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        9,
        1,
        7
      ],
      "mod_code": [
        "n",
        "if ( ! x && y == - 1 )",
        "char s [ 150 [ 150 ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        9,
        7
      ],
      "mod_code": [
        "n",
        "if ( ! x && y == - 1 )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "n",
        "int x , y = - 1 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        3,
        1
      ],
      "mod_code": [
        "n",
        "int x , y = - 1 ;",
        "char s [ 150 [ 150 ] ;"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        3,
        1,
        7
      ],
      "mod_code": [
        "n",
        "int x , y = - 1 ;",
        "char s [ 150 [ 150 ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        3,
        7
      ],
      "mod_code": [
        "n",
        "int x , y = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "n",
        "char s [ 150 [ 150 ] ;"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        1,
        7
      ],
      "mod_code": [
        "n",
        "char s [ 150 [ 150 ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "n",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        1
      ],
      "mod_code": [
        "if ( ! x && y == - 1 )",
        "int x , y = - 1 ;",
        "char s [ 150 [ 150 ] ;"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        3,
        1,
        7
      ],
      "mod_code": [
        "if ( ! x && y == - 1 )",
        "int x , y = - 1 ;",
        "char s [ 150 [ 150 ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        3,
        7
      ],
      "mod_code": [
        "if ( ! x && y == - 1 )",
        "int x , y = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( ! x && y == - 1 )",
        "char s [ 150 [ 150 ] ;"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        1,
        7
      ],
      "mod_code": [
        "if ( ! x && y == - 1 )",
        "char s [ 150 [ 150 ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "if ( ! x && y == - 1 )",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "int x , y = - 1 ;",
        "char s [ 150 [ 150 ] ;"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        1,
        7
      ],
      "mod_code": [
        "int x , y = - 1 ;",
        "char s [ 150 [ 150 ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int x , y = - 1 ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "char s [ 150 [ 150 ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}