{
  "meta": {
    "index": 2450,
    "hitid": "3S4TINXCC0HRY9U7R5EC1AF3AA4OBG",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "631A",
    "subid": "38472033"
  },
  "lines": [
    {
      "line": 0,
      "text": "create int n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make int suck",
      "code": "int suck ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "make integers ans1 = 0 and ans2 = 0",
      "code": "int ans1 = 0 , ans2 = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read suck",
      "code": "cin >> suck ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set ans1 to ans1 | suck",
      "code": "ans1 |= suck ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read suck",
      "code": "cin >> suck ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set ans2 to ans2 | suck",
      "code": "ans2 |= suck ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print the result of ans1 + ans2",
      "code": "cout << ans1 + ans2 << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 6,
      "err_msg": "‘suck’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int ans1 = 0 = 0 , ans2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0,
        11,
        6,
        4
      ],
      "mod_code": [
        "bool n ;",
        "ans2 = suck | suck ;",
        "suck >> suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0,
        11,
        4
      ],
      "mod_code": [
        "bool n ;",
        "ans2 = suck | suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0,
        11,
        4,
        2
      ],
      "mod_code": [
        "bool n ;",
        "ans2 = suck | suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0,
        11,
        4,
        7
      ],
      "mod_code": [
        "bool n ;",
        "ans2 = suck | suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "ans1 = ans1 || suck ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0,
        6,
        4
      ],
      "mod_code": [
        "bool n ;",
        "suck >> suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0,
        6,
        4,
        2
      ],
      "mod_code": [
        "bool n ;",
        "suck >> suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0,
        6,
        4,
        7
      ],
      "mod_code": [
        "bool n ;",
        "suck >> suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "ans1 = ans1 || suck ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "bool n ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0,
        4,
        2
      ],
      "mod_code": [
        "bool n ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0,
        4,
        2,
        7
      ],
      "mod_code": [
        "bool n ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "n = getchar ( ) ;",
        "ans1 = ans1 || suck ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        0,
        4,
        7
      ],
      "mod_code": [
        "bool n ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "ans1 = ans1 || suck ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        6,
        4
      ],
      "mod_code": [
        "ans2 = suck | suck ;",
        "suck >> suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        6,
        4,
        2
      ],
      "mod_code": [
        "ans2 = suck | suck ;",
        "suck >> suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        6,
        4,
        7
      ],
      "mod_code": [
        "ans2 = suck | suck ;",
        "suck >> suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "ans1 = ans1 || suck ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "ans2 = suck | suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        4,
        2
      ],
      "mod_code": [
        "ans2 = suck | suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        4,
        2,
        7
      ],
      "mod_code": [
        "ans2 = suck | suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "n = getchar ( ) ;",
        "ans1 = ans1 || suck ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        11,
        4,
        7
      ],
      "mod_code": [
        "ans2 = suck | suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "ans1 = ans1 || suck ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "suck >> suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "suck >> suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        4,
        2,
        7
      ],
      "mod_code": [
        "suck >> suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "n = getchar ( ) ;",
        "ans1 = ans1 || suck ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        4,
        7
      ],
      "mod_code": [
        "suck >> suck ;",
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "ans1 = ans1 || suck ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        2,
        7
      ],
      "mod_code": [
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "n = getchar ( ) ;",
        "ans1 = ans1 || suck ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "int ans1 = 0 = 0 , ans2 = 0 ;",
        "ans1 = ans1 || suck ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    }
  ]
}