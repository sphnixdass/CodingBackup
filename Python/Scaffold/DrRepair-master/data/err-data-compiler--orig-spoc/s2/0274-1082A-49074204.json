{
  "meta": {
    "index": 274,
    "hitid": "334ZEL5JX69QFVB92R07RZP3EYPSOK",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1082A",
    "subid": "49074204"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer inf = ( int ) 2e9",
      "code": "int inf = ( int ) 2e9 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let int t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while t - - is truthy",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let ints n , x , y , and d",
      "code": "int n , x , y , d ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read n , x , y , and d",
      "code": "cin >> n >> x >> y >> d ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "create int ans = inf",
      "code": "int ans = inf ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if abs ( x - y ) modulo d is 0 , set ans = ( abs ( x - y ) / d )",
      "code": "if ( abs ( x - y ) % d == 0 ) { ans = ( abs ( x - y ) / d ) ; }",
      "indent": 2
    },
    {
      "line": 9,
      "text": "create integers val1 and val2",
      "code": "int val1 , val2 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set val1 to ( x - 1 ) / d",
      "code": "val1 = ( x - 1 ) / d ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if ( x - 1 ) modulo d is not 0 , increment val1",
      "code": "if ( ( x - 1 ) % d != 0 ) { val1 ++ ; }",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set val1 to val1 + ( y - 1 ) / d",
      "code": "val1 += ( y - 1 ) / d ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if ( y - 1 ) % d is not equal to 0 , set val1 to inf",
      "code": "if ( ( y - 1 ) % d != 0 ) { val1 = inf ; }",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set val2 to ( n - x ) / d",
      "code": "val2 = ( n - x ) / d ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if ( n - x ) % d is not equal to 0 , increment val2",
      "code": "if ( ( n - x ) % d != 0 ) { val2 ++ ; }",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set val2 to val2 + ( n - y ) / d",
      "code": "val2 += ( n - y ) / d ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if ( n - y ) modulo d is not equal to 0 , set val2 to inf",
      "code": "if ( ( n - y ) % d != 0 ) { val2 = inf ; }",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set ans to min ( ans , min ( val1 , val2 ) )",
      "code": "ans = min ( ans , min ( val1 , val2 ) ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if ans is equal to inf",
      "code": "if ( ans == inf )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print \" - 1 \"",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool t ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int n , x , y , d , d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "const int ans = inf ;"
      ],
      "err_line": 8,
      "err_msg": "assignment of read-only variable ‘ans’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int val1 = val2 ;"
      ],
      "err_line": 9,
      "err_msg": "‘val2’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "int val2 = ( n - x ) / d ;"
      ],
      "err_line": 14,
      "err_msg": "redeclaration of ‘int val2’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int ans = min ( ans , min ( val1 , val2 ) ) ;"
      ],
      "err_line": 18,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        20
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cout << \" -1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        20,
        19
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cout << \" -1 \" ;",
        "if ( ! ans )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        20,
        19,
        6
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cout << \" -1 \" ;",
        "if ( ! ans )",
        "cin >> n >> x , y >> d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        20,
        19,
        3
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cout << \" -1 \" ;",
        "if ( ! ans )",
        "t = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        20,
        19,
        10
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cout << \" -1 \" ;",
        "if ( ! ans )",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        20,
        6
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cout << \" -1 \" ;",
        "cin >> n >> x , y >> d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        20,
        6,
        3
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cout << \" -1 \" ;",
        "cin >> n >> x , y >> d ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        20,
        6,
        10
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cout << \" -1 \" ;",
        "cin >> n >> x , y >> d ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        20,
        3
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cout << \" -1 \" ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        20,
        3,
        10
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cout << \" -1 \" ;",
        "t = getchar ( ) ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        20,
        10
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cout << \" -1 \" ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        19
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "if ( ! ans )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        19,
        6
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "if ( ! ans )",
        "cin >> n >> x , y >> d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        19,
        6,
        3
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "if ( ! ans )",
        "cin >> n >> x , y >> d ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        19,
        6,
        10
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "if ( ! ans )",
        "cin >> n >> x , y >> d ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        19,
        3
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "if ( ! ans )",
        "t = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        19,
        3,
        10
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "if ( ! ans )",
        "t = getchar ( ) ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        19,
        10
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "if ( ! ans )",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cin >> n >> x , y >> d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cin >> n >> x , y >> d ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        6,
        3,
        10
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cin >> n >> x , y >> d ;",
        "t = getchar ( ) ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        6,
        10
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "cin >> n >> x , y >> d ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        3,
        10
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "t = getchar ( ) ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "int n , x , y , d , d ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        20,
        19,
        6,
        10
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "if ( ! ans )",
        "cin >> n >> x , y >> d ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        20,
        19,
        3,
        10
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "if ( ! ans )",
        "t = getchar ( ) ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        20,
        19,
        10
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "if ( ! ans )",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        20,
        6,
        3,
        10
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "cin >> n >> x , y >> d ;",
        "t = getchar ( ) ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        20,
        6,
        10
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "cin >> n >> x , y >> d ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        20,
        3,
        10
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "t = getchar ( ) ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        20,
        10
      ],
      "mod_code": [
        "cout << \" -1 \" ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        19,
        6,
        3,
        10
      ],
      "mod_code": [
        "if ( ! ans )",
        "cin >> n >> x , y >> d ;",
        "t = getchar ( ) ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        19,
        6,
        10
      ],
      "mod_code": [
        "if ( ! ans )",
        "cin >> n >> x , y >> d ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        19,
        3,
        10
      ],
      "mod_code": [
        "if ( ! ans )",
        "t = getchar ( ) ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        19,
        10
      ],
      "mod_code": [
        "if ( ! ans )",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        6,
        3,
        10
      ],
      "mod_code": [
        "cin >> n >> x , y >> d ;",
        "t = getchar ( ) ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "cin >> n >> x , y >> d ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "int val1 = ( x - 1 ) / d ;"
      ],
      "err_line": 10,
      "err_msg": "redeclaration of ‘int val1’"
    }
  ]
}