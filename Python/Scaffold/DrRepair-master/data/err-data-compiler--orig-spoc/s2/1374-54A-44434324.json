{
  "meta": {
    "index": 1374,
    "hitid": "3JMQI2OLFZZ2VLSF4M55HB3YNLEDN0",
    "workerid": "A1APYLD4DUK33J",
    "probid": "54A",
    "subid": "44434324"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer inf = 0x3f3f3f3f",
      "code": "const int inf = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare constant long long inf2 = 0x3f3f3f3f3f3f3f3f",
      "code": "const long long inf2 = 0x3f3f3f3f3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare constant double eps = 1e - 6",
      "code": "const double eps = 1e-6 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare constant integer mod = 1000000007",
      "code": "const int mod = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare boolean array is size 545",
      "code": "bool is [ 545 ] ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "set bytes from is to size of is to value 0",
      "code": "memset ( is , 0 , sizeof ( is ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare integers n , k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "declare integer c",
      "code": "int c ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "while decrement c is true",
      "code": "while ( c -- )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "declare integer x",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "let is [ x ] be true",
      "code": "is [ x ] = true ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "declare integers cnt = 0 , pr = 0",
      "code": "int cnt = 0 , pr = 0 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if is [ i ] is true",
      "code": "if ( is [ i ] )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "let cnt be 0",
      "code": "cnt = 0 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "increment pr",
      "code": "pr ++ ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if cnt is k",
      "code": "if ( cnt == k )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "let cnt be 0",
      "code": "cnt = 0 ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "increment pr",
      "code": "pr ++ ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print pr and newline",
      "code": "cout << pr << endl ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool array [ 545 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool arr [ 545 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( from ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n , k ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "c ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 13,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( is [ x ] )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int pr = 0 , pr = 0 ;"
      ],
      "err_line": 16,
      "err_msg": "redeclaration of ‘int pr’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "memset ( from , 0 , sizeof ( 0 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "c ;"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        0
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "c ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        13
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "c ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        9,
        21
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "c ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        0
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4,
        6,
        0,
        13
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "const inf = 0x3f3f3f3f ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4,
        6,
        0,
        21
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "const inf = 0x3f3f3f3f ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4,
        6,
        13
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        13,
        21
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        21
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "c ;"
      ],
      "err_line": 6,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        0
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "c ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4,
        9,
        0,
        13
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "c ;",
        "const inf = 0x3f3f3f3f ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4,
        9,
        0,
        21
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "c ;",
        "const inf = 0x3f3f3f3f ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4,
        9,
        13
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "c ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        21
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "c ;",
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        21
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "c ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4,
        0,
        13
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "const inf = 0x3f3f3f3f ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4,
        0,
        13,
        21
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "const inf = 0x3f3f3f3f ;",
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4,
        0,
        21
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "const inf = 0x3f3f3f3f ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        21
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        21
      ],
      "mod_code": [
        "bool array [ 545 ] ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘is’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "c ;"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        0
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "c ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6,
        9,
        0,
        13
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "c ;",
        "const inf = 0x3f3f3f3f ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6,
        9,
        0,
        21
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "c ;",
        "const inf = 0x3f3f3f3f ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6,
        9,
        13
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "c ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        13,
        21
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "c ;",
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        21
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "c ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6,
        0,
        13
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "const inf = 0x3f3f3f3f ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6,
        0,
        13,
        21
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "const inf = 0x3f3f3f3f ;",
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6,
        0,
        21
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "const inf = 0x3f3f3f3f ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13,
        21
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        21
      ],
      "mod_code": [
        "memset ( from , 0 , sizeof ( 0 ) ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘from’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "c ;",
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        0,
        13
      ],
      "mod_code": [
        "c ;",
        "const inf = 0x3f3f3f3f ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        0,
        13,
        21
      ],
      "mod_code": [
        "c ;",
        "const inf = 0x3f3f3f3f ;",
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        0,
        21
      ],
      "mod_code": [
        "c ;",
        "const inf = 0x3f3f3f3f ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "c ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        13,
        21
      ],
      "mod_code": [
        "c ;",
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "c ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        21
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        13,
        21
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "n"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}