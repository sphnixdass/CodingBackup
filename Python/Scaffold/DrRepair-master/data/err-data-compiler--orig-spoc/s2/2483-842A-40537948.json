{
  "meta": {
    "index": 2483,
    "hitid": "3OYHVNTV5TSSRCY1XIR50DYTX4EKOX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "842A",
    "subid": "40537948"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer variable inf = 0x3f3f3f3f",
      "code": "const int inf = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long ints l , r , x , y and k",
      "code": "long int l , r , x , y , k ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "bool function find with long int arguments start and end",
      "code": "bool find ( long int start , long int end )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create new long integer variable mid = ( start + end ) / 2",
      "code": "long int mid = ( start + end ) / 2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return false if start + 1 is equal to end",
      "code": "if ( start + 1 == end ) return false ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if mid * k is greater than r",
      "code": "if ( mid * k > r )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if find ( start , mid ) returned true",
      "code": "if ( find ( start , mid ) )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "return true",
      "code": "return true ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "return false",
      "code": "return false ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if mid * k is less than l",
      "code": "else if ( mid * k < l )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if find ( mid , end ) returned true",
      "code": "if ( find ( mid , end ) )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "return true",
      "code": "return true ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "return false",
      "code": "return false ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "return true",
      "code": "return true ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 19,
      "text": "create long long ints a , b , c , d and e",
      "code": "long long int a , b , c , d , e ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "read input to a , b , c , d and e",
      "code": "cin >> a >> b >> c >> d >> e ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = c to d inclusive incrementing i",
      "code": "for ( int i = c ; i <= d ; i ++ )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "declare new long long num with value i * e",
      "code": "long long num = i * e ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if num > = a and num < = b",
      "code": "if ( num >= a && num <= b )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "else if num is greater than b",
      "code": "else if ( num > b )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const inf = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( find ( start , mid ) ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 13,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( i = c ; i <= d ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        30
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" NO \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        30,
        6
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" NO \" ;",
        "if ( find ( start , mid ) ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        30,
        6,
        13
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" NO \" ;",
        "if ( find ( start , mid ) ) )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        30,
        6,
        24
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" NO \" ;",
        "if ( find ( start , mid ) ) )",
        "cout << \" YES \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        30,
        6,
        8
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" NO \" ;",
        "if ( find ( start , mid ) ) )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        30,
        13
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        30,
        13,
        24
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" NO \" ;",
        "n",
        "cout << \" YES \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        30,
        13,
        8
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" NO \" ;",
        "n",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        30,
        24
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" NO \" ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        30,
        24,
        8
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" NO \" ;",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        30,
        8
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "if ( find ( start , mid ) ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        6,
        13
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "if ( find ( start , mid ) ) )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        6,
        13,
        24
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "if ( find ( start , mid ) ) )",
        "n",
        "cout << \" YES \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        6,
        13,
        8
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "if ( find ( start , mid ) ) )",
        "n",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        6,
        24
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "if ( find ( start , mid ) ) )",
        "cout << \" YES \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        6,
        24,
        8
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "if ( find ( start , mid ) ) )",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        6,
        8
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "if ( find ( start , mid ) ) )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13,
        24
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "n",
        "cout << \" YES \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        13,
        24,
        8
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "n",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        8
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "n",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        24
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" YES \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        24,
        8
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "if ( find ( mid , end ) ) )",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        6
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "if ( find ( start , mid ) ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        30,
        6,
        13
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "if ( find ( start , mid ) ) )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        30,
        6,
        13,
        24
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "if ( find ( start , mid ) ) )",
        "n",
        "cout << \" YES \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        30,
        6,
        13,
        8
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "if ( find ( start , mid ) ) )",
        "n",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        30,
        6,
        24
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "if ( find ( start , mid ) ) )",
        "cout << \" YES \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        30,
        6,
        24,
        8
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "if ( find ( start , mid ) ) )",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        30,
        6,
        8
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "if ( find ( start , mid ) ) )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        30,
        13
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        13,
        24
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "n",
        "cout << \" YES \" ;"
      ],
      "err_line": 13,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        13,
        24,
        8
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "n",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        13,
        8
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "n",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        24,
        8
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        8
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "if ( find ( start , mid ) ) )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        13,
        24
      ],
      "mod_code": [
        "if ( find ( start , mid ) ) )",
        "n",
        "cout << \" YES \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        13,
        24,
        8
      ],
      "mod_code": [
        "if ( find ( start , mid ) ) )",
        "n",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        13,
        8
      ],
      "mod_code": [
        "if ( find ( start , mid ) ) )",
        "n",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        24
      ],
      "mod_code": [
        "if ( find ( start , mid ) ) )",
        "cout << \" YES \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        24,
        8
      ],
      "mod_code": [
        "if ( find ( start , mid ) ) )",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( find ( start , mid ) ) )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        24
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;"
      ],
      "err_line": 13,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        24,
        8
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        8
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}