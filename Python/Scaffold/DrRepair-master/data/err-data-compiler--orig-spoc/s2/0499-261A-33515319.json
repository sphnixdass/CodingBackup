{
  "meta": {
    "index": 499,
    "hitid": "3SX4X51T803MFZPFLREG6ZVXSSLOAN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "261A",
    "subid": "33515319"
  },
  "lines": [
    {
      "line": 0,
      "text": "a is a new array of integers with 100001 elements",
      "code": "int a [ 100001 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "q is a new array of integers with size 100001",
      "code": "int q [ 100001 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integer m",
      "code": "int m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read user input to m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read m elements from the input into q",
      "code": "for ( int i = 0 ; i < m ; i ++ ) { cin >> q [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare new integer called n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "start for loop from i = 0 to n exclusive , read input into a [ i ] on each iteration",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "sort a",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "sort q",
      "code": "sort ( q , q + m ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare integer variable with name sum and value 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "declare new integer called cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "in a for loop , change i from n - 1 to 0 inclusive counting down",
      "code": "for ( int i = n - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if q [ 0 ] is equal to cnt",
      "code": "if ( q [ 0 ] == cnt )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "decrement i",
      "code": "i -- ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "assign the new value = 0 to cnt",
      "code": "cnt = 0 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "change sum to the sum of sum and a [ i ]",
      "code": "sum += a [ i ] ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print sum",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘begin’ in ‘q’, which is of non-class type ‘int [100001]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "m ;"
      ],
      "err_line": 3,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int sum name ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘name’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "if ( q [ 0 ] == ' cnt ' )"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘begin’ in ‘q’, which is of non-class type ‘int [100001]’"
    },
    {
      "mod_line": [
        10,
        14,
        7
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "if ( q [ 0 ] == ' cnt ' )",
        "cin >> n >> n ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘begin’ in ‘q’, which is of non-class type ‘int [100001]’"
    },
    {
      "mod_line": [
        10,
        14,
        7,
        17
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "if ( q [ 0 ] == ' cnt ' )",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘begin’ in ‘q’, which is of non-class type ‘int [100001]’"
    },
    {
      "mod_line": [
        10,
        14,
        7,
        1
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "if ( q [ 0 ] == ' cnt ' )",
        "cin >> n >> n ;",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        14,
        17
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "if ( q [ 0 ] == ' cnt ' )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘begin’ in ‘q’, which is of non-class type ‘int [100001]’"
    },
    {
      "mod_line": [
        10,
        14,
        17,
        1
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "if ( q [ 0 ] == ' cnt ' )",
        "n",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        14,
        1
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "if ( q [ 0 ] == ' cnt ' )",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "cin >> n >> n ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘begin’ in ‘q’, which is of non-class type ‘int [100001]’"
    },
    {
      "mod_line": [
        10,
        7,
        17
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘begin’ in ‘q’, which is of non-class type ‘int [100001]’"
    },
    {
      "mod_line": [
        10,
        7,
        17,
        1
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "cin >> n >> n ;",
        "n",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        7,
        1
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "cin >> n >> n ;",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘begin’ in ‘q’, which is of non-class type ‘int [100001]’"
    },
    {
      "mod_line": [
        10,
        17,
        1
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "n",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "sort ( q . begin ( ) , q . end ( ) ) ;",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        14,
        7,
        17
      ],
      "mod_code": [
        "sort ( q , q + n ) ;",
        "if ( q [ 0 ] == ' cnt ' )",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        14,
        7,
        1
      ],
      "mod_code": [
        "sort ( q , q + n ) ;",
        "if ( q [ 0 ] == ' cnt ' )",
        "cin >> n >> n ;",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        14,
        17
      ],
      "mod_code": [
        "sort ( q , q + n ) ;",
        "if ( q [ 0 ] == ' cnt ' )",
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        14,
        17,
        1
      ],
      "mod_code": [
        "sort ( q , q + n ) ;",
        "if ( q [ 0 ] == ' cnt ' )",
        "n",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        14,
        1
      ],
      "mod_code": [
        "sort ( q , q + n ) ;",
        "if ( q [ 0 ] == ' cnt ' )",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        7,
        17
      ],
      "mod_code": [
        "sort ( q , q + n ) ;",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        7,
        17,
        1
      ],
      "mod_code": [
        "sort ( q , q + n ) ;",
        "cin >> n >> n ;",
        "n",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        7,
        1
      ],
      "mod_code": [
        "sort ( q , q + n ) ;",
        "cin >> n >> n ;",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        17
      ],
      "mod_code": [
        "sort ( q , q + n ) ;",
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        17,
        1
      ],
      "mod_code": [
        "sort ( q , q + n ) ;",
        "n",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "sort ( q , q + n ) ;",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        14,
        7,
        17
      ],
      "mod_code": [
        "if ( q [ 0 ] == ' cnt ' )",
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        7,
        17,
        1
      ],
      "mod_code": [
        "if ( q [ 0 ] == ' cnt ' )",
        "cin >> n >> n ;",
        "n",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        14,
        7,
        1
      ],
      "mod_code": [
        "if ( q [ 0 ] == ' cnt ' )",
        "cin >> n >> n ;",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "if ( q [ 0 ] == ' cnt ' )",
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        17,
        1
      ],
      "mod_code": [
        "if ( q [ 0 ] == ' cnt ' )",
        "n",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "if ( q [ 0 ] == ' cnt ' )",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        17,
        1
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "n",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    },
    {
      "mod_line": [
        17,
        1
      ],
      "mod_code": [
        "n",
        "q [ 100001 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘q’ does not name a type"
    }
  ]
}