{
  "meta": {
    "index": 260,
    "hitid": "3PZDSVZ3J5BPVP9MBB4CE79S9LLN4M",
    "workerid": "AIWEXPJAU66D9",
    "probid": "895A",
    "subid": "45145891"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer INF = 2e9",
      "code": "const int INF = ( int ) 2e9 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare constant double EPS = 1e - 9",
      "code": "const double EPS = ( double ) 1e-9 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare constant double PI = acos ( - 1 )",
      "code": "const double PI = ( double ) acos ( - 1 ) ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare constant long long MOD = 1e9 + 7",
      "code": "const long long MOD = ( long long ) 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "fast_io is an empty void function",
      "code": "void fast_io ( ) { }",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "n , maxi , tot and ke are integers where maxi = 360",
      "code": "int n , maxi = 360 , tot , ke ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let arr be integer array with size 400",
      "code": "int arr [ 400 ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for integer i = 0 to n exclusive read arr [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "set value of tot to 0",
      "code": "tot = 0 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set value of ke to i",
      "code": "ke = i ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "in the infinite loop",
      "code": "for ( ; ; )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increase tot by arr [ ke ]",
      "code": "tot += arr [ ke ] ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "increase ke",
      "code": "ke ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if tot > = 180",
      "code": "if ( tot >= 180 )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "maxi = min of maxi and tot - absolute value of ( 360 - tot )",
      "code": "maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if ke = n , set ke to 0",
      "code": "if ( ke == n ) ke = 0 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print maxi and \" \\ n \"",
      "code": "cout << maxi << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "* ke = i ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "int n , maxi , tot = 360 , ke ;",
        "* ke = i ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        12,
        17
      ],
      "mod_code": [
        "int n , maxi , tot = 360 , ke ;",
        "* ke = i ;",
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        12,
        17,
        16
      ],
      "mod_code": [
        "int n , maxi , tot = 360 , ke ;",
        "* ke = i ;",
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "if ( tot >= 4 )"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        12,
        17,
        7
      ],
      "mod_code": [
        "int n , maxi , tot = 360 , ke ;",
        "* ke = i ;",
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        12,
        16
      ],
      "mod_code": [
        "int n , maxi , tot = 360 , ke ;",
        "* ke = i ;",
        "if ( tot >= 4 )"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        6,
        12,
        16,
        7
      ],
      "mod_code": [
        "int n , maxi , tot = 360 , ke ;",
        "* ke = i ;",
        "if ( tot >= 4 )",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        12,
        7
      ],
      "mod_code": [
        "int n , maxi , tot = 360 , ke ;",
        "* ke = i ;",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        17,
        16,
        7
      ],
      "mod_code": [
        "int n , maxi , tot = 360 , ke ;",
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "if ( tot >= 4 )",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        17,
        7
      ],
      "mod_code": [
        "int n , maxi , tot = 360 , ke ;",
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        16,
        7
      ],
      "mod_code": [
        "int n , maxi , tot = 360 , ke ;",
        "if ( tot >= 4 )",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "int n , maxi , tot = 360 , ke ;",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "* ke = i ;",
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        17,
        6
      ],
      "mod_code": [
        "* ke = i ;",
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "int n , maxi , tot , ke = 360 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        17,
        6,
        16
      ],
      "mod_code": [
        "* ke = i ;",
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "int n , maxi , tot , ke = 360 ;",
        "if ( tot >= 4 )"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        17,
        6,
        7
      ],
      "mod_code": [
        "* ke = i ;",
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "int n , maxi , tot , ke = 360 ;",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        12,
        17,
        16
      ],
      "mod_code": [
        "* ke = i ;",
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "if ( tot >= 4 )"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        17,
        16,
        7
      ],
      "mod_code": [
        "* ke = i ;",
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "if ( tot >= 4 )",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        12,
        17,
        7
      ],
      "mod_code": [
        "* ke = i ;",
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "* ke = i ;",
        "int n , maxi , tot , ke = 360 ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        6,
        16
      ],
      "mod_code": [
        "* ke = i ;",
        "int n , maxi , tot , ke = 360 ;",
        "if ( tot >= 4 )"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        6,
        16,
        7
      ],
      "mod_code": [
        "* ke = i ;",
        "int n , maxi , tot , ke = 360 ;",
        "if ( tot >= 4 )",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        12,
        6,
        7
      ],
      "mod_code": [
        "* ke = i ;",
        "int n , maxi , tot , ke = 360 ;",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "* ke = i ;",
        "if ( tot >= 4 )"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        16,
        7
      ],
      "mod_code": [
        "* ke = i ;",
        "if ( tot >= 4 )",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "* ke = i ;",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        17,
        6,
        16,
        7
      ],
      "mod_code": [
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "int n , maxi , tot , ke = 360 ;",
        "if ( tot >= 4 )",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        17,
        6,
        7
      ],
      "mod_code": [
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "int n , maxi , tot , ke = 360 ;",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        17,
        16,
        7
      ],
      "mod_code": [
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "if ( tot >= 4 )",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        17,
        7
      ],
      "mod_code": [
        "int maxi = min ( maxi , tot - abs ( 360 - tot ) ) ;",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        16,
        7
      ],
      "mod_code": [
        "int n , maxi , tot , ke = 360 ;",
        "if ( tot >= 4 )",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "int n , maxi , tot , ke = 360 ;",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        16,
        7
      ],
      "mod_code": [
        "if ( tot >= 4 )",
        "int * arr [ 400 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    }
  ]
}