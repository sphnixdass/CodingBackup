{
  "meta": {
    "index": 121,
    "hitid": "3KTCJ4SCVGV2L8R3CS6A3UDPTY01MX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "411A",
    "subid": "19012774"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s is a new string variable",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integers i , k , l and q",
      "code": "int i , k , l , q ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read data from the input and put it into s",
      "code": "getline ( cin , s ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "in a for loop , change i from 0 to length of s exclusive",
      "code": "for ( i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set k to 1 if the value of s [ i ] is between 47 and 58 exclusive",
      "code": "if ( ( int ) ( s [ i ] ) > 47 && ( int ) ( s [ i ] ) < 58 ) { k = 1 ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if 64 < s [ i ] < 90 , change the value of l to 1",
      "code": "if ( ( int ) ( s [ i ] ) > 64 && ( int ) ( s [ i ] ) < 90 ) { l = 1 ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s [ i ] > 96 and s [ i ] < 123 , change q to 1",
      "code": "if ( ( int ) ( s [ i ] ) > 96 && ( int ) ( s [ i ] ) < 123 ) { q = 1 ; }",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if length of s > 4 and k , l and q are equal to 1",
      "code": "if ( s . length ( ) > 4 && k == 1 && l == 1 && q == 1 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" Correct \"",
      "code": "cout << \" Correct \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" Too weak \" to the standard output",
      "code": "cout << \" Too weak \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "k = ( s [ i ] > 47 && 58 [ i ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , k , l , q ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "memset ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "k = ( s [ i ] > 47 && 58 [ i ] ) ;",
        "cout << \" Correct \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        10,
        12
      ],
      "mod_code": [
        "k = ( s [ i ] > 47 && 58 [ i ] ) ;",
        "cout << \" Correct \" ;",
        "cout << \" 2/3 \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        10,
        12,
        3
      ],
      "mod_code": [
        "k = ( s [ i ] > 47 && 58 [ i ] ) ;",
        "cout << \" Correct \" ;",
        "cout << \" 2/3 \" ;",
        "memset ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        5,
        10,
        3
      ],
      "mod_code": [
        "k = ( s [ i ] > 47 && 58 [ i ] ) ;",
        "cout << \" Correct \" ;",
        "memset ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        5,
        10,
        3,
        12
      ],
      "mod_code": [
        "k = ( s [ i ] > 47 && 58 [ i ] ) ;",
        "cout << \" Correct \" ;",
        "memset ( cin , s ) ;",
        "cout << \" Too \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        5,
        10,
        12
      ],
      "mod_code": [
        "k = ( s [ i ] > 47 && 58 [ i ] ) ;",
        "cout << \" Correct \" ;",
        "cout << \" Too \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "k = ( s [ i ] > 47 && 58 [ i ] ) ;",
        "cout << \" 2/3 \" ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        12,
        3
      ],
      "mod_code": [
        "k = ( s [ i ] > 47 && 58 [ i ] ) ;",
        "cout << \" 2/3 \" ;",
        "memset ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "k = ( s [ i ] > 47 && 58 [ i ] ) ;",
        "memset ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        5,
        3,
        12
      ],
      "mod_code": [
        "k = ( s [ i ] > 47 && 58 [ i ] ) ;",
        "memset ( cin , s ) ;",
        "cout << \" Too \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "k = ( s [ i ] > 47 && 58 [ i ] ) ;",
        "cout << \" Too \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        12,
        3
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" 2/3 \" ;",
        "memset ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        10,
        12,
        3,
        5
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" 2/3 \" ;",
        "memset ( cin , s ) ;",
        "if ( s [ i ] > 47 && s [ i ] < 47 ) { k = 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "memset ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        10,
        3,
        12
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "memset ( cin , s ) ;",
        "cout << \" Too \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        10,
        3,
        12,
        5
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "memset ( cin , s ) ;",
        "cout << \" Too \" << endl ;",
        "if ( s [ i ] > 47 && s [ i ] < 47 ) { k = 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        10,
        3,
        5
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "memset ( cin , s ) ;",
        "if ( s [ i ] > 47 && s [ i ] < 47 ) { k = 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "memset ( cin , s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        12,
        3,
        5
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "memset ( cin , s ) ;",
        "if ( s [ i ] > 47 && s [ i ] < 47 ) { k = 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "memset ( cin , s ) ;",
        "cout << \" Too \" << endl ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        3,
        12,
        5
      ],
      "mod_code": [
        "memset ( cin , s ) ;",
        "cout << \" Too \" << endl ;",
        "if ( s [ i ] > 47 && s [ i ] < 47 ) { k = 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "memset ( cin , s ) ;",
        "if ( s [ i ] > 47 && s [ i ] < 47 ) { k = 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int’ for argument ‘2’ to ‘void* memset(void*, int, size_t)’"
    }
  ]
}