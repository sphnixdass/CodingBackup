{
  "meta": {
    "index": 354,
    "hitid": "3FO95NVK5CUTC83PUJHBLUU8PL7SRR",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "814A",
    "subid": "49039498"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers : i , j , n , sum = 0 , zero = 0 , m , flag = 0 , x , y",
      "code": "int i , j , n , sum = 0 , zero = 0 , m , flag = 0 , x , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let a , b be int arrays with a of length n and b of length m",
      "code": "int a [ n ] , b [ m ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if a [ i ] is 0",
      "code": "if ( a [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set x = i - 1",
      "code": "x = i - 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set y = i + 1",
      "code": "y = i + 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment zero",
      "code": "zero ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if i , a [ i - 1 ] are not 0 and flag isn ' t 1",
      "code": "else if ( i != 0 && a [ i - 1 ] != 0 && flag != 1 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if a [ i ] < = a [ i - 1 ] then set flag to 1",
      "code": "if ( a [ i ] <= a [ i - 1 ] ) flag = 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "read b m times",
      "code": "for ( i = 0 ; i < m ; i ++ ) { cin >> b [ i ] ; }",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if zero < m",
      "code": "if ( zero < m )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "set flag to 0",
      "code": "flag = 0 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else if zero > 1",
      "code": "else if ( zero > 1 )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else if flag isn ' t 1 and zero is 1",
      "code": "else if ( flag != 1 && zero == 1 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to m",
      "code": "for ( i = 0 ; i < m ; i ++ )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if x is - 1",
      "code": "if ( x == - 1 )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "if b at i > = a at y",
      "code": "if ( b [ i ] >= a [ y ] )",
      "indent": 4
    },
    {
      "line": 23,
      "text": "set flag = 1",
      "code": "flag = 1 ;",
      "indent": 5
    },
    {
      "line": 24,
      "text": "exit loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 26,
      "text": "else if y is n",
      "code": "else if ( y == n )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "if a at x > = b at i",
      "code": "if ( a [ x ] >= b [ i ] )",
      "indent": 4
    },
    {
      "line": 28,
      "text": "set flag = 0",
      "code": "flag = 1 ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "exit loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 31,
      "text": "else if a [ x ] > = b [ i ] or b [ i ] > = a [ y ]",
      "code": "else if ( a [ x ] >= b [ i ] || b [ i ] >= a [ y ] )",
      "indent": 3
    },
    {
      "line": 32,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "if flag is not 0",
      "code": "if ( flag )",
      "indent": 1
    },
    {
      "line": 38,
      "text": "print Yes",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 39,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 40,
      "text": "print No",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , j , n , sum = 0 , zero = 0 , zero = 0 , x , y , y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int zero’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int b’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> a . at ( i ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘at’ in ‘a’, which is of non-class type ‘int [n]’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] != 0 && flag )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘int [m]’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "if ( a . at ( x ) >= b [ i ] )"
      ],
      "err_line": 27,
      "err_msg": "request for member ‘at’ in ‘a’, which is of non-class type ‘int [n]’"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 40,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( i [ i - 1 ] && a [ i - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        10,
        19
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "else if ( flag )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        10,
        19,
        40
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "else if ( flag )",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        10,
        19,
        9
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "else if ( flag )",
        "zero -- ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        10,
        19,
        22
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "else if ( flag )",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        10,
        40
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        10,
        40,
        9
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "cout << \" NO\\n \" ;",
        "zero -- ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        10,
        40,
        22
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "cout << \" NO\\n \" ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        10,
        9
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "zero -- ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        10,
        9,
        22
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "zero -- ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        10,
        22
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( flag )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        19,
        40
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( flag )",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        19,
        40,
        9
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( flag )",
        "cout << \" NO\\n \" ;",
        "zero -- ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        19,
        40,
        22
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( flag )",
        "cout << \" NO\\n \" ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        19,
        9
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( flag )",
        "zero -- ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        19,
        9,
        22
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( flag )",
        "zero -- ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        19,
        22
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "else if ( flag )",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        40
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        40,
        9
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "cout << \" NO\\n \" ;",
        "zero -- ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        40,
        9,
        22
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "cout << \" NO\\n \" ;",
        "zero -- ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        40,
        22
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "cout << \" NO\\n \" ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "zero -- ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        9,
        22
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "zero -- ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        3,
        22
      ],
      "mod_code": [
        "int a [ n ] , b [ m ] , b [ m ] ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b [m]’"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "else if ( flag )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        19,
        40
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "else if ( flag )",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        19,
        40,
        9
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "else if ( flag )",
        "cout << \" NO\\n \" ;",
        "zero -- ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        19,
        40,
        22
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "else if ( flag )",
        "cout << \" NO\\n \" ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        19,
        9
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "else if ( flag )",
        "zero -- ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        19,
        9,
        22
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "else if ( flag )",
        "zero -- ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        19,
        22
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "else if ( flag )",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        40
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        40,
        9
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "cout << \" NO\\n \" ;",
        "zero -- ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        40,
        9,
        22
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "cout << \" NO\\n \" ;",
        "zero -- ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        40,
        22
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "cout << \" NO\\n \" ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "zero -- ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        9,
        22
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "zero -- ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        22
      ],
      "mod_code": [
        "else if ( i [ i - 1 ] && a [ i - 1 ] )",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        40,
        9,
        22
      ],
      "mod_code": [
        "else if ( flag )",
        "cout << \" NO\\n \" ;",
        "zero -- ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘int [m]’"
    },
    {
      "mod_line": [
        19,
        40,
        22
      ],
      "mod_code": [
        "else if ( flag )",
        "cout << \" NO\\n \" ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘int [m]’"
    },
    {
      "mod_line": [
        19,
        9,
        22
      ],
      "mod_code": [
        "else if ( flag )",
        "zero -- ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘int [m]’"
    },
    {
      "mod_line": [
        19,
        22
      ],
      "mod_code": [
        "else if ( flag )",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘int [m]’"
    },
    {
      "mod_line": [
        40,
        9,
        22
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;",
        "zero -- ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘int [m]’"
    },
    {
      "mod_line": [
        40,
        22
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘int [m]’"
    },
    {
      "mod_line": [
        9,
        22
      ],
      "mod_code": [
        "zero -- ;",
        "if ( b = a [ i ] >= a [ y ] )"
      ],
      "err_line": 22,
      "err_msg": "incompatible types in assignment of ‘bool’ to ‘int [m]’"
    }
  ]
}