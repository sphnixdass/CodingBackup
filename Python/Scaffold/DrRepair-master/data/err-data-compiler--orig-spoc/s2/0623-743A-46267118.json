{
  "meta": {
    "index": 623,
    "hitid": "3ULIZ0H1VAZ4D16XKTPOMS23736153",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "743A",
    "subid": "46267118"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant long long int mod = 998244353",
      "code": "const long long mod = 998244353 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create const long long int inf = 2e18",
      "code": "const long long inf = 2e18 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let const int maxn = 200005",
      "code": "const int maxn = 200005 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let const int maxa = 300005",
      "code": "const int maxa = 300005 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare gcd taking in long long ints a and b and returning long long",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "return gcd ( b , a % b ) if b is truthy or a if not",
      "code": "return b ? gcd ( b , a % b ) : a ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare powmod taking in long long ints a and b and returning long long",
      "code": "long long powmod ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "let long long in res = 1",
      "code": "long long res = 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set a to a % mod",
      "code": "a %= mod ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if b is less than 0 , return - 1",
      "code": "if ( b < 0 ) return - 1 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "loop until b is falsy",
      "code": "for ( ; b ; b >>= 1 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if b & 1 is truthy , set res to res * a % mod",
      "code": "if ( b & 1 ) res = res * a % mod ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set a to a * a % mod",
      "code": "a = a * a % mod ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "return res",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 17,
      "text": "let int INF = 10000000",
      "code": "int INF = 10000000 ;",
      "indent": 0
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 19,
      "text": "let int T",
      "code": "int T ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "create ints n , m , l , r",
      "code": "int n , m , l , r ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "create int ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "create string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "read n , l , and r",
      "code": "cin >> n >> l >> r ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "create str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "let int array a of size maxn",
      "code": "int a [ maxn ] ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "for i = 0 to n exclusive , set a [ i + 1 ] to str [ i ] - ' 0 '",
      "code": "for ( int i = 0 ; i < n ; i ++ ) a [ i + 1 ] = str [ i ] - ' 0 ' ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if a [ l ] is equal to a [ r ] , return the result of 0 * puts ( \" 0 \" )",
      "code": "if ( a [ l ] == a [ r ] ) return 0 * puts ( \" 0 \" ) ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print \" 1 \"",
      "code": "puts ( \" 1 \" ) ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "int str ;"
      ],
      "err_line": 24,
      "err_msg": "conflicting declaration ‘int str’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "long long gcd ( long long a and long long b )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "long long powmod ( long long a and long long b )"
      ],
      "err_line": 7,
      "err_msg": "expected ‘,’ or ‘...’ before ‘and’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "n , m , l , r ;"
      ],
      "err_line": 20,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "string str << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "void str ;"
      ],
      "err_line": 24,
      "err_msg": "variable or field ‘str’ declared void"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "int arr [ maxn ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        24
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "int str ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        24,
        2
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "int str ;",
        "const int maxn = 1e9 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        24,
        2,
        22
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "int str ;",
        "const int maxn = 1e9 ;",
        "string str << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        24,
        2,
        28
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "int str ;",
        "const int maxn = 1e9 ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        24,
        2,
        25
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "int str ;",
        "const int maxn = 1e9 ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        24,
        22
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "int str ;",
        "string str << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        24,
        22,
        28
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "int str ;",
        "string str << endl ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        24,
        22,
        25
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "int str ;",
        "string str << endl ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        24,
        28
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "int str ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        24,
        28,
        25
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "int str ;",
        "cout << \" 1 \" ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        24,
        25
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "int str ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "const int maxn = 1e9 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        2,
        22
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "const int maxn = 1e9 ;",
        "string str << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        2,
        22,
        28
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "const int maxn = 1e9 ;",
        "string str << endl ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        2,
        22,
        25
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "const int maxn = 1e9 ;",
        "string str << endl ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        2,
        28
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "const int maxn = 1e9 ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        2,
        28,
        25
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "const int maxn = 1e9 ;",
        "cout << \" 1 \" ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        2,
        25
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "const int maxn = 1e9 ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        22
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "string str << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        22,
        28
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "string str << endl ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        22,
        28,
        25
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "string str << endl ;",
        "cout << \" 1 \" ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        22,
        25
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "string str << endl ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        28
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        28,
        25
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "cout << \" 1 \" ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        25
      ],
      "mod_code": [
        "return b ? gcd ( b , a % b ) ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        24,
        2
      ],
      "mod_code": [
        "int str ;",
        "const int maxn = 1e9 ;"
      ],
      "err_line": 24,
      "err_msg": "conflicting declaration ‘int str’"
    },
    {
      "mod_line": [
        24,
        2,
        22
      ],
      "mod_code": [
        "int str ;",
        "const int maxn = 1e9 ;",
        "string str << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        24,
        2,
        22,
        28
      ],
      "mod_code": [
        "int str ;",
        "const int maxn = 1e9 ;",
        "string str << endl ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        24,
        2,
        22,
        25
      ],
      "mod_code": [
        "int str ;",
        "const int maxn = 1e9 ;",
        "string str << endl ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        24,
        2,
        28
      ],
      "mod_code": [
        "int str ;",
        "const int maxn = 1e9 ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 24,
      "err_msg": "conflicting declaration ‘int str’"
    },
    {
      "mod_line": [
        24,
        2,
        28,
        25
      ],
      "mod_code": [
        "int str ;",
        "const int maxn = 1e9 ;",
        "cout << \" 1 \" ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 24,
      "err_msg": "conflicting declaration ‘int str’"
    },
    {
      "mod_line": [
        24,
        2,
        25
      ],
      "mod_code": [
        "int str ;",
        "const int maxn = 1e9 ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 24,
      "err_msg": "conflicting declaration ‘int str’"
    },
    {
      "mod_line": [
        24,
        22
      ],
      "mod_code": [
        "int str ;",
        "string str << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        24,
        22,
        28
      ],
      "mod_code": [
        "int str ;",
        "string str << endl ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        24,
        22,
        28,
        25
      ],
      "mod_code": [
        "int str ;",
        "string str << endl ;",
        "cout << \" 1 \" ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        24,
        22,
        25
      ],
      "mod_code": [
        "int str ;",
        "string str << endl ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        24,
        28
      ],
      "mod_code": [
        "int str ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 24,
      "err_msg": "conflicting declaration ‘int str’"
    },
    {
      "mod_line": [
        24,
        28,
        25
      ],
      "mod_code": [
        "int str ;",
        "cout << \" 1 \" ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 24,
      "err_msg": "conflicting declaration ‘int str’"
    },
    {
      "mod_line": [
        24,
        25
      ],
      "mod_code": [
        "int str ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 24,
      "err_msg": "conflicting declaration ‘int str’"
    },
    {
      "mod_line": [
        2,
        22
      ],
      "mod_code": [
        "const int maxn = 1e9 ;",
        "string str << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        22,
        28
      ],
      "mod_code": [
        "const int maxn = 1e9 ;",
        "string str << endl ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        22,
        28,
        25
      ],
      "mod_code": [
        "const int maxn = 1e9 ;",
        "string str << endl ;",
        "cout << \" 1 \" ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        22,
        25
      ],
      "mod_code": [
        "const int maxn = 1e9 ;",
        "string str << endl ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        28,
        25
      ],
      "mod_code": [
        "const int maxn = 1e9 ;",
        "cout << \" 1 \" ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        25
      ],
      "mod_code": [
        "const int maxn = 1e9 ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        28
      ],
      "mod_code": [
        "string str << endl ;",
        "cout << \" 1 \" ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        22,
        28,
        25
      ],
      "mod_code": [
        "string str << endl ;",
        "cout << \" 1 \" ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        22,
        25
      ],
      "mod_code": [
        "string str << endl ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 22,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        25
      ],
      "mod_code": [
        "cout << \" 1 \" ;",
        "int arr [ maxn ] ;"
      ],
      "err_line": 26,
      "err_msg": "‘a’ was not declared in this scope"
    }
  ]
}