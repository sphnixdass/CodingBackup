{
  "meta": {
    "index": 279,
    "hitid": "386T3MLZLNPNTU4HM8SRK7TK413083",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1082A",
    "subid": "48520526"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers t , i",
      "code": "int t , i ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare long integer array e size t",
      "code": "long int e [ t ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to t exclusive",
      "code": "for ( i = 0 ; i < t ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare doubles n , x , y , d , a , b , c",
      "code": "double n , x , y , d , a , b , c ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read n , x , y , d",
      "code": "cin >> n >> x >> y >> d ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if fractional result of ( absolute value of ( y - x ) / d , address of a ) is not 0",
      "code": "if ( modf ( abs ( y - x ) / d , & a ) != 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "let a be INT_MAX",
      "code": "a = INT_MAX ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "end statement",
      "code": ";",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if fractional result of ( absolute value of ( y - 1 ) / d , address of b ) is 0",
      "code": "if ( modf ( abs ( y - 1 ) / d , & b ) == 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment b by round up ( absolute value of ( x - 1 ) / d )",
      "code": "b += ceil ( abs ( x - 1 ) / d ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "let b be INT_MAX",
      "code": "b = INT_MAX ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if fractional result of ( absolute value of ( n - y ) / d , address of c ) is 0",
      "code": "if ( modf ( abs ( n - y ) / d , & c ) == 0 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increment c by round up ( absolute value of ( n - x ) / d )",
      "code": "c += ceil ( abs ( n - x ) / d ) ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "let c be INT_MAX",
      "code": "c = INT_MAX ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if a is INT_MAX and c is INT_MAX and b is INT_MAX",
      "code": "if ( a == INT_MAX && c == INT_MAX && b == INT_MAX )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "let e [ i ] be - 1",
      "code": "e [ i ] = - 1 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "let e [ i ] be minimum of ( minimum of ( a and b ) and c )",
      "code": "e [ i ] = ( min ( min ( a , b ) , c ) ) ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for i = 0 to t exclusive , print e [ i ] , newline",
      "code": "for ( i = 0 ; i < t ; i ++ ) cout << e [ i ] << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , i ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int n , x , y , d , a , b , c ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘modf(int, int*)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( fractional % ( ( abs ( y - x ) / d , a ) ) != 0 )"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "<< endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( fractional % ( ( y - 1 ) / d , b ) == 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "b += max ( abs ( x - 1 ) / d ) ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘max(double)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )"
      ],
      "err_line": 15,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "e [ i ] = min ( min ( a , b ) ) ;"
      ],
      "err_line": 22,
      "err_msg": "no matching function for call to ‘min(const double&)’"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        15
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        10
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )",
        "<< endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )",
        "int b = INT_MAX ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        15
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        10
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )",
        "<< endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        15,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )",
        "int b = INT_MAX ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        10
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "<< endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        10,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "<< endl ;",
        "int b = INT_MAX ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "int b = INT_MAX ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        10
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )",
        "<< endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        10,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )",
        "<< endl ;",
        "int b = INT_MAX ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )",
        "int b = INT_MAX ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        10
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )",
        "<< endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        10,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )",
        "<< endl ;",
        "int b = INT_MAX ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )",
        "int b = INT_MAX ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "<< endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        10,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "<< endl ;",
        "int b = INT_MAX ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - x ) / d , a ) != 0 )",
        "int b = INT_MAX ;"
      ],
      "err_line": 7,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        10
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )",
        "<< endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        15,
        10,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )",
        "<< endl ;",
        "int b = INT_MAX ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        15,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )",
        "int b = INT_MAX ;"
      ],
      "err_line": 11,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        10
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )",
        "<< endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        15,
        10,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )",
        "<< endl ;",
        "int b = INT_MAX ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        15,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )",
        "int b = INT_MAX ;"
      ],
      "err_line": 11,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "<< endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        10,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "<< endl ;",
        "int b = INT_MAX ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( y - 1 ) / d , b ) == 0 )",
        "int b = INT_MAX ;"
      ],
      "err_line": 11,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )",
        "<< endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        10,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )",
        "<< endl ;",
        "int b = INT_MAX ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "if ( fractional % ( abs ( n - y ) / d , c ) == 0 )",
        "int b = INT_MAX ;"
      ],
      "err_line": 15,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )",
        "<< endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        10,
        14
      ],
      "mod_code": [
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )",
        "<< endl ;",
        "int b = INT_MAX ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "if ( fractional % ( ( n - y ) / d , c ) == 0 )",
        "int b = INT_MAX ;"
      ],
      "err_line": 15,
      "err_msg": "‘fractional’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "<< endl ;",
        "int b = INT_MAX ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    }
  ]
}