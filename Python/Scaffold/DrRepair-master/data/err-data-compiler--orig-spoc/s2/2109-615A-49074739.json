{
  "meta": {
    "index": 2109,
    "hitid": "35XW21VSVG8I9A8CPZKFZIL9JTILSU",
    "workerid": "A2O34N3Y3RJLJ6",
    "probid": "615A",
    "subid": "49074739"
  },
  "lines": [
    {
      "line": 0,
      "text": "define ints n , a , b , sum , h , and ans",
      "code": "int n , a , b , sum , h , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "define 1 , 000 - element Boolean array cek",
      "code": "bool cek [ 1000 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n and h",
      "code": "cin >> n >> h ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for int i by 1 from 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for int j from 1 to a by 1",
      "code": "for ( int j = 1 ; j <= a ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read into b",
      "code": "cin >> b ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "cek [ b ] = 1",
      "code": "cek [ b ] = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for int i from 1 to h by 1",
      "code": "for ( int i = 1 ; i <= h ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if ! cek [ i ]",
      "code": "if ( ! cek [ i ] )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" NO \" followed by newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" YES \" and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int cek , cek [ element ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "getline ( cin , a ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "getline ( cin , b ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "cin >> n >> n ;"
      ],
      "err_line": 1,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        7
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "cin >> n >> n ;",
        "getline ( cin , b ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        11
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "cin >> n >> n ;",
        "getline ( cin , b ) ;",
        "for ( int i = 1 ; i < h ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        0
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "cin >> n >> n ;",
        "getline ( cin , b ) ;",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        3,
        11
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "cin >> n >> n ;",
        "for ( int i = 1 ; i < h ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        11,
        0
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "cin >> n >> n ;",
        "for ( int i = 1 ; i < h ; i ++ )",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        3,
        0
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "cin >> n >> n ;",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "getline ( cin , b ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        11
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "getline ( cin , b ) ;",
        "for ( int i = 1 ; i < h ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        11,
        0
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "getline ( cin , b ) ;",
        "for ( int i = 1 ; i < h ; i ++ )",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        7,
        0
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "getline ( cin , b ) ;",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "for ( int i = 1 ; i < h ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘element’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        0
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "for ( int i = 1 ; i < h ; i ++ )",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "int cek , cek [ element ] ;",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "getline ( cin , b ) ;"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        3,
        7,
        11
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "getline ( cin , b ) ;",
        "for ( int i = 1 ; i < h ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        3,
        7,
        11,
        0
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "getline ( cin , b ) ;",
        "for ( int i = 1 ; i < h ; i ++ )",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        7,
        11,
        1
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "getline ( cin , b ) ;",
        "for ( int i = 1 ; i < h ; i ++ )",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        7,
        0
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "getline ( cin , b ) ;",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        7,
        0,
        1
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "getline ( cin , b ) ;",
        "int n , a , b , sum , h , ans , ans ;",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        7,
        1
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "getline ( cin , b ) ;",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        11,
        0
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "for ( int i = 1 ; i < h ; i ++ )",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        11,
        0,
        1
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "for ( int i = 1 ; i < h ; i ++ )",
        "int n , a , b , sum , h , ans , ans ;",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        11,
        1
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "for ( int i = 1 ; i < h ; i ++ )",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        0,
        1
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int n , a , b , sum , h , ans , ans ;",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "getline ( cin , b ) ;",
        "for ( int i = 1 ; i < h ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        7,
        11,
        0
      ],
      "mod_code": [
        "getline ( cin , b ) ;",
        "for ( int i = 1 ; i < h ; i ++ )",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        7,
        11,
        0,
        1
      ],
      "mod_code": [
        "getline ( cin , b ) ;",
        "for ( int i = 1 ; i < h ; i ++ )",
        "int n , a , b , sum , h , ans , ans ;",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        7,
        11,
        1
      ],
      "mod_code": [
        "getline ( cin , b ) ;",
        "for ( int i = 1 ; i < h ; i ++ )",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "getline ( cin , b ) ;",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        7,
        0,
        1
      ],
      "mod_code": [
        "getline ( cin , b ) ;",
        "int n , a , b , sum , h , ans , ans ;",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "getline ( cin , b ) ;",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "for ( int i = 1 ; i < h ; i ++ )",
        "int n , a , b , sum , h , ans , ans ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        0,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i < h ; i ++ )",
        "int n , a , b , sum , h , ans , ans ;",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "for ( int i = 1 ; i < h ; i ++ )",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int n , a , b , sum , h , ans , ans ;",
        "int cek [ 1 ] , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int ans’"
    }
  ]
}