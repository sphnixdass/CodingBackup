{
  "meta": {
    "index": 167,
    "hitid": "33K3E8REWWPVQKASPKHYTLGVE8R8X9",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "875A",
    "subid": "41200850"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = int array of size 10000000",
      "code": "long int a [ 10000000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "m = int with m = 0",
      "code": "int m = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "len = int with len = 0",
      "code": "int len = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "aa = int with aa = n",
      "code": "int aa = n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "loop while aa",
      "code": "while ( aa )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "increment len",
      "code": "len ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set aa to aa / 10",
      "code": "aa /= 10 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = n - len * 9 to n",
      "code": "for ( int i = n - len * 9 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "sum , p = int with sum = i and p = i",
      "code": "int sum = i , p = i ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "loop while p",
      "code": "while ( p )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment sum by p mod 10",
      "code": "sum += p % 10 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set p to p / 10",
      "code": "p /= 10 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if sum is n set a [ m ] to i then increment m",
      "code": "if ( sum == n ) { a [ m ++ ] = i ; }",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print m",
      "code": "cout << m << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to m print a [ i ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) { cout << a [ i ] << endl ; }",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int * m = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int * aa = n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int sum = i , sum = i ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        20,
        7,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cout << a [ i ] ;",
        "while ( 1 )",
        "int * m = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        7,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cout << a [ i ] ;",
        "while ( 1 )",
        "int * m = 0 ;",
        "bool n ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        7,
        4,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cout << a [ i ] ;",
        "while ( 1 )",
        "int * m = 0 ;",
        "if ( sum == n ) a [ m ] = i + m ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cout << a [ i ] ;",
        "int * m = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cout << a [ i ] ;",
        "int * m = 0 ;",
        "bool n ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        4,
        2,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cout << a [ i ] ;",
        "int * m = 0 ;",
        "bool n ;",
        "if ( sum == n ) a [ m ] = i + m ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        4,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) cout << a [ i ] ;",
        "int * m = 0 ;",
        "if ( sum == n ) a [ m ] = i + m ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        7,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) { cout << a [ i ] ; }",
        "while ( 1 )",
        "int * m = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        7,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) { cout << a [ i ] ; }",
        "while ( 1 )",
        "int * m = 0 ;",
        "bool n ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        7,
        4,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) { cout << a [ i ] ; }",
        "while ( 1 )",
        "int * m = 0 ;",
        "if ( sum == n ) a [ m ] = i + m ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) { cout << a [ i ] ; }",
        "int * m = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) { cout << a [ i ] ; }",
        "int * m = 0 ;",
        "bool n ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        4,
        2,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) { cout << a [ i ] ; }",
        "int * m = 0 ;",
        "bool n ;",
        "if ( sum == n ) a [ m ] = i + m ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        4,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < m ; i ++ ) { cout << a [ i ] ; }",
        "int * m = 0 ;",
        "if ( sum == n ) a [ m ] = i + m ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "while ( 1 )",
        "int * m = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "while ( 1 )",
        "int * m = 0 ;",
        "bool n ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4,
        2,
        17
      ],
      "mod_code": [
        "while ( 1 )",
        "int * m = 0 ;",
        "bool n ;",
        "if ( sum == n ) a [ m ] = i + m ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        4,
        17
      ],
      "mod_code": [
        "while ( 1 )",
        "int * m = 0 ;",
        "if ( sum == n ) a [ m ] = i + m ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "int * m = 0 ;",
        "bool n ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        2,
        17
      ],
      "mod_code": [
        "int * m = 0 ;",
        "bool n ;",
        "if ( sum == n ) a [ m ] = i + m ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "int * m = 0 ;",
        "if ( sum == n ) a [ m ] = i + m ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘long int [10000000][int*]’ for array subscript"
    }
  ]
}