{
  "meta": {
    "index": 1895,
    "hitid": "3QD8LUVX4XSC32RQRMAVH164CIOX5U",
    "workerid": "AIWEXPJAU66D9",
    "probid": "460A",
    "subid": "48691916"
  },
  "lines": [
    {
      "line": 0,
      "text": "inlined char function small_letter with char argument ch",
      "code": "inline char small_letter ( char ch )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return ch + 32 if ch < 97 , and ch otherwise",
      "code": "return ( ch < 97 ) ? ch + 32 : ch ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare unsigned long long variables n , m , ans , i and temp",
      "code": "unsigned long long n , m , ans , i , temp ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read standard input to n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "start a loop from ans = n , temp = n and i = 0 while temp > 0 , changing ans to ans * m + n , temp to temp / m and i to i + 1",
      "code": "for ( ans = n , temp = n , i = 0 ; temp > 0 ; ans = ans * m + n , temp /= m , i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": ";",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print ans / pow ( m , i ) casted to int",
      "code": "cout << int ( ans / pow ( m , i ) ) << endl ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "inline char small_letter ( char ch ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 , temp = temp / m , i = i + 1 )"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , ( m , i ) ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , ( m , i ) ) << endl ;",
        "n = n >> m ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        6,
        8,
        5,
        0
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , ( m , i ) ) << endl ;",
        "n = n >> m ;",
        "inline char small_letter ( char ch ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        5,
        1
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , ( m , i ) ) << endl ;",
        "n = n >> m ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        8,
        0
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , ( m , i ) ) << endl ;",
        "inline char small_letter ( char ch ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        0,
        1
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , ( m , i ) ) << endl ;",
        "inline char small_letter ( char ch ) ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , ( m , i ) ) << endl ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , m ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , m ) << endl ;",
        "n = n >> m ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        6,
        8,
        5,
        0
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , m ) << endl ;",
        "n = n >> m ;",
        "inline char small_letter ( char ch ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        5,
        1
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , m ) << endl ;",
        "n = n >> m ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        8,
        0
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , m ) << endl ;",
        "inline char small_letter ( char ch ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        0,
        1
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , m ) << endl ;",
        "inline char small_letter ( char ch ) ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        1
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "cout << ans / pow ( m , m ) << endl ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "n = n >> m ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        6,
        5,
        0
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "n = n >> m ;",
        "inline char small_letter ( char ch ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        0,
        1
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "n = n >> m ;",
        "inline char small_letter ( char ch ) ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        1
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "n = n >> m ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "inline char small_letter ( char ch ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        0,
        1
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "inline char small_letter ( char ch ) ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( int ans = n , temp = n , i = n , i = 0 ; temp > 0 && temp = temp / m , i = i + 1 )",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        5,
        0
      ],
      "mod_code": [
        "cout << ans / pow ( m , ( m , i ) ) << endl ;",
        "n = n >> m ;",
        "inline char small_letter ( char ch ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        5,
        0,
        1
      ],
      "mod_code": [
        "cout << ans / pow ( m , ( m , i ) ) << endl ;",
        "n = n >> m ;",
        "inline char small_letter ( char ch ) ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        5,
        1
      ],
      "mod_code": [
        "cout << ans / pow ( m , ( m , i ) ) << endl ;",
        "n = n >> m ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "cout << ans / pow ( m , ( m , i ) ) << endl ;",
        "inline char small_letter ( char ch ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0,
        1
      ],
      "mod_code": [
        "cout << ans / pow ( m , ( m , i ) ) << endl ;",
        "inline char small_letter ( char ch ) ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "cout << ans / pow ( m , ( m , i ) ) << endl ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        5,
        0
      ],
      "mod_code": [
        "cout << ans / pow ( m , m ) << endl ;",
        "n = n >> m ;",
        "inline char small_letter ( char ch ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        5,
        0,
        1
      ],
      "mod_code": [
        "cout << ans / pow ( m , m ) << endl ;",
        "n = n >> m ;",
        "inline char small_letter ( char ch ) ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        5,
        1
      ],
      "mod_code": [
        "cout << ans / pow ( m , m ) << endl ;",
        "n = n >> m ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "cout << ans / pow ( m , m ) << endl ;",
        "inline char small_letter ( char ch ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0,
        1
      ],
      "mod_code": [
        "cout << ans / pow ( m , m ) << endl ;",
        "inline char small_letter ( char ch ) ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "cout << ans / pow ( m , m ) << endl ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "n = n >> m ;",
        "inline char small_letter ( char ch ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0,
        1
      ],
      "mod_code": [
        "n = n >> m ;",
        "inline char small_letter ( char ch ) ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "n = n >> m ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "inline char small_letter ( char ch ) ;",
        "return ch < 97 ? ch + 32 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}