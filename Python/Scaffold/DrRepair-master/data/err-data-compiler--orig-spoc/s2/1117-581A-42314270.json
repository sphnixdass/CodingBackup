{
  "meta": {
    "index": 1117,
    "hitid": "3VMHWJRYHVA45ZKFXYN43DXH1C5XFG",
    "workerid": "A1APYLD4DUK33J",
    "probid": "581A",
    "subid": "42314270"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integer dx = { 1 , 0 , - 1 , 0 }",
      "code": "int dx [ ] = { 1 , 0 , - 1 , 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer dy = { 0 , - 1 , 0 , 1 }",
      "code": "int dy [ ] = { 0 , - 1 , 0 , 1 } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare long longs a , b",
      "code": "long long a , b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare long longs Min , s",
      "code": "long long Min , s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a is greater than b",
      "code": "if ( a > b )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let Min be minimum of a and b",
      "code": "Min = min ( a , b ) ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "let s be ( a - Min ) / 2",
      "code": "s = ( a - Min ) / 2 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print Min and \" \" and s and newline",
      "code": "cout << Min << \" \" << s << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "let Min be minimum of a and b",
      "code": "Min = min ( a , b ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "let s be ( b - Min ) / 2",
      "code": "s = ( b - Min ) / 2 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print Min and \" \" and s and newline",
      "code": "cout << Min << \" \" << s << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int dy = { 0 , - 1 , 0 , 1 } ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘dy’ requires one element in initializer"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int dx = { int 1 , 0 , - 1 , 0 } ;"
      ],
      "err_line": 0,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int dy = { int 0 , - 1 , 0 , 1 } ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "s -= Min ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << Min and \" \" << s << endl ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘long long int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "s -= Min ) / 2 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << Min and \" \" << s << endl ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘long long int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "int dy = { 0 , - 1 , 0 , 1 } ;"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        1,
        13
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "cout << Min and \" \" << s << endl ;"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        1,
        13,
        4
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "cout << Min and \" \" << s << endl ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        1,
        13,
        10
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "cout << Min and \" \" << s << endl ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        1,
        4
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        1,
        4,
        10
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "cin >> a , b ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        1,
        10
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "cout << Min and \" \" << s << endl ;"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        13,
        1
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "cout << Min and \" \" << s << endl ;",
        "int dy = { int 0 , - 1 , 0 , 1 } ;"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        13,
        1,
        4
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "cout << Min and \" \" << s << endl ;",
        "int dy = { int 0 , - 1 , 0 , 1 } ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        13,
        1,
        10
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "cout << Min and \" \" << s << endl ;",
        "int dy = { int 0 , - 1 , 0 , 1 } ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        13,
        4
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "cout << Min and \" \" << s << endl ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        13,
        4,
        10
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "cout << Min and \" \" << s << endl ;",
        "cin >> a , b ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        13,
        10
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "cout << Min and \" \" << s << endl ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "int dy = { int 0 , - 1 , 0 , 1 } ;"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        1,
        4
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "int dy = { int 0 , - 1 , 0 , 1 } ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        1,
        4,
        10
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "int dy = { int 0 , - 1 , 0 , 1 } ;",
        "cin >> a , b ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        1,
        10
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "int dy = { int 0 , - 1 , 0 , 1 } ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "cin >> a , b ;"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        4,
        10
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "cin >> a , b ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "int dx = { 1 , 0 , - 1 , 0 } ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "scalar object ‘dx’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "cout << Min and \" \" << s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘dy’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        13,
        4
      ],
      "mod_code": [
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "cout << Min and \" \" << s << endl ;",
        "cin >> a , b ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘dy’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        13,
        4,
        10
      ],
      "mod_code": [
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "cout << Min and \" \" << s << endl ;",
        "cin >> a , b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘dy’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        13,
        10
      ],
      "mod_code": [
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "cout << Min and \" \" << s << endl ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘dy’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "cin >> a , b ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘dy’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        4,
        10
      ],
      "mod_code": [
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "cin >> a , b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘dy’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int dy = { 0 , - 1 , 0 , 1 } ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘dy’ requires one element in initializer"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "cout << Min and \" \" << s << endl ;",
        "int dy = { int 0 , - 1 , 0 , 1 } ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        13,
        1,
        4
      ],
      "mod_code": [
        "cout << Min and \" \" << s << endl ;",
        "int dy = { int 0 , - 1 , 0 , 1 } ;",
        "cin >> a , b ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        13,
        1,
        4,
        10
      ],
      "mod_code": [
        "cout << Min and \" \" << s << endl ;",
        "int dy = { int 0 , - 1 , 0 , 1 } ;",
        "cin >> a , b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        13,
        1,
        10
      ],
      "mod_code": [
        "cout << Min and \" \" << s << endl ;",
        "int dy = { int 0 , - 1 , 0 , 1 } ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "cout << Min and \" \" << s << endl ;",
        "cin >> a , b ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘long long int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        13,
        4,
        10
      ],
      "mod_code": [
        "cout << Min and \" \" << s << endl ;",
        "cin >> a , b ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "cout << Min and \" \" << s << endl ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int dy = { int 0 , - 1 , 0 , 1 } ;",
        "cin >> a , b ;"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        10
      ],
      "mod_code": [
        "int dy = { int 0 , - 1 , 0 , 1 } ;",
        "cin >> a , b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int dy = { int 0 , - 1 , 0 , 1 } ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected primary-expression before ‘int’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "cin >> a , b ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}