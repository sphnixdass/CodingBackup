{
  "meta": {
    "index": 2641,
    "hitid": "3HYV4299H0QMKKJBUFR65WVOY2DE83",
    "workerid": "A1APYLD4DUK33J",
    "probid": "552A",
    "subid": "45071364"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant 64 bit integer M = 110",
      "code": "const int64_t M = 110 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare 64 bit integer array cnt M by M",
      "code": "int64_t cnt [ M ] [ M ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare 64 bit integer n",
      "code": "int64_t n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int64_t i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare 64 bit integers x1 , y1 , x2 , y2",
      "code": "int64_t x1 , y1 , x2 , y2 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read x1 , y1 , x2 , y2",
      "code": "cin >> x1 >> y1 >> x2 >> y2 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for r = x1 to x2 inclusive",
      "code": "for ( int64_t r = x1 ; r <= x2 ; r ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for c = y1 to y2 inclusive , increment cnt [ r ] [ c ]",
      "code": "for ( int64_t c = y1 ; c <= y2 ; c ++ ) cnt [ r ] [ c ] ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare 64 bit integer ans = 0",
      "code": "int64_t ans = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to 100 inclusive",
      "code": "for ( int64_t i = 1 ; i <= 100 ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for j = 1 to 100 inclusive , increment ans by cnt [ i ] [ j ]",
      "code": "for ( int64_t j = 1 ; j <= 100 ; j ++ ) ans += cnt [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const 64 = 110 ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int64_t cnt [ M ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int64_t {aka long int}[int64_t {aka long int}]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "continue ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "string x1 , y1 , x2 , y2 ;"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘int64_t {aka long int}’ in initialization"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) cnt [ r ] ++ ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "64 = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 100 ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( r = x1 ; r <= x2 ; r ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        3
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "continue ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        9,
        8,
        3,
        12
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "continue ;",
        "for ( i = 1 ; i <= 100 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        9,
        8,
        3,
        4
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "continue ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        9,
        8,
        3,
        11
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "continue ;",
        "64 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        9,
        8,
        12
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "for ( i = 1 ; i <= 100 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        12,
        4
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        12,
        11
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "64 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        4
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        4,
        11
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "n = getchar ( ) ;",
        "64 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        11
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "64 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "continue ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        9,
        3,
        12
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "continue ;",
        "for ( i = 1 ; i <= 100 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        9,
        3,
        12,
        4
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "continue ;",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        9,
        3,
        12,
        11
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "continue ;",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "64 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        9,
        3,
        4
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "continue ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        9,
        3,
        4,
        11
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "continue ;",
        "n = getchar ( ) ;",
        "64 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        9,
        3,
        11
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "continue ;",
        "64 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( i = 1 ; i <= 100 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        9,
        12,
        4
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        9,
        12,
        4,
        11
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "n = getchar ( ) ;",
        "64 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        9,
        12,
        11
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "64 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "n = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        9,
        4,
        11
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "n = getchar ( ) ;",
        "64 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "for ( int c = y1 ; c <= y2 ; c ++ ) { cnt [ r ] ++ ; }",
        "64 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "continue ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        8,
        3,
        12
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "continue ;",
        "for ( i = 1 ; i <= 100 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        8,
        3,
        12,
        4
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "continue ;",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        8,
        3,
        12,
        11
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "continue ;",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "64 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        8,
        3,
        4
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "continue ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        8,
        3,
        4,
        11
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "continue ;",
        "n = getchar ( ) ;",
        "64 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        8,
        3,
        11
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "continue ;",
        "64 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "for ( i = 1 ; i <= 100 ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        4
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        4,
        11
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "n = getchar ( ) ;",
        "64 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        12,
        11
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "64 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        11
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "n = getchar ( ) ;",
        "64 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "for ( r = x1 ; r <= x2 ; r ++ )",
        "64 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "continue ;",
        "for ( i = 1 ; i <= 100 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        3,
        12,
        4
      ],
      "mod_code": [
        "continue ;",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        3,
        12,
        4,
        11
      ],
      "mod_code": [
        "continue ;",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "n = getchar ( ) ;",
        "64 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        3,
        12,
        11
      ],
      "mod_code": [
        "continue ;",
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "64 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "continue ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        3,
        4,
        11
      ],
      "mod_code": [
        "continue ;",
        "n = getchar ( ) ;",
        "64 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "continue ;",
        "64 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        4,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "n = getchar ( ) ;",
        "64 = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 100 ; i ++ )",
        "64 = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "64 = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "lvalue required as left operand of assignment"
    }
  ]
}