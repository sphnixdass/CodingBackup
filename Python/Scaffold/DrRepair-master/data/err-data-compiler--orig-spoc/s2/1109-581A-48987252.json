{
  "meta": {
    "index": 1109,
    "hitid": "3PZDSVZ3J5BPVP9MBB4CE79SA8N4NG",
    "workerid": "AIWEXPJAU66D9",
    "probid": "581A",
    "subid": "48987252"
  },
  "lines": [
    {
      "line": 0,
      "text": "function prime with int argument n that returns bool",
      "code": "bool prime ( int n )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer c with value 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "in a for loop , change i from 1 to n exclusive incrementing i",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "increment c if n modulo i is 0",
      "code": "if ( n % i == 0 ) c ++ ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if c is equal to 1",
      "code": "if ( c == 1 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return true",
      "code": "return true ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return false",
      "code": "return false ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 11,
      "text": "create ints a , b , a2 , b2 , a1 and b1 with a1 and b1 = 0",
      "code": "int a , b , a2 , b2 , a1 = 0 , b1 = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read standard input to a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if a is greater than b",
      "code": "if ( a > b )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set a2 to a",
      "code": "a2 = a ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for i = 0 to a2 exclusive",
      "code": "for ( int i = 0 ; i < a2 ; i ++ )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if b ! = 0",
      "code": "if ( b != 0 )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "increment a1 by one",
      "code": "a1 ++ ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "decrement b",
      "code": "b -- ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "decrement a by one",
      "code": "a -- ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "if b is equal to 0 , set the value of b1 to a / 2",
      "code": "if ( b == 0 ) { b1 = a / 2 ; }",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "else if a is less than b",
      "code": "else if ( a < b )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "change b2 to b",
      "code": "b2 = b ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "for i from 0 to b2 exclusive incrementing i",
      "code": "for ( int i = 0 ; i < b2 ; i ++ )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if a ! = 0",
      "code": "if ( a != 0 )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "increment a1 by one",
      "code": "a1 ++ ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "decrement b",
      "code": "b -- ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "decrement a",
      "code": "a -- ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 31,
      "text": "if a is equal to 0 , set the value of b1 to b / 2",
      "code": "if ( a == 0 ) { b1 = b / 2 ; }",
      "indent": 3
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 34,
      "text": "set a1 to ( a + b ) / 2",
      "code": "a1 = ( a + b ) / 2 ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "print a1 , \" \" and b1 to the standard output",
      "code": "cout << a1 << \" \" << b1 << endl ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool prime ( int n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "c = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < a2 ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 33,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "a1 += b ) / 2 ;"
      ],
      "err_line": 34,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "cout << a1 << \" \" , b1 << endl ;"
      ],
      "err_line": 36,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( b == 0 ) b1 /= 2 ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        21,
        31
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( b == 0 ) b1 /= 2 ;",
        "if ( a == 0 ) b1 /= 2 ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        21,
        31,
        12
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( b == 0 ) b1 /= 2 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "a >> a >> b ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        21,
        31,
        25
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( b == 0 ) b1 /= 2 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        21,
        31,
        5
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( b == 0 ) b1 /= 2 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        11,
        21,
        12
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( b == 0 ) b1 /= 2 ;",
        "a >> a >> b ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        21,
        12,
        25
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( b == 0 ) b1 /= 2 ;",
        "a >> a >> b ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        21,
        12,
        5
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( b == 0 ) b1 /= 2 ;",
        "a >> a >> b ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        11,
        21,
        25
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( b == 0 ) b1 /= 2 ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        21,
        25,
        5
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( b == 0 ) b1 /= 2 ;",
        "for ( i = 0 ; i < b2 ; i ++ )",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        11,
        21,
        5
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( b == 0 ) b1 /= 2 ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        11,
        31
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( a == 0 ) b1 /= 2 ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        31,
        12
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "a >> a >> b ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        31,
        12,
        25
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "a >> a >> b ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        31,
        12,
        5
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "a >> a >> b ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        11,
        31,
        25
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        31,
        25,
        5
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "for ( i = 0 ; i < b2 ; i ++ )",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        11,
        31,
        5
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "a >> a >> b ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        12,
        25
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "a >> a >> b ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        12,
        25,
        5
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "a >> a >> b ;",
        "for ( i = 0 ; i < b2 ; i ++ )",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        11,
        12,
        5
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "a >> a >> b ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        11,
        25
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int a1’"
    },
    {
      "mod_line": [
        11,
        25,
        5
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "for ( i = 0 ; i < b2 ; i ++ )",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "int a , b , a2 , b2 , a1 = 0 , a1 = 0 ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        31,
        12,
        25
      ],
      "mod_code": [
        "if ( b == 0 ) b1 /= 2 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "a >> a >> b ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        31,
        12,
        5
      ],
      "mod_code": [
        "if ( b == 0 ) b1 /= 2 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "a >> a >> b ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        31,
        25
      ],
      "mod_code": [
        "if ( b == 0 ) b1 /= 2 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        31,
        25,
        5
      ],
      "mod_code": [
        "if ( b == 0 ) b1 /= 2 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "for ( i = 0 ; i < b2 ; i ++ )",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        31,
        5
      ],
      "mod_code": [
        "if ( b == 0 ) b1 /= 2 ;",
        "if ( a == 0 ) b1 /= 2 ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        12,
        25
      ],
      "mod_code": [
        "if ( b == 0 ) b1 /= 2 ;",
        "a >> a >> b ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        12,
        25,
        5
      ],
      "mod_code": [
        "if ( b == 0 ) b1 /= 2 ;",
        "a >> a >> b ;",
        "for ( i = 0 ; i < b2 ; i ++ )",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        12,
        5
      ],
      "mod_code": [
        "if ( b == 0 ) b1 /= 2 ;",
        "a >> a >> b ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        25
      ],
      "mod_code": [
        "if ( b == 0 ) b1 /= 2 ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        25,
        5
      ],
      "mod_code": [
        "if ( b == 0 ) b1 /= 2 ;",
        "for ( i = 0 ; i < b2 ; i ++ )",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        5
      ],
      "mod_code": [
        "if ( b == 0 ) b1 /= 2 ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        31,
        12,
        25
      ],
      "mod_code": [
        "if ( a == 0 ) b1 /= 2 ;",
        "a >> a >> b ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        12,
        25,
        5
      ],
      "mod_code": [
        "if ( a == 0 ) b1 /= 2 ;",
        "a >> a >> b ;",
        "for ( i = 0 ; i < b2 ; i ++ )",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        31,
        12,
        5
      ],
      "mod_code": [
        "if ( a == 0 ) b1 /= 2 ;",
        "a >> a >> b ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        31,
        25
      ],
      "mod_code": [
        "if ( a == 0 ) b1 /= 2 ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        25,
        5
      ],
      "mod_code": [
        "if ( a == 0 ) b1 /= 2 ;",
        "for ( i = 0 ; i < b2 ; i ++ )",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        31,
        5
      ],
      "mod_code": [
        "if ( a == 0 ) b1 /= 2 ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        12,
        25
      ],
      "mod_code": [
        "a >> a >> b ;",
        "for ( i = 0 ; i < b2 ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        25,
        5
      ],
      "mod_code": [
        "a >> a >> b ;",
        "for ( i = 0 ; i < b2 ; i ++ )",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "a >> a >> b ;",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        25,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < b2 ; i ++ )",
        "if ( c == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "break statement not within loop or switch"
    }
  ]
}