{
  "meta": {
    "index": 2050,
    "hitid": "3L7SUC0TTUO2EJ6LG92APPUFO6S0MR",
    "workerid": "AIWEXPJAU66D9",
    "probid": "716A",
    "subid": "49076850"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare long longs n and c",
      "code": "long long n , c ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new integer variable x",
      "code": "int x ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "arr is an array of integers with 1000001 elements",
      "code": "int arr [ 1000001 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read user input to n and c",
      "code": "cin >> n >> c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive incrementing i",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read variable arr [ i ] from the input",
      "code": "cin >> arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment x",
      "code": "x ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if arr [ i ] - arr [ i - 1 ] is greater than c",
      "code": "if ( arr [ i ] - arr [ i - 1 ] > c )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "change x to 1",
      "code": "x = 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "do nothing",
      "code": "x = x ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print x to the standard output",
      "code": "cout << x << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int * arr [ 1000001 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cin >> arr >> i ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000001]’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "x = l ;"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "puts ( x ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        9
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = l ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        9,
        2
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = l ;",
        "int * arr [ 1000001 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        9,
        4
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = l ;",
        "n = n >> c ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        9,
        10
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = l ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int * arr [ 1000001 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        2,
        4
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int * arr [ 1000001 ] ;",
        "n = n >> c ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        2,
        10
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int * arr [ 1000001 ] ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        4
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n = n >> c ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        4,
        10
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n = n >> c ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        10
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "x = l ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000001]’)"
    },
    {
      "mod_line": [
        6,
        9,
        2
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "x = l ;",
        "int * arr [ 1000001 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int* [1000001]’)"
    },
    {
      "mod_line": [
        6,
        9,
        2,
        4
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "x = l ;",
        "int * arr [ 1000001 ] ;",
        "n = n >> c ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int* [1000001]’)"
    },
    {
      "mod_line": [
        6,
        9,
        2,
        10
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "x = l ;",
        "int * arr [ 1000001 ] ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int* [1000001]’)"
    },
    {
      "mod_line": [
        6,
        9,
        4
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "x = l ;",
        "n = n >> c ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000001]’)"
    },
    {
      "mod_line": [
        6,
        9,
        4,
        10
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "x = l ;",
        "n = n >> c ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000001]’)"
    },
    {
      "mod_line": [
        6,
        9,
        10
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "x = l ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000001]’)"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "int * arr [ 1000001 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int* [1000001]’)"
    },
    {
      "mod_line": [
        6,
        2,
        4
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "int * arr [ 1000001 ] ;",
        "n = n >> c ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int* [1000001]’)"
    },
    {
      "mod_line": [
        6,
        2,
        4,
        10
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "int * arr [ 1000001 ] ;",
        "n = n >> c ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int* [1000001]’)"
    },
    {
      "mod_line": [
        6,
        2,
        10
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "int * arr [ 1000001 ] ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int* [1000001]’)"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "n = n >> c ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000001]’)"
    },
    {
      "mod_line": [
        6,
        4,
        10
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "n = n >> c ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000001]’)"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "cin >> arr >> i ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [1000001]’)"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = l ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = l ;",
        "int * arr [ 1000001 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        2,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = l ;",
        "int * arr [ 1000001 ] ;",
        "n = n >> c ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        2,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = l ;",
        "int * arr [ 1000001 ] ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = l ;",
        "n = n >> c ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        4,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = l ;",
        "n = n >> c ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "x = l ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int * arr [ 1000001 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int * arr [ 1000001 ] ;",
        "n = n >> c ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        4,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int * arr [ 1000001 ] ;",
        "n = n >> c ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int * arr [ 1000001 ] ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n = n >> c ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n = n >> c ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "x = l ;",
        "int * arr [ 1000001 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        2,
        4
      ],
      "mod_code": [
        "x = l ;",
        "int * arr [ 1000001 ] ;",
        "n = n >> c ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        2,
        4,
        10
      ],
      "mod_code": [
        "x = l ;",
        "int * arr [ 1000001 ] ;",
        "n = n >> c ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        2,
        10
      ],
      "mod_code": [
        "x = l ;",
        "int * arr [ 1000001 ] ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "x = l ;",
        "n = n >> c ;"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4,
        10
      ],
      "mod_code": [
        "x = l ;",
        "n = n >> c ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "x = l ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int * arr [ 1000001 ] ;",
        "n = n >> c ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        4,
        10
      ],
      "mod_code": [
        "int * arr [ 1000001 ] ;",
        "n = n >> c ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "int * arr [ 1000001 ] ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "n = n >> c ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}