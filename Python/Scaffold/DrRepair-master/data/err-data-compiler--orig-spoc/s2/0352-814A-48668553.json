{
  "meta": {
    "index": 352,
    "hitid": "3D1UCPY6GG3JAM3E5VAAM5RR7DL38Z",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "814A",
    "subid": "48668553"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer array dx to contain { 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1 }",
      "code": "int dx [ ] = { 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer array dy to contain { 1 , 0 , - 1 , 0 , 1 , - 1 , 1 , - 1 }",
      "code": "int dy [ ] = { 1 , 0 , - 1 , 0 , 1 , - 1 , 1 , - 1 } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare fast",
      "code": "void fast ( ) { }",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integer arrays a of size 100 and b of size 100",
      "code": "int a [ 100 ] , b [ 100 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create integer array vis of size 201",
      "code": "int vis [ 201 ] ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "call fast",
      "code": "fast ( ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integer n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive , read a [ i ] and increment vis [ a [ i ] ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] , vis [ a [ i ] ] ++ ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to k exclusive , read b [ i ]",
      "code": "for ( int i = 0 ; i < k ; i ++ ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to n - 1 exclusive",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if a [ i ] is equal to 0 or a [ i + 1 ] is equal to 0 , continue to next loop iteration",
      "code": "if ( a [ i ] == 0 || a [ i + 1 ] == 0 ) continue ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if a [ i ] is greater than a [ i + 1 ]",
      "code": "if ( a [ i ] > a [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print \" Yes \"",
      "code": "return cout << \" Yes \"",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print new line",
      "code": "<< \" \\n \" ,",
      "indent": 6
    },
    {
      "line": 16,
      "text": "return 0",
      "code": "0 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": ";",
      "code": ";",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if vis [ 0 ] is greater than 1",
      "code": "if ( vis [ 0 ] > 1 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" Yes \"",
      "code": "return cout << \" Yes \"",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print new line",
      "code": "<< \" \\n \" ,",
      "indent": 5
    },
    {
      "line": 22,
      "text": "return 0",
      "code": "0 ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": ";",
      "code": ";",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if a [ i ] is equal to 0",
      "code": "if ( a [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "for j = 0 to k exclusive",
      "code": "for ( int j = 0 ; j < k ; j ++ )",
      "indent": 3
    },
    {
      "line": 27,
      "text": "if i is greater than 0 and a [ a - 1 ] is greater than b [ j ] or i is less than n - 1 and a [ i + 1 ] is less than b [ j ]",
      "code": "if ( i > 0 && a [ i - 1 ] > b [ j ] || i < n - 1 && a [ i + 1 ] < b [ j ] )",
      "indent": 4
    },
    {
      "line": 28,
      "text": "print \" Yes \"",
      "code": "return cout << \" Yes \"",
      "indent": 5
    },
    {
      "line": 29,
      "text": "print new line",
      "code": "<< \" \\n \" ,",
      "indent": 8
    },
    {
      "line": 30,
      "text": "return 0",
      "code": "0 ;",
      "indent": 6
    },
    {
      "line": 31,
      "text": ";",
      "code": ";",
      "indent": 4
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "print \" No \"",
      "code": "return cout << \" No \"",
      "indent": 1
    },
    {
      "line": 36,
      "text": "print new line",
      "code": "<< \" \\n \" ,",
      "indent": 4
    },
    {
      "line": 37,
      "text": "return 0",
      "code": "0 ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": ";",
      "code": ";",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "cout << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "return 0 ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "cout << \" No \" << endl ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "cout << endl ;"
      ],
      "err_line": 35,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "return 0 ;"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int dx [ 4 ] = { 0 , 1 , 0 , - 1 , 1 , 1 , - 1 , - 1 } ;"
      ],
      "err_line": 0,
      "err_msg": "too many initializers for ‘int [4]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "void fast ( )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a [ 100 ] [ 100 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [100]’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int arr [ 201 ] ;"
      ],
      "err_line": 9,
      "err_msg": "‘vis’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "n ;"
      ],
      "err_line": 6,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] >> vis [ a [ i ] ] ++ ; }"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << \" Yes \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "return ( 0 ) ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( vis [ 0 ] > l )"
      ],
      "err_line": 19,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "cout << \" Yes \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "return ( 0 ) ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 26,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i + 1 ] < b [ j ] )"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "cout << \" Yes \" ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "return ( 0 ) ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "cout << \" No \" ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 35,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "return ( 0 ) ;"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 35,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        16,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        20
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        20,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        21
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        21,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        22
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        22,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        22,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        22,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        22,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        22,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        22,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        22,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        27,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        28,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        28,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        28,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        28,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        15,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        15,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 35,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 35,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        15,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        20,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        21
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        21,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        22
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        22,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        22,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        22,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        22,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        22,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        22,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        22,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        27,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        27,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        27,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        27,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        27,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        27,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        28,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        28,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        28,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        28,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        28,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        16,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        21
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        21,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        22
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        22,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        22,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        22,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        22,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        22,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        22,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        22,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        27,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        27,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        27,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        27,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        27,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        27,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        28,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        28,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        28,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        28,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        28,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        20,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        22
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        22,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        22,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        22,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        22,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        22,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        22,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        22,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        27,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        27,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        27,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        27,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        27,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        27,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        28,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        28,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        28,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        28,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        28,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        21,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        27,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        27,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        27,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        27,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        27,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        27,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        28,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        28,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        28,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        28,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        28,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        22,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        28,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        28,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        28,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        28,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        28,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        27,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        28,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        29,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        29,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        29,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        29,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        29,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        29,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        30,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        30,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        30,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        35,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        20
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        22
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        20,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        21
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        21,
        22
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        21,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        21,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        21,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        21,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        21,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        21,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        21,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        22
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        22,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        22,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        22,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        22,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        22,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        22,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        22,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        27,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        27,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        27,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        27,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        27,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        27,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        28,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        28,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        28,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        28,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        28,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        29,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        29,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        29,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        29,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        16,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        21
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        21,
        22
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        21,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        21,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        21,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        21,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        21,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        21,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        21,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        22
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        22,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        22,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        22,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        22,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        22,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        22,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        22,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        27,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        27,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        27,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        27,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        27,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        27,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        28,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        28,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        28,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        28,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        28,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        29,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        29,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        29,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        29,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        20,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        22
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        22,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        27,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        27,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        27,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        27,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        27,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        27,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        28,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        28,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        28,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        28,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        28,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        29,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        29,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        29,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        29,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        21,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        27,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        27,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        27,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        27,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        27,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        27,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        28,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        28,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        28,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        28,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        28,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        29,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        29,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        29,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        29,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        22,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        28,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        28,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        28,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        28,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        28,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        29,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        29,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        29,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        29,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        27,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        29,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        29,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        29,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        29,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        28,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        29,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        29,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        29,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        29,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        29,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        29,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        29,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        29,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        29,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        29,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        30,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        30,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        30,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        35,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 14,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        20
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        21
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        22
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        27
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        22
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        22,
        27
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        22,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        22,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        22,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        22,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        22,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        22,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        27
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        27,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        27,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        27,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        27,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        27,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        27,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        28,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        28,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        28,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        28,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        28,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        29,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        29,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        29,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        29,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        30,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        30,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        30,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        20,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        22
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        22,
        27
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        22,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        22,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        22,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        22,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        22,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        22,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        27
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        27,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        27,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        27,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        27,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        27,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        27,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        28,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        28,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        28,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        28,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        28,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        29,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        29,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        29,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        29,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        30,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        30,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        30,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        21,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        27
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        27,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        27,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        27,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        27,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        27,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        27,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        28,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        28,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        28,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        28,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        28,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        29,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        29,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        29,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        29,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        30,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        30,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        30,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        22,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        28,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        28,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        28,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        28,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        28,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        29,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        29,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        29,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        29,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        30,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        30,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        30,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        27,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        29,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        30,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        30,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        30,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        28,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        29,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        29,
        30,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        29,
        30,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        29,
        30,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        29,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        29,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        29,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        29,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        29,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        29,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        30,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        30,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        30,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        30,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        30,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        30,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        35,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        16,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 16,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 35,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        20,
        21,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        21,
        27,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        21,
        27,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        21,
        27,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        21,
        27,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        21,
        27,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        21,
        27,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        21,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        21,
        28,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        21,
        28,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        21,
        28,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        21,
        28,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        21,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        21,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        21,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        21,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        21,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        21,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        20,
        21,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        20,
        21,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        20,
        21,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        20,
        21,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        21,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        21,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 35,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        21,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 35,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        21,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        20,
        22
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        27,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        27,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        27,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        27,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        27,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        27,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        28,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        28,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        28,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        28,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        28,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        22,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        28,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        28,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        28,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        28,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        28,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        27,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        28,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        29
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        29,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        29,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        29,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        29,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        30,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        30,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        30,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        35,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        20,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        27,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        27,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        27,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        27,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        27,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        27,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        28,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        28,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        28,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        28,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        28,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        29,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        29,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        29,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        29,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        22,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        28,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        28,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        28,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        28,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        28,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        29,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        29,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        29,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        29,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        27,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        29,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        29,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        29,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        29,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        28,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        29
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        29,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        29,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        29,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        29,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        29,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        29,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        29,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        29,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        29,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        29,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        30,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        30,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        30,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        35,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        27
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        28,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        28,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        28,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        28,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        28,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        29,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        29,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        29,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        29,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        30,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        30,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        30,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        27,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        29,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        29,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        29,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        29,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        30,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        30,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        30,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        28,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        29
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        29,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        29,
        30,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        29,
        30,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        29,
        30,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        29,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        29,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        29,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        29,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        29,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        29,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        30
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        30,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        30,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        30,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        30,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        30,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        30,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        35,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        22,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        27,
        28
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        29
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        29,
        35
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        29,
        36
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        29,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        30
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        30,
        35
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        30,
        36
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        30,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        35
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        35,
        36
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        35,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        36
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        36,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        28,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        29
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        29,
        30
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        29,
        30,
        35
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        29,
        30,
        36
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        29,
        30,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        29,
        35
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        29,
        35,
        36
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        29,
        35,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        29,
        36
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        29,
        36,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        29,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        30
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        30,
        35
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        30,
        35,
        36
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        30,
        35,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        30,
        36
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        30,
        36,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        30,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        35
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        35,
        36
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        35,
        36,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        35,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        36
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        36,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        27,
        37
      ],
      "mod_code": [
        "if ( i > 0 && a [ a - 1 ] > b [ j ] || a [ i + 1 ] < b [ j ] && a [ i ] < b [ j ] )",
        "return 0 ;"
      ],
      "err_line": 27,
      "err_msg": "invalid types ‘int [100][int*]’ for array subscript"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 35,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        28,
        29,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        29,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        29,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 35,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 35,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 37,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        28,
        30
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        30,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        30,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        30,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        30,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        30,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        30,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        35
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        35,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        35,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        35,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        36
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        36,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        37
      ],
      "mod_code": [
        "cout << \" Yes \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        29,
        30
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        35
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        35,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        35,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        35,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        36
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        35
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" No \" << endl ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        35,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        35,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        35,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        36
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        36,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        30,
        37
      ],
      "mod_code": [
        "return 0 ;",
        "return 0 ;"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        35,
        37
      ],
      "mod_code": [
        "cout << \" No \" << endl ;",
        "return 0 ;"
      ],
      "err_line": 36,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        36,
        37
      ],
      "mod_code": [
        "cout << endl ;",
        "return 0 ;"
      ],
      "err_line": 35,
      "err_msg": "invalid user-defined conversion from ‘std::basic_ostream<char>’ to ‘int’ [-fpermissive]"
    }
  ]
}