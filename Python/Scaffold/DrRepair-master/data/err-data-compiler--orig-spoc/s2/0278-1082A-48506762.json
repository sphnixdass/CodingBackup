{
  "meta": {
    "index": 278,
    "hitid": "386659BNTLB5IUKWNNJC5X6CQVX01J",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1082A",
    "subid": "48506762"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant long long called inf with value 1LL < < 60",
      "code": "const long long inf = ( 1LL << 60 ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "function solve with long long arguments x , y and d that returns long long",
      "code": "long long solve ( long long x , long long y , long long d )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "decrease y by x",
      "code": "y -= x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if y is less than 0 , invert it ' s sign",
      "code": "if ( y < 0 ) y *= - 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if y modulo d is equal to 0 , return y / d",
      "code": "if ( y % d == 0 ) { return ( y / d ) ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "return inf",
      "code": "return inf ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "create new integer called test",
      "code": "int test ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read from the input to test",
      "code": "cin >> test ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "decrement test and loop further , while test ! = 0",
      "code": "while ( test -- )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create long longs n , x , y and d",
      "code": "long long n , x , y , d ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "read n , x , y and d from the input",
      "code": "cin >> n >> x >> y >> d ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "declare new long long variable l with value ( ( x - 1 ) + d - 1 ) / d",
      "code": "long long l = ( ( x - 1 ) + d - 1 ) / d ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "make long long variable r = ( ( n - x ) + d - 1 ) / d",
      "code": "long long r = ( ( n - x ) + d - 1 ) / d ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if y is equal to 1",
      "code": "if ( y == 1 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print l to the standard output",
      "code": "cout << l << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else if y = n",
      "code": "else if ( y == n )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print r to the standard output",
      "code": "cout << r << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 20,
      "text": "declare new long long called ans = min ( solve ( x , y , d ) , solve ( 1LL , y , d ) + l )",
      "code": "long long ans = min ( solve ( x , y , d ) , solve ( 1LL , y , d ) + l ) ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "assign min of ans and solve ( n , y , d ) + r to ans",
      "code": "ans = min ( ans , solve ( n , y , d ) + r ) ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "print - 1 if ans = inf or ans otherwise",
      "code": "cout << ( ( ans == inf ) ? - 1 : ans ) << endl ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( y == 1 ) break ;"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "puts ( l ) ;"
      ],
      "err_line": 16,
      "err_msg": "invalid conversion from ‘long long int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "long long ans = min ( solve ( solve ( x , y , d ) , solve ( 1LL , y , d ) + l ) ) ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘long long int solve(long long int, long long int, long long int)’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "int ans = min ( ans , solve ( n , y , d ) + r ) ;"
      ],
      "err_line": 21,
      "err_msg": "conflicting declaration ‘int ans’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "while ( -- test )"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        17
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "while ( -- test )",
        "else if ( y = n )"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        17,
        9
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "while ( -- test )",
        "else if ( y = n )",
        "cin >> test >> test ;"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        17,
        19
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "while ( -- test )",
        "else if ( y = n )",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        9
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "while ( -- test )",
        "cin >> test >> test ;"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        9,
        19
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "while ( -- test )",
        "cin >> test >> test ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        19
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "while ( -- test )",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "else if ( y = n )"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        17,
        9
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "else if ( y = n )",
        "cin >> test >> test ;"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        17,
        9,
        19
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "else if ( y = n )",
        "cin >> test >> test ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        17,
        19
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "else if ( y = n )",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "cin >> test >> test ;"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        9,
        19
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "cin >> test >> test ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "if ( y < 0 ) it = s + s ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3,
        17,
        19
      ],
      "mod_code": [
        "while ( -- test )",
        "if ( y < 0 ) ' s ' ;",
        "else if ( y = n )",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        3,
        9,
        19
      ],
      "mod_code": [
        "while ( -- test )",
        "if ( y < 0 ) ' s ' ;",
        "cin >> test >> test ;",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        3,
        19
      ],
      "mod_code": [
        "while ( -- test )",
        "if ( y < 0 ) ' s ' ;",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        17,
        9,
        19
      ],
      "mod_code": [
        "while ( -- test )",
        "else if ( y = n )",
        "cin >> test >> test ;",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        17,
        19
      ],
      "mod_code": [
        "while ( -- test )",
        "else if ( y = n )",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        9,
        19
      ],
      "mod_code": [
        "while ( -- test )",
        "cin >> test >> test ;",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "while ( -- test )",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        9,
        19
      ],
      "mod_code": [
        "if ( y < 0 ) ' s ' ;",
        "else if ( y = n )",
        "cin >> test >> test ;",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        17,
        19
      ],
      "mod_code": [
        "if ( y < 0 ) ' s ' ;",
        "else if ( y = n )",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        9,
        19
      ],
      "mod_code": [
        "if ( y < 0 ) ' s ' ;",
        "cin >> test >> test ;",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "if ( y < 0 ) ' s ' ;",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        9,
        19
      ],
      "mod_code": [
        "else if ( y = n )",
        "cin >> test >> test ;",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "else if ( y = n )",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "cin >> test >> test ;",
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}