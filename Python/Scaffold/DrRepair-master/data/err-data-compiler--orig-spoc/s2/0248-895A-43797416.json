{
  "meta": {
    "index": 248,
    "hitid": "3FK4G712NXU5DN3298HGB4Z4A0WSSA",
    "workerid": "A1APYLD4DUK33J",
    "probid": "895A",
    "subid": "43797416"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer N with N = 370",
      "code": "const int N = 370 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer arr with size N",
      "code": "int arr [ N ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integer N",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive , read arr [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integers ans , mn , j with mn = 1000",
      "code": "int ans , mn = 1000 , j ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer ans with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set j to i",
      "code": "j = i ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "create boolean done with done = false",
      "code": "bool done = false ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "while not done",
      "code": "while ( ! done )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment ans by arr [ j ]",
      "code": "ans += arr [ j ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set mn to minimum of mn ans absolute value of ( ans - ( 360 - ans ) )",
      "code": "mn = min ( mn , abs ( ans - ( 360 - ans ) ) ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment j",
      "code": "j ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if j is n , set j to 0",
      "code": "if ( j == n ) j = 0 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if j is i , set done to true",
      "code": "if ( j == i ) done = true ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print mn print newline",
      "code": "cout << mn << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int N ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘ans’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int * arr [ N ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "int N ;",
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        6
      ],
      "mod_code": [
        "int N ;",
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "int ans = 1000 , mn , j ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        6,
        7
      ],
      "mod_code": [
        "int N ;",
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "int ans = 1000 , mn , j ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        6,
        1
      ],
      "mod_code": [
        "int N ;",
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "int ans = 1000 , mn , j ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        7
      ],
      "mod_code": [
        "int N ;",
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        7,
        1
      ],
      "mod_code": [
        "int N ;",
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * arr [ N ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        1
      ],
      "mod_code": [
        "int N ;",
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int N ;",
        "int ans = 1000 , mn , j ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "int N ;",
        "int ans = 1000 , mn , j ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        13
      ],
      "mod_code": [
        "int N ;",
        "int ans = 1000 , mn , j ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        1
      ],
      "mod_code": [
        "int N ;",
        "int ans = 1000 , mn , j ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * arr [ N ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        13
      ],
      "mod_code": [
        "int N ;",
        "int ans = 1000 , mn , j ;",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        13,
        1
      ],
      "mod_code": [
        "int N ;",
        "int ans = 1000 , mn , j ;",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        1
      ],
      "mod_code": [
        "int N ;",
        "int ans = 1000 , mn , j ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int N ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        13
      ],
      "mod_code": [
        "int N ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        13,
        1
      ],
      "mod_code": [
        "int N ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        1
      ],
      "mod_code": [
        "int N ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * arr [ N ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "int N ;",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        1
      ],
      "mod_code": [
        "int N ;",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "int N ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "int ans = 1000 , mn , j ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘)’ before ‘ans’"
    },
    {
      "mod_line": [
        13,
        6,
        7
      ],
      "mod_code": [
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "int ans = 1000 , mn , j ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        6,
        7,
        1
      ],
      "mod_code": [
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "int ans = 1000 , mn , j ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * arr [ N ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        13,
        6,
        1
      ],
      "mod_code": [
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "int ans = 1000 , mn , j ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        7,
        1
      ],
      "mod_code": [
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * arr [ N ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "mn = min ( mn ans ans ( ans - ( 360 - ans ) ) ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "int ans = 1000 , mn , j ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        13
      ],
      "mod_code": [
        "int ans = 1000 , mn , j ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        1
      ],
      "mod_code": [
        "int ans = 1000 , mn , j ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        7,
        1
      ],
      "mod_code": [
        "int ans = 1000 , mn , j ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int * arr [ N ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "int ans = 1000 , mn , j ;",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        6,
        13,
        1
      ],
      "mod_code": [
        "int ans = 1000 , mn , j ;",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "int ans = 1000 , mn , j ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        13,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int * arr [ N ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "mn = min ( mn - abs ( ans - ( 360 - ans ) ) ) ;",
        "int * arr [ N ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    }
  ]
}