{
  "meta": {
    "index": 2265,
    "hitid": "3G4VVJO6PZAACCA2CI4KPD3J79BPKK",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "99A",
    "subid": "46851688"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "num = string",
      "code": "string num ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read num",
      "code": "while ( cin >> num )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to num . length ( ) exclusive",
      "code": "for ( int i = 0 ; i < num . length ( ) ; ++ i )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "if ( num [ i ] is . )",
      "code": "if ( num [ i ] == ' . ' )",
      "indent": 3
    },
    {
      "line": 5,
      "text": "if ( num [ i - 1 ] is 9 )",
      "code": "if ( num [ i - 1 ] == ' 9 ' )",
      "indent": 4
    },
    {
      "line": 6,
      "text": "print GOTO Vasilisa .",
      "code": "cout << \" GOTO Vasilisa. \" << ' \\n ' ;",
      "indent": 5
    },
    {
      "line": 7,
      "text": "break loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 9,
      "text": "if ( num [ i + 1 ] > = 5 ) , num [ i - 1 ] = num [ i - 1 ] + 1",
      "code": "if ( num [ i + 1 ] >= ' 5 ' ) { num [ i - 1 ] += 1 ; }",
      "indent": 5
    },
    {
      "line": 10,
      "text": "n = string with n = substr ( 0 , i ) of num",
      "code": "string n = num . substr ( 0 , i ) ;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "print n",
      "code": "cout << n << ' \\n ' ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "break loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << GOTO << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "string n = substr ( 0 , i ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘substr’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( { cin >> num )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < num . length ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "if ( num [ i ] == endl )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator==’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << ( GOTO ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "string n = substr ( 0 , i ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘substr’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        10
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string n = substr ( 0 , i ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        4
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string n = substr ( 0 , i ) ;",
        "if ( num [ i ] == endl )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator==’"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string n = substr ( 0 , i ) ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        4
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "if ( num [ i ] == endl )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator==’"
    },
    {
      "mod_line": [
        6,
        9,
        4,
        10
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "if ( num [ i ] == endl )",
        "string n = substr ( 0 , i ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator==’"
    },
    {
      "mod_line": [
        6,
        9,
        4,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "if ( num [ i ] == endl )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        10
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string n = substr ( 0 , i ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        10,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string n = substr ( 0 , i ) ) ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "string n = substr ( 0 , i ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        4
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "string n = substr ( 0 , i ) ;",
        "if ( num [ i ] == endl )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator==’"
    },
    {
      "mod_line": [
        6,
        10,
        4,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "string n = substr ( 0 , i ) ;",
        "if ( num [ i ] == endl )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "string n = substr ( 0 , i ) ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i ] == endl )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator==’"
    },
    {
      "mod_line": [
        6,
        4,
        10
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i ] == endl )",
        "string n = substr ( 0 , i ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator==’"
    },
    {
      "mod_line": [
        6,
        4,
        10,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i ] == endl )",
        "string n = substr ( 0 , i ) ) ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( num [ i ] == endl )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "string n = substr ( 0 , i ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "string n = substr ( 0 , i ) ) ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string n = substr ( 0 , i ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘substr’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        4
      ],
      "mod_code": [
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string n = substr ( 0 , i ) ;",
        "if ( num [ i ] == endl )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator==’"
    },
    {
      "mod_line": [
        9,
        10,
        4,
        1
      ],
      "mod_code": [
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string n = substr ( 0 , i ) ;",
        "if ( num [ i ] == endl )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        1
      ],
      "mod_code": [
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string n = substr ( 0 , i ) ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "if ( num [ i ] == endl )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator==’"
    },
    {
      "mod_line": [
        9,
        4,
        10
      ],
      "mod_code": [
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "if ( num [ i ] == endl )",
        "string n = substr ( 0 , i ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator==’"
    },
    {
      "mod_line": [
        9,
        4,
        10,
        1
      ],
      "mod_code": [
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "if ( num [ i ] == endl )",
        "string n = substr ( 0 , i ) ) ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4,
        1
      ],
      "mod_code": [
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "if ( num [ i ] == endl )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string n = substr ( 0 , i ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘substr’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        1
      ],
      "mod_code": [
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string n = substr ( 0 , i ) ) ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( num [ i + 1 ] >= 5 ) num [ i - 1 ] = num [ i - 1 ] + 1 ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "string n = substr ( 0 , i ) ;",
        "if ( num [ i ] == endl )"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator==’"
    },
    {
      "mod_line": [
        10,
        4,
        1
      ],
      "mod_code": [
        "string n = substr ( 0 , i ) ;",
        "if ( num [ i ] == endl )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "string n = substr ( 0 , i ) ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "if ( num [ i ] == endl )",
        "string n = substr ( 0 , i ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator==’"
    },
    {
      "mod_line": [
        4,
        10,
        1
      ],
      "mod_code": [
        "if ( num [ i ] == endl )",
        "string n = substr ( 0 , i ) ) ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "if ( num [ i ] == endl )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "string n = substr ( 0 , i ) ) ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    }
  ]
}