{
  "meta": {
    "index": 2675,
    "hitid": "3MA5N0ATTC50WL73O4IFH7BF068KW4",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "165A",
    "subid": "24522967"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x , y = integer arrays of size 500",
      "code": "int x [ 500 ] , y [ 500 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "n , i , k , ctf = integers with ctf = 0",
      "code": "int n , i , k , ctf = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read x [ i ] , y [ i ]",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> x [ i ] >> y [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "ct1 , ct2 , ct3 , ct4 = integers with ct1 = 0 , ct2 = 0 , ct3 = 0 , ct4 = 0",
      "code": "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct4 = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for k = 0 to n exclusive",
      "code": "for ( k = 0 ; k < n ; k ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if i is not k",
      "code": "if ( i != k )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if x [ i ] > x [ k ] and y [ i ] is y [ k ] , ct1 = 1",
      "code": "if ( x [ i ] > x [ k ] && y [ i ] == y [ k ] ) { ct1 = 1 ; }",
      "indent": 4
    },
    {
      "line": 10,
      "text": "if x [ i ] < x [ k ] and y [ i ] is y [ k ] , ct2 = 1",
      "code": "if ( x [ i ] < x [ k ] && y [ i ] == y [ k ] ) { ct2 = 1 ; }",
      "indent": 4
    },
    {
      "line": 11,
      "text": "if x [ i ] = = x [ k ] and y [ i ] < y [ k ] , ct3 = 1",
      "code": "if ( x [ i ] == x [ k ] && y [ i ] < y [ k ] ) { ct3 = 1 ; }",
      "indent": 4
    },
    {
      "line": 12,
      "text": "if x [ i ] = = x [ k ] and y [ i ] > y [ k ] , ct4 = 1",
      "code": "if ( x [ i ] == x [ k ] && y [ i ] > y [ k ] ) { ct4 = 1 ; }",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if ct1 is 1 and ct2 is 1 and ct3 is 1 and ct4 is 1 , increment ctf",
      "code": "if ( ct1 == 1 && ct2 == 1 && ct3 == 1 && ct4 == 1 ) { ctf ++ ; }",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print ctf",
      "code": "cout << ctf << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int ct3’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        6,
        17
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "cout << ' ctf ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        6,
        17,
        3
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "cout << ' ctf ' ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        6,
        17,
        4
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "cout << ' ctf ' ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , y [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        6,
        3
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        6,
        3,
        4
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "n = getchar ( ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , y [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , y [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "cout << ' ctf ' ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        17,
        3
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "cout << ' ctf ' ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        17,
        3,
        4
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "cout << ' ctf ' ;",
        "n = getchar ( ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , y [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        17,
        4
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "cout << ' ctf ' ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , y [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "n = getchar ( ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , y [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int x [ 500 ] , x [ 500 ] ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , y [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int x [500]’"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "cout << ' ctf ' ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int ct3’"
    },
    {
      "mod_line": [
        6,
        17,
        3
      ],
      "mod_code": [
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "cout << ' ctf ' ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int ct3’"
    },
    {
      "mod_line": [
        6,
        17,
        3,
        4
      ],
      "mod_code": [
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "cout << ' ctf ' ;",
        "n = getchar ( ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , y [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int ct3’"
    },
    {
      "mod_line": [
        6,
        17,
        4
      ],
      "mod_code": [
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "cout << ' ctf ' ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , y [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int ct3’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int ct3’"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "n = getchar ( ) ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , y [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int ct3’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "int ct1 = 0 , ct2 = 0 , ct3 = 0 , ct3 = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) cin >> x [ i ] , y [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int ct3’"
    }
  ]
}