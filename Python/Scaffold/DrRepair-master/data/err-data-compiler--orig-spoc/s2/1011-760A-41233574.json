{
  "meta": {
    "index": 1011,
    "hitid": "3E9ZFLPWOYMOFQM5Y6TP6AA9H4YIXT",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "760A",
    "subid": "41233574"
  },
  "lines": [
    {
      "line": 0,
      "text": "m , d = int",
      "code": "int m , d ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read m , d",
      "code": "cin >> m >> d ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "month = int array = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 }",
      "code": "int month [ ] = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 30 , 31 , 30 , 31 } ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "x = int = month [ m ] / 7",
      "code": "int x = month [ m ] / 7 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "y = month [ m ] mod 7",
      "code": "int y = month [ m ] % 7 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if y isn ' t 0",
      "code": "if ( y != 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if y - ( 7 - d + 1 ) < = 0",
      "code": "if ( y - ( 7 - d + 1 ) <= 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "pritn x + 1",
      "code": "cout << x + 1 << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print x + 2",
      "code": "cout << x + 2 << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if d = 1",
      "code": "if ( d == 1 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print x",
      "code": "cout << x << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print x + 1",
      "code": "cout << x + 1 << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int m , m ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int m’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "y = month [ m ] % 7 ;"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        5,
        2
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "y = month [ m ] % 7 ;",
        "cin >> m , d ;"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        5,
        2,
        11
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "y = month [ m ] % 7 ;",
        "cin >> m , d ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        5,
        2,
        12
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "y = month [ m ] % 7 ;",
        "cin >> m , d ;",
        "if ( ! d )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        5,
        2,
        6
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "y = month [ m ] % 7 ;",
        "cin >> m , d ;",
        "if ( ! y )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        5,
        11
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "y = month [ m ] % 7 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        5,
        11,
        12
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "y = month [ m ] % 7 ;",
        "n",
        "if ( ! d )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        5,
        11,
        6
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "y = month [ m ] % 7 ;",
        "n",
        "if ( ! y )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        5,
        12
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "y = month [ m ] % 7 ;",
        "if ( ! d )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        5,
        12,
        6
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "y = month [ m ] % 7 ;",
        "if ( ! d )",
        "if ( ! y )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "y = month [ m ] % 7 ;",
        "if ( ! y )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "cin >> m , d ;"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        2,
        11
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "cin >> m , d ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        2,
        11,
        12
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "cin >> m , d ;",
        "n",
        "if ( ! d )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        2,
        11,
        6
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "cin >> m , d ;",
        "n",
        "if ( ! y )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        2,
        12
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "cin >> m , d ;",
        "if ( ! d )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        2,
        12,
        6
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "cin >> m , d ;",
        "if ( ! d )",
        "if ( ! y )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "cin >> m , d ;",
        "if ( ! y )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "n",
        "if ( ! d )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        11,
        12,
        6
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "n",
        "if ( ! d )",
        "if ( ! y )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        11,
        6
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "n",
        "if ( ! y )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "if ( ! d )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        12,
        6
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "if ( ! d )",
        "if ( ! y )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int month = { 0 , 31 , 28 , 31 , 30 , 31 , 30 , 31 , 31 , 31 , 31 , 31 , 31 } ;",
        "if ( ! y )"
      ],
      "err_line": 3,
      "err_msg": "scalar object ‘month’ requires one element in initializer"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "cin >> m , d ;"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        11
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "cin >> m , d ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        11,
        12
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "cin >> m , d ;",
        "n",
        "if ( ! d )"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        11,
        6
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "cin >> m , d ;",
        "n",
        "if ( ! y )"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        12
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "cin >> m , d ;",
        "if ( ! d )"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        12,
        6
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "cin >> m , d ;",
        "if ( ! d )",
        "if ( ! y )"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        6
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "cin >> m , d ;",
        "if ( ! y )"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        12
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "n",
        "if ( ! d )"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        12,
        6
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "n",
        "if ( ! d )",
        "if ( ! y )"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        11,
        6
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "n",
        "if ( ! y )"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "if ( ! d )"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        6
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "if ( ! d )",
        "if ( ! y )"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "y = month [ m ] % 7 ;",
        "if ( ! y )"
      ],
      "err_line": 5,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "cin >> m , d ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        12
      ],
      "mod_code": [
        "cin >> m , d ;",
        "n",
        "if ( ! d )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        12,
        6
      ],
      "mod_code": [
        "cin >> m , d ;",
        "n",
        "if ( ! d )",
        "if ( ! y )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        11,
        6
      ],
      "mod_code": [
        "cin >> m , d ;",
        "n",
        "if ( ! y )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "n",
        "if ( ! d )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        6
      ],
      "mod_code": [
        "n",
        "if ( ! d )",
        "if ( ! y )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "n",
        "if ( ! y )"
      ],
      "err_line": 11,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}