{
  "meta": {
    "index": 2668,
    "hitid": "35ZRNT9RUISMVEQUCCZ6JRHRMINO3L",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "165A",
    "subid": "48523008"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integers = size , n = 2001 , r , c , count = 0 , j , t = - 1000",
      "code": "int size , n = 2001 , r , c , count = 0 , j , t = - 1000 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read size",
      "code": "cin >> size ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "boolean = array of a [ n ] [ n ]",
      "code": "bool a [ n ] [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "integers = array of pts [ size ] [ 2 ]",
      "code": "int pts [ size ] [ 2 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for 0 to less than n do the following",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for 0 to less than n do the following",
      "code": "for ( long long j = 0 ; j < n ; j ++ ) a [ i ] [ j ] = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for 0 to less than size do the following",
      "code": "for ( long long i = 0 ; i < size ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read pts [ i ] [ 0 ] , pts [ i ] [ 1 ]",
      "code": "cin >> pts [ i ] [ 0 ] >> pts [ i ] [ 1 ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set a [ pts [ i ] [ 1 ] - t ] [ pts [ i ] [ 0 ] - t ] to 1",
      "code": "a [ pts [ i ] [ 1 ] - t ] [ pts [ i ] [ 0 ] - t ] = 1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for 0 to less than size do the following",
      "code": "for ( long long i = 0 ; i < size ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "set bool left to false , right",
      "code": "bool left = false , right = false , up = false , down = false ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set r to pts [ i ] [ 1 ] - t , c",
      "code": "r = pts [ i ] [ 1 ] - t , c = pts [ i ] [ 0 ] - t ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for 0 to less than c do the following",
      "code": "for ( long long j = 0 ; j < c ; j ++ )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if a [ r ] [ j ] is 1 then do the following",
      "code": "if ( a [ r ] [ j ] == 1 )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set left to true",
      "code": "left = true ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if left is false continue",
      "code": "if ( ! left ) continue ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "for 0 to less than r do the following",
      "code": "for ( long long j = 0 ; j < r ; j ++ )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if a [ j ] [ c ] is 1 then do the following",
      "code": "if ( a [ j ] [ c ] == 1 )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "set up to true",
      "code": "up = true ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "if ! up is true",
      "code": "if ( ! up ) continue ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "for = c + 1 to less than n do the following",
      "code": "for ( j = c + 1 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "if a [ r ] [ j ] is 1 then do the following",
      "code": "if ( a [ r ] [ j ] == 1 )",
      "indent": 3
    },
    {
      "line": 31,
      "text": "set right to true",
      "code": "right = true ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "if right is false",
      "code": "if ( ! right ) continue ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "for = r + 1 to less than n do the following",
      "code": "for ( j = r + 1 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 37,
      "text": "if a [ j ] [ c ] is 1 then do the following",
      "code": "if ( a [ j ] [ c ] == 1 )",
      "indent": 3
    },
    {
      "line": 38,
      "text": "set down to true",
      "code": "down = true ;",
      "indent": 4
    },
    {
      "line": 39,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 42,
      "text": "if down is true add 1 to count",
      "code": "if ( down ) count ++ ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 44,
      "text": "output count",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( 0 < 0 )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "while ( 0 < 0 )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "bool left = false , right ;"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> size [ size ] ;"
      ],
      "err_line": 2,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "bool a [ n ] [ n ] ] ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘]’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int pts [ pts ] [ 2 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘pts’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int j = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int j = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "while ( 0 < size )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "while ( 0 < size )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "bool left = false , right = 1 ;"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "while ( 0 < 0 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "bool left = false , right ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        12,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "bool left = false , right ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        13,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        14,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        15,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        22,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        22,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        28,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "bool left = false , right ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        13,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        14,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        15,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        22,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        22,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        28,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        12,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "while ( 0 < 0 )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        14,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        15,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        22,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        22,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        28,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        13,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "bool left = false , right ;",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        14,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        14,
        15,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        14,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        14,
        22,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        14,
        22,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        14,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        14,
        28,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        14,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        15,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        15,
        22,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        15,
        22,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        15,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        15,
        28,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        15,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        22,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        22,
        28,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        22,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        28
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        28,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        35
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        13
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "bool left = false , right ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        14
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        15
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        14
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        15
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        15
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        15,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        22,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        22,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        28,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "while ( 0 < 0 )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        14
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        15
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        14,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        15
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        15,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        22,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        22,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        28,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        15
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        15,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        22,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        22,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        28,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        14,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        22,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        22,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        28,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        15,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        22,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        22,
        28,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        22,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "if ( ! up )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        28,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "if ( ! right )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        14
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        15
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        14,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        15
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        22,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        22,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "if ( ! up )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        28,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "bool left = false , right ;",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        15
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        15,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        22,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        22,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        28,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        14,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        15,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        15,
        22,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        15,
        22,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        15,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        15,
        28,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        15,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        22
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        22,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        22,
        28,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        22,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        28
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "if ( ! up )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        28,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        35
      ],
      "mod_code": [
        "while ( 0 < 0 )",
        "if ( ! right )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15
      ],
      "mod_code": [
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        22
      ],
      "mod_code": [
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        28
      ],
      "mod_code": [
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        15,
        35
      ],
      "mod_code": [
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        22
      ],
      "mod_code": [
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        22,
        28
      ],
      "mod_code": [
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        22,
        35
      ],
      "mod_code": [
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        28
      ],
      "mod_code": [
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        28,
        35
      ],
      "mod_code": [
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        35
      ],
      "mod_code": [
        "bool left = false , right ;",
        "r = pts [ i ] [ 1 ] - t , c ;",
        "if ( ! right )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        22
      ],
      "mod_code": [
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        22,
        28
      ],
      "mod_code": [
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        22,
        35
      ],
      "mod_code": [
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        28
      ],
      "mod_code": [
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        28,
        35
      ],
      "mod_code": [
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        15,
        35
      ],
      "mod_code": [
        "bool left = false , right ;",
        "for ( int i = 0 ; i < c ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22
      ],
      "mod_code": [
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        28
      ],
      "mod_code": [
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        28,
        35
      ],
      "mod_code": [
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        22,
        35
      ],
      "mod_code": [
        "bool left = false , right ;",
        "for ( int i = 0 ; i < r ; i ++ )",
        "if ( ! right )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28
      ],
      "mod_code": [
        "bool left = false , right ;",
        "if ( ! up )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        35
      ],
      "mod_code": [
        "bool left = false , right ;",
        "if ( ! up )",
        "if ( ! right )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        35
      ],
      "mod_code": [
        "bool left = false , right ;",
        "if ( ! right )"
      ],
      "err_line": 24,
      "err_msg": "‘up’ was not declared in this scope"
    }
  ]
}