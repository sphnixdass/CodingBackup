{
  "meta": {
    "index": 965,
    "hitid": "3CZH926SIC8L1JW9IC1TOKFJVTK4EE",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "778A",
    "subid": "48549488"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "t , p = string",
      "code": "string t , p ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t then p",
      "code": "cin >> t >> p ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "n = int with n = length of t",
      "code": "int n = t . length ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "arr = int array of size n",
      "code": "int arr [ n ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "temp = int",
      "code": "int temp ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read temp",
      "code": "cin >> temp ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set arr [ i ] to temp - 1",
      "code": "arr [ i ] = temp - 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "l = int with l = 0",
      "code": "int l = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "r = int with r = n",
      "code": "int r = n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "loop if l + 1 < r",
      "code": "while ( l + 1 < r )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "mid = int with mid = l + ( r - l ) / 2",
      "code": "int mid = l + ( r - l ) / 2 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "exist = bool array of size n",
      "code": "bool exist [ n ] ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set all values in exist to false",
      "code": "memset ( exist , 0 , sizeof ( exist ) ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "for i = 0 to mid exclusive set exist [ arr [ i ] ] to true",
      "code": "for ( int i = 0 ; i < mid ; i ++ ) exist [ arr [ i ] ] = 1 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "j = int with j = 0",
      "code": "int j = 0 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "for i = 0 loop if i is less than n and j is less than length of p",
      "code": "for ( int i = 0 ; i < n && j < p . length ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if p [ j ] equals t [ i ] and exist [ i ] is false then increment j",
      "code": "if ( p [ j ] == t [ i ] and exist [ i ] == 0 ) j ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if j equals length of p",
      "code": "if ( j == p . length ( ) )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "set l to mid",
      "code": "l = mid ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set r to mid",
      "code": "r = mid ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print l",
      "code": "cout << l << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string t ;"
      ],
      "err_line": 2,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int * l = 0 ;"
      ],
      "err_line": 12,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int * j = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < p && j < p . length ( ) ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "no match for ‘operator<’ (operand types are ‘int’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        23
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "n"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        23,
        7
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "n",
        "temp = getchar ( ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        23,
        7,
        17
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "n",
        "temp = getchar ( ) ;",
        "int * j = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        23,
        7,
        13
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "n",
        "temp = getchar ( ) ;",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        23,
        7,
        3
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "n",
        "temp = getchar ( ) ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        12,
        23,
        17
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "n",
        "int * j = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        23,
        17,
        13
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "n",
        "int * j = 0 ;",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        23,
        17,
        3
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "n",
        "int * j = 0 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        12,
        23,
        13
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "n",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        23,
        13,
        3
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "n",
        "int mid += ( r - l ) / 2 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        12,
        23,
        3
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "n",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        12,
        7,
        17
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "temp = getchar ( ) ;",
        "int * j = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        17,
        13
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "temp = getchar ( ) ;",
        "int * j = 0 ;",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        7,
        17,
        3
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "temp = getchar ( ) ;",
        "int * j = 0 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        12,
        7,
        13
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "temp = getchar ( ) ;",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        7,
        13,
        3
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "temp = getchar ( ) ;",
        "int mid += ( r - l ) / 2 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        12,
        7,
        3
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "temp = getchar ( ) ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "int * j = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        17,
        13
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "int * j = 0 ;",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        17,
        13,
        3
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "int * j = 0 ;",
        "int mid += ( r - l ) / 2 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        12,
        17,
        3
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "int * j = 0 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        12,
        13,
        3
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "int mid += ( r - l ) / 2 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "if ( l + 1 < r )",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        23,
        7
      ],
      "mod_code": [
        "n",
        "temp = getchar ( ) ;"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        7,
        17
      ],
      "mod_code": [
        "n",
        "temp = getchar ( ) ;",
        "int * j = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        7,
        17,
        13
      ],
      "mod_code": [
        "n",
        "temp = getchar ( ) ;",
        "int * j = 0 ;",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        23,
        7,
        17,
        3
      ],
      "mod_code": [
        "n",
        "temp = getchar ( ) ;",
        "int * j = 0 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        23,
        7,
        13
      ],
      "mod_code": [
        "n",
        "temp = getchar ( ) ;",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        23,
        7,
        13,
        3
      ],
      "mod_code": [
        "n",
        "temp = getchar ( ) ;",
        "int mid += ( r - l ) / 2 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        23,
        7,
        3
      ],
      "mod_code": [
        "n",
        "temp = getchar ( ) ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        23,
        17
      ],
      "mod_code": [
        "n",
        "int * j = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        17,
        13
      ],
      "mod_code": [
        "n",
        "int * j = 0 ;",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        23,
        17,
        13,
        3
      ],
      "mod_code": [
        "n",
        "int * j = 0 ;",
        "int mid += ( r - l ) / 2 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        23,
        17,
        3
      ],
      "mod_code": [
        "n",
        "int * j = 0 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        23,
        13
      ],
      "mod_code": [
        "n",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        23,
        13,
        3
      ],
      "mod_code": [
        "n",
        "int mid += ( r - l ) / 2 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        23,
        3
      ],
      "mod_code": [
        "n",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "temp = getchar ( ) ;",
        "int * j = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        17,
        13
      ],
      "mod_code": [
        "temp = getchar ( ) ;",
        "int * j = 0 ;",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        17,
        13,
        3
      ],
      "mod_code": [
        "temp = getchar ( ) ;",
        "int * j = 0 ;",
        "int mid += ( r - l ) / 2 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        17,
        3
      ],
      "mod_code": [
        "temp = getchar ( ) ;",
        "int * j = 0 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "temp = getchar ( ) ;",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        13,
        3
      ],
      "mod_code": [
        "temp = getchar ( ) ;",
        "int mid += ( r - l ) / 2 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "temp = getchar ( ) ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        17,
        13
      ],
      "mod_code": [
        "int * j = 0 ;",
        "int mid += ( r - l ) / 2 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        17,
        13,
        3
      ],
      "mod_code": [
        "int * j = 0 ;",
        "int mid += ( r - l ) / 2 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "int * j = 0 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "int mid += ( r - l ) / 2 ;",
        "int n = strlen ( t ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    }
  ]
}