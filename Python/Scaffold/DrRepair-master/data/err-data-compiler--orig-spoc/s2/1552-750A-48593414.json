{
  "meta": {
    "index": 1552,
    "hitid": "3VMHWJRYHVA45ZKFXYN43DXH1CYXF9",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "750A",
    "subid": "48593414"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k , c , ans = int",
      "code": "int n , k , c , ans ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n then k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set c to 40 * ( 240 - k ) + 25",
      "code": "c = 40 * ( 240 - k ) + 25 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set c to sqrt of c - 5",
      "code": "c = sqrt ( c ) - 5 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set ans to c / 10",
      "code": "ans = c / 10 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if ans is greater than n",
      "code": "if ( ans > n )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print n",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "ans /= 10 ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        3
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "ans /= 10 ;",
        "n",
        "c -= ( 240 - k ) + 25 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        2
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "ans /= 10 ;",
        "n",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        7
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "ans /= 10 ;",
        "n",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        5,
        3,
        2
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "ans /= 10 ;",
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        4,
        5,
        2
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "ans /= 10 ;",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        4,
        5,
        2,
        7
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "ans /= 10 ;",
        "cin >> n then k ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        8,
        3
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "n",
        "c -= ( 240 - k ) + 25 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        8,
        3,
        2
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "n",
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        4,
        8,
        3,
        7
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "n",
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        8,
        2
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "n",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        4,
        8,
        2,
        7
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "n",
        "cin >> n then k ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        4,
        8,
        7
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "n",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        4,
        3,
        2,
        7
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n then k ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        4,
        2,
        7
      ],
      "mod_code": [
        "c = sqrt ( c - 5 ) ;",
        "cin >> n then k ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "ans /= 10 ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        8,
        3
      ],
      "mod_code": [
        "ans /= 10 ;",
        "n",
        "c -= ( 240 - k ) + 25 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        8,
        3,
        2
      ],
      "mod_code": [
        "ans /= 10 ;",
        "n",
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        8,
        3,
        7
      ],
      "mod_code": [
        "ans /= 10 ;",
        "n",
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        8,
        2
      ],
      "mod_code": [
        "ans /= 10 ;",
        "n",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        8,
        2,
        7
      ],
      "mod_code": [
        "ans /= 10 ;",
        "n",
        "cin >> n then k ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        8,
        7
      ],
      "mod_code": [
        "ans /= 10 ;",
        "n",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "ans /= 10 ;",
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        3,
        2,
        7
      ],
      "mod_code": [
        "ans /= 10 ;",
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n then k ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "ans /= 10 ;",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        2,
        7
      ],
      "mod_code": [
        "ans /= 10 ;",
        "cin >> n then k ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "n",
        "c -= ( 240 - k ) + 25 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        3,
        2
      ],
      "mod_code": [
        "n",
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        3,
        2,
        7
      ],
      "mod_code": [
        "n",
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n then k ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        3,
        7
      ],
      "mod_code": [
        "n",
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "n",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        2,
        7
      ],
      "mod_code": [
        "n",
        "cin >> n then k ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "n",
        "cin >> n ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n then k ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        3,
        2,
        7
      ],
      "mod_code": [
        "c -= ( 240 - k ) + 25 ;",
        "cin >> n then k ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cin >> n then k ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘;’ before ‘then’"
    }
  ]
}