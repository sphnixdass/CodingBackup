{
  "meta": {
    "index": 1372,
    "hitid": "3J9UN9O9J3MCDB00DCPI9X2YKC0J09",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "54A",
    "subid": "44354097"
  },
  "lines": [
    {
      "line": 0,
      "text": "MOD = const long long with MOD = 1e9 + 7",
      "code": "const long long MOD = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k , c = integers",
      "code": "int n , k , c ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "dd = integer array of size 400",
      "code": "int dd [ 400 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n , k , c",
      "code": "cin >> n >> k >> c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to c exclusive , read dd [ i ]",
      "code": "for ( int i = 0 ; i < c ; i ++ ) cin >> dd [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if ( c is 0 )",
      "code": "if ( c == 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print n / k",
      "code": "cout << n / k << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "ans = integer with ans = ( dd [ 0 ] - 1 ) / k + c",
      "code": "int ans = ( dd [ 0 ] - 1 ) / k + c ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "ans = ans + ( n - dd [ c - 1 ] ) / k",
      "code": "ans += ( n - dd [ c - 1 ] ) / k ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to c - 1 , ans = ans + ( dd [ i ] - dd [ i - 1 ] - 1 ) / k",
      "code": "for ( int i = 1 ; i <= c - 1 ; i ++ ) ans += ( dd [ i ] - dd [ i - 1 ] - 1 ) / k ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= c - 1 , ans += ( dd [ i ] - dd [ i - 1 ] - 1 ) / k )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "int ans = ( dd [ 0 ] - 1 ) / ( k + c ) ;",
        "for ( int i = 1 ; i <= c - 1 , ans += ( dd [ i ] - dd [ i - 1 ] - 1 ) / k )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10,
        12,
        4
      ],
      "mod_code": [
        "int ans = ( dd [ 0 ] - 1 ) / ( k + c ) ;",
        "for ( int i = 1 ; i <= c - 1 , ans += ( dd [ i ] - dd [ i - 1 ] - 1 ) / k )",
        "cin >> n >> k , c ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= c - 1 , ans += ( dd [ i ] - dd [ i - 1 ] - 1 ) / k )",
        "cin >> n >> k , c ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘)’ token"
    }
  ]
}