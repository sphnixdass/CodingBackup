{
  "meta": {
    "index": 283,
    "hitid": "3C8QQOM6JPVTFW5GKNQ1VGFMAVILI4",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1082A",
    "subid": "48967223"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make integer t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make integers n , x , y , and d",
      "code": "int n , x , y , d ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while t - - is truthy",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n , x , y , and d",
      "code": "cin >> n >> x >> y >> d ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if abs ( x - y ) modulo d is 0",
      "code": "if ( abs ( x - y ) % d == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print abs ( x - y ) / d",
      "code": "cout << abs ( x - y ) / d << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "let ints sa and sb",
      "code": "int sa , sb ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set sa to ( x - 1 ) / d + ( ( x - 1 ) % d ! = 0 )",
      "code": "sa = ( x - 1 ) / d + ( ( x - 1 ) % d != 0 ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set sb to ( n - x ) / d + ( ( n - x ) % d ! = 0 )",
      "code": "sb = ( n - x ) / d + ( ( n - x ) % d != 0 ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if y - 1 modulo d is 0 and n - y modulo d is 0",
      "code": "if ( ( y - 1 ) % d == 0 && ( n - y ) % d == 0 )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "print min ( sa + ( y - 1 ) / d , sb + ( n - y ) / d )",
      "code": "cout << min ( sa + ( y - 1 ) / d , sb + ( n - y ) / d ) << \" \\n \" ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "else if y - 1 modulo d is 0",
      "code": "else if ( ( y - 1 ) % d == 0 )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print sa + ( y - 1 ) / d",
      "code": "cout << sa + ( y - 1 ) / d << \" \\n \" ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else if n - y % d is equal to 0",
      "code": "else if ( ( n - y ) % d == 0 )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "print sb + ( n - y ) / d",
      "code": "cout << sb + ( n - y ) / d << \" \\n \" ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "else do",
      "code": "else",
      "indent": 3
    },
    {
      "line": 19,
      "text": "print \" - 1 \\ n \"",
      "code": "cout << \" -1\\n \" ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cout << \" \\ \" ;"
      ],
      "err_line": 19,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        18,
        14
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do",
        "else if ( y - 1 % d == 0 )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        18,
        14,
        6
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do",
        "else if ( y - 1 % d == 0 )",
        "if ( ! abs ( x - y ) % d == 0 )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        18,
        14,
        8
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do",
        "else if ( y - 1 % d == 0 )",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        18,
        14,
        13
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do",
        "else if ( y - 1 % d == 0 )",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        16,
        18,
        6
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do",
        "if ( ! abs ( x - y ) % d == 0 )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        18,
        6,
        8
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do",
        "if ( ! abs ( x - y ) % d == 0 )",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        18,
        6,
        13
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do",
        "if ( ! abs ( x - y ) % d == 0 )",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        16,
        18,
        8
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        18,
        8,
        13
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do",
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        16,
        18,
        13
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        16,
        14,
        6,
        8
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else if ( y - 1 % d == 0 )",
        "if ( ! abs ( x - y ) % d == 0 )",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        14,
        6,
        13
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else if ( y - 1 % d == 0 )",
        "if ( ! abs ( x - y ) % d == 0 )",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        16,
        14,
        8
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else if ( y - 1 % d == 0 )",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        14,
        8,
        13
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else if ( y - 1 % d == 0 )",
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        16,
        14,
        13
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else if ( y - 1 % d == 0 )",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        16,
        6,
        8
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "if ( ! abs ( x - y ) % d == 0 )",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        6,
        8,
        13
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "if ( ! abs ( x - y ) % d == 0 )",
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        16,
        6,
        13
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "if ( ! abs ( x - y ) % d == 0 )",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16,
        8,
        13
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        16,
        13
      ],
      "mod_code": [
        "else if ( n - y % d == 0 )",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        18,
        14
      ],
      "mod_code": [
        "else do",
        "else if ( y - 1 % d == 0 )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        14,
        6
      ],
      "mod_code": [
        "else do",
        "else if ( y - 1 % d == 0 )",
        "if ( ! abs ( x - y ) % d == 0 )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        14,
        6,
        8
      ],
      "mod_code": [
        "else do",
        "else if ( y - 1 % d == 0 )",
        "if ( ! abs ( x - y ) % d == 0 )",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        14,
        6,
        13
      ],
      "mod_code": [
        "else do",
        "else if ( y - 1 % d == 0 )",
        "if ( ! abs ( x - y ) % d == 0 )",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        18,
        14,
        8
      ],
      "mod_code": [
        "else do",
        "else if ( y - 1 % d == 0 )",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        14,
        8,
        13
      ],
      "mod_code": [
        "else do",
        "else if ( y - 1 % d == 0 )",
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        18,
        14,
        13
      ],
      "mod_code": [
        "else do",
        "else if ( y - 1 % d == 0 )",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        18,
        6
      ],
      "mod_code": [
        "else do",
        "if ( ! abs ( x - y ) % d == 0 )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        6,
        8
      ],
      "mod_code": [
        "else do",
        "if ( ! abs ( x - y ) % d == 0 )",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        6,
        8,
        13
      ],
      "mod_code": [
        "else do",
        "if ( ! abs ( x - y ) % d == 0 )",
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        18,
        6,
        13
      ],
      "mod_code": [
        "else do",
        "if ( ! abs ( x - y ) % d == 0 )",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        18,
        8
      ],
      "mod_code": [
        "else do",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        8,
        13
      ],
      "mod_code": [
        "else do",
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        18,
        13
      ],
      "mod_code": [
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        6,
        8
      ],
      "mod_code": [
        "else if ( y - 1 % d == 0 )",
        "if ( ! abs ( x - y ) % d == 0 )",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        6,
        8,
        13
      ],
      "mod_code": [
        "else if ( y - 1 % d == 0 )",
        "if ( ! abs ( x - y ) % d == 0 )",
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        6,
        13
      ],
      "mod_code": [
        "else if ( y - 1 % d == 0 )",
        "if ( ! abs ( x - y ) % d == 0 )",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "else if ( y - 1 % d == 0 )",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        8,
        13
      ],
      "mod_code": [
        "else if ( y - 1 % d == 0 )",
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "else if ( y - 1 % d == 0 )",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( ! abs ( x - y ) % d == 0 )",
        "else do"
      ],
      "err_line": 21,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        6,
        8,
        13
      ],
      "mod_code": [
        "if ( ! abs ( x - y ) % d == 0 )",
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "if ( ! abs ( x - y ) % d == 0 )",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "else do",
        "cout << min ( sa + ( y - 1 ) / d ) , sb + ( n - y ) / d ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "no matching function for call to ‘min(int)’"
    }
  ]
}