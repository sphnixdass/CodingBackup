{
  "meta": {
    "index": 825,
    "hitid": "3MZ3TAMYTLH4IU0TP7NXHSOLGN7RI0",
    "workerid": "AIWEXPJAU66D9",
    "probid": "255A",
    "subid": "47858340"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create new integers n , d , contBi = 0 , contCh = 0 , contBa = 0 , band = 1",
      "code": "int n , d , contBi = 0 , contCh = 0 , contBa = 0 , band = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while n ! = 0 , decrement it and continue the loop",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read from the input to d",
      "code": "cin >> d ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if band is equal to 1",
      "code": "if ( band == 1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "change contCh to contCh + d",
      "code": "contCh += d ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "increment band by one",
      "code": "band ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if band = 2",
      "code": "if ( band == 2 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "change contBi to contBi + d",
      "code": "contBi += d ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "increment band by one",
      "code": "band ++ ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increase contBa by d",
      "code": "contBa += d ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "set band to 1",
      "code": "band = 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "declare integer variable with name best with value max of contBi and contCh",
      "code": "int best = max ( contBi , contCh ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "change the value of best to max of best and contBa",
      "code": "best = max ( best , contBa ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if best = contCh , print \" chest \"",
      "code": "if ( best == contCh ) cout << \" chest \" << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if best = contBa , print \" back \" to the standard output",
      "code": "if ( best == contBa ) cout << \" back \" << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if best is equal to contBi , print \" biceps \"",
      "code": "if ( best == contBi ) cout << \" biceps \" << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( band == 1 ) return 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "band band ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘band’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "band band ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘band’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        8
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "if ( best == contBa ) cout << \" back \" ;",
        "if ( best == contBi ) cout << \" biceps \" ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        21,
        22,
        12
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "if ( best == contBa ) cout << \" back \" ;",
        "if ( best == contBi ) cout << \" biceps \" ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        21,
        19,
        8
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "if ( best == contBa ) cout << \" back \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        21,
        19,
        12
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "if ( best == contBa ) cout << \" back \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        21,
        8
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "if ( best == contBa ) cout << \" back \" ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        21,
        8,
        12
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "if ( best == contBa ) cout << \" back \" ;",
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        21,
        12
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "if ( best == contBa ) cout << \" back \" ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        22,
        19,
        8
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "if ( best == contBi ) cout << \" biceps \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        22,
        19,
        12
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "if ( best == contBi ) cout << \" biceps \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        22,
        8
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "if ( best == contBi ) cout << \" biceps \" ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        22,
        8,
        12
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "if ( best == contBi ) cout << \" biceps \" ;",
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        22,
        12
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "if ( best == contBi ) cout << \" biceps \" ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        19,
        8
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        19,
        8,
        12
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        19,
        12
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        8
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        8,
        12
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        12
      ],
      "mod_code": [
        "if ( best == contCh ) cout << \" chest \" ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        22,
        19,
        8
      ],
      "mod_code": [
        "if ( best == contBa ) cout << \" back \" ;",
        "if ( best == contBi ) cout << \" biceps \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        22,
        19,
        12
      ],
      "mod_code": [
        "if ( best == contBa ) cout << \" back \" ;",
        "if ( best == contBi ) cout << \" biceps \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        22,
        8
      ],
      "mod_code": [
        "if ( best == contBa ) cout << \" back \" ;",
        "if ( best == contBi ) cout << \" biceps \" ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        22,
        8,
        12
      ],
      "mod_code": [
        "if ( best == contBa ) cout << \" back \" ;",
        "if ( best == contBi ) cout << \" biceps \" ;",
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        22,
        12
      ],
      "mod_code": [
        "if ( best == contBa ) cout << \" back \" ;",
        "if ( best == contBi ) cout << \" biceps \" ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        19,
        8
      ],
      "mod_code": [
        "if ( best == contBa ) cout << \" back \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        19,
        8,
        12
      ],
      "mod_code": [
        "if ( best == contBa ) cout << \" back \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        19,
        12
      ],
      "mod_code": [
        "if ( best == contBa ) cout << \" back \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        8
      ],
      "mod_code": [
        "if ( best == contBa ) cout << \" back \" ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        8,
        12
      ],
      "mod_code": [
        "if ( best == contBa ) cout << \" back \" ;",
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        12
      ],
      "mod_code": [
        "if ( best == contBa ) cout << \" back \" ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        19,
        8
      ],
      "mod_code": [
        "if ( best == contBi ) cout << \" biceps \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        19,
        8,
        12
      ],
      "mod_code": [
        "if ( best == contBi ) cout << \" biceps \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        19,
        12
      ],
      "mod_code": [
        "if ( best == contBi ) cout << \" biceps \" ;",
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        8
      ],
      "mod_code": [
        "if ( best == contBi ) cout << \" biceps \" ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        8,
        12
      ],
      "mod_code": [
        "if ( best == contBi ) cout << \" biceps \" ;",
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        12
      ],
      "mod_code": [
        "if ( best == contBi ) cout << \" biceps \" ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        8
      ],
      "mod_code": [
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        8,
        12
      ],
      "mod_code": [
        "best = __gcd ( best , contBa ) ;",
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        12
      ],
      "mod_code": [
        "best = __gcd ( best , contBa ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}