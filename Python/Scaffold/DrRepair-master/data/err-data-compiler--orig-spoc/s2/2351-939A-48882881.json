{
  "meta": {
    "index": 2351,
    "hitid": "3VQTAXTYN3FMBEE4NRQL0G7SSWTBUH",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "939A",
    "subid": "48882881"
  },
  "lines": [
    {
      "line": 0,
      "text": "set l [ 5100 ] to all 0",
      "code": "int l [ 5100 ] = { } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n inclusive , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> l [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if l [ l [ l [ l [ i ] ] ] ] = l [ i ]",
      "code": "if ( l [ l [ l [ l [ i ] ] ] ] == l [ i ] )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [5100][int [5100]]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) { cin >> a [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [5100][int [5100]]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        3,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "n = getchar ( ) ;",
        "bool n ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "bool n ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        1,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "bool n ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "n = getchar ( ) ;",
        "bool n ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "n = getchar ( ) ;",
        "bool n ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "n = getchar ( ) ;",
        "bool n ;",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "n = getchar ( ) ;",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "bool n ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "bool n ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "bool n ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "bool n ;",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= n ; i ++ ) cin >> a [ i ] ;",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [5100][int [5100]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        3,
        1
      ],
      "mod_code": [
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "n = getchar ( ) ;",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [5100][int [5100]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        3,
        1,
        5
      ],
      "mod_code": [
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "n = getchar ( ) ;",
        "bool n ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "bool n ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [5100][int [5100]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        1,
        5
      ],
      "mod_code": [
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "bool n ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( l [ l [ l [ l ] ] ] == l [ i ] ] == l [ i ] )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        5
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "bool n ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        5,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "bool n ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "bool n ;",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [5100][int [5100]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [5100][int [5100]]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "bool n ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "bool n ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "bool n ;",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [5100][int [5100]]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( l [ l [ l [ l [ l ] ] ] ] == l [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}