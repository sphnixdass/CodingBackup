{
  "meta": {
    "index": 1753,
    "hitid": "37VE3DA4YUBH6S8KNSJMH1I2YOUHBP",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "897A",
    "subid": "40299415"
  },
  "lines": [
    {
      "line": 0,
      "text": "ch1 , ch2 , s = character with s = array of size 105",
      "code": "char ch1 , ch2 , s [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m , x , y = long long",
      "code": "long long n , m , x , y ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "call getchar",
      "code": "getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "gets on s + 1",
      "code": "gets ( s + 1 ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to m",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read x , y , ch1 , ch2",
      "code": "cin >> x >> y >> ch1 >> ch2 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for j = x to y",
      "code": "for ( int j = x ; j <= y ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if ( s [ j ] is ch1 ) , s [ j ] = ch2",
      "code": "if ( s [ j ] == ch1 ) s [ j ] = ch2 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print s + 1",
      "code": "cout << s + 1 << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "exit ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "exit ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        0,
        4,
        8
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "exit ( ) ;",
        "for ( int j = x ; j < y ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        0,
        4,
        8,
        3
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "exit ( ) ;",
        "for ( int j = x ; j < y ; j ++ )",
        "cin >> n , m ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        0,
        4,
        8,
        6
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "exit ( ) ;",
        "for ( int j = x ; j < y ; j ++ )",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        0,
        4,
        8,
        7
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "exit ( ) ;",
        "for ( int j = x ; j < y ; j ++ )",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        0,
        4,
        3
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "exit ( ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        0,
        4,
        3,
        6
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "exit ( ) ;",
        "cin >> n , m ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        0,
        4,
        3,
        7
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "exit ( ) ;",
        "cin >> n , m ;",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        0,
        4,
        6
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "exit ( ) ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        0,
        4,
        6,
        7
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "exit ( ) ;",
        "for ( int i = 1 ; i < m ; i ++ )",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        0,
        4,
        7
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "exit ( ) ;",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "for ( int j = x ; j < y ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        3
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "for ( int j = x ; j < y ; j ++ )",
        "cin >> n , m ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        3,
        6
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "for ( int j = x ; j < y ; j ++ )",
        "cin >> n , m ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        3,
        7
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "for ( int j = x ; j < y ; j ++ )",
        "cin >> n , m ;",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        6
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "for ( int j = x ; j < y ; j ++ )",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        6,
        7
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "for ( int j = x ; j < y ; j ++ )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        7
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "for ( int j = x ; j < y ; j ++ )",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "cin >> n , m ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        3,
        6
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "cin >> n , m ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        3,
        6,
        7
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "cin >> n , m ;",
        "for ( int i = 1 ; i < m ; i ++ )",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        3,
        7
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "cin >> n , m ;",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        6,
        7
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "for ( int i = 1 ; i < m ; i ++ )",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "char ch1 , ch2 [ 105 ] , s [ 105 ] ;",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "exit ( ) ;",
        "for ( int j = x ; j < y ; j ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        8,
        3
      ],
      "mod_code": [
        "exit ( ) ;",
        "for ( int j = x ; j < y ; j ++ )",
        "cin >> n , m ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        8,
        3,
        6
      ],
      "mod_code": [
        "exit ( ) ;",
        "for ( int j = x ; j < y ; j ++ )",
        "cin >> n , m ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        8,
        3,
        7
      ],
      "mod_code": [
        "exit ( ) ;",
        "for ( int j = x ; j < y ; j ++ )",
        "cin >> n , m ;",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        8,
        6
      ],
      "mod_code": [
        "exit ( ) ;",
        "for ( int j = x ; j < y ; j ++ )",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        8,
        6,
        7
      ],
      "mod_code": [
        "exit ( ) ;",
        "for ( int j = x ; j < y ; j ++ )",
        "for ( int i = 1 ; i < m ; i ++ )",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        8,
        7
      ],
      "mod_code": [
        "exit ( ) ;",
        "for ( int j = x ; j < y ; j ++ )",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "exit ( ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "exit ( ) ;",
        "cin >> n , m ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        3,
        6,
        7
      ],
      "mod_code": [
        "exit ( ) ;",
        "cin >> n , m ;",
        "for ( int i = 1 ; i < m ; i ++ )",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        3,
        7
      ],
      "mod_code": [
        "exit ( ) ;",
        "cin >> n , m ;",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "exit ( ) ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "exit ( ) ;",
        "for ( int i = 1 ; i < m ; i ++ )",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "exit ( ) ;",
        "cin >> x >> y >> ch1 , ch2 ;"
      ],
      "err_line": 4,
      "err_msg": "too few arguments to function ‘void exit(int)’"
    }
  ]
}