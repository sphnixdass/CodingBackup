{
  "meta": {
    "index": 2250,
    "hitid": "3VW0145YLY69GP772HCG7U9BNFZJMI",
    "workerid": "A1APYLD4DUK33J",
    "probid": "622A",
    "subid": "41085395"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare unsigned long long integer n",
      "code": "unsigned long long int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n is 1",
      "code": "if ( n == 1 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print n and newline",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare unsigned long long integer m = unsigned long long integer casted square root of ( 2 * n )",
      "code": "unsigned long long int m = ( unsigned long long int ) sqrt ( 2 * n ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "increment m",
      "code": "m ++ ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "declare unsigned long long integer a = m - 3",
      "code": "unsigned long long int a = m - 3 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = a to m inclusive",
      "code": "for ( unsigned long long int i = a ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare unsigned long long integer sum = i * ( i + 1 ) / 2",
      "code": "unsigned long long int sum = i * ( i + 1 ) / 2 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if sum is less than or equal to n",
      "code": "if ( sum <= n )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "declare unsigned long long integer diff = n - sum",
      "code": "unsigned long long int diff = ( n - sum ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if diff is less than or equal to ( i + 1 )",
      "code": "if ( diff <= ( i + 1 ) )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print diff and newline",
      "code": "cout << diff << endl ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( n == l )"
      ],
      "err_line": 3,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "unsigned unsigned long long a = m - 3 ;"
      ],
      "err_line": 9,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = a ; i <= m ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;"
      ],
      "err_line": 11,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "unsigned unsigned int diff = n - sum ;"
      ],
      "err_line": 13,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        11,
        9
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long a = m - 3 ;"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        11,
        9,
        12
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long a = m - 3 ;",
        "if ( sum >= n )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        11,
        9,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long a = m - 3 ;",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        11,
        12
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "if ( sum >= n )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        11,
        12,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "if ( sum >= n )",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        11,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "unsigned unsigned long long a = m - 3 ;"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        9,
        12
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "unsigned unsigned long long a = m - 3 ;",
        "if ( sum >= n )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "unsigned unsigned long long a = m - 3 ;",
        "if ( sum >= n )",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        9,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "unsigned unsigned long long a = m - 3 ;",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "if ( sum >= n )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        12,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "if ( sum >= n )",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long m = sqrt ( 2 * n ) ;",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        7,
        9
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "unsigned unsigned long long a = m - 3 ;"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        7,
        9,
        12
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "unsigned unsigned long long a = m - 3 ;",
        "if ( sum >= n )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        7,
        9,
        1
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "unsigned unsigned long long a = m - 3 ;",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        7,
        12
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "if ( sum >= n )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        7,
        12,
        1
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "if ( sum >= n )",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        7,
        1
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long a = m - 3 ;"
      ],
      "err_line": 9,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        9,
        12
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long a = m - 3 ;",
        "if ( sum >= n )"
      ],
      "err_line": 9,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        9,
        12,
        1
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long a = m - 3 ;",
        "if ( sum >= n )",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        9,
        1
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned long long a = m - 3 ;",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "if ( sum >= n )"
      ],
      "err_line": 11,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        12,
        1
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "if ( sum >= n )",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "unsigned unsigned int sum = i * ( i + 1 ) / 2 ;",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "unsigned unsigned long long a = m - 3 ;"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        9,
        12
      ],
      "mod_code": [
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "unsigned unsigned long long a = m - 3 ;",
        "if ( sum >= n )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        9,
        12,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "unsigned unsigned long long a = m - 3 ;",
        "if ( sum >= n )",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        9,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "unsigned unsigned long long a = m - 3 ;",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "if ( sum >= n )"
      ],
      "err_line": 7,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        12,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "if ( sum >= n )",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long int m = sqrt ( 2 * n ) ;",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "unsigned unsigned long long a = m - 3 ;",
        "if ( sum >= n )"
      ],
      "err_line": 9,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        9,
        12,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long a = m - 3 ;",
        "if ( sum >= n )",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "unsigned unsigned long long a = m - 3 ;",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "if ( sum >= n )",
        "unsigned unsigned int n ;"
      ],
      "err_line": 1,
      "err_msg": "duplicate ‘unsigned’"
    }
  ]
}