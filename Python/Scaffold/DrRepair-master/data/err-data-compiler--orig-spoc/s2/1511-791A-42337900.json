{
  "meta": {
    "index": 1511,
    "hitid": "3S1WOPCJFGNB41FULJOXUM42DQ8JEI",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "791A",
    "subid": "42337900"
  },
  "lines": [
    {
      "line": 0,
      "text": "snack = array of 100009 bool",
      "code": "bool snack [ 100009 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "arr = array of 100000 int",
      "code": "int arr [ 100000 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "flag = false",
      "code": "bool flag = false ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "n , x = int",
      "code": "int n , x ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "s = array of 1000 char",
      "code": "char s [ 1000 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n and x",
      "code": "cin >> n >> x ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while n < = x",
      "code": "while ( n <= x )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "multiply n by 3",
      "code": "n *= 3 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "multiply x by 2",
      "code": "x *= 2 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print count",
      "code": "cout << count << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "flag = false ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "while ( cin >> n >> x )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "count = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "flag = false ;",
        "cout << ' count ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        7
      ],
      "mod_code": [
        "flag = false ;",
        "cout << ' count ' ;",
        "count = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        7,
        11
      ],
      "mod_code": [
        "flag = false ;",
        "cout << ' count ' ;",
        "count = 0 ;",
        "x *= x ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        7,
        8
      ],
      "mod_code": [
        "flag = false ;",
        "cout << ' count ' ;",
        "count = 0 ;",
        "while ( n <= x ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        7,
        6
      ],
      "mod_code": [
        "flag = false ;",
        "cout << ' count ' ;",
        "count = 0 ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        11
      ],
      "mod_code": [
        "flag = false ;",
        "cout << ' count ' ;",
        "x *= x ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        11,
        8
      ],
      "mod_code": [
        "flag = false ;",
        "cout << ' count ' ;",
        "x *= x ;",
        "while ( n <= x ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        11,
        6
      ],
      "mod_code": [
        "flag = false ;",
        "cout << ' count ' ;",
        "x *= x ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        8
      ],
      "mod_code": [
        "flag = false ;",
        "cout << ' count ' ;",
        "while ( n <= x ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        8,
        6
      ],
      "mod_code": [
        "flag = false ;",
        "cout << ' count ' ;",
        "while ( n <= x ) ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        13,
        6
      ],
      "mod_code": [
        "flag = false ;",
        "cout << ' count ' ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "flag = false ;",
        "count = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        11
      ],
      "mod_code": [
        "flag = false ;",
        "count = 0 ;",
        "x *= x ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        11,
        8
      ],
      "mod_code": [
        "flag = false ;",
        "count = 0 ;",
        "x *= x ;",
        "while ( n <= x ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        11,
        6
      ],
      "mod_code": [
        "flag = false ;",
        "count = 0 ;",
        "x *= x ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "flag = false ;",
        "count = 0 ;",
        "while ( n <= x ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        6
      ],
      "mod_code": [
        "flag = false ;",
        "count = 0 ;",
        "while ( n <= x ) ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        6
      ],
      "mod_code": [
        "flag = false ;",
        "count = 0 ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "flag = false ;",
        "x *= x ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        8
      ],
      "mod_code": [
        "flag = false ;",
        "x *= x ;",
        "while ( n <= x ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        8,
        6
      ],
      "mod_code": [
        "flag = false ;",
        "x *= x ;",
        "while ( n <= x ) ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        6
      ],
      "mod_code": [
        "flag = false ;",
        "x *= x ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "flag = false ;",
        "while ( n <= x ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "flag = false ;",
        "while ( n <= x ) ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "flag = false ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 3,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "count = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        13,
        7,
        11
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "count = 0 ;",
        "x *= x ;"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        13,
        7,
        11,
        8
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "count = 0 ;",
        "x *= x ;",
        "while ( n <= x ) ;"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        13,
        7,
        11,
        6
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "count = 0 ;",
        "x *= x ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        13,
        7,
        8
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "count = 0 ;",
        "while ( n <= x ) ;"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        13,
        7,
        8,
        6
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "count = 0 ;",
        "while ( n <= x ) ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        13,
        7,
        6
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "count = 0 ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        13,
        11,
        8,
        6
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "x *= x ;",
        "while ( n <= x ) ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        13,
        11,
        6
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "x *= x ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        13,
        8,
        6
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "while ( n <= x ) ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "count = 0 ;",
        "x *= x ;"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        11,
        8
      ],
      "mod_code": [
        "count = 0 ;",
        "x *= x ;",
        "while ( n <= x ) ;"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        11,
        8,
        6
      ],
      "mod_code": [
        "count = 0 ;",
        "x *= x ;",
        "while ( n <= x ) ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        11,
        6
      ],
      "mod_code": [
        "count = 0 ;",
        "x *= x ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "count = 0 ;",
        "while ( n <= x ) ;"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "count = 0 ;",
        "while ( n <= x ) ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "count = 0 ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 7,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        11,
        8,
        6
      ],
      "mod_code": [
        "x *= x ;",
        "while ( n <= x ) ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "x *= x ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "while ( n <= x ) ;",
        "while ( cin >> n >> x )"
      ],
      "err_line": 9,
      "err_msg": "no post-increment operator for type"
    }
  ]
}