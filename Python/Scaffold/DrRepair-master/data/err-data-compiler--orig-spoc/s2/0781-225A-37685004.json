{
  "meta": {
    "index": 781,
    "hitid": "3HUR21WDDUJA5Q1A2OFSSY4X60SYX0",
    "workerid": "A7Z6XB4WDJYSP",
    "probid": "225A",
    "subid": "37685004"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , top , bottom , l , r = integers",
      "code": "int n , top , bottom , l , r ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "out = true",
      "code": "bool out = true ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read top",
      "code": "cin >> top ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "bottom = 7 - top",
      "code": "bottom = 7 - top ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read l and r",
      "code": "cin >> l >> r ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if out",
      "code": "if ( out )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if bottom is l or bottom is r or bottom is 7 - l or bottom is 7 - r set out to false",
      "code": "if ( bottom == l || bottom == r || bottom == 7 - l || bottom == 7 - r ) { out = false ; }",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if out",
      "code": "if ( out )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print YES",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print NO",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int bottom = 7 - top ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int bottom’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "out = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "top ( top ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘top’ cannot be used as a function"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int bottom’"
    },
    {
      "mod_line": [
        5,
        9,
        12
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "if ( ! out )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int bottom’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        3
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "if ( ! out )",
        "out = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        4
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "if ( ! out )",
        "top ( top ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘top’ cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        9,
        3
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "out = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        3,
        4
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "out = true ;",
        "top ( top ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        4
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "top ( top ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘top’ cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int bottom’"
    },
    {
      "mod_line": [
        5,
        9,
        12
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "if ( ! out )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int bottom’"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        3
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "if ( ! out )",
        "out = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        12,
        4
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "if ( ! out )",
        "top ( top ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘top’ cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        9,
        3
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "out = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        3,
        4
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "out = true ;",
        "top ( top ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        4
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "top ( top ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘top’ cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( ! out )"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int bottom’"
    },
    {
      "mod_line": [
        5,
        12,
        3
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( ! out )",
        "out = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        3,
        4
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( ! out )",
        "out = true ;",
        "top ( top ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        4
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "if ( ! out )",
        "top ( top ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘top’ cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "out = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        4
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "out = true ;",
        "top ( top ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int bottom = 7 - top ;",
        "top ( top ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘top’ cannot be used as a function"
    },
    {
      "mod_line": [
        9,
        12,
        3
      ],
      "mod_code": [
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "if ( ! out )",
        "out = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        3,
        4
      ],
      "mod_code": [
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "if ( ! out )",
        "out = true ;",
        "top ( top ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        4
      ],
      "mod_code": [
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "if ( ! out )",
        "top ( top ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘top’ cannot be used as a function"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "out = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        4
      ],
      "mod_code": [
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "out = true ;",
        "top ( top ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( bottom == l || bottom == 7 || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "top ( top ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘top’ cannot be used as a function"
    },
    {
      "mod_line": [
        9,
        12,
        3
      ],
      "mod_code": [
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "if ( ! out )",
        "out = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        3,
        4
      ],
      "mod_code": [
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "if ( ! out )",
        "out = true ;",
        "top ( top ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        4
      ],
      "mod_code": [
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "if ( ! out )",
        "top ( top ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘top’ cannot be used as a function"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "out = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        4
      ],
      "mod_code": [
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "out = true ;",
        "top ( top ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( bottom == l || bottom == 7 || bottom == 7 - l || bottom == 7 - r ) out = false ;",
        "top ( top ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘top’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "if ( ! out )",
        "out = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3,
        4
      ],
      "mod_code": [
        "if ( ! out )",
        "out = true ;",
        "top ( top ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "if ( ! out )",
        "top ( top ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘top’ cannot be used as a function"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "out = true ;",
        "top ( top ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘out’ was not declared in this scope"
    }
  ]
}