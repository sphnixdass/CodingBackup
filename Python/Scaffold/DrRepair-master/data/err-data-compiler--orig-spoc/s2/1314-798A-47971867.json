{
  "meta": {
    "index": 1314,
    "hitid": "33EEIIWHK719SZ5TBZXGRR4AS33VQ2",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "798A",
    "subid": "47971867"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant int MOD = 998244353",
      "code": "const int MOD = 998244353 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make const int MAX = 200001",
      "code": "const int MAX = 200001 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create int array An of size MAX",
      "code": "int An [ MAX ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "make integer array book of size MAX",
      "code": "int book [ MAX ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "let string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create int sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "make integer n = str . length ( )",
      "code": "int n = str . length ( ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n / 2 exclusive",
      "code": "for ( int i = 0 ; i < n / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if str [ i ] is not equal to str [ n - 1 - i ] , increment sum",
      "code": "if ( str [ i ] != str [ n - 1 - i ] ) sum ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if sum is 1",
      "code": "if ( sum == 1 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "otherwise",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if sum is 0 and n % 2",
      "code": "if ( sum == 0 && n % 2 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "display \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "otherwise do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "show \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "string str ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n / 2 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 14,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "break ;"
      ],
      "err_line": 17,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        17,
        5
      ],
      "mod_code": [
        "break ;",
        "string str ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        17,
        5,
        12
      ],
      "mod_code": [
        "break ;",
        "string str ( ) ;",
        "if ( ! sum )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        17,
        5,
        12,
        7
      ],
      "mod_code": [
        "break ;",
        "string str ( ) ;",
        "if ( ! sum )",
        "bool sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        17,
        5,
        12,
        3
      ],
      "mod_code": [
        "break ;",
        "string str ( ) ;",
        "if ( ! sum )",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        17,
        5,
        12,
        18
      ],
      "mod_code": [
        "break ;",
        "string str ( ) ;",
        "if ( ! sum )",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        17,
        5,
        7
      ],
      "mod_code": [
        "break ;",
        "string str ( ) ;",
        "bool sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        17,
        5,
        7,
        3
      ],
      "mod_code": [
        "break ;",
        "string str ( ) ;",
        "bool sum = 0 ;",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        17,
        5,
        7,
        18
      ],
      "mod_code": [
        "break ;",
        "string str ( ) ;",
        "bool sum = 0 ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        17,
        5,
        3
      ],
      "mod_code": [
        "break ;",
        "string str ( ) ;",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        17,
        5,
        3,
        18
      ],
      "mod_code": [
        "break ;",
        "string str ( ) ;",
        "book [ MAX ] ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        17,
        5,
        18
      ],
      "mod_code": [
        "break ;",
        "string str ( ) ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        17,
        12
      ],
      "mod_code": [
        "break ;",
        "if ( ! sum )"
      ],
      "err_line": 17,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        17,
        12,
        7
      ],
      "mod_code": [
        "break ;",
        "if ( ! sum )",
        "bool sum = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        17,
        12,
        7,
        3
      ],
      "mod_code": [
        "break ;",
        "if ( ! sum )",
        "bool sum = 0 ;",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        17,
        12,
        7,
        18
      ],
      "mod_code": [
        "break ;",
        "if ( ! sum )",
        "bool sum = 0 ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 17,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        17,
        12,
        3
      ],
      "mod_code": [
        "break ;",
        "if ( ! sum )",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        17,
        12,
        3,
        18
      ],
      "mod_code": [
        "break ;",
        "if ( ! sum )",
        "book [ MAX ] ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        17,
        12,
        18
      ],
      "mod_code": [
        "break ;",
        "if ( ! sum )",
        "cout << \" NO \" ;"
      ],
      "err_line": 17,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        17,
        7
      ],
      "mod_code": [
        "break ;",
        "bool sum = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        17,
        7,
        3
      ],
      "mod_code": [
        "break ;",
        "bool sum = 0 ;",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        17,
        7,
        3,
        18
      ],
      "mod_code": [
        "break ;",
        "bool sum = 0 ;",
        "book [ MAX ] ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        17,
        7,
        18
      ],
      "mod_code": [
        "break ;",
        "bool sum = 0 ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 17,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "break ;",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        17,
        3,
        18
      ],
      "mod_code": [
        "break ;",
        "book [ MAX ] ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "break ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 17,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "string str ( ) ;",
        "if ( ! sum )"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        5,
        12,
        7
      ],
      "mod_code": [
        "string str ( ) ;",
        "if ( ! sum )",
        "bool sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        5,
        12,
        7,
        3
      ],
      "mod_code": [
        "string str ( ) ;",
        "if ( ! sum )",
        "bool sum = 0 ;",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        5,
        12,
        7,
        18
      ],
      "mod_code": [
        "string str ( ) ;",
        "if ( ! sum )",
        "bool sum = 0 ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        5,
        12,
        3
      ],
      "mod_code": [
        "string str ( ) ;",
        "if ( ! sum )",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        5,
        12,
        3,
        18
      ],
      "mod_code": [
        "string str ( ) ;",
        "if ( ! sum )",
        "book [ MAX ] ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        5,
        12,
        18
      ],
      "mod_code": [
        "string str ( ) ;",
        "if ( ! sum )",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "string str ( ) ;",
        "bool sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        5,
        7,
        3
      ],
      "mod_code": [
        "string str ( ) ;",
        "bool sum = 0 ;",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        5,
        7,
        3,
        18
      ],
      "mod_code": [
        "string str ( ) ;",
        "bool sum = 0 ;",
        "book [ MAX ] ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        5,
        7,
        18
      ],
      "mod_code": [
        "string str ( ) ;",
        "bool sum = 0 ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "string str ( ) ;",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        5,
        3,
        18
      ],
      "mod_code": [
        "string str ( ) ;",
        "book [ MAX ] ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "string str ( ) ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::__cxx11::string() {aka std::__cxx11::basic_string<char>()}’)"
    },
    {
      "mod_line": [
        12,
        7,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "bool sum = 0 ;",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        12,
        7,
        3,
        18
      ],
      "mod_code": [
        "if ( ! sum )",
        "bool sum = 0 ;",
        "book [ MAX ] ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "if ( ! sum )",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        12,
        3,
        18
      ],
      "mod_code": [
        "if ( ! sum )",
        "book [ MAX ] ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "book [ MAX ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        7,
        3,
        18
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "book [ MAX ] ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "book [ MAX ] ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 3,
      "err_msg": "‘book’ does not name a type"
    }
  ]
}