{
  "meta": {
    "index": 398,
    "hitid": "3WRAAIUSBJT99837MI1CPCMQ4WLAX9",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "215A",
    "subid": "48101431"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n and m be integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let ar1 be an array of integers with a length of n",
      "code": "int ar1 [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i to n exclusive , read ar1 [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> ar1 [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let ar2 be an array of integers with a length of m",
      "code": "int ar2 [ m ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i to m exclusive , read ar2 [ i ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) cin >> ar2 [ i ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let res be an integer with res = 0",
      "code": "int res = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "let ma be an interger with ma = - 10000",
      "code": "int ma = - 10000 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for j to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if ar2 [ j ] modulo ar1 [ i ] is 0",
      "code": "if ( ar2 [ j ] % ar1 [ i ] == 0 )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if ar2 [ j ] divided by ar1 [ i ] is greater than ma",
      "code": "if ( ar2 [ j ] / ar1 [ i ] > ma )",
      "indent": 4
    },
    {
      "line": 14,
      "text": "set ma to the result of ar2 [ j ] / ar1 [ i ]",
      "code": "ma = ar2 [ j ] / ar1 [ i ] ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "set res to 1",
      "code": "res = 1 ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "else if ar2 [ j ] divided by ar1 [ i ] is ma",
      "code": "else if ( ar2 [ j ] / ar1 [ i ] == ma )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "increment res by 1",
      "code": "res ++ ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "output res and end line",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int ar1 [ strlen ( n ) ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int ar2 [ strlen ( m ) ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "res = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "const int ma = - 10000 ;"
      ],
      "err_line": 14,
      "err_msg": "assignment of read-only variable ‘ma’"
    }
  ]
}