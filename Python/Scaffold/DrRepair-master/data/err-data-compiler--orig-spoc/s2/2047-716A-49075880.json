{
  "meta": {
    "index": 2047,
    "hitid": "3KQC8JMJGCMC3X478Z4GZIKQAWD3HG",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "716A",
    "subid": "49075880"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints d , f , and o = 0 and int array a of size 100001",
      "code": "int d , f , a [ 100001 ] , o = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "print d and f",
      "code": "cin >> d >> f ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to d exclusive",
      "code": "for ( int i = 0 ; i < d ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increase o by 1",
      "code": "o ++ ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if i is equal to 0",
      "code": "if ( i == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set i to 0",
      "code": "i = 0 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if a [ i ] - a [ i - 1 ] is less than or equal to f",
      "code": "else if ( ( a [ i ] - a [ i - 1 ] ) <= f )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set o to o",
      "code": "o = o ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if a [ i ] - a [ i - 1 ] is greater than f",
      "code": "else if ( ( a [ i ] - a [ i - 1 ] ) > f )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set o to 1",
      "code": "o = 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print o",
      "code": "cout << o << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int d , a [ 100001 ] , d = 0 , o = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < d ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        14,
        6
      ],
      "mod_code": [
        "cout << d << \" \" << f << endl ;",
        "cout << a [ i ] << endl ;",
        "cout << ' o ' ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        9,
        6
      ],
      "mod_code": [
        "cout << d << \" \" << f << endl ;",
        "cout << a [ i ] << endl ;",
        "o = ' o ' ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        4,
        6
      ],
      "mod_code": [
        "cout << d << \" \" << f << endl ;",
        "cout << a [ i ] << endl ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        14,
        9,
        6
      ],
      "mod_code": [
        "cout << d << \" \" << f << endl ;",
        "cout << ' o ' ;",
        "o = ' o ' ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        14,
        6
      ],
      "mod_code": [
        "cout << d << \" \" << f << endl ;",
        "cout << ' o ' ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        14,
        6,
        4
      ],
      "mod_code": [
        "cout << d << \" \" << f << endl ;",
        "cout << ' o ' ;",
        "else if ( i == 0 )",
        "cout << a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        9,
        6
      ],
      "mod_code": [
        "cout << d << \" \" << f << endl ;",
        "o = ' o ' ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        9,
        6,
        4
      ],
      "mod_code": [
        "cout << d << \" \" << f << endl ;",
        "o = ' o ' ;",
        "else if ( i == 0 )",
        "cout << a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "cout << d << \" \" << f << endl ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        6,
        4
      ],
      "mod_code": [
        "cout << d << \" \" << f << endl ;",
        "else if ( i == 0 )",
        "cout << a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        14,
        9,
        6
      ],
      "mod_code": [
        "cout << a [ i ] << endl ;",
        "cout << ' o ' ;",
        "o = ' o ' ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        14,
        6
      ],
      "mod_code": [
        "cout << a [ i ] << endl ;",
        "cout << ' o ' ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        9,
        6
      ],
      "mod_code": [
        "cout << a [ i ] << endl ;",
        "o = ' o ' ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "cout << a [ i ] << endl ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        9,
        6
      ],
      "mod_code": [
        "cout << ' o ' ;",
        "o = ' o ' ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        9,
        6,
        4
      ],
      "mod_code": [
        "cout << ' o ' ;",
        "o = ' o ' ;",
        "else if ( i == 0 )",
        "cout << a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "cout << ' o ' ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14,
        6,
        4
      ],
      "mod_code": [
        "cout << ' o ' ;",
        "else if ( i == 0 )",
        "cout << a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "o = ' o ' ;",
        "else if ( i == 0 )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        6,
        4
      ],
      "mod_code": [
        "o = ' o ' ;",
        "else if ( i == 0 )",
        "cout << a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "else if ( i == 0 )",
        "cout << a [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}