{
  "meta": {
    "index": 529,
    "hitid": "33Q5P9PUSPGM7I0K7ELOSSSPCZ2ZCV",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1040A",
    "subid": "48310673"
  },
  "lines": [
    {
      "line": 0,
      "text": "create const int MAX = 1e6 + 5",
      "code": "const int MAX = 1e6 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare int n and array of integers a with 2 elements",
      "code": "int n , a [ 2 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer array arr with MAX elements",
      "code": "int arr [ MAX ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n , a , [ 0 ] , a and [ 1 ] and loop further",
      "code": "while ( cin >> n >> a [ 0 ] >> a [ 1 ] )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "loop i from 0 to n exclusive read arr [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "declare integer ans = 0",
      "code": "int ans = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for i = 0 and j = n - 1 while i < = j , incrementing i and decrementing j",
      "code": "for ( int i = 0 , j = n - 1 ; i <= j ; i ++ , j -- )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if arr [ i ] ^ arr [ j ] = 1",
      "code": "if ( ( arr [ i ] ^ arr [ j ] ) == 1 )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "change ans to - 1",
      "code": "ans = - 1 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "else if arr [ i ] ^ arr [ j ] is greater than 0",
      "code": "else if ( ( arr [ i ] ^ arr [ j ] ) > 0 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if arr [ i ] is less than 2 , add a [ arr [ i ] ] to ans",
      "code": "if ( arr [ i ] < 2 ) ans += a [ arr [ i ] ] ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if arr [ j ] is less than 2 , add a [ arr [ j ] ] to ans",
      "code": "if ( arr [ j ] < 2 ) ans += a [ arr [ j ] ] ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "else if arr [ i ] = 2",
      "code": "else if ( arr [ i ] == 2 )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "add ( min of a [ 0 ] and a [ 1 ] ) * ( 1 if i = j , or 2 otherwise ) to ans",
      "code": "ans += min ( a [ 0 ] , a [ 1 ] ) * ( i == j ? 1 : 2 ) ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "arr [ MAX ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘arr’ does not name a type"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a >> a )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( arr [ i ] < 2 ) ans += a [ arr [ arr [ i ] ] ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "if ( arr [ i ] ^ arr [ j ] == 1 )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        8,
        11
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        14
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "else if ( arr [ i ] == ' 2 ' )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans -= 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        8,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        14
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "else if ( arr [ i ] == ' 2 ' )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        8,
        15,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "ans -= 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        8,
        14
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "else if ( arr [ i ] == ' 2 ' )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "else if ( arr [ i ] == ' 2 ' )",
        "ans -= 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "ans -= 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        11,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        14
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "else if ( arr [ i ] == ' 2 ' )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        11,
        15,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "ans -= 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        11,
        14
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "else if ( arr [ i ] == ' 2 ' )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "else if ( arr [ i ] == ' 2 ' )",
        "ans -= 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        11,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans -= 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        15,
        14
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "else if ( arr [ i ] == ' 2 ' )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        15,
        14,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "else if ( arr [ i ] == ' 2 ' )",
        "ans -= 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        15,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "ans -= 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "else if ( arr [ i ] == ' 2 ' )"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        14,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "else if ( arr [ i ] == ' 2 ' )",
        "ans -= 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> a >> 0 >> a >> a >> a [ 1 ] )",
        "ans -= 1 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘int [2]’)"
    },
    {
      "mod_line": [
        8,
        11,
        15
      ],
      "mod_code": [
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        14
      ],
      "mod_code": [
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "else if ( arr [ i ] == ' 2 ' )"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        9
      ],
      "mod_code": [
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "ans -= 1 ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        8,
        15,
        14
      ],
      "mod_code": [
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "else if ( arr [ i ] == ' 2 ' )"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        8,
        15,
        14,
        9
      ],
      "mod_code": [
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "else if ( arr [ i ] == ' 2 ' )",
        "ans -= 1 ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        8,
        15,
        9
      ],
      "mod_code": [
        "if ( arr [ i ] ^ arr [ j ] == 1 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "ans -= 1 ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        11,
        15,
        14
      ],
      "mod_code": [
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "else if ( arr [ i ] == ' 2 ' )"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        11,
        15,
        14,
        9
      ],
      "mod_code": [
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "else if ( arr [ i ] == ' 2 ' )",
        "ans -= 1 ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        11,
        15,
        9
      ],
      "mod_code": [
        "else if ( arr [ i ] ^ arr [ j ] > 0 )",
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "ans -= 1 ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "else if ( arr [ i ] == ' 2 ' )"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        15,
        14,
        9
      ],
      "mod_code": [
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "else if ( arr [ i ] == ' 2 ' )",
        "ans -= 1 ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "ans += min ( a [ 0 ] ) * min ( a [ 1 ] ) * ( 1 ? 1 : 2 ) ;",
        "ans -= 1 ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘min(int&)’"
    }
  ]
}