{
  "meta": {
    "index": 692,
    "hitid": "3ZRKL6Z1E8X2NIUBE8NZMQG1NCYSGX",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1020A",
    "subid": "48096174"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare swap with integer addresses a , b as arguments , returning void",
      "code": "void swap ( int & a , int & b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare temp as integer",
      "code": "int temp ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let temp be a",
      "code": "temp = a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let a be b",
      "code": "a = b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let b be temp",
      "code": "b = temp ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare long long integers n , h , a , b , q",
      "code": "long long int n , h , a , b , q ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n , h , a , b , q",
      "code": "cin >> n >> h >> a >> b >> q ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "declare long long integer sum = 0",
      "code": "long long int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while q is true",
      "code": "while ( q )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "let sum be 0",
      "code": "sum = 0 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "declare long long integers t1 , f1 , t2 , f2",
      "code": "long long int t1 , f1 , t2 , f2 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "read t1 , f1 , t2 , f2",
      "code": "cin >> t1 >> f1 >> t2 >> f2 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if t1 is t2",
      "code": "if ( t1 == t2 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print absolute value of ( f1 - f2 ) , newline",
      "code": "cout << abs ( f1 - f2 ) << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if f1 is greater than b",
      "code": "if ( f1 > b )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "let sum be sum + f1 - b",
      "code": "sum = sum + f1 - b ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "let f1 be b",
      "code": "f1 = b ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "else if f1 is less than or equal to b and f1 is greater than or equal to a",
      "code": "else if ( f1 <= b && f1 >= a )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 22,
      "text": "let sum be sum + a - f1",
      "code": "sum = sum + a - f1 ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "let f1 be a",
      "code": "f1 = a ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 25,
      "text": "let sum be sum + absolute value of ( t2 - t1 )",
      "code": "sum = sum + abs ( t2 - t1 ) ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "let sum be sum + absolute value of ( f1 - f2 )",
      "code": "sum = sum + abs ( f1 - f2 ) ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "print sum , newline",
      "code": "cout << sum << endl ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "end statement",
      "code": ";",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 30,
      "text": "decrement q",
      "code": "q -- ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a = b ;"
      ],
      "err_line": 3,
      "err_msg": "declaration of ‘int a’ shadows a parameter"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int b = temp ;"
      ],
      "err_line": 4,
      "err_msg": "declaration of ‘int b’ shadows a parameter"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        19,
        10,
        28
      ],
      "mod_code": [
        "sum -= f1 - b ;",
        "bool f1 = b ;",
        "while ( q == true )",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        19,
        8,
        28
      ],
      "mod_code": [
        "sum -= f1 - b ;",
        "bool f1 = b ;",
        "cin >> n >> h >> a >> b ;",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        19,
        28
      ],
      "mod_code": [
        "sum -= f1 - b ;",
        "bool f1 = b ;",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        19,
        28,
        13
      ],
      "mod_code": [
        "sum -= f1 - b ;",
        "bool f1 = b ;",
        "<< endl ;",
        "cin >> t1 >> f1 >> t2 , f2 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        10,
        8,
        28
      ],
      "mod_code": [
        "sum -= f1 - b ;",
        "while ( q == true )",
        "cin >> n >> h >> a >> b ;",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        10,
        28
      ],
      "mod_code": [
        "sum -= f1 - b ;",
        "while ( q == true )",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        10,
        28,
        13
      ],
      "mod_code": [
        "sum -= f1 - b ;",
        "while ( q == true )",
        "<< endl ;",
        "cin >> t1 >> f1 >> t2 , f2 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        8,
        28
      ],
      "mod_code": [
        "sum -= f1 - b ;",
        "cin >> n >> h >> a >> b ;",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        8,
        28,
        13
      ],
      "mod_code": [
        "sum -= f1 - b ;",
        "cin >> n >> h >> a >> b ;",
        "<< endl ;",
        "cin >> t1 >> f1 >> t2 , f2 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        28
      ],
      "mod_code": [
        "sum -= f1 - b ;",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        28,
        13
      ],
      "mod_code": [
        "sum -= f1 - b ;",
        "<< endl ;",
        "cin >> t1 >> f1 >> t2 , f2 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        10,
        8,
        28
      ],
      "mod_code": [
        "bool f1 = b ;",
        "while ( q == true )",
        "cin >> n >> h >> a >> b ;",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        10,
        28
      ],
      "mod_code": [
        "bool f1 = b ;",
        "while ( q == true )",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        10,
        28,
        13
      ],
      "mod_code": [
        "bool f1 = b ;",
        "while ( q == true )",
        "<< endl ;",
        "cin >> t1 >> f1 >> t2 , f2 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        8,
        28
      ],
      "mod_code": [
        "bool f1 = b ;",
        "cin >> n >> h >> a >> b ;",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        8,
        28,
        13
      ],
      "mod_code": [
        "bool f1 = b ;",
        "cin >> n >> h >> a >> b ;",
        "<< endl ;",
        "cin >> t1 >> f1 >> t2 , f2 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        28
      ],
      "mod_code": [
        "bool f1 = b ;",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        19,
        28,
        13
      ],
      "mod_code": [
        "bool f1 = b ;",
        "<< endl ;",
        "cin >> t1 >> f1 >> t2 , f2 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        8,
        28
      ],
      "mod_code": [
        "while ( q == true )",
        "cin >> n >> h >> a >> b ;",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        8,
        28,
        13
      ],
      "mod_code": [
        "while ( q == true )",
        "cin >> n >> h >> a >> b ;",
        "<< endl ;",
        "cin >> t1 >> f1 >> t2 , f2 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        28
      ],
      "mod_code": [
        "while ( q == true )",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10,
        28,
        13
      ],
      "mod_code": [
        "while ( q == true )",
        "<< endl ;",
        "cin >> t1 >> f1 >> t2 , f2 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        28
      ],
      "mod_code": [
        "cin >> n >> h >> a >> b ;",
        "<< endl ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        28,
        13
      ],
      "mod_code": [
        "cin >> n >> h >> a >> b ;",
        "<< endl ;",
        "cin >> t1 >> f1 >> t2 , f2 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        28,
        13
      ],
      "mod_code": [
        "<< endl ;",
        "cin >> t1 >> f1 >> t2 , f2 ;"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘<<’ token"
    }
  ]
}