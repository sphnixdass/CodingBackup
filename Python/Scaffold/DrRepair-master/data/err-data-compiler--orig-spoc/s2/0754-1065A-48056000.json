{
  "meta": {
    "index": 754,
    "hitid": "3X878VYTIECAQKEOFLJ69EKTZJN7FS",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "1065A",
    "subid": "48056000"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "ans , k , a , b , c , d = long long",
      "code": "long long ans , k , a , b , c , d ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "T = int",
      "code": "int T ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read T",
      "code": "cin >> T ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while decremented T not equal 0",
      "code": "while ( T -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "ans = 0",
      "code": "ans = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read a , b , c , d",
      "code": "cin >> a >> b >> c >> d ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "k = a / d",
      "code": "k = a / d ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "add k to ans",
      "code": "ans += k ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "k = a / ( d * b ) * c",
      "code": "k = a / ( d * b ) * c ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "add k to ans",
      "code": "ans += k ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool T ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "int ans = 0 ;",
        "bool T ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        5,
        2,
        9
      ],
      "mod_code": [
        "int ans = 0 ;",
        "bool T ;",
        "k -= ( d * b ) * c ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        5,
        2,
        9,
        3
      ],
      "mod_code": [
        "int ans = 0 ;",
        "bool T ;",
        "k -= ( d * b ) * c ;",
        "T = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        5,
        2,
        9,
        7
      ],
      "mod_code": [
        "int ans = 0 ;",
        "bool T ;",
        "k -= ( d * b ) * c ;",
        "k /= d ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        5,
        2,
        9,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "bool T ;",
        "k -= ( d * b ) * c ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "int ans = 0 ;",
        "bool T ;",
        "T = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        5,
        2,
        3,
        7
      ],
      "mod_code": [
        "int ans = 0 ;",
        "bool T ;",
        "T = getchar ( ) ;",
        "k /= d ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        5,
        2,
        3,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "bool T ;",
        "T = getchar ( ) ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        5,
        2,
        7
      ],
      "mod_code": [
        "int ans = 0 ;",
        "bool T ;",
        "k /= d ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        5,
        2,
        7,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "bool T ;",
        "k /= d ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        5,
        2,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "bool T ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        5,
        9,
        3,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "k -= ( d * b ) * c ;",
        "T = getchar ( ) ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        5,
        9,
        7,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "k -= ( d * b ) * c ;",
        "k /= d ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        5,
        9,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "k -= ( d * b ) * c ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        5,
        3,
        7,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "T = getchar ( ) ;",
        "k /= d ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        5,
        3,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "T = getchar ( ) ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "k /= d ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int ans = 0 ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "bool T ;",
        "k -= ( d * b ) * c ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        2,
        9,
        3
      ],
      "mod_code": [
        "bool T ;",
        "k -= ( d * b ) * c ;",
        "T = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        2,
        9,
        3,
        7
      ],
      "mod_code": [
        "bool T ;",
        "k -= ( d * b ) * c ;",
        "T = getchar ( ) ;",
        "k /= d ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        2,
        9,
        3,
        4
      ],
      "mod_code": [
        "bool T ;",
        "k -= ( d * b ) * c ;",
        "T = getchar ( ) ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        2,
        9,
        7
      ],
      "mod_code": [
        "bool T ;",
        "k -= ( d * b ) * c ;",
        "k /= d ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        2,
        9,
        7,
        4
      ],
      "mod_code": [
        "bool T ;",
        "k -= ( d * b ) * c ;",
        "k /= d ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        2,
        9,
        4
      ],
      "mod_code": [
        "bool T ;",
        "k -= ( d * b ) * c ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "bool T ;",
        "T = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "bool T ;",
        "T = getchar ( ) ;",
        "k /= d ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        4
      ],
      "mod_code": [
        "bool T ;",
        "T = getchar ( ) ;",
        "k /= d ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "bool T ;",
        "T = getchar ( ) ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "bool T ;",
        "k /= d ;"
      ],
      "err_line": 4,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        2,
        7,
        4
      ],
      "mod_code": [
        "bool T ;",
        "k /= d ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "bool T ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        9,
        3,
        7,
        4
      ],
      "mod_code": [
        "k -= ( d * b ) * c ;",
        "T = getchar ( ) ;",
        "k /= d ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        9,
        3,
        4
      ],
      "mod_code": [
        "k -= ( d * b ) * c ;",
        "T = getchar ( ) ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        9,
        7,
        4
      ],
      "mod_code": [
        "k -= ( d * b ) * c ;",
        "k /= d ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "k -= ( d * b ) * c ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "T = getchar ( ) ;",
        "k /= d ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "T = getchar ( ) ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "k /= d ;",
        "while ( T T )"
      ],
      "err_line": 4,
      "err_msg": "expected ‘)’ before ‘T’"
    }
  ]
}