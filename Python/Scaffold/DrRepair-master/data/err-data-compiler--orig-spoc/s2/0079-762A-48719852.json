{
  "meta": {
    "index": 79,
    "hitid": "301KG0KX9CFNIF8O4ZQBG8FY3VG2HW",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "762A",
    "subid": "48719852"
  },
  "lines": [
    {
      "line": 0,
      "text": "define READ ( INPUT = \" NO \" , OUTPUT = \" NO \" )",
      "code": "void READ ( string INPUT = \" NO \" , string OUTPUT = \" NO \" )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if INPUT ! = \" NO \" then open file with name INPUT and read permission using standard input",
      "code": "if ( INPUT != \" NO \" ) freopen ( INPUT . c_str ( ) , \" r \" , stdin ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if OUTPUT ! = \" NO \" then open file with name OUTPUT and write permission using standard ouput",
      "code": "if ( OUTPUT != \" NO \" ) freopen ( OUTPUT . c_str ( ) , \" w \" , stdout ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "ans = vector of long longs",
      "code": "vector < long long > ans ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "n = long long",
      "code": "long long n ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "k = int",
      "code": "int k ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "in function Divs",
      "code": "void Divs ( )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "for i = 1 to n / i inclusive",
      "code": "for ( int i = 1 ; i <= n / i ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if n is a multiple of i",
      "code": "if ( n % i == 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "append i to ans",
      "code": "ans . push_back ( i ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if n is not i ^ 2 then append n / i to ans",
      "code": "if ( n / i != i ) ans . push_back ( n / i ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "sort array ans",
      "code": "sort ( ans . begin ( ) , ans . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 17,
      "text": "read n then k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "call Divs",
      "code": "Divs ( ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if ans has at least k elements",
      "code": "if ( ( int ) ans . size ( ) >= k )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print ans [ - - k ]",
      "code": "cout << ans [ -- k ] << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print \" - 1 \"",
      "code": "cout << - 1 << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( n != i ^ 2 ) ans += n / i ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "return INPUT ( \" NO \" , OUTPUT = \" NO \" ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘return’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { open += permission ; }"
      ],
      "err_line": 1,
      "err_msg": "‘open’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { open += permission ; }"
      ],
      "err_line": 2,
      "err_msg": "‘open’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "bool k ;"
      ],
      "err_line": 20,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "void Divs ( int str )"
      ],
      "err_line": 18,
      "err_msg": "too few arguments to function ‘void Divs(int)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n / i ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "ans . append ( i ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘class std::vector<long long int>’ has no member named ‘append’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( n != i ^ 2 ) ans += ( n / i ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "sort ( ans , ans + 3 ) ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<long long int>’ and ‘int’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "cin >> n then k ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "Divs -- ;"
      ],
      "err_line": 18,
      "err_msg": "lvalue required as decrement operand"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        2
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        11
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        14
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        19
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        11
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( n != i ^ 2 ) ans += n / i ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        14
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        19
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        14
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        14,
        19
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        14,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "sort ( ans , ans + n ) ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        19
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        19,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        1,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        2,
        11
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        2,
        11,
        14
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        2,
        11,
        19
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        2,
        11,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        2,
        14
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        2,
        14,
        19
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        2,
        14,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "sort ( ans , ans + n ) ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        2,
        19
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        2,
        19,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        2,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( n != i ^ 2 ) ans += n / i ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        11,
        14
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        11,
        14,
        19
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        11,
        14,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        11,
        19
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        11,
        19,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        11,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        14,
        19
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        14,
        19,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        14,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "sort ( ans , ans + n ) ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        19,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        0,
        20
      ],
      "mod_code": [
        "if ( INPUT ) OUTPUT = \" NO \" , OUTPUT = \" NO \" ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected unqualified-id before ‘if’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        2,
        11
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        2,
        11,
        14
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        2,
        11,
        19
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        2,
        11,
        20
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        2,
        14
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        2,
        14,
        19
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        2,
        14,
        20
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "sort ( ans , ans + n ) ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        2,
        19
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        2,
        19,
        20
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        2,
        20
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( n != i ^ 2 ) ans += n / i ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        11,
        14
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        11,
        14,
        19
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        11,
        14,
        20
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        11,
        19
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        11,
        19,
        20
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        11,
        20
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        14,
        19
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        14,
        19,
        20
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        14,
        20
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "sort ( ans , ans + n ) ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        19,
        20
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "if ( INPUT != \" NO \" ) { file ( INPUT ( INPUT ) ) ; }",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 1,
      "err_msg": "no match for call to ‘(std::__cxx11::string {aka std::__cxx11::basic_string<char>}) (std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        11,
        14
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        11,
        14,
        19
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        11,
        14,
        20
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        11,
        19
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        11,
        19,
        20
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        11,
        20
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( n != i ^ 2 ) ans += n / i ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        14
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        14,
        19
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        14,
        19,
        20
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        14,
        20
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "sort ( ans , ans + n ) ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        19,
        20
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        2,
        20
      ],
      "mod_code": [
        "if ( OUTPUT != \" NO \" ) { OUTPUT += OUTPUT << \" NO \" << endl ; }",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator<<’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘const char [3]’)"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        11,
        14,
        19
      ],
      "mod_code": [
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        11,
        14,
        19,
        20
      ],
      "mod_code": [
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        11,
        14,
        20
      ],
      "mod_code": [
        "if ( n != i ^ 2 ) ans += n / i ;",
        "sort ( ans , ans + n ) ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "if ( n != i ^ 2 ) ans += n / i ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        11,
        19,
        20
      ],
      "mod_code": [
        "if ( n != i ^ 2 ) ans += n / i ;",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "if ( n != i ^ 2 ) ans += n / i ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+=’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        14,
        19,
        20
      ],
      "mod_code": [
        "sort ( ans , ans + n ) ;",
        "if ( ans . at ( k ) )",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "sort ( ans , ans + n ) ;",
        "cout << ans [ - - k ] << endl ;"
      ],
      "err_line": 14,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<long long int>’ and ‘long long int’)"
    }
  ]
}