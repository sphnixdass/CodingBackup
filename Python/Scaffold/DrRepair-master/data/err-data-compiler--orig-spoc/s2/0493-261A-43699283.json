{
  "meta": {
    "index": 493,
    "hitid": "3LXX8KJXPW38AGFATL0GA4KDMA3O98",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "261A",
    "subid": "43699283"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "m , n = integers",
      "code": "int m , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "disc = vector of long long integer with disc = m",
      "code": "vector < long long int > disc ( m ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to m exclusive , read disc [ i ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) cin >> disc [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "cost = vector of long long integer with cost = n",
      "code": "vector < long long int > cost ( n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive , read cost [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> cost [ i ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "sort disc . begin ( ) and disc . end ( )",
      "code": "sort ( disc . begin ( ) , disc . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "sort cost . begin ( ) and cost . end ( )",
      "code": "sort ( cost . begin ( ) , cost . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "ans = long long integer with ans = 0",
      "code": "long long int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "i = integer with i = n - 1",
      "code": "int i = n - 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "while ( i > = 0 )",
      "code": "while ( i >= 0 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for j = max ( 0ll , i - disc [ 0 ] + 1 ) with j < = i , increment j , ans = ans + cost [ j ]",
      "code": "for ( int j = max ( 0ll , i - disc [ 0 ] + 1 ) ; j <= i ; j ++ ) ans += cost [ j ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "i = i - disc [ 0 ] + 2",
      "code": "i -= disc [ 0 ] + 2 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < long long int > disc = m ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "vector < long long int > cost = n ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "sort ( disc . begin ( ) . begin ( ) , disc . end ( ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘std::vector<long long int>::iterator {aka class __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >}’ has no member named ‘begin’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "sort ( cost . begin ( ) . begin ( ) , cost . end ( ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘std::vector<long long int>::iterator {aka class __gnu_cxx::__normal_iterator<long long int*, std::vector<long long int> >}’ has no member named ‘begin’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "vector < long long int > cost = n ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        6,
        14
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "vector < long long int > cost = n ;",
        "i = i - disc [ 0 ] + 2 ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        12
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "vector < long long int > cost = n ;",
        "i = i - disc [ 0 ] + 2 ;",
        "while ( i >= ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        2
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "vector < long long int > cost = n ;",
        "i = i - disc [ 0 ] + 2 ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        6,
        14,
        5
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "vector < long long int > cost = n ;",
        "i = i - disc [ 0 ] + 2 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        6,
        12
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "vector < long long int > cost = n ;",
        "while ( i >= ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        6,
        12,
        2
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "vector < long long int > cost = n ;",
        "while ( i >= ' 0 ' )",
        "m = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        6,
        12,
        5
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "vector < long long int > cost = n ;",
        "while ( i >= ' 0 ' )",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "vector < long long int > cost = n ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        6,
        2,
        5
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "vector < long long int > cost = n ;",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "vector < long long int > cost = n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "i = i - disc [ 0 ] + 2 ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        14,
        12
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "i = i - disc [ 0 ] + 2 ;",
        "while ( i >= ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        14,
        12,
        2
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "i = i - disc [ 0 ] + 2 ;",
        "while ( i >= ' 0 ' )",
        "m = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        14,
        12,
        5
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "i = i - disc [ 0 ] + 2 ;",
        "while ( i >= ' 0 ' )",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        14,
        2
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "i = i - disc [ 0 ] + 2 ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        14,
        2,
        5
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "i = i - disc [ 0 ] + 2 ;",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        14,
        5
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "i = i - disc [ 0 ] + 2 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "while ( i >= ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        12,
        2
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "while ( i >= ' 0 ' )",
        "m = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        12,
        2,
        5
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "while ( i >= ' 0 ' )",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        12,
        5
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "while ( i >= ' 0 ' )",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "vector < long long int > disc = m ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "i = i - disc [ 0 ] + 2 ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        14,
        12
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "i = i - disc [ 0 ] + 2 ;",
        "while ( i >= ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        14,
        12,
        2
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "i = i - disc [ 0 ] + 2 ;",
        "while ( i >= ' 0 ' )",
        "m = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        14,
        12,
        5
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "i = i - disc [ 0 ] + 2 ;",
        "while ( i >= ' 0 ' )",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        14,
        2
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "i = i - disc [ 0 ] + 2 ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        14,
        2,
        5
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "i = i - disc [ 0 ] + 2 ;",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        14,
        5
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "i = i - disc [ 0 ] + 2 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "while ( i >= ' 0 ' )"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        12,
        2
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "while ( i >= ' 0 ' )",
        "m = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        12,
        2,
        5
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "while ( i >= ' 0 ' )",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        12,
        5
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "while ( i >= ' 0 ' )",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "m = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        2,
        5
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "m = getchar ( ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "vector < long long int > cost = n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "conversion from ‘int’ to non-scalar type ‘std::vector<long long int>’ requested"
    }
  ]
}