{
  "meta": {
    "index": 670,
    "hitid": "39HYCOOPKOFWD37FSLQ54WEYIV0DMW",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1020A",
    "subid": "42467196"
  },
  "lines": [
    {
      "line": 0,
      "text": "create ints n , h , a , b , k , and t and int arrays p of size 10000 , q of size 10000 , r of size 10000 , and s of size 10000",
      "code": "int n , h , a , b , k , t , p [ 10000 ] , q [ 10000 ] , r [ 10000 ] , s [ 10000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n , h , a , b , and k",
      "code": "cin >> n >> h >> a >> b >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to k exclusive , read p [ i ] , q [ i ] , r [ i ] , and s [ i ]",
      "code": "for ( int i = 0 ; i < k ; i ++ ) { cin >> p [ i ] >> q [ i ] >> r [ i ] >> s [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to k exclusive",
      "code": "for ( int i = 0 ; i < k ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if p [ i ] is not equal to r [ i ]",
      "code": "if ( p [ i ] != r [ i ] )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if q [ i ] is less than a",
      "code": "if ( q [ i ] < a )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "set t to a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - a )",
      "code": "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - a ) ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "print t",
      "code": "cout << t << endl ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else if q [ i ] is greater than b",
      "code": "else if ( q [ i ] > b )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set t to q [ i ] - b + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - b )",
      "code": "t = q [ i ] - b + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - b ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "print t",
      "code": "cout << t << endl ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else do",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set to abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] )",
      "code": "t = abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "print t",
      "code": "cout << t << endl ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set t to abs ( s [ i ] - a [ i ] )",
      "code": "t = abs ( s [ i ] - q [ i ] ) ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "print t",
      "code": "cout << t << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "t = abs ( s [ i ] - a [ i ] ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , t [ 10000 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int t = abs ( s [ i ] - a [ i ] ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        7,
        13
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        7,
        13,
        17
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        7,
        13,
        6
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "if ( q [ i ] < ' a ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        7,
        13,
        16
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        7,
        17
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        7,
        17,
        6
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "if ( q [ i ] < ' a ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        7,
        17,
        16
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        7,
        6
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "if ( q [ i ] < ' a ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        7,
        6,
        16
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "if ( q [ i ] < ' a ' )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        7,
        16
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        13,
        17
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        13,
        17,
        6
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "if ( q [ i ] < ' a ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        13,
        17,
        16
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        13,
        6
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "if ( q [ i ] < ' a ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        13,
        6,
        16
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "if ( q [ i ] < ' a ' )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        13,
        16
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = abs ( s [ i ] - a [ i ] ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        17,
        6
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "if ( q [ i ] < ' a ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        17,
        6,
        16
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "if ( q [ i ] < ' a ' )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        17,
        16
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "if ( q [ i ] < ' a ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        6,
        16
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "if ( q [ i ] < ' a ' )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "int n , h , p , p , p [ 10000 ] , r [ 10000 ] , s [ 10000 ] , s [ 10000 ] , s [ 10000 ] ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int p’"
    },
    {
      "mod_line": [
        7,
        13,
        17
      ],
      "mod_code": [
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        6
      ],
      "mod_code": [
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "if ( q [ i ] < ' a ' )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        16
      ],
      "mod_code": [
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        13,
        6,
        16
      ],
      "mod_code": [
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "if ( q [ i ] < ' a ' )",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        13,
        16
      ],
      "mod_code": [
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        17,
        6
      ],
      "mod_code": [
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "if ( q [ i ] < ' a ' )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        17,
        6,
        16
      ],
      "mod_code": [
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "if ( q [ i ] < ' a ' )",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        17,
        16
      ],
      "mod_code": [
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        6,
        16
      ],
      "mod_code": [
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "if ( q [ i ] < ' a ' )",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "t = a - q [ i ] + abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - ' a ' ) ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17,
        6
      ],
      "mod_code": [
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "if ( q [ i ] < ' a ' )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        17,
        6,
        16
      ],
      "mod_code": [
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "if ( q [ i ] < ' a ' )",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        17,
        16
      ],
      "mod_code": [
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        6,
        16
      ],
      "mod_code": [
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "if ( q [ i ] < ' a ' )",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "abs ( p [ i ] - r [ i ] ) + abs ( s [ i ] - q [ i ] ) ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        6
      ],
      "mod_code": [
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "if ( q [ i ] < ' a ' )"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        6,
        16
      ],
      "mod_code": [
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "if ( q [ i ] < ' a ' )",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17,
        16
      ],
      "mod_code": [
        "t = abs ( s [ i ] - a [ i ] ) ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "if ( q [ i ] < ' a ' )",
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}