{
  "meta": {
    "index": 1636,
    "hitid": "3ECKRY5B1QQDKLMKZOHA3VQKP4WIZQ",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "586A",
    "subid": "48884551"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make integer array arr of size n",
      "code": "int arr [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "make integer count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create int flag = - 1",
      "code": "int flag = - 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive , read arr [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if arr [ i ] is equal to 1",
      "code": "if ( arr [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set flag to 0",
      "code": "flag = 0 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if arr [ i ] is equal to 0 and flag is equal to 0",
      "code": "else if ( arr [ i ] == 0 && flag == 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else if set arr [ i ] to 0 and flag to 1",
      "code": "else if ( arr [ i ] == 0 && flag == 1 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "decrease count by 1",
      "code": "count -- ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set flag to 0",
      "code": "flag = 2 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else if arr [ i ] is 0 and flag is less than or equal to 2",
      "code": "else if ( arr [ i ] == 0 && flag >= 2 )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set flag to flag + 1",
      "code": "flag ++ ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "if flag is equal to 1 , decrease count by 1",
      "code": "if ( flag == 1 ) count -- ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "display count",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "arr [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int flag = - l ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = - l ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = - l ;",
        "else if ( arr [ i ] == 0 && flag )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        14,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = - l ;",
        "else if ( arr [ i ] == 0 && flag )",
        "count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        5,
        14,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = - l ;",
        "else if ( arr [ i ] == 0 && flag )",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        14,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = - l ;",
        "else if ( arr [ i ] == 0 && flag )",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = - l ;",
        "count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        5,
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = - l ;",
        "count = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        5,
        4,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = - l ;",
        "count = 0 ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = - l ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        2,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = - l ;",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        5,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int flag = - l ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( arr [ i ] == 0 && flag )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        14,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( arr [ i ] == 0 && flag )",
        "count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        14,
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( arr [ i ] == 0 && flag )",
        "count = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        14,
        4,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( arr [ i ] == 0 && flag )",
        "count = 0 ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( arr [ i ] == 0 && flag )",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        14,
        2,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( arr [ i ] == 0 && flag )",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( arr [ i ] == 0 && flag )",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "count = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        7,
        4,
        2,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "count = 0 ;",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "count = 0 ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        2,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "int flag = - l ;",
        "else if ( arr [ i ] == 0 && flag )"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14,
        4
      ],
      "mod_code": [
        "int flag = - l ;",
        "else if ( arr [ i ] == 0 && flag )",
        "count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        5,
        14,
        4,
        2
      ],
      "mod_code": [
        "int flag = - l ;",
        "else if ( arr [ i ] == 0 && flag )",
        "count = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        5,
        14,
        4,
        1
      ],
      "mod_code": [
        "int flag = - l ;",
        "else if ( arr [ i ] == 0 && flag )",
        "count = 0 ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14,
        2
      ],
      "mod_code": [
        "int flag = - l ;",
        "else if ( arr [ i ] == 0 && flag )",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14,
        2,
        1
      ],
      "mod_code": [
        "int flag = - l ;",
        "else if ( arr [ i ] == 0 && flag )",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        14,
        1
      ],
      "mod_code": [
        "int flag = - l ;",
        "else if ( arr [ i ] == 0 && flag )",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "int flag = - l ;",
        "count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        5,
        4,
        2
      ],
      "mod_code": [
        "int flag = - l ;",
        "count = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        5,
        4,
        2,
        1
      ],
      "mod_code": [
        "int flag = - l ;",
        "count = 0 ;",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4,
        1
      ],
      "mod_code": [
        "int flag = - l ;",
        "count = 0 ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "int flag = - l ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        1
      ],
      "mod_code": [
        "int flag = - l ;",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "int flag = - l ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "else if ( arr [ i ] == 0 && flag )",
        "count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        14,
        4,
        2
      ],
      "mod_code": [
        "else if ( arr [ i ] == 0 && flag )",
        "count = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        14,
        4,
        2,
        1
      ],
      "mod_code": [
        "else if ( arr [ i ] == 0 && flag )",
        "count = 0 ;",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4,
        1
      ],
      "mod_code": [
        "else if ( arr [ i ] == 0 && flag )",
        "count = 0 ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2,
        1
      ],
      "mod_code": [
        "else if ( arr [ i ] == 0 && flag )",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "else if ( arr [ i ] == 0 && flag )",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "count = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        4,
        2,
        1
      ],
      "mod_code": [
        "count = 0 ;",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "count = 0 ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}