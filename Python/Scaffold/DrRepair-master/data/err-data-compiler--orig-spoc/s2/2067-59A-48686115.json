{
  "meta": {
    "index": 2067,
    "hitid": "335HHSX8CDZALP641OASCR62192DHO",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "59A",
    "subid": "48686115"
  },
  "lines": [
    {
      "line": 0,
      "text": "create const int maxn = 5e2 + 10",
      "code": "const int maxn = 5e2 + 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare inline read returning int",
      "code": "inline int read ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create int ra and fh",
      "code": "int ra , fh ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "make char rx",
      "code": "char rx ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set rx to getchar ( ) , ra to 0 , and fh to 1",
      "code": "rx = getchar ( ) , ra = 0 , fh = 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while rx is less than ' 0 ' or rx is greater than ' 9 ' and if rx is not equal to ' - ' , set rx to getchar ( )",
      "code": "while ( ( rx < ' 0 ' || rx > ' 9 ' ) && rx != ' - ' ) rx = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if rx is equal to ' - ' , set fh to - 1 and rx to getchar ( )",
      "code": "if ( rx == ' - ' ) fh = - 1 , rx = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while rx is greater than or equal to ' 0 ' and rx is less than or equal to ' 9 ' , set ra to ra * 10 , ra to ra + rx - 48 , and rx to getchar ( )",
      "code": "while ( rx >= ' 0 ' && rx <= ' 9 ' ) ra *= 10 , ra += rx - 48 , rx = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return the result of ra * fh",
      "code": "return ra * fh ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "declare gcd taking in long long ints p and q and returning long long",
      "code": "long long gcd ( long long p , long long q )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "return p if q is 0 or gcd ( q , p % q ) if not",
      "code": "return q == 0 ? p : gcd ( q , p % q ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "declare qpow taking in long long ints p and q and returning long long",
      "code": "long long qpow ( long long p , long long q )",
      "indent": 0
    },
    {
      "line": 14,
      "text": "create long long f = 1",
      "code": "long long f = 1 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "while q is truthy",
      "code": "while ( q )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if q & 1 is truthy , set f to f * p",
      "code": "if ( q & 1 ) f = f * p ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set p to p * p",
      "code": "p = p * p ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "move the bits of q 1 place to the right",
      "code": "q >>= 1 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "return f",
      "code": "return f ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 22,
      "text": "create string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 23,
      "text": "make ints ct1 and ct2",
      "code": "int ct1 , ct2 ;",
      "indent": 0
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 25,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "for i = 0 to s . size ( ) exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if s [ i ] is greater than or equal to ' A ' and s [ i ] is less than or equal to ' Z '",
      "code": "if ( s [ i ] >= ' A ' && s [ i ] <= ' Z ' )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "increment ct1",
      "code": "ct1 ++ ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 30,
      "text": "increase ct2 by 1",
      "code": "ct2 ++ ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "if ct1 is greater than ct2",
      "code": "if ( ct1 > ct2 )",
      "indent": 1
    },
    {
      "line": 33,
      "text": "for i = 0 to s . size ( ) exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 34,
      "text": "if s [ i ] is greater than or equal to ' a ' and s [ i ] is less than or equal to ' z ' , set s [ i ] to s [ i ] - 32",
      "code": "if ( s [ i ] >= ' a ' && s [ i ] <= ' z ' ) s [ i ] -= 32 ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "else do",
      "code": "else",
      "indent": 1
    },
    {
      "line": 37,
      "text": "for i = 0 to size of s exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 38,
      "text": "if s [ i ] is greater than or equal to ' A ' and s [ i ] is less than or equal to ' Z ' , set s [ i ] to s [ i ] + 32",
      "code": "if ( s [ i ] >= ' A ' && s [ i ] <= ' Z ' ) s [ i ] += 32 ;",
      "indent": 3
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int maxn += 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "inline int read ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int ra , ra ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int ra’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char : ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘:’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh to 1 ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "long long p ( long long p , long long q )"
      ],
      "err_line": 11,
      "err_msg": "‘gcd’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "long long qpow ( long long p , long long q ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 25,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 26,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 31,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 33,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 41,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 37,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "inline int read ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        1,
        13
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "inline int read ( ) ;",
        "long long qpow ( long long p , long long q ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        1,
        13,
        0
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "inline int read ( ) ;",
        "long long qpow ( long long p , long long q ) ;",
        "const int maxn += 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        1,
        13,
        36
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "inline int read ( ) ;",
        "long long qpow ( long long p , long long q ) ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        1,
        13,
        25
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "inline int read ( ) ;",
        "long long qpow ( long long p , long long q ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        1,
        0
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "inline int read ( ) ;",
        "const int maxn += 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        1,
        0,
        36
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "inline int read ( ) ;",
        "const int maxn += 10 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        1,
        0,
        25
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "inline int read ( ) ;",
        "const int maxn += 10 ;",
        "s >> s ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        1,
        36
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "inline int read ( ) ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        1,
        36,
        25
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "inline int read ( ) ;",
        "else do",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        1,
        25
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "inline int read ( ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "long long qpow ( long long p , long long q ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        13,
        0
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "long long qpow ( long long p , long long q ) ;",
        "const int maxn += 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        13,
        0,
        36
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "long long qpow ( long long p , long long q ) ;",
        "const int maxn += 10 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        13,
        0,
        25
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "long long qpow ( long long p , long long q ) ;",
        "const int maxn += 10 ;",
        "s >> s ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        13,
        36
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "long long qpow ( long long p , long long q ) ;",
        "else do"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        13,
        36,
        25
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "long long qpow ( long long p , long long q ) ;",
        "else do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        13,
        25
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "long long qpow ( long long p , long long q ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "const int maxn += 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        0,
        36
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "const int maxn += 10 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        0,
        36,
        25
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "const int maxn += 10 ;",
        "else do",
        "s >> s ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        0,
        25
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "const int maxn += 10 ;",
        "s >> s ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        4,
        36
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "else do"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        36,
        25
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "else do",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        4,
        25
      ],
      "mod_code": [
        "rx = getchar ( ) , ra to 0 , fh , fh = 1 ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "long long qpow ( long long p , long long q ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13,
        0
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "long long qpow ( long long p , long long q ) ;",
        "const int maxn += 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        1,
        13,
        0,
        36
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "long long qpow ( long long p , long long q ) ;",
        "const int maxn += 10 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        1,
        13,
        0,
        25
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "long long qpow ( long long p , long long q ) ;",
        "const int maxn += 10 ;",
        "s >> s ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        1,
        13,
        36
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "long long qpow ( long long p , long long q ) ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13,
        36,
        25
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "long long qpow ( long long p , long long q ) ;",
        "else do",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        13,
        25
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "long long qpow ( long long p , long long q ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "const int maxn += 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        1,
        0,
        36
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "const int maxn += 10 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        1,
        0,
        36,
        25
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "const int maxn += 10 ;",
        "else do",
        "s >> s ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        1,
        0,
        25
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "const int maxn += 10 ;",
        "s >> s ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        1,
        36
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "else do"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        36,
        25
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "else do",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        25
      ],
      "mod_code": [
        "inline int read ( ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "long long qpow ( long long p , long long q ) ;",
        "const int maxn += 10 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        13,
        0,
        36
      ],
      "mod_code": [
        "long long qpow ( long long p , long long q ) ;",
        "const int maxn += 10 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        13,
        0,
        36,
        25
      ],
      "mod_code": [
        "long long qpow ( long long p , long long q ) ;",
        "const int maxn += 10 ;",
        "else do",
        "s >> s ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        13,
        0,
        25
      ],
      "mod_code": [
        "long long qpow ( long long p , long long q ) ;",
        "const int maxn += 10 ;",
        "s >> s ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        13,
        36
      ],
      "mod_code": [
        "long long qpow ( long long p , long long q ) ;",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        36,
        25
      ],
      "mod_code": [
        "long long qpow ( long long p , long long q ) ;",
        "else do",
        "s >> s ;"
      ],
      "err_line": 14,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "long long qpow ( long long p , long long q ) ;",
        "s >> s ;"
      ],
      "err_line": 14,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        36
      ],
      "mod_code": [
        "const int maxn += 10 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        0,
        36,
        25
      ],
      "mod_code": [
        "const int maxn += 10 ;",
        "else do",
        "s >> s ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        0,
        25
      ],
      "mod_code": [
        "const int maxn += 10 ;",
        "s >> s ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        36,
        25
      ],
      "mod_code": [
        "else do",
        "s >> s ;"
      ],
      "err_line": 25,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}