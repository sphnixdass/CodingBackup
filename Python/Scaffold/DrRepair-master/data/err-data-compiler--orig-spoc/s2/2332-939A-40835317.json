{
  "meta": {
    "index": 2332,
    "hitid": "33KGGVH24UBDFKQ7QZ8JEBTN02IX1B",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "939A",
    "subid": "40835317"
  },
  "lines": [
    {
      "line": 0,
      "text": "seq = array of 5010 int , n = int",
      "code": "int seq [ 5010 ] , n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive read seq [ i ]",
      "code": "for ( int i = 1 ; i <= n ; ++ i ) { cin >> seq [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "ans = false",
      "code": "bool ans = false ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if seq [ seq [ seq [ i ] ] ] is i ans = true",
      "code": "if ( seq [ seq [ seq [ i ] ] ] == i ) ans = true ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if ans",
      "code": "if ( ans )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "ans = false ;"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int seq = 5010 [ 5010 ] ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( seq [ seq [ seq [ seq ] ] ] == i ) ans = true ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [5010][int [5010]]’ for array subscript"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "ans = false ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        11
      ],
      "mod_code": [
        "ans = false ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        0
      ],
      "mod_code": [
        "ans = false ;",
        "n",
        "cout << \" NO \" ;",
        "int seq = 5010 [ 5010 ] ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        9
      ],
      "mod_code": [
        "ans = false ;",
        "n",
        "cout << \" NO \" ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        11,
        5
      ],
      "mod_code": [
        "ans = false ;",
        "n",
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        0
      ],
      "mod_code": [
        "ans = false ;",
        "n",
        "int seq = 5010 [ 5010 ] ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        0,
        9
      ],
      "mod_code": [
        "ans = false ;",
        "n",
        "int seq = 5010 [ 5010 ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        0,
        5
      ],
      "mod_code": [
        "ans = false ;",
        "n",
        "int seq = 5010 [ 5010 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        10,
        9
      ],
      "mod_code": [
        "ans = false ;",
        "n",
        "cout << \" YES \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        9,
        5
      ],
      "mod_code": [
        "ans = false ;",
        "n",
        "cout << \" YES \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        10,
        5
      ],
      "mod_code": [
        "ans = false ;",
        "n",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "ans = false ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        0
      ],
      "mod_code": [
        "ans = false ;",
        "cout << \" NO \" ;",
        "int seq = 5010 [ 5010 ] ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11,
        0,
        9
      ],
      "mod_code": [
        "ans = false ;",
        "cout << \" NO \" ;",
        "int seq = 5010 [ 5010 ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11,
        0,
        5
      ],
      "mod_code": [
        "ans = false ;",
        "cout << \" NO \" ;",
        "int seq = 5010 [ 5010 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        11,
        9
      ],
      "mod_code": [
        "ans = false ;",
        "cout << \" NO \" ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        9,
        5
      ],
      "mod_code": [
        "ans = false ;",
        "cout << \" NO \" ;",
        "cout << \" YES \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        11,
        5
      ],
      "mod_code": [
        "ans = false ;",
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "ans = false ;",
        "int seq = 5010 [ 5010 ] ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        0,
        9
      ],
      "mod_code": [
        "ans = false ;",
        "int seq = 5010 [ 5010 ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        0,
        9,
        5
      ],
      "mod_code": [
        "ans = false ;",
        "int seq = 5010 [ 5010 ] ;",
        "cout << \" YES \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        0,
        5
      ],
      "mod_code": [
        "ans = false ;",
        "int seq = 5010 [ 5010 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "ans = false ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        5
      ],
      "mod_code": [
        "ans = false ;",
        "cout << \" YES \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "ans = false ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        0
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;",
        "int seq = 5010 [ 5010 ] ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        11,
        0,
        9
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;",
        "int seq = 5010 [ 5010 ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        11,
        0,
        5
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;",
        "int seq = 5010 [ 5010 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        11,
        9
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        9,
        5
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;",
        "cout << \" YES \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        11,
        5
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "n",
        "int seq = 5010 [ 5010 ] ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        0,
        9
      ],
      "mod_code": [
        "n",
        "int seq = 5010 [ 5010 ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        0,
        9,
        5
      ],
      "mod_code": [
        "n",
        "int seq = 5010 [ 5010 ] ;",
        "cout << \" YES \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        0,
        5
      ],
      "mod_code": [
        "n",
        "int seq = 5010 [ 5010 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        9,
        5
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "n",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        0
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "int seq = 5010 [ 5010 ] ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        0,
        9
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "int seq = 5010 [ 5010 ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        0,
        9,
        5
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "int seq = 5010 [ 5010 ] ;",
        "cout << \" YES \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        0,
        5
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "int seq = 5010 [ 5010 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        9,
        5
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "cout << \" YES \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int seq = 5010 [ 5010 ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        9,
        5
      ],
      "mod_code": [
        "int seq = 5010 [ 5010 ] ;",
        "cout << \" YES \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int seq = 5010 [ 5010 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}