{
  "meta": {
    "index": 1571,
    "hitid": "3K1H3NEY7LTWLTBTHISARRU1M9UGDX",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "1028A",
    "subid": "48403367"
  },
  "lines": [
    {
      "line": 0,
      "text": "INF = const int with INF = 0x3f3f3f3f",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "mod = const int with mod = 1e9 + 7",
      "code": "const int mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "N = const int with N = 1e5 + 5",
      "code": "const int N = 1e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "mp = two dimensional char array of sizes 1005 and 1005",
      "code": "char mp [ 1005 ] [ 1005 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "n , m = int",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n then m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n values into mp",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> mp [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "l1 , l2 , r1 , r2 = int with l1 = - 1 and l2 = - 1 and r1 = - 1 and r2 = - 1",
      "code": "int l1 = - 1 , l2 = - 1 , r1 = - 1 , r2 = - 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for j = 0 to m",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if mp8i ] [ j ] is ' B ' and l1 is - 1",
      "code": "if ( mp [ i ] [ j ] == ' B ' && l1 == - 1 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set l2 and l1 to i",
      "code": "l2 = l1 = i ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "set r2 and r1 to j",
      "code": "r2 = r1 = j ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "else if mp [ i ] [ j ] is ' B ' and i > l2 and j > r2",
      "code": "else if ( mp [ i ] [ j ] == ' B ' && i > l2 && j > r2 )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set l2 to i then set r2 to j",
      "code": "l2 = i , r2 = j ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print ( l1 + 1 + l2 + 1 ) / 2 and ( r1 + 1 + r2 + 1 ) / 2",
      "code": "cout << ( l1 + 1 + l2 + 1 ) / 2 << \" \" << ( r1 + 1 + r2 + 1 ) / 2 << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int r2’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )"
      ],
      "err_line": 11,
      "err_msg": "‘mp8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r1 = - 1 , r2 = - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int r1’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( ( mp8i ] [ j ] == ' B ' && l1 == - 1 )"
      ],
      "err_line": 11,
      "err_msg": "‘mp8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "cout << ( l1 + 1 + l2 + 1 ) / 2 && ( r1 + 1 + r2 + 1 ) / 2 << endl ;"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int r2’"
    },
    {
      "mod_line": [
        8,
        11,
        19
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int r2’"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        9
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int r2’"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        3
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        2
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        8,
        11,
        9
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int r2’"
    },
    {
      "mod_line": [
        8,
        11,
        9,
        3
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        9,
        2
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        8,
        11,
        3
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        3,
        2
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "char s [ 1005 ] [ 1005 ] ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        8,
        11,
        2
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int r2’"
    },
    {
      "mod_line": [
        8,
        19,
        9
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int r2’"
    },
    {
      "mod_line": [
        8,
        19,
        9,
        3
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        9,
        2
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        8,
        19,
        3
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        3,
        2
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "char s [ 1005 ] [ 1005 ] ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        8,
        19,
        2
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int r2’"
    },
    {
      "mod_line": [
        8,
        9,
        3
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        3,
        2
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s [ 1005 ] [ 1005 ] ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        8,
        9,
        2
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3,
        2
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "char s [ 1005 ] [ 1005 ] ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "int l1 , l2 = - 1 , r1 = - 1 , r2 = - 1 , r2 = - 1 ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;"
      ],
      "err_line": 11,
      "err_msg": "‘mp8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        9
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        19,
        9,
        3
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        9,
        2
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        11,
        19,
        3
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        3,
        2
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "char s [ 1005 ] [ 1005 ] ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        11,
        19,
        2
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        3
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        9,
        3,
        2
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s [ 1005 ] [ 1005 ] ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        11,
        9,
        2
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        2
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "char s [ 1005 ] [ 1005 ] ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "if ( mp8i ] [ j ] == ' B ' && l1 == - 1 )",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        19,
        9
      ],
      "mod_code": [
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        9,
        3
      ],
      "mod_code": [
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        9,
        3,
        2
      ],
      "mod_code": [
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "char s [ 1005 ] [ 1005 ] ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        19,
        9,
        2
      ],
      "mod_code": [
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        19,
        3
      ],
      "mod_code": [
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        3,
        2
      ],
      "mod_code": [
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "char s [ 1005 ] [ 1005 ] ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        19,
        2
      ],
      "mod_code": [
        "cout << ( l1 + 1 + l2 + 1 ) / 2 << ( r1 + 1 + r2 + 1 ) / 2 << endl ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char s [ 1005 ] [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        3,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "char s [ 1005 ] [ 1005 ] ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "char s [ 1005 ] [ 1005 ] ;",
        "const int const N = 1e5 + 5 ;"
      ],
      "err_line": 2,
      "err_msg": "duplicate ‘const’"
    }
  ]
}