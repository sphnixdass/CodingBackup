{
  "meta": {
    "index": 51,
    "hitid": "33EEIIWHK719SZ5TBZXGRR4AS30QVU",
    "workerid": "A1APYLD4DUK33J",
    "probid": "412A",
    "subid": "46054240"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare n , k as integers",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , k , s",
      "code": "cin >> n >> k >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if k is greater than n / 2",
      "code": "if ( k > n / 2 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = k to n exclusive , print \" RIGHT \" , newline",
      "code": "for ( int i = k ; i < n ; i ++ ) cout << \" RIGHT \" << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = n - 1 to i , decrementing i",
      "code": "for ( int i = n - 1 ; i ; i -- )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print \" PRINT \" , s [ i ] , newline",
      "code": "cout << \" PRINT \" << s [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print \" LEFT \\ n \"",
      "code": "cout << \" LEFT\\n \" ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" PRINT \" , s [ 0 ] , newline",
      "code": "cout << \" PRINT \" << s [ 0 ] << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to k exclusive , print \" LEFT \" , newline",
      "code": "for ( int i = 1 ; i < k ; i ++ ) cout << \" LEFT \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for i = 0 to n - 1 exclusive",
      "code": "for ( int i = 0 ; i < n - 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print \" PRINT \" , s [ i ] , newline",
      "code": "cout << \" PRINT \" << s [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print \" RIGHT \\ n \"",
      "code": "cout << \" RIGHT\\n \" ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print \" PRINT \" , s [ n - 1 ] , newline",
      "code": "cout << \" PRINT \" << s [ n - 1 ] << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= i ; i -- )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << \" PRINT \" , s [ i ] << endl ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << \" PRINT \" , s [ 0 ] << endl ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n - 1 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" , s [ i ] << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "cout << \" PRINT \" , s [ n - 1 ] << endl ;"
      ],
      "err_line": 17,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    }
  ]
}