{
  "meta": {
    "index": 315,
    "hitid": "3AC6MFV69KCDOQB0T6ZP3JP5PRGHZV",
    "workerid": "AIWEXPJAU66D9",
    "probid": "735A",
    "subid": "48452965"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare arrays of integers arr and vis with 105 elements and variable ans = 0",
      "code": "int arr [ 105 ] , ans = 0 , vis [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "void function dfs with int arguments st , ed , k and n",
      "code": "void dfs ( int st , int ed , int k , int n )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "if ans = 1 , return",
      "code": "if ( ans == 1 ) return ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if st is equal to ed",
      "code": "if ( st == ed )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set ans to 1",
      "code": "ans = 1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "return",
      "code": "return ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "now is a new integer variable = st + k",
      "code": "int now = st + k ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if 1 < = now < = n and arr [ now ] = 0 and vis [ now ] = 0",
      "code": "if ( now >= 1 && now <= n && arr [ now ] == 0 && vis [ now ] == 0 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set the value of vis [ now ] to 1",
      "code": "vis [ now ] = 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "call dfs ( now , ed , k , n )",
      "code": "dfs ( now , ed , k , n ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "assign the new value = 0 to vis [ now ]",
      "code": "vis [ now ] = 0 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "change now to now - 2 * k",
      "code": "now -= 2 * k ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if now > = 1 and now < = n and arr [ now ] = 0 and vis [ now ] = 0",
      "code": "if ( now >= 1 && now <= n && arr [ now ] == 0 && vis [ now ] == 0 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "set the value of vis [ now ] to 1",
      "code": "vis [ now ] = 1 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "call dfs ( now , ed , k , n )",
      "code": "dfs ( now , ed , k , n ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "change vis [ now ] to 0",
      "code": "vis [ now ] = 0 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 21,
      "text": "declare int variables n , k , st and ed",
      "code": "int n , k , st , ed ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "read from the input to n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for integer i = 1 to n inclusive incrementing i",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "create character variable ch",
      "code": "char ch ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "read ch",
      "code": "cin >> ch ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "if ch is equal to ' # '",
      "code": "if ( ch == ' # ' )",
      "indent": 2
    },
    {
      "line": 27,
      "text": "assign the new value = 1 to arr [ i ]",
      "code": "arr [ i ] = 1 ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 29,
      "text": "set arr [ i ] to 0",
      "code": "arr [ i ] = 0 ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "if ch = ' G ' , assign the new value = i to ed",
      "code": "if ( ch == ' G ' ) ed = i ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "if ch is equal to ' T ' , change st to i",
      "code": "if ( ch == ' T ' ) st = i ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "call dfs ( st , ed , k , n )",
      "code": "dfs ( st , ed , k , n ) ;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "if ans is equal to 1",
      "code": "if ( ans == 1 )",
      "indent": 1
    },
    {
      "line": 35,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 37,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void dfs ( int st , int ed , int n , int n )"
      ],
      "err_line": 1,
      "err_msg": "redefinition of ‘int n’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "if ( ans == 1 ) return 1 ;"
      ],
      "err_line": 2,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "return return ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int now += k ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "dfs ( now , ed + k , n ) ;"
      ],
      "err_line": 10,
      "err_msg": "too few arguments to function ‘void dfs(int, int, int, int)’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "dfs ( now , ed + k , n ) ;"
      ],
      "err_line": 16,
      "err_msg": "too few arguments to function ‘void dfs(int, int, int, int)’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "int n , k , st >> ed ;"
      ],
      "err_line": 21,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "char ch [ 101 ] ;"
      ],
      "err_line": 26,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "if ( ch == ' # ' ) return 1 ;"
      ],
      "err_line": 28,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "dfs ( st , ed + k , n ) ;"
      ],
      "err_line": 33,
      "err_msg": "too few arguments to function ‘void dfs(int, int, int, int)’"
    },
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 34,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 37,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        35
      ],
      "mod_code": [
        "return return ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        35,
        7
      ],
      "mod_code": [
        "return return ;",
        "cout << \" YES \" ;",
        "int now += k ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        35,
        7,
        28
      ],
      "mod_code": [
        "return return ;",
        "cout << \" YES \" ;",
        "int now += k ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        35,
        7,
        34
      ],
      "mod_code": [
        "return return ;",
        "cout << \" YES \" ;",
        "int now += k ;",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        35,
        7,
        0
      ],
      "mod_code": [
        "return return ;",
        "cout << \" YES \" ;",
        "int now += k ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        5,
        35,
        28
      ],
      "mod_code": [
        "return return ;",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        35,
        28,
        34
      ],
      "mod_code": [
        "return return ;",
        "cout << \" YES \" ;",
        "n",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        35,
        28,
        0
      ],
      "mod_code": [
        "return return ;",
        "cout << \" YES \" ;",
        "n",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        5,
        35,
        34
      ],
      "mod_code": [
        "return return ;",
        "cout << \" YES \" ;",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        35,
        34,
        0
      ],
      "mod_code": [
        "return return ;",
        "cout << \" YES \" ;",
        "if ( ans == 1 ) break ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        5,
        35,
        0
      ],
      "mod_code": [
        "return return ;",
        "cout << \" YES \" ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "return return ;",
        "int now += k ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        7,
        28
      ],
      "mod_code": [
        "return return ;",
        "int now += k ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        7,
        28,
        34
      ],
      "mod_code": [
        "return return ;",
        "int now += k ;",
        "n",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        7,
        28,
        0
      ],
      "mod_code": [
        "return return ;",
        "int now += k ;",
        "n",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        5,
        7,
        34
      ],
      "mod_code": [
        "return return ;",
        "int now += k ;",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        7,
        34,
        0
      ],
      "mod_code": [
        "return return ;",
        "int now += k ;",
        "if ( ans == 1 ) break ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        5,
        7,
        0
      ],
      "mod_code": [
        "return return ;",
        "int now += k ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        5,
        28
      ],
      "mod_code": [
        "return return ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        28,
        34
      ],
      "mod_code": [
        "return return ;",
        "n",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        28,
        34,
        0
      ],
      "mod_code": [
        "return return ;",
        "n",
        "if ( ans == 1 ) break ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        5,
        28,
        0
      ],
      "mod_code": [
        "return return ;",
        "n",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        5,
        34
      ],
      "mod_code": [
        "return return ;",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘return’"
    },
    {
      "mod_line": [
        5,
        34,
        0
      ],
      "mod_code": [
        "return return ;",
        "if ( ans == 1 ) break ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "return return ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        35,
        7
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int now += k ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        35,
        7,
        28
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int now += k ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        35,
        7,
        28,
        34
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int now += k ;",
        "n",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        35,
        7,
        28,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int now += k ;",
        "n",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        35,
        7,
        34
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int now += k ;",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        35,
        7,
        34,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int now += k ;",
        "if ( ans == 1 ) break ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        35,
        7,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int now += k ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        35,
        28
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        35,
        28,
        34
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "n",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        35,
        28,
        34,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "n",
        "if ( ans == 1 ) break ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        35,
        28,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "n",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        35,
        34
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 34,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        35,
        34,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "if ( ans == 1 ) break ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        35,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        7,
        28
      ],
      "mod_code": [
        "int now += k ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        28,
        34
      ],
      "mod_code": [
        "int now += k ;",
        "n",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        28,
        34,
        0
      ],
      "mod_code": [
        "int now += k ;",
        "n",
        "if ( ans == 1 ) break ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        7,
        28,
        0
      ],
      "mod_code": [
        "int now += k ;",
        "n",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        7,
        34
      ],
      "mod_code": [
        "int now += k ;",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘+=’ token"
    },
    {
      "mod_line": [
        7,
        34,
        0
      ],
      "mod_code": [
        "int now += k ;",
        "if ( ans == 1 ) break ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        7,
        0
      ],
      "mod_code": [
        "int now += k ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        28,
        34
      ],
      "mod_code": [
        "n",
        "if ( ans == 1 ) break ;"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        34,
        0
      ],
      "mod_code": [
        "n",
        "if ( ans == 1 ) break ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        28,
        0
      ],
      "mod_code": [
        "n",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    },
    {
      "mod_line": [
        34,
        0
      ],
      "mod_code": [
        "if ( ans == 1 ) break ;",
        "int arr [ 105 ] , ans = 0 , ans [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "conflicting declaration ‘int ans [105]’"
    }
  ]
}