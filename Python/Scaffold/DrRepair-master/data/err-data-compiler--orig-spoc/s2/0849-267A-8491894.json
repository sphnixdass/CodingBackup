{
  "meta": {
    "index": 849,
    "hitid": "34OWYT6U3WBYEU47VQNBQ7ORA119IV",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "267A",
    "subid": "8491894"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function calc_subtractions_slow taking int a , int b and returning int",
      "code": "int calc_subtractions_slow ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "numOps = int with numOps = 0",
      "code": "int numOps = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "loop while a and b",
      "code": "while ( a && b )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if a < = b",
      "code": "if ( a <= b )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "decrement b by a",
      "code": "b -= a ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 6,
      "text": "decrement a by b",
      "code": "a -= b ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment numOps",
      "code": "++ numOps ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "return numOps",
      "code": "return numOps ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "in inline function calc_subtractions_div taking int a , int b and returning in",
      "code": "inline int calc_subtractions_div ( int a , int b )",
      "indent": 0
    },
    {
      "line": 13,
      "text": "numOps = int with numOps = 0",
      "code": "int numOps = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "loop while a and b",
      "code": "while ( a && b )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if a < b",
      "code": "if ( a < b )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "temp = int with temp = b / a",
      "code": "int temp = b / a ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "increment numOps by temp",
      "code": "numOps += temp ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "decrement b by a * temp",
      "code": "b -= ( a * temp ) ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 20,
      "text": "temp = int with temp = a / b",
      "code": "int temp = a / b ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "increment numOps by temp",
      "code": "numOps += temp ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "decrement a by b * temp",
      "code": "a -= ( b * temp ) ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "return numOps",
      "code": "return numOps ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 27,
      "text": "in inline function calc_subtractions_mod taking int a , int b and returning int",
      "code": "inline int calc_subtractions_mod ( int a , int b )",
      "indent": 0
    },
    {
      "line": 28,
      "text": "numOps = int with numOps = 0",
      "code": "int numOps = 0 ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "loop while a and b",
      "code": "while ( a && b )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if a < b",
      "code": "if ( a < b )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "increment numOps by b / a",
      "code": "numOps += b / a ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "set b to b mod a",
      "code": "b = b % a ;",
      "indent": 3
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 34,
      "text": "increment numOps by a / b",
      "code": "numOps += a / b ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "set a to a mod b",
      "code": "a = a % b ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 38,
      "text": "return numOps",
      "code": "return numOps ;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 40,
      "text": "in function calc_subtractions taking int a , int b and returning int",
      "code": "int calc_subtractions ( int a , int b )",
      "indent": 0
    },
    {
      "line": 41,
      "text": "return calc_subtractions_div of a , b",
      "code": "return calc_subtractions_div ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 43,
      "text": "in function test_div",
      "code": "void test_div ( )",
      "indent": 0
    },
    {
      "line": 44,
      "text": "for i = 0 to INT_MAX call calc_subtractions_div of 1000000000 , 999999999",
      "code": "for ( int i = 0 ; i < INT_MAX ; ++ i ) { calc_subtractions_div ( 1000000000 , 999999999 ) ; }",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 46,
      "text": "in function test_mod",
      "code": "void test_mod ( )",
      "indent": 0
    },
    {
      "line": 47,
      "text": "for i = 0 to INT_MAX call calc_subtractions_mod of 1000000000 , 999999999",
      "code": "for ( int i = 0 ; i < INT_MAX ; ++ i ) { calc_subtractions_mod ( 1000000000 , 999999999 ) ; }",
      "indent": 1
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 49,
      "text": "in function getNumbers taking reference t const string and returning int vector",
      "code": "vector < int > getNumbers ( const string & str )",
      "indent": 0
    },
    {
      "line": 50,
      "text": "res = int vector",
      "code": "vector < int > res ;",
      "indent": 1
    },
    {
      "line": 51,
      "text": "value = int with value = 0",
      "code": "int value = 0 ;",
      "indent": 1
    },
    {
      "line": 52,
      "text": "gotValue = bool with gotVale = false",
      "code": "bool gotValue = false ;",
      "indent": 1
    },
    {
      "line": 53,
      "text": "for i = 0 to length of str",
      "code": "for ( unsigned int i = 0 ; i < str . length ( ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 54,
      "text": "if str [ i ] is ' '",
      "code": "if ( str [ i ] == ' ' )",
      "indent": 2
    },
    {
      "line": 55,
      "text": "if gotValue append value to res",
      "code": "if ( gotValue ) res . push_back ( value ) ;",
      "indent": 3
    },
    {
      "line": 56,
      "text": "set value to 0",
      "code": "value = 0 ;",
      "indent": 3
    },
    {
      "line": 57,
      "text": "set gotValue to false",
      "code": "gotValue = false ;",
      "indent": 3
    },
    {
      "line": 58,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 59,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 60,
      "text": "set value to value * 10 + str [ i ] - ' 0 '",
      "code": "value = value * 10 + str [ i ] - ' 0 ' ;",
      "indent": 2
    },
    {
      "line": 61,
      "text": "set gotValue to true",
      "code": "gotValue = true ;",
      "indent": 2
    },
    {
      "line": 62,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 63,
      "text": "if gotValue append value to res",
      "code": "if ( gotValue ) res . push_back ( value ) ;",
      "indent": 1
    },
    {
      "line": 64,
      "text": "return res",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 65,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 66,
      "text": "in function subtractions_solve_low taking reference to istream in , reference to ostream out",
      "code": "void subtractions_solve_low ( istream & in , ostream & out )",
      "indent": 0
    },
    {
      "line": 67,
      "text": "numPairs , a , b = int",
      "code": "int numPairs , a , b ;",
      "indent": 1
    },
    {
      "line": 68,
      "text": "read numPairs from in",
      "code": "in >> numPairs ;",
      "indent": 1
    },
    {
      "line": 69,
      "text": "for i = 0 to numPairs",
      "code": "for ( int i = 0 ; i < numPairs ; ++ i )",
      "indent": 1
    },
    {
      "line": 70,
      "text": "read a then b from in",
      "code": "in >> a >> b ;",
      "indent": 2
    },
    {
      "line": 71,
      "text": "v = int with v = calc_subtractions_mod of a , b",
      "code": "int v = calc_subtractions_mod ( a , b ) ;",
      "indent": 2
    },
    {
      "line": 72,
      "text": "print v to out",
      "code": "out << v << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 73,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 74,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 75,
      "text": "in function subtractions_solve_fast taking reference to istream in , reference to ostream out",
      "code": "void subtractions_solve_fast ( istream & in , ostream & out )",
      "indent": 0
    },
    {
      "line": 76,
      "text": "numPairs = int",
      "code": "int numPairs ;",
      "indent": 1
    },
    {
      "line": 77,
      "text": "read numPairs from in",
      "code": "in >> numPairs ;",
      "indent": 1
    },
    {
      "line": 78,
      "text": "temp = string",
      "code": "string temp ;",
      "indent": 1
    },
    {
      "line": 79,
      "text": "call getline of in , temp",
      "code": "getline ( in , temp ) ;",
      "indent": 1
    },
    {
      "line": 80,
      "text": "for i = 0 to numPairs",
      "code": "for ( int i = 0 ; i < numPairs ; ++ i )",
      "indent": 1
    },
    {
      "line": 81,
      "text": "line = string",
      "code": "string line ;",
      "indent": 2
    },
    {
      "line": 82,
      "text": "call getline of in , line",
      "code": "getline ( in , line ) ;",
      "indent": 2
    },
    {
      "line": 83,
      "text": "nums = int vector with nums = getNumbers of line",
      "code": "vector < int > nums = getNumbers ( line ) ;",
      "indent": 2
    },
    {
      "line": 84,
      "text": "v = int with v = calc_subtractions_div of nums [ 0 ] , nums [ 1 ]",
      "code": "int v = calc_subtractions_div ( nums [ 0 ] , nums [ 1 ] ) ;",
      "indent": 2
    },
    {
      "line": 85,
      "text": "print v to out",
      "code": "out << v << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 86,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 87,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 88,
      "text": "in function subtractions_solve taking reference to istream in , reference to ostream out",
      "code": "void subtractions_solve ( istream & in , ostream & out )",
      "indent": 0
    },
    {
      "line": 89,
      "text": "call subtractions_solve_fast of in , out",
      "code": "subtractions_solve_fast ( in , out ) ;",
      "indent": 1
    },
    {
      "line": 90,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 91,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 92,
      "text": "call subtractions_solve of cin , cout",
      "code": "subtractions_solve ( cin , cout ) ;",
      "indent": 1
    },
    {
      "line": 93,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 94,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        49
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        55
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        66
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        75
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        82
      ],
      "mod_code": [
        "getline ( ) ;"
      ],
      "err_line": 82,
      "err_msg": "no matching function for call to ‘getline()’"
    },
    {
      "mod_line": [
        83
      ],
      "mod_code": [
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 83,
      "err_msg": "conversion from ‘std::vector<int>(const string&) {aka std::vector<int>(const std::__cxx11::basic_string<char>&)}’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        88
      ],
      "mod_code": [
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 88,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int calc_subtractions_slow ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int * numOps = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 5,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "inline int calc_subtractions_div ( int b , int b )"
      ],
      "err_line": 12,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int * numOps = 0 ;"
      ],
      "err_line": 25,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 19,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "inline void calc_subtractions_mod ( int a , int b )"
      ],
      "err_line": 38,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "int * numOps = 0 ;"
      ],
      "err_line": 38,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 33,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "int calc_subtractions ( int a , int b ) ;"
      ],
      "err_line": 41,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 999999999 = calc_subtractions_div ( 1000000000 , 999999999 ) ; }"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 999999999 = calc_subtractions_mod ( 1000000000 , 999999999 ) ; }"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        49
      ],
      "mod_code": [
        "vector < string > & vector < string > & t ;"
      ],
      "err_line": 49,
      "err_msg": "invalid declarator before ‘&’ token"
    },
    {
      "mod_line": [
        50
      ],
      "mod_code": [
        "vector < int = res ;"
      ],
      "err_line": 50,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        52
      ],
      "mod_code": [
        "bool gotVale = false ;"
      ],
      "err_line": 55,
      "err_msg": "‘gotValue’ was not declared in this scope"
    },
    {
      "mod_line": [
        55
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res . push_back ( 0 ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        58
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 58,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        63
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res . push_back ( 0 ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        64
      ],
      "mod_code": [
        "exit ( res ) ;"
      ],
      "err_line": 64,
      "err_msg": "cannot convert ‘std::vector<int>’ to ‘int’ for argument ‘1’ to ‘void exit(int)’"
    },
    {
      "mod_line": [
        66
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , ostream )"
      ],
      "err_line": 66,
      "err_msg": "‘ostream’ is not a type"
    },
    {
      "mod_line": [
        67
      ],
      "mod_code": [
        "int numPairs , a , b , b ;"
      ],
      "err_line": 67,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        69
      ],
      "mod_code": [
        "for ( i = 0 ; i < numPairs ; i ++ )"
      ],
      "err_line": 69,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        70
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a ; i ++ ) cin >> a [ b ] ;"
      ],
      "err_line": 70,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        71
      ],
      "mod_code": [
        "int v = calc_subtractions_mod ( a ) , b ;"
      ],
      "err_line": 71,
      "err_msg": "too few arguments to function ‘int calc_subtractions_mod(int, int)’"
    },
    {
      "mod_line": [
        75
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , ostream )"
      ],
      "err_line": 75,
      "err_msg": "‘ostream’ is not a type"
    },
    {
      "mod_line": [
        78
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 79,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        79
      ],
      "mod_code": [
        "getline ( ( in , temp ) ) ;"
      ],
      "err_line": 79,
      "err_msg": "no matching function for call to ‘getline(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        80
      ],
      "mod_code": [
        "for ( i = 0 ; i < numPairs ; i ++ )"
      ],
      "err_line": 80,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        81
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 82,
      "err_msg": "‘line’ was not declared in this scope"
    },
    {
      "mod_line": [
        82
      ],
      "mod_code": [
        "getline ( ;"
      ],
      "err_line": 82,
      "err_msg": "expected primary-expression before ‘;’ token"
    },
    {
      "mod_line": [
        83
      ],
      "mod_code": [
        "vector < int > nums ( line ) ;"
      ],
      "err_line": 83,
      "err_msg": "no matching function for call to ‘std::vector<int>::vector(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        84
      ],
      "mod_code": [
        "int v = calc_subtractions_div . calc_subtractions_div ( nums [ 0 ] , nums [ 1 ] ) ;"
      ],
      "err_line": 84,
      "err_msg": "request for member ‘calc_subtractions_div’ in ‘calc_subtractions_div’, which is of non-class type ‘int(int, int)’"
    },
    {
      "mod_line": [
        88
      ],
      "mod_code": [
        "void subtractions_solve ( int istream , string ostream , ostream )"
      ],
      "err_line": 88,
      "err_msg": "‘ostream’ is not a type"
    },
    {
      "mod_line": [
        89
      ],
      "mod_code": [
        "subtractions_solve_fast . call ( in ) ;"
      ],
      "err_line": 89,
      "err_msg": "request for member ‘call’ in ‘subtractions_solve_fast’, which is of non-class type ‘void(std::istream&, std::ostream&) {aka void(std::basic_istream<char>&, std::basic_ostream<char>&)}’"
    },
    {
      "mod_line": [
        92
      ],
      "mod_code": [
        "subtractions_solve ( cin ) ;"
      ],
      "err_line": 92,
      "err_msg": "too few arguments to function ‘void subtractions_solve(std::istream&, std::ostream&)’"
    },
    {
      "mod_line": [
        14,
        44
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        47
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        47,
        49
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        47,
        55
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        47,
        63
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        47,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        47,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        47,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        47,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        47,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        47,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        47,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        49
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        49,
        55
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        49,
        63
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        49,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        49,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        49,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        49,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        49,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        49,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        49,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        55
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        55,
        63
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        55,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        55,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        55,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        55,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        55,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        55,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        55,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        63
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        63,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        63,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        63,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        63,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        63,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        63,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        63,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        66,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        66,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        66,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        66,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        66,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        66,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        68,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        68,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        68,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        68,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        68,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        75,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        75,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        75,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        75,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        77,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        77,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        77,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        82,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        82,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        83,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        44,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        49
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        49,
        55
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        49,
        63
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        49,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        49,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        49,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        49,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        49,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        49,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        49,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        55
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        55,
        63
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        55,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        55,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        55,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        55,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        55,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        55,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        55,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        63
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        63,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        63,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        63,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        63,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        63,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        63,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        63,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        66,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        66,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        66,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        66,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        66,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        66,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        68,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        68,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        68,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        68,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        68,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        75,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        75,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        75,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        75,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        77,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        77,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        77,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        82,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        82,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        83,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        47,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        14,
        49
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        55
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        55,
        63
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        55,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        55,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        55,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        55,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        55,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        55,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        55,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        63
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        63,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        63,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        63,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        63,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        63,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        63,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        63,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        66,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        66,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        66,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        66,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        66,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        66,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        68,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        68,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        68,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        68,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        68,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        75,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        75,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        75,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        75,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        77,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        77,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        77,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        82,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        82,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        83,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        49,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        55
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        63
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        63,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        63,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        63,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        63,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        63,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        63,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        63,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        66,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        66,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        66,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        66,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        66,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        66,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        68,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        68,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        68,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        68,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        68,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        75,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        75,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        75,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        75,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        77,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        77,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        77,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        82,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        82,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        83,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        55,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        66,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        66,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        66,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        66,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        66,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        66,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        68,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        68,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        68,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        68,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        68,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        75,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        75,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        75,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        75,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        77,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        77,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        77,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        82,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        82,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        83,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        63,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        14,
        66
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        68,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        68,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        68,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        68,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        68,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        75,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        75,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        75,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        75,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        77,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        77,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        77,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        82,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        82,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        83,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        66,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        68
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        75,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        75,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        75,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        75,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        77,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        77,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        77,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        82,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        82,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        83,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        68,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        75
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        75,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        75,
        77,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        75,
        77,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        75,
        77,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        75,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        75,
        82,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        75,
        82,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        75,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        75,
        83,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        75,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        14,
        77
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        77,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        77,
        82,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        77,
        82,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        77,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        77,
        83,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        77,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        82
      ],
      "mod_code": [
        "while ( a , b )",
        "getline ( ) ;"
      ],
      "err_line": 82,
      "err_msg": "no matching function for call to ‘getline()’"
    },
    {
      "mod_line": [
        14,
        82,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 82,
      "err_msg": "no matching function for call to ‘getline()’"
    },
    {
      "mod_line": [
        14,
        82,
        83,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 82,
      "err_msg": "no matching function for call to ‘getline()’"
    },
    {
      "mod_line": [
        14,
        82,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 82,
      "err_msg": "no matching function for call to ‘getline()’"
    },
    {
      "mod_line": [
        14,
        83
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 83,
      "err_msg": "conversion from ‘std::vector<int>(const string&) {aka std::vector<int>(const std::__cxx11::basic_string<char>&)}’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        14,
        83,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 83,
      "err_msg": "conversion from ‘std::vector<int>(const string&) {aka std::vector<int>(const std::__cxx11::basic_string<char>&)}’ to non-scalar type ‘std::vector<int>’ requested"
    },
    {
      "mod_line": [
        14,
        88
      ],
      "mod_code": [
        "while ( a , b )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 88,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        44,
        47
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        49
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        49,
        55
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        49,
        63
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        49,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        49,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        49,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        49,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        49,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        49,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        49,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        55
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        55,
        63
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        55,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        55,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        55,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        55,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        55,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        55,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        55,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        63
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        63,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        63,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        63,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        63,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        63,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        63,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        63,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        66,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        66,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        66,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        66,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        66,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        66,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        68,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        68,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        68,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        68,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        68,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        47,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        55
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        55,
        63
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        55,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        55,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        55,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        55,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        55,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        55,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        55,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        63
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        63,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        63,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        63,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        63,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        63,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        63,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        63,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        66,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        66,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        66,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        66,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        66,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        66,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        68,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        68,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        68,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        68,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        68,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        49,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        63
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        63,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        63,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        63,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        63,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        63,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        63,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        63,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        66,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        66,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        66,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        66,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        66,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        66,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        68,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        68,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        68,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        68,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        68,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        55,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        66,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        66,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        66,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        66,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        66,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        66,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        68,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        68,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        68,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        68,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        68,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        63,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        68,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        68,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        68,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        68,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        68,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        66,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        68,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        75,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        75,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        75,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        75,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        75,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        75,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        77,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        77,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        77,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        82,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        44,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 44,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        55
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        55,
        63
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        55,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        55,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        55,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        55,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        55,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        55,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        55,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        63
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        63,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        63,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        63,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        63,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        63,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        63,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        63,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        66,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        66,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        66,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        66,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        66,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        66,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        68,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        68,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        68,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        68,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        68,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        49,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        63
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        63,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        63,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        63,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        63,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        63,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        63,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        63,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        66,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        66,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        66,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        66,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        66,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        66,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        68,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        68,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        68,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        68,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        68,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        55,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        66,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        66,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        66,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        66,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        66,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        66,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        68,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        68,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        68,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        68,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        68,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        63,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        68,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        68,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        68,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        68,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        68,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        66,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        68,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        75,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        75,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        75,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        75,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        75,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        75,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        77,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        77,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        77,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        82,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        47,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < INT_MAX ; i ++ ) { 1000000000 += 1000000000 ; }",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 47,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        49,
        55
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        63
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        63,
        66
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        63,
        68
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        63,
        75
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        63,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        63,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        63,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        63,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        66
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        66,
        68
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        66,
        75
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        66,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        66,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        66,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        66,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        68
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        68,
        75
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        68,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        68,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        68,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        68,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        75
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        75,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        75,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        75,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        75,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        77,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        77,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        77,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        82,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        82,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        83,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        55,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        66
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        66,
        68
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        66,
        75
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        66,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        66,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        66,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        66,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        68
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        68,
        75
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        68,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        68,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        68,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        68,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        75
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        75,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        75,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        75,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        75,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        77,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        77,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        77,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        82,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        82,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        83,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        63,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        68
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        68,
        75
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        68,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        68,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        68,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        68,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        75
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        75,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        75,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        75,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        75,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        77,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        77,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        77,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        82,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        82,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        83,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        66,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        75
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        75,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        75,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        75,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        75,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        77,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        77,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        77,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        82,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        82,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        83,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        68,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        75
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        75,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        75,
        77,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        75,
        77,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        75,
        77,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        75,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        75,
        82,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        75,
        82,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        75,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        75,
        83,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        75,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        77
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        77,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        77,
        82,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        77,
        82,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        77,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        77,
        83,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        77,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        82
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        82,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        82,
        83,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        82,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        83
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        83,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        88
      ],
      "mod_code": [
        "vector < string > getNumbers ( const string ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 50,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        55,
        63
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        66
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        66,
        68
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        66,
        75
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        66,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        66,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        66,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        66,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        68
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        68,
        75
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        68,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        68,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        68,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        68,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        75
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        75,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        75,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        75,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        75,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        77,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        77,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        77,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        82,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        82,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        63,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        68
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        68,
        75
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        68,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        68,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        68,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        68,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        75
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        75,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        75,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        75,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        75,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        77,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        77,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        77,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        82,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        82,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        66,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        75
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        75,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        75,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        75,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        75,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        77,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        77,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        77,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        82,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        82,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        68,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        75
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        75,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        75,
        77,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        75,
        77,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        75,
        77,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        75,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        75,
        82,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        75,
        82,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        75,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        75,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        75,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        77,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        77,
        82,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        77,
        82,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        77,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        77,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        77,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        82,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        82,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        82,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        55,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 55,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        68
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        68,
        75
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        68,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        68,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        68,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        68,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        75
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        75,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        75,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        75,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        75,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        77,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        77,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        77,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        82,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        82,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        66,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        75
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        75,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        75,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        75,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        75,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        77,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        77,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        77,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        82,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        82,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        68,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        75
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        75,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        75,
        77,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        75,
        77,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        75,
        77,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        75,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        75,
        82,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        75,
        82,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        75,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        75,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        75,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        77
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        77,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        77,
        82,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        77,
        82,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        77,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        77,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        77,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        82
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        82,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        82,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        82,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        83
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        83,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        63,
        88
      ],
      "mod_code": [
        "if ( gotValue . count ( ) ) res ++ ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 63,
      "err_msg": "request for member ‘count’ in ‘gotValue’, which is of non-class type ‘bool’"
    },
    {
      "mod_line": [
        66,
        68
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        75
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        75,
        77
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        75,
        82
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        75,
        83
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        75,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        77
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        77,
        82
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        77,
        83
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        77,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        82
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        82,
        83
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        82,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        83
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        83,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        68,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        75
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        75,
        77
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        75,
        77,
        82
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        75,
        77,
        83
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        75,
        77,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        75,
        82
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        75,
        82,
        83
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        75,
        82,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        75,
        83
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        75,
        83,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        75,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        77
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        77,
        82
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        77,
        82,
        83
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        77,
        82,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        77,
        83
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        77,
        83,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        77,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        82
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        82,
        83
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        82,
        83,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        82,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        83
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        83,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        66,
        88
      ],
      "mod_code": [
        "void subtractions_solve_low ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 66,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        68,
        75
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        75,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        75,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        75,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        75,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        75,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        75,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        75,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        75,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        75,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        75,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        77
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        77,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        77,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        77,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        82,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        68,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 68,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        75,
        77
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        77,
        82
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        77,
        82,
        83
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        77,
        82,
        88
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        77,
        83
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        77,
        83,
        88
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        77,
        88
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        82
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        82,
        83
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        82,
        83,
        88
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        82,
        88
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        83
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        83,
        88
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        75,
        88
      ],
      "mod_code": [
        "void subtractions_solve_fast ( int istream , string ostream , out )",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 75,
      "err_msg": "‘out’ has not been declared"
    },
    {
      "mod_line": [
        77,
        82
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        77,
        82,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        77,
        82,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        77,
        82,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        77,
        83
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        77,
        83,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        77,
        88
      ],
      "mod_code": [
        "for ( int i = 0 ; i < numPairs ; i ++ ) cin >> numPairs [ i ] ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 77,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        82,
        83
      ],
      "mod_code": [
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;"
      ],
      "err_line": 82,
      "err_msg": "no matching function for call to ‘getline()’"
    },
    {
      "mod_line": [
        82,
        83,
        88
      ],
      "mod_code": [
        "getline ( ) ;",
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 82,
      "err_msg": "no matching function for call to ‘getline()’"
    },
    {
      "mod_line": [
        82,
        88
      ],
      "mod_code": [
        "getline ( ) ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 82,
      "err_msg": "no matching function for call to ‘getline()’"
    },
    {
      "mod_line": [
        83,
        88
      ],
      "mod_code": [
        "vector < int > nums = getNumbers ;",
        "void subtractions_solve ( int istream , string ostream , out )"
      ],
      "err_line": 83,
      "err_msg": "conversion from ‘std::vector<int>(const string&) {aka std::vector<int>(const std::__cxx11::basic_string<char>&)}’ to non-scalar type ‘std::vector<int>’ requested"
    }
  ]
}