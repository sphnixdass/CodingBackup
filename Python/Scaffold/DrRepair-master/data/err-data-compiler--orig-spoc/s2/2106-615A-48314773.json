{
  "meta": {
    "index": 2106,
    "hitid": "33TGB4G0LPBEO42GSISTKHCISL6XTH",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "615A",
    "subid": "48314773"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = int array of size 1000001 with all values set to 0",
      "code": "int a [ 1000001 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n , m = int",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "loop while reading n then m",
      "code": "while ( cin >> n >> m )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "t = int",
      "code": "int t ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "for j = 1 to t inclusive",
      "code": "for ( int j = 1 ; j <= t ; j ++ )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "g = int",
      "code": "int g ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "read g",
      "code": "cin >> g ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "if a [ g ] is 0 set a [ g ] to 1",
      "code": "if ( a [ g ] == 0 ) a [ g ] = 1 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "flag = int with flag = 0",
      "code": "int flag = 0 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for i = 1 to m inclusive",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if a [ i ] is 0",
      "code": "if ( a [ i ] == 0 )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if flag is 0",
      "code": "if ( flag == 0 )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "set all values of a to 0",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        9,
        8,
        4
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "g = getchar ( ) ;",
        "bool g ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        9,
        8,
        22
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "g = getchar ( ) ;",
        "bool g ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        9,
        23,
        4
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "g = getchar ( ) ;",
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        9,
        23,
        22
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "g = getchar ( ) ;",
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        9,
        4
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "g = getchar ( ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        9,
        4,
        22
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "g = getchar ( ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        9,
        22
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "g = getchar ( ) ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        8,
        23,
        4
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "bool g ;",
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        8,
        23,
        22
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "bool g ;",
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        8,
        4
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "bool g ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        8,
        4,
        22
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "bool g ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        8,
        22
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "bool g ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        23,
        4
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        23,
        4,
        22
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        23,
        22
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        4
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        4,
        22
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        22
      ],
      "mod_code": [
        "if ( a [ i ] == ' 0 ' )",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        8,
        23,
        4
      ],
      "mod_code": [
        "g = getchar ( ) ;",
        "bool g ;",
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        23,
        22
      ],
      "mod_code": [
        "g = getchar ( ) ;",
        "bool g ;",
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        8,
        4
      ],
      "mod_code": [
        "g = getchar ( ) ;",
        "bool g ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        4,
        22
      ],
      "mod_code": [
        "g = getchar ( ) ;",
        "bool g ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8,
        22
      ],
      "mod_code": [
        "g = getchar ( ) ;",
        "bool g ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        23,
        4
      ],
      "mod_code": [
        "g = getchar ( ) ;",
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        23,
        4,
        22
      ],
      "mod_code": [
        "g = getchar ( ) ;",
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        23,
        22
      ],
      "mod_code": [
        "g = getchar ( ) ;",
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "g = getchar ( ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4,
        22
      ],
      "mod_code": [
        "g = getchar ( ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        22
      ],
      "mod_code": [
        "g = getchar ( ) ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        23,
        4
      ],
      "mod_code": [
        "bool g ;",
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        23,
        4,
        22
      ],
      "mod_code": [
        "bool g ;",
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        23,
        22
      ],
      "mod_code": [
        "bool g ;",
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "bool g ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        22
      ],
      "mod_code": [
        "bool g ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        22
      ],
      "mod_code": [
        "bool g ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        23,
        4
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        4,
        22
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        22
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "n"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}