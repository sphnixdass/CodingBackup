{
  "meta": {
    "index": 2350,
    "hitid": "3UZUVSO3P7P159LFOG1PAEWJI73EMS",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "939A",
    "subid": "47862484"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x = int",
      "code": "int x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a = int array of size x + 1",
      "code": "int a [ x + 1 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to x inclusive read a [ i ]",
      "code": "for ( int i = 1 ; i <= x ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to x inclusive",
      "code": "for ( int i = 1 ; i <= x ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if a [ a [ a [ i ] ] ] is i",
      "code": "if ( a [ a [ a [ i ] ] ] == i )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(x + 1)][int [(x + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "cout << \" YES \" ;",
        "bool x ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        1,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "cout << \" YES \" ;",
        "bool x ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        1,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "cout << \" YES \" ;",
        "bool x ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        1,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "cout << \" YES \" ;",
        "bool x ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "cout << \" YES \" ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        2,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "cout << \" YES \" ;",
        "x = getchar ( ) ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        2,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "cout << \" YES \" ;",
        "x = getchar ( ) ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "cout << \" YES \" ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "cout << \" YES \" ;",
        "if ( a [ a [ a [ a ] ] ] == i )",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        7,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "cout << \" YES \" ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "bool x ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "bool x ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        1,
        2,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "bool x ;",
        "x = getchar ( ) ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        1,
        2,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "bool x ;",
        "x = getchar ( ) ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        1,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "bool x ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        1,
        6,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "bool x ;",
        "if ( a [ a [ a [ a ] ] ] == i )",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        1,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "bool x ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "x = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "x = getchar ( ) ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2,
        6,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "x = getchar ( ) ;",
        "if ( a [ a [ a [ a ] ] ] == i )",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "x = getchar ( ) ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "if ( a [ a [ a [ a ] ] ] == i )",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= x ; i ++ )",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        1,
        2,
        6
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "bool x ;",
        "x = getchar ( ) ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(((int)x) + 1)][int [(((int)x) + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        1,
        6
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "bool x ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(((int)x) + 1)][int [(((int)x) + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        1,
        6,
        10
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "bool x ;",
        "if ( a [ a [ a [ a ] ] ] == i )",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(((int)x) + 1)][int [(((int)x) + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "x = getchar ( ) ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(x + 1)][int [(x + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        2,
        6,
        10
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "x = getchar ( ) ;",
        "if ( a [ a [ a [ a ] ] ] == i )",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(x + 1)][int [(x + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(x + 1)][int [(x + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        6,
        10
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "if ( a [ a [ a [ a ] ] ] == i )",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(x + 1)][int [(x + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        2,
        6
      ],
      "mod_code": [
        "bool x ;",
        "x = getchar ( ) ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(((int)x) + 1)][int [(((int)x) + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        2,
        6,
        10
      ],
      "mod_code": [
        "bool x ;",
        "x = getchar ( ) ;",
        "if ( a [ a [ a [ a ] ] ] == i )",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(((int)x) + 1)][int [(((int)x) + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "bool x ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(((int)x) + 1)][int [(((int)x) + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        6,
        10
      ],
      "mod_code": [
        "bool x ;",
        "if ( a [ a [ a [ a ] ] ] == i )",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(((int)x) + 1)][int [(((int)x) + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "if ( a [ a [ a [ a ] ] ] == i )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(x + 1)][int [(x + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        6,
        10
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "if ( a [ a [ a [ a ] ] ] == i )",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(x + 1)][int [(x + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "if ( a [ a [ a [ a ] ] ] == i )",
        "cout << \" NO \" ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [(x + 1)][int [(x + 1)]]’ for array subscript"
    }
  ]
}