{
  "meta": {
    "index": 105,
    "hitid": "3TX9T2ZCB9VVLG6PO5LP4MZS3SRZW0",
    "workerid": "AIWEXPJAU66D9",
    "probid": "762A",
    "subid": "48440603"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare long long integer array a with size 10000000 filled with 0",
      "code": "long long int a [ 10000000 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long integer array b with size 10000000 filled with 0",
      "code": "long long int b [ 10000000 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare long long integer array c with size 10000000 filled with 0",
      "code": "long long int c [ 10000000 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "create long long integers i , k , j , n , s , x , j1 and j2 where j1 = 0 and j = 1",
      "code": "long long int i , k , j = 1 , n , s , x , j1 = 0 , j2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set value of s to square root of n",
      "code": "s = sqrt ( n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to s inclusive",
      "code": "for ( i = 1 ; i <= s ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if n % i = 0",
      "code": "if ( n % i == 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "assign value of i to a [ j ]",
      "code": "a [ j ] = i ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increase j",
      "code": "j ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if i * i ! = n",
      "code": "if ( i * i != n )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "b [ j1 ] = n / i",
      "code": "b [ j1 ] = n / i ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "increase j1",
      "code": "j1 ++ ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = j1 - 1 , j2 = 0 while i > = 0 , incrementin j2 and decrementing i , cet c [ j2 ] to b [ i ]",
      "code": "for ( i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , j2 ++ ) { c [ j2 ] = b [ i ] ; }",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if k is less than ( j + j2 )",
      "code": "if ( k < ( j + j2 ) )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if k is less than j",
      "code": "if ( k < j )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "print a [ k ]",
      "code": "cout << a [ k ] << endl ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print c [ k - j ]",
      "code": "cout << c [ k - j ] << endl ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "long long int i , k , j , n , s = 0 , x , j1 , j1 = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int j1’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "long long int i , k , j , n , s , x , j1 = 0 , x , j2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int s = sqrt ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int s’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "a [ j ] [ i ] = i ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘long long int[long long int]’ for array subscript"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , c ++ ) { c [ j2 ] = b [ i ] ; }"
      ],
      "err_line": 17,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "long long int i , k , j , n , s = 0 , x , j1 , j1 = 1 ;",
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- ) { c [ j2 ] = b [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int j1’"
    },
    {
      "mod_line": [
        4,
        17,
        20
      ],
      "mod_code": [
        "long long int i , k , j , n , s = 0 , x , j1 , j1 = 1 ;",
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- ) { c [ j2 ] = b [ i ] ; }",
        "cout << a [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int j1’"
    },
    {
      "mod_line": [
        4,
        17,
        20,
        12
      ],
      "mod_code": [
        "long long int i , k , j , n , s = 0 , x , j1 , j1 = 1 ;",
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- ) { c [ j2 ] = b [ i ] ; }",
        "cout << a [ k ] ;",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int j1’"
    },
    {
      "mod_line": [
        4,
        17,
        12
      ],
      "mod_code": [
        "long long int i , k , j , n , s = 0 , x , j1 , j1 = 1 ;",
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- ) { c [ j2 ] = b [ i ] ; }",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int j1’"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "long long int i , k , j , n , s = 0 , x , j1 , j1 = 1 ;",
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , c ++ ) { c [ j2 ] = b [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int j1’"
    },
    {
      "mod_line": [
        4,
        17,
        20
      ],
      "mod_code": [
        "long long int i , k , j , n , s = 0 , x , j1 , j1 = 1 ;",
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , c ++ ) { c [ j2 ] = b [ i ] ; }",
        "cout << a [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int j1’"
    },
    {
      "mod_line": [
        4,
        17,
        20,
        12
      ],
      "mod_code": [
        "long long int i , k , j , n , s = 0 , x , j1 , j1 = 1 ;",
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , c ++ ) { c [ j2 ] = b [ i ] ; }",
        "cout << a [ k ] ;",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int j1’"
    },
    {
      "mod_line": [
        4,
        17,
        12
      ],
      "mod_code": [
        "long long int i , k , j , n , s = 0 , x , j1 , j1 = 1 ;",
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , c ++ ) { c [ j2 ] = b [ i ] ; }",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int j1’"
    },
    {
      "mod_line": [
        4,
        20
      ],
      "mod_code": [
        "long long int i , k , j , n , s = 0 , x , j1 , j1 = 1 ;",
        "cout << a [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int j1’"
    },
    {
      "mod_line": [
        4,
        20,
        12
      ],
      "mod_code": [
        "long long int i , k , j , n , s = 0 , x , j1 , j1 = 1 ;",
        "cout << a [ k ] ;",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int j1’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "long long int i , k , j , n , s = 0 , x , j1 , j1 = 1 ;",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int j1’"
    },
    {
      "mod_line": [
        17,
        4
      ],
      "mod_code": [
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- ) { c [ j2 ] = b [ i ] ; }",
        "long long int i , k , j , n , s , x , j1 = 0 , x , j2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        17,
        4,
        20
      ],
      "mod_code": [
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- ) { c [ j2 ] = b [ i ] ; }",
        "long long int i , k , j , n , s , x , j1 = 0 , x , j2 ;",
        "cout << a [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        17,
        4,
        20,
        12
      ],
      "mod_code": [
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- ) { c [ j2 ] = b [ i ] ; }",
        "long long int i , k , j , n , s , x , j1 = 0 , x , j2 ;",
        "cout << a [ k ] ;",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        17,
        4,
        12
      ],
      "mod_code": [
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- ) { c [ j2 ] = b [ i ] ; }",
        "long long int i , k , j , n , s , x , j1 = 0 , x , j2 ;",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "long long int i , k , j , n , s , x , j1 = 0 , x , j2 ;",
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , c ++ ) { c [ j2 ] = b [ i ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        4,
        17,
        20
      ],
      "mod_code": [
        "long long int i , k , j , n , s , x , j1 = 0 , x , j2 ;",
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , c ++ ) { c [ j2 ] = b [ i ] ; }",
        "cout << a [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        4,
        17,
        20,
        12
      ],
      "mod_code": [
        "long long int i , k , j , n , s , x , j1 = 0 , x , j2 ;",
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , c ++ ) { c [ j2 ] = b [ i ] ; }",
        "cout << a [ k ] ;",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        4,
        17,
        12
      ],
      "mod_code": [
        "long long int i , k , j , n , s , x , j1 = 0 , x , j2 ;",
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , c ++ ) { c [ j2 ] = b [ i ] ; }",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        4,
        20
      ],
      "mod_code": [
        "long long int i , k , j , n , s , x , j1 = 0 , x , j2 ;",
        "cout << a [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        4,
        20,
        12
      ],
      "mod_code": [
        "long long int i , k , j , n , s , x , j1 = 0 , x , j2 ;",
        "cout << a [ k ] ;",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "long long int i , k , j , n , s , x , j1 = 0 , x , j2 ;",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , c ++ ) { c [ j2 ] = b [ i ] ; }",
        "cout << a [ k ] ;"
      ],
      "err_line": 17,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        17,
        20,
        12
      ],
      "mod_code": [
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , c ++ ) { c [ j2 ] = b [ i ] ; }",
        "cout << a [ k ] ;",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 17,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        17,
        12
      ],
      "mod_code": [
        "for ( int i = j1 - 1 , j2 = 0 ; i >= 0 ; i -- , c ++ ) { c [ j2 ] = b [ i ] ; }",
        "b [ j1 ] /= i ;"
      ],
      "err_line": 17,
      "err_msg": "lvalue required as increment operand"
    }
  ]
}