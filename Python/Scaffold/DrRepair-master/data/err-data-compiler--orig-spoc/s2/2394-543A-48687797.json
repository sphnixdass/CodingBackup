{
  "meta": {
    "index": 2394,
    "hitid": "3OCZWXS7ZO1H38A1D37767BH4MG5L7",
    "workerid": "A1APYLD4DUK33J",
    "probid": "543A",
    "subid": "48687797"
  },
  "lines": [
    {
      "line": 0,
      "text": "create 3d integer array dp with size 2 by 505 by 505",
      "code": "int dp [ 2 ] [ 505 ] [ 505 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer array a with size 505",
      "code": "int a [ 505 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integers n , m , b , mod",
      "code": "int n , m , b , mod ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n read m read b read mod",
      "code": "cin >> n >> m >> b >> mod ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set bytes from dp to size of dp , set value to 0",
      "code": "memset ( dp , 0 , sizeof ( dp ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set dp [ 0 ] [ 0 ] [ 0 ] to 1",
      "code": "dp [ 0 ] [ 0 ] [ 0 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer flag with flag = 1",
      "code": "int flag = 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for j = 0 to b inclusive",
      "code": "for ( int j = 0 ; j <= b ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for k = 0 to m inclusive",
      "code": "for ( int k = 0 ; k <= m ; k ++ )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "set dp [ flag ] [ j ] [ k ] to dp [ flag ^ 1 ] [ j ] [ k ]",
      "code": "dp [ flag ] [ j ] [ k ] = dp [ flag ^ 1 ] [ j ] [ k ] ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if j is greater than or equal to a [ i ] , increment dp [ flag ] [ j ] [ k ] by dp [ flag ] [ j - a [ i ] ] [ k - 1 ] , set dp [ flag ] [ j ] [ k ] to dp [ flag ] [ j ] [ k ] % mod",
      "code": "if ( j >= a [ i ] ) { ( dp [ flag ] [ j ] [ k ] += dp [ flag ] [ j - a [ i ] ] [ k - 1 ] ) %= mod ; }",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set flag to flag ^ 1",
      "code": "flag ^= 1 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set flag to flag ^ 1",
      "code": "flag ^= 1 ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "create integer sum with sum = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for i = 0 to b inclusive , increment sum by dp [ flag ] [ i ] [ m ] , set sum to sum % mod",
      "code": "for ( int i = 0 ; i <= b ; i ++ ) { ( sum += dp [ flag ] [ i ] [ m ] ) %= mod ; }",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print sum print newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }"
      ],
      "err_line": 20,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "a [ 505 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "n , m , b , mod ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "dp [ 0 ] [ 0 ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [505]’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "flag = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] += dp [ i ] [ j - 1 ] ;"
      ],
      "err_line": 13,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "sum = 0 ;"
      ],
      "err_line": 19,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ i ] ; }"
      ],
      "err_line": 20,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }"
      ],
      "err_line": 13,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        13,
        20,
        19
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "sum = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        13,
        20,
        19,
        16
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "sum = 0 ;",
        "flag = flag ;"
      ],
      "err_line": 13,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        13,
        20,
        19,
        9
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "sum = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        20,
        19,
        0
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "sum = 0 ;",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        20,
        16
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "flag = flag ;"
      ],
      "err_line": 13,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        13,
        20,
        16,
        9
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "flag = flag ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        20,
        16,
        0
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "flag = flag ;",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        20,
        9
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        20,
        9,
        0
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        20,
        0
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "sum = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        13,
        19,
        16
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "sum = 0 ;",
        "flag = flag ;"
      ],
      "err_line": 13,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        13,
        19,
        16,
        9
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "sum = 0 ;",
        "flag = flag ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        19,
        16,
        0
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "sum = 0 ;",
        "flag = flag ;",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        19,
        9
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "sum = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        19,
        9,
        0
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "sum = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        19,
        0
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "sum = 0 ;",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        16
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "flag = flag ;"
      ],
      "err_line": 13,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        13,
        16,
        9
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "flag = flag ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        16,
        9,
        0
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "flag = flag ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        16,
        0
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "flag = flag ;",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        9
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        9,
        0
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "if ( j >= a [ i ] ) dp [ flag ] [ j ] [ k ] += dp [ i ] [ j - 1 ] ;",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        19
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "sum = 0 ;"
      ],
      "err_line": 19,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        19,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "sum = 0 ;",
        "flag = flag ;"
      ],
      "err_line": 19,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        19,
        16,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "sum = 0 ;",
        "flag = flag ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        19,
        16,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "sum = 0 ;",
        "flag = flag ;",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        19,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "sum = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        19,
        9,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "sum = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        19,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "sum = 0 ;",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "flag = flag ;"
      ],
      "err_line": 20,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        16,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "flag = flag ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        16,
        9,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "flag = flag ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        16,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "flag = flag ;",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        20,
        9,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        0
      ],
      "mod_code": [
        "for ( int i = 0 ; i <= b ; i ++ ) { sum += dp [ flag ] [ i ] [ i ] [ m ] ; }",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        16
      ],
      "mod_code": [
        "sum = 0 ;",
        "flag = flag ;"
      ],
      "err_line": 19,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        16,
        9
      ],
      "mod_code": [
        "sum = 0 ;",
        "flag = flag ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        16,
        9,
        0
      ],
      "mod_code": [
        "sum = 0 ;",
        "flag = flag ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        16,
        0
      ],
      "mod_code": [
        "sum = 0 ;",
        "flag = flag ;",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        9
      ],
      "mod_code": [
        "sum = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19,
        9,
        0
      ],
      "mod_code": [
        "sum = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19,
        0
      ],
      "mod_code": [
        "sum = 0 ;",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "flag = flag ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        9,
        0
      ],
      "mod_code": [
        "flag = flag ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        0
      ],
      "mod_code": [
        "flag = flag ;",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dp [ 2 ] [ 505 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}