{
  "meta": {
    "index": 430,
    "hitid": "34XASH8KLQG520A5XUH04QVNVR7PMF",
    "workerid": "A1APYLD4DUK33J",
    "probid": "228A",
    "subid": "48909703"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string array n with size 4",
      "code": "string n [ 4 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer ans with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create character z with z = ' a '",
      "code": "char z = ' a ' ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 4 exclusive , read n [ i ]",
      "code": "for ( int i = 0 ; i < 4 ; i ++ ) { cin >> n [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to 4 exclusive",
      "code": "for ( int i = 0 ; i < 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to 4 exclusive",
      "code": "for ( int j = 0 ; j < 4 ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if i is not j",
      "code": "if ( i != j )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if n [ i ] is n [ j ]",
      "code": "if ( n [ i ] == n [ j ] )",
      "indent": 4
    },
    {
      "line": 9,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 5
    },
    {
      "line": 10,
      "text": "set n [ j ] is z",
      "code": "n [ j ] = z ;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "increment z",
      "code": "z ++ ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "' z = ' a ' ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( j = 0 ; j < 4 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( j = 0 ; j < 4 ; j ++ )",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6,
        5,
        2
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( j = 0 ; j < 4 ; j ++ )",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "ans = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6,
        5,
        1
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( j = 0 ; j < 4 ; j ++ )",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "char n [ 4 ] ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6,
        5,
        10
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( j = 0 ; j < 4 ; j ++ )",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( j = 0 ; j < 4 ; j ++ )",
        "ans = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6,
        2,
        1
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( j = 0 ; j < 4 ; j ++ )",
        "ans = 0 ;",
        "char n [ 4 ] ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6,
        2,
        10
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( j = 0 ; j < 4 ; j ++ )",
        "ans = 0 ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6,
        1
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( j = 0 ; j < 4 ; j ++ )",
        "char n [ 4 ] ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6,
        1,
        10
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( j = 0 ; j < 4 ; j ++ )",
        "char n [ 4 ] ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        6,
        10
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( j = 0 ; j < 4 ; j ++ )",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5,
        2
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "ans = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5,
        2,
        1
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "ans = 0 ;",
        "char n [ 4 ] ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5,
        2,
        10
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "ans = 0 ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "char n [ 4 ] ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5,
        1,
        10
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "char n [ 4 ] ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        5,
        10
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "ans = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        2,
        1
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "ans = 0 ;",
        "char n [ 4 ] ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        2,
        1,
        10
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "ans = 0 ;",
        "char n [ 4 ] ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        2,
        10
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "ans = 0 ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "char n [ 4 ] ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        1,
        10
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "char n [ 4 ] ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "' z = ' a ' ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 3,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        2,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "ans = 0 ;",
        "char n [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        2,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "ans = 0 ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "char n [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5,
        1,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "char n [ 4 ] ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "ans = 0 ;",
        "char n [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        1,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "ans = 0 ;",
        "char n [ 4 ] ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "ans = 0 ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "char n [ 4 ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "char n [ 4 ] ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "for ( j = 0 ; j < 4 ; j ++ )",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )",
        "ans = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )",
        "ans = 0 ;",
        "char n [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        1,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )",
        "ans = 0 ;",
        "char n [ 4 ] ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )",
        "ans = 0 ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )",
        "char n [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        1,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )",
        "char n [ 4 ] ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "ans = 0 ;",
        "char n [ 4 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        10
      ],
      "mod_code": [
        "ans = 0 ;",
        "char n [ 4 ] ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "ans = 0 ;",
        "n [ j ] = ' z ' ;"
      ],
      "err_line": 2,
      "err_msg": "‘ans’ was not declared in this scope"
    }
  ]
}