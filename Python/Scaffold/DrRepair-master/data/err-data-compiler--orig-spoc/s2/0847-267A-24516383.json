{
  "meta": {
    "index": 847,
    "hitid": "33IXYHIZB5CBY5HMEYI5V5ILC2KE2Z",
    "workerid": "A1AYVATMT88U1W",
    "probid": "267A",
    "subid": "24516383"
  },
  "lines": [
    {
      "line": 0,
      "text": "let x , y , sum , n be unsigned long integers",
      "code": "unsigned long long int x , y , sum , n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while n is decremented by 1",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x , y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "sum is equal to 0",
      "code": "sum = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for the condition is true",
      "code": "for ( ; ; )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if x is equal to 0 or y is equal to 0 , stop",
      "code": "if ( x == 0 || y == 0 ) { break ; }",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if x is less than y",
      "code": "if ( x < y )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment sum by y / x",
      "code": "sum += y / x ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "y is equal to y modulo x",
      "code": "y %= x ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "else do the following",
      "code": "else",
      "indent": 3
    },
    {
      "line": 12,
      "text": "increment sum by x / y",
      "code": "sum += x / y ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "x is equal to x modulo y",
      "code": "x %= y ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print sum and newline",
      "code": "cout << sum << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "sum = ' 0 ' ;",
        "else do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        11,
        2
      ],
      "mod_code": [
        "sum = ' 0 ' ;",
        "else do",
        "n = getchar ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        11,
        2,
        4
      ],
      "mod_code": [
        "sum = ' 0 ' ;",
        "else do",
        "n = getchar ( ) ;",
        "cin >> x , y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        11,
        2,
        3
      ],
      "mod_code": [
        "sum = ' 0 ' ;",
        "else do",
        "n = getchar ( ) ;",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        5,
        11,
        4
      ],
      "mod_code": [
        "sum = ' 0 ' ;",
        "else do",
        "cin >> x , y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        11,
        4,
        3
      ],
      "mod_code": [
        "sum = ' 0 ' ;",
        "else do",
        "cin >> x , y ;",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        5,
        11,
        3
      ],
      "mod_code": [
        "sum = ' 0 ' ;",
        "else do",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        5,
        2,
        4,
        3
      ],
      "mod_code": [
        "sum = ' 0 ' ;",
        "n = getchar ( ) ;",
        "cin >> x , y ;",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "sum = ' 0 ' ;",
        "n = getchar ( ) ;",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        5,
        4,
        3
      ],
      "mod_code": [
        "sum = ' 0 ' ;",
        "cin >> x , y ;",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "sum = ' 0 ' ;",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        2,
        4
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;",
        "cin >> x , y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        2,
        4,
        3
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;",
        "cin >> x , y ;",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        11,
        2,
        3
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "else do",
        "cin >> x , y ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        4,
        3
      ],
      "mod_code": [
        "else do",
        "cin >> x , y ;",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "else do",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        2,
        4,
        3
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> x , y ;",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "cin >> x , y ;",
        "while ( n is 1 )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘is’"
    }
  ]
}