{
  "meta": {
    "index": 1518,
    "hitid": "3UUSLRKAULXDS00SOFOGLEH8MJ7D7C",
    "workerid": "A1APYLD4DUK33J",
    "probid": "791A",
    "subid": "48974209"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare power with integers a , b , modi as arguments , returning integer",
      "code": "int power ( int a , int b , int modi )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer res with res = 1",
      "code": "int res = 1 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while b is true",
      "code": "while ( b )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if b % 2 , set res to ( res * a ) % modi",
      "code": "if ( b % 2 ) res = ( res * a ) % modi ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "set b to b / 2",
      "code": "b /= 2 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set a to ( a * a ) % modi",
      "code": "a = ( a * a ) % modi ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return res from function",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "create integer array dirx with dirx = { - 1 , - 1 , - 1 , 0 , 0 , 1 , 1 , 1 }",
      "code": "int dirx [ ] = { - 1 , - 1 , - 1 , 0 , 0 , 1 , 1 , 1 } ;",
      "indent": 0
    },
    {
      "line": 10,
      "text": "create integer array diry with diry = { - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 }",
      "code": "int diry [ ] = { - 1 , 0 , 1 , - 1 , 1 , - 1 , 0 , 1 } ;",
      "indent": 0
    },
    {
      "line": 11,
      "text": "create integer array dx with dx = { - 1 , 1 , 0 , 0 }",
      "code": "int dx [ ] = { - 1 , 1 , 0 , 0 } ;",
      "indent": 0
    },
    {
      "line": 12,
      "text": "create integer array dy with dy = { 0 , 0 , - 1 , 1 }",
      "code": "int dy [ ] = { 0 , 0 , - 1 , 1 } ;",
      "indent": 0
    },
    {
      "line": 13,
      "text": "create integers k , sum , ans , cur , x , y with sum = 0 , ans = 0 , cur = 0",
      "code": "int k , sum = 0 , ans = 0 , cur = 0 , x , y ;",
      "indent": 0
    },
    {
      "line": 14,
      "text": "create integers n , m , r , c",
      "code": "int n , m , r , c ;",
      "indent": 0
    },
    {
      "line": 15,
      "text": "create integer array a of size 1005",
      "code": "int a [ 1005 ] ;",
      "indent": 0
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 17,
      "text": "create long longs a , b",
      "code": "long long a , b ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "read a read b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "create long long c with c = 0",
      "code": "long long c = 0 ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "while a is less than or equal to b",
      "code": "while ( a <= b )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "set a to a * 3",
      "code": "a = a * 3 ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "set b to b * 2",
      "code": "b = b * 2 ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "increment c",
      "code": "c ++ ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "print c print newline",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int cur’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int power ( int a , int b , modi )"
      ],
      "err_line": 0,
      "err_msg": "‘modi’ has not been declared"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "res = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘res’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "if ( b % 2 ) res to ( res * a ) % modi ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int dy [ dy ] = { 0 , 0 , - 1 , 1 } ;"
      ],
      "err_line": 12,
      "err_msg": "‘dy’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n , m , r , c ;"
      ],
      "err_line": 14,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "a >> a >> b ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int cur’"
    },
    {
      "mod_line": [
        13,
        18,
        3
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "a >> a >> b ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        18,
        3,
        20
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "a >> a >> b ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "while ( a >= b )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        18,
        3,
        11
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "a >> a >> b ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        18,
        20
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "a >> a >> b ;",
        "while ( a >= b )"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int cur’"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        11
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "a >> a >> b ;",
        "while ( a >= b )",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        18,
        11
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "a >> a >> b ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        3,
        20
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "while ( a >= b )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        3,
        20,
        11
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "while ( a >= b )",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        3,
        11
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "while ( a >= b )"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int cur’"
    },
    {
      "mod_line": [
        13,
        20,
        11
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "while ( a >= b )",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , cur = 0 ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        3
      ],
      "mod_code": [
        "a >> a >> b ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18,
        3,
        20
      ],
      "mod_code": [
        "a >> a >> b ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "while ( a >= b )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18,
        3,
        20,
        13
      ],
      "mod_code": [
        "a >> a >> b ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "while ( a >= b )",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18,
        3,
        20,
        11
      ],
      "mod_code": [
        "a >> a >> b ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "while ( a >= b )",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18,
        3,
        13
      ],
      "mod_code": [
        "a >> a >> b ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18,
        3,
        13,
        11
      ],
      "mod_code": [
        "a >> a >> b ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18,
        3,
        11
      ],
      "mod_code": [
        "a >> a >> b ;",
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        18,
        20,
        13
      ],
      "mod_code": [
        "a >> a >> b ;",
        "while ( a >= b )",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        18,
        20,
        13,
        11
      ],
      "mod_code": [
        "a >> a >> b ;",
        "while ( a >= b )",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        20,
        11
      ],
      "mod_code": [
        "a >> a >> b ;",
        "while ( a >= b )",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        13
      ],
      "mod_code": [
        "a >> a >> b ;",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        18,
        13,
        11
      ],
      "mod_code": [
        "a >> a >> b ;",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "a >> a >> b ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "while ( a >= b )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        3,
        20,
        13
      ],
      "mod_code": [
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "while ( a >= b )",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        3,
        20,
        13,
        11
      ],
      "mod_code": [
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "while ( a >= b )",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        3,
        20,
        11
      ],
      "mod_code": [
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "while ( a >= b )",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        3,
        13,
        11
      ],
      "mod_code": [
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "if ( b % 2 ) res to ( res * a ) % modi ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        20,
        13
      ],
      "mod_code": [
        "while ( a >= b )",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        20,
        13,
        11
      ],
      "mod_code": [
        "while ( a >= b )",
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        11
      ],
      "mod_code": [
        "while ( a >= b )",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "int k , sum = 0 , ans = 0 , cur , x , x , y ;",
        "int dx [ { ] = { - 1 , 1 , 0 , 0 } ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘{’ token"
    }
  ]
}