{
  "meta": {
    "index": 977,
    "hitid": "3SZYX62S5GUIONLZ996XN2TG92B750",
    "workerid": "AIWEXPJAU66D9",
    "probid": "778A",
    "subid": "46832296"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare string variables s and p",
      "code": "string s , p ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a be integer array with size 200005",
      "code": "int a [ 200005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read s and p",
      "code": "cin >> s >> p ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer variable lens = length of s",
      "code": "int lens = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer variable lenp = length of p",
      "code": "int lenp = p . length ( ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to lens exclusive read a [ i ]",
      "code": "for ( int i = 0 ; i < lens ; ++ i ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integers l , h , m and ans where l = 0 and h = lens",
      "code": "int l = 0 , h = lens , m , ans ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while l is less than h",
      "code": "while ( l < h )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "m = ( l + h ) / 2",
      "code": "m = ( l + h ) / 2 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "declare string variable t = s",
      "code": "string t = s ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for i = 0 to m exclusive , set t [ a [ i ] - 1 ] = ' . '",
      "code": "for ( int i = 0 ; i < m ; ++ i ) t [ a [ i ] - 1 ] = ' . ' ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "declare integer j = 0",
      "code": "int j = 0 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "declare integer cnt = 0",
      "code": "int cnt = 0 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for i = 0 to lens exclusive",
      "code": "for ( int i = 0 ; i < lens ; ++ i )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if t [ i ] = p [ j ]",
      "code": "if ( t [ i ] == p [ j ] )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "increase j",
      "code": "j ++ ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "stop the loop if cnt = lenp",
      "code": "if ( cnt == lenp ) break ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if cnt = lenp",
      "code": "if ( cnt == lenp )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "set ans to m",
      "code": "ans = m ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "l = m + 1",
      "code": "l = m + 1 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 25,
      "text": "set value of h to m",
      "code": "h = m ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string s , s ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘std::__cxx11::string s’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int * a [ 200005 ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "s >> s >> p ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "m += h ) / 2 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "string t = ' s ' ;"
      ],
      "err_line": 10,
      "err_msg": "conversion from ‘char’ to non-scalar type ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ requested"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cnt = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < lens ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 24,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "* h = m ;"
      ],
      "err_line": 25,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        7,
        21
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "if ( ! cnt )"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        21,
        3
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "if ( ! cnt )",
        "s >> s >> p ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        21,
        3,
        24
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "if ( ! cnt )",
        "s >> s >> p ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        21,
        3,
        13
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "if ( ! cnt )",
        "s >> s >> p ;",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        21,
        3,
        8
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "if ( ! cnt )",
        "s >> s >> p ;",
        "while ( l < h ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        21,
        24
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "if ( ! cnt )",
        "n"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        21,
        24,
        13
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "if ( ! cnt )",
        "n",
        "cnt = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        21,
        24,
        8
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "if ( ! cnt )",
        "n",
        "while ( l < h ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        21,
        13
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "if ( ! cnt )",
        "cnt = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        21,
        13,
        8
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "if ( ! cnt )",
        "cnt = 0 ;",
        "while ( l < h ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        21,
        8
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "if ( ! cnt )",
        "while ( l < h ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "s >> s >> p ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3,
        24
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "s >> s >> p ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3,
        24,
        13
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "s >> s >> p ;",
        "n",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3,
        24,
        8
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "s >> s >> p ;",
        "n",
        "while ( l < h ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3,
        13
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "s >> s >> p ;",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3,
        13,
        8
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "s >> s >> p ;",
        "cnt = 0 ;",
        "while ( l < h ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        3,
        8
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "s >> s >> p ;",
        "while ( l < h ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7,
        24
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        24,
        13
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "n",
        "cnt = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        24,
        13,
        8
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "n",
        "cnt = 0 ;",
        "while ( l < h ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        24,
        8
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "n",
        "while ( l < h ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "cnt = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        13,
        8
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "cnt = 0 ;",
        "while ( l < h ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "int l , h , m , m = 0 , ans = lens ;",
        "while ( l < h ) ;"
      ],
      "err_line": 7,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        21,
        3
      ],
      "mod_code": [
        "if ( ! cnt )",
        "s >> s >> p ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        21,
        3,
        24
      ],
      "mod_code": [
        "if ( ! cnt )",
        "s >> s >> p ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        21,
        3,
        24,
        13
      ],
      "mod_code": [
        "if ( ! cnt )",
        "s >> s >> p ;",
        "n",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        21,
        3,
        24,
        8
      ],
      "mod_code": [
        "if ( ! cnt )",
        "s >> s >> p ;",
        "n",
        "while ( l < h ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        21,
        3,
        13
      ],
      "mod_code": [
        "if ( ! cnt )",
        "s >> s >> p ;",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        21,
        3,
        13,
        8
      ],
      "mod_code": [
        "if ( ! cnt )",
        "s >> s >> p ;",
        "cnt = 0 ;",
        "while ( l < h ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        21,
        3,
        8
      ],
      "mod_code": [
        "if ( ! cnt )",
        "s >> s >> p ;",
        "while ( l < h ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        21,
        24
      ],
      "mod_code": [
        "if ( ! cnt )",
        "n"
      ],
      "err_line": 24,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        24,
        13
      ],
      "mod_code": [
        "if ( ! cnt )",
        "n",
        "cnt = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        24,
        13,
        8
      ],
      "mod_code": [
        "if ( ! cnt )",
        "n",
        "cnt = 0 ;",
        "while ( l < h ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        24,
        8
      ],
      "mod_code": [
        "if ( ! cnt )",
        "n",
        "while ( l < h ) ;"
      ],
      "err_line": 24,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        13
      ],
      "mod_code": [
        "if ( ! cnt )",
        "cnt = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        13,
        8
      ],
      "mod_code": [
        "if ( ! cnt )",
        "cnt = 0 ;",
        "while ( l < h ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        24
      ],
      "mod_code": [
        "s >> s >> p ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        24,
        13
      ],
      "mod_code": [
        "s >> s >> p ;",
        "n",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        24,
        13,
        8
      ],
      "mod_code": [
        "s >> s >> p ;",
        "n",
        "cnt = 0 ;",
        "while ( l < h ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        24,
        8
      ],
      "mod_code": [
        "s >> s >> p ;",
        "n",
        "while ( l < h ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "s >> s >> p ;",
        "cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        13,
        8
      ],
      "mod_code": [
        "s >> s >> p ;",
        "cnt = 0 ;",
        "while ( l < h ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "s >> s >> p ;",
        "while ( l < h ) ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        24,
        13
      ],
      "mod_code": [
        "n",
        "cnt = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        13,
        8
      ],
      "mod_code": [
        "n",
        "cnt = 0 ;",
        "while ( l < h ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        8
      ],
      "mod_code": [
        "n",
        "while ( l < h ) ;"
      ],
      "err_line": 24,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        8
      ],
      "mod_code": [
        "cnt = 0 ;",
        "while ( l < h ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘cnt’ was not declared in this scope"
    }
  ]
}