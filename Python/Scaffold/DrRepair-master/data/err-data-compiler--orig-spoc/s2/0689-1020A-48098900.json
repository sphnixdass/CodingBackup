{
  "meta": {
    "index": 689,
    "hitid": "3UXQ63NLAAGJSORAEDYK9TB9F5YLBV",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1020A",
    "subid": "48098900"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long integers h , h , a , b , and k",
      "code": "long long int n , h , a , b , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , h , a , b , and k",
      "code": "cin >> n >> h >> a >> b >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while k - - is truthy",
      "code": "while ( k -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let long long ints t_a , f_a , t_b , f_b",
      "code": "long long int t_a , f_a , t_b , f_b ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read t_a , t_b , f_a , f_b",
      "code": "cin >> t_a >> f_a >> t_b >> f_b ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if t_a is equal to t_b",
      "code": "if ( t_a == t_b )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print the absolute value of f_b - f_a",
      "code": "cout << abs ( f_b - f_a ) << ' \\n ' ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "let long long int x",
      "code": "long long int x ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if a is less than or equal to f_a and f_a is less than or equal to b",
      "code": "if ( a <= f_a && f_a <= b )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set x to 0",
      "code": "x = 0 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "print abs ( t_b - t_a ) + abs ( f_b - f_a )",
      "code": "cout << abs ( t_b - t_a ) + abs ( f_b - f_a ) << ' \\n ' ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set x to min ( abs ( f_a - a ) , abs ( f_a - b ) )",
      "code": "x = min ( abs ( f_a - a ) , abs ( f_a - b ) ) ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "if abs ( f_a - a ) is less than abs ( f_a - b )",
      "code": "if ( abs ( f_a - a ) < abs ( f_a - b ) )",
      "indent": 4
    },
    {
      "line": 16,
      "text": "set f_a to a",
      "code": "f_a = a ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "print abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) )",
      "code": "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) << ' \\n ' ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "else do",
      "code": "else",
      "indent": 4
    },
    {
      "line": 19,
      "text": "set f_a to b",
      "code": "f_a = b ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "print abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) )",
      "code": "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) << ' \\n ' ;",
      "indent": 5
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long h , h , a , b , k ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 24,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "x = min ( abs ( abs ( f_a - a ) , abs ( f_a - b ) ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘abs(long long int, long long int)’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( abs ( f_a - a ) ) < abs ( f_a - b ) )"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cin >> t_a >> t_b >> f_a >> f_b ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        5,
        17
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        5,
        17,
        20
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        5,
        17,
        7
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        5,
        17,
        18
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        5,
        20
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        5,
        20,
        7
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        5,
        20,
        18
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        5,
        7
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        5,
        7,
        18
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( f_b - f_a ) ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        5,
        18
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        17,
        20
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        17,
        20,
        7
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        17,
        20,
        18
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        17,
        7
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        17,
        7,
        18
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        17,
        18
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        20,
        7
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        20,
        7,
        18
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        20,
        18
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        7,
        18
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "cout << abs ( f_b - f_a ) ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "long long int h , h , a , b , k ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int h’"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        17,
        20
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        17,
        20,
        7
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        17,
        20,
        18
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "else do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        17,
        7
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        17,
        7,
        18
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;",
        "else do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        17,
        18
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "else do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        20
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        20,
        7
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        20,
        7,
        18
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        20,
        18
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        7,
        18
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "cout << abs ( f_b - f_a ) ;",
        "else do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "cin >> t_a >> t_b >> f_a >> f_b ;",
        "else do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17,
        20
      ],
      "mod_code": [
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        20,
        7
      ],
      "mod_code": [
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        20,
        7,
        18
      ],
      "mod_code": [
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;",
        "else do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        20,
        18
      ],
      "mod_code": [
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "else do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        7
      ],
      "mod_code": [
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        7,
        18
      ],
      "mod_code": [
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;",
        "else do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "else do"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        20,
        7
      ],
      "mod_code": [
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        20,
        7,
        18
      ],
      "mod_code": [
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "cout << abs ( f_b - f_a ) ;",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        20,
        18
      ],
      "mod_code": [
        "cout << abs ( t_b - t_a ) + x + ( abs ( f_b - f_a ) ) ) << endl ;",
        "else do"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "cout << abs ( f_b - f_a ) ;",
        "else do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}