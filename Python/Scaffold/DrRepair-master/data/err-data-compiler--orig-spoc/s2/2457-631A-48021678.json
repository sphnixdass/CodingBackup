{
  "meta": {
    "index": 2457,
    "hitid": "3WRBLBQ2GR22M9AZ564FCKAISKH0GK",
    "workerid": "A28TIENUWLMMIP",
    "probid": "631A",
    "subid": "48021678"
  },
  "lines": [
    {
      "line": 0,
      "text": "let N be an int , set N to 1e6 + 5",
      "code": "const int N = 1e6 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , a be ints",
      "code": "int n , a ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let v1 , v2 be a vector of long long ints",
      "code": "vector < long long > v1 , v2 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let res be a long long int , set res to 0",
      "code": "long long res = 0 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "define function sum which takes in integers l and r as arguments",
      "code": "long long sum ( int l , int r )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "decrement l , decrement r",
      "code": "l -- , r -- ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let s1 and s2 be ints , set s1 and s2 to 0",
      "code": "long long s1 = 0 , s2 = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "iterate for r - 1 times , s1 = s1 | v1 [ j ]",
      "code": "for ( int j = l ; j <= r ; j ++ ) s1 |= v1 [ j ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "iterate for r - 1 times , s2 = s2 | v1 [ j ]",
      "code": "for ( int j = l ; j <= r ; j ++ ) s2 |= v2 [ j ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return the sum of s1 and s2",
      "code": "return s1 + s2 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 12,
      "text": "read in c",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "let aux be an int , set aux to n",
      "code": "int aux = n ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "iterate for aux times , read in a , add a to v1",
      "code": "while ( aux -- ) cin >> a , v1 . push_back ( a ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "set aux to n",
      "code": "aux = n ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "iterate for aux times , read in a , add a to v2",
      "code": "while ( aux -- ) cin >> a , v2 . push_back ( a ) ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "iterate for n - 1 times",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for k = 1 to k + i - 1 < = n , set res to the max of res and sum ( k , k + i - 1 )",
      "code": "for ( int k = 1 ; k + i - 1 <= n ; k ++ ) res = max ( res , sum ( k , k + i - 1 ) ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "void sum ( int l , int r )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cin >> c ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int N , N = 1e6 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int N’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 14,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int sum ( int l , int r )"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘max(long long int&, int)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int s1 = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘s2’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) s1 = s1 [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) s2 = s2 [ j ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "c = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int aux = n , aux = n ;"
      ],
      "err_line": 13,
      "err_msg": "redeclaration of ‘int aux’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ aux ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int aux = n ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘int aux’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ aux ] ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( int n = 1 ; j < n - 1 ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        8
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        12
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        14
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        8
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        12
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        14
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        12
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "cin >> c ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        14
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        12,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        14
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        14,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        16,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        16,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        17,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        4,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "void sum ( int l , int r )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        12
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        14
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        12
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        12,
        14
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        12,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        12,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        12,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        14
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        14,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        14,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        14,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        16,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        16,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        17,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        7,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        12
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        14
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        12,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        14
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        14,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        14,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        14,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        16,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        16,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        17,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        8,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "cin >> c ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        12,
        14
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        12,
        14,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        12,
        14,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        12,
        14,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        12,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        12,
        16,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        12,
        16,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        12,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        12,
        17,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        12,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "cin >> c ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        14,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        14,
        16,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        14,
        16,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        14,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        14,
        17,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        14,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        16,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        16,
        17,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        16,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        17,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "long long int res = 0 , res = 0 ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int res’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        12
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        14
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        16
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        12
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        14
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        16
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        12,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        14
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        14,
        16
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        14,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        14,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        16
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        17,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        7,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        12
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        14
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        16
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        12,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        14
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        16
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        14,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        16
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        16,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        17,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "cin >> c ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        14
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        16
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        14,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        16
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        16,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        16,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        17,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "cin >> c ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        14,
        16
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        14,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        14,
        17,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        14,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16,
        17,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        16,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        17,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "void sum ( int l , int r )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        12
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        16
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        12,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        16
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        14,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        16
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        16,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        12,
        14,
        16
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        12,
        14,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        12,
        14,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        12,
        16
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        12,
        16,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        12,
        16,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        12,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        12,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        12,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "cin >> c ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        14,
        16
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        14,
        16,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        14,
        16,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        14,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        14,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        14,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        16,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        16,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        16,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s1 = s1 [ j ] ; }",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        12,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        16
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        12,
        14,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        12,
        16
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        12,
        16,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        12,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        12,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        12,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "cin >> c ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        14
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        14,
        16
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        14,
        16,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        14,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        14,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        14,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        16,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        16,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        16,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        17,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        18
      ],
      "mod_code": [
        "for ( int j = 1 ; j < r - 1 ; j ++ ) { s2 = s2 [ j ] ; }",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        16
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        17
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        16,
        18
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        17
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        17,
        18
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        14,
        18
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        16,
        17
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        16,
        17,
        18
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        16,
        18
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        17,
        18
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "cin >> c ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        17
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        17,
        18
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        16,
        18
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        17,
        18
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        17,
        18
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "for ( int aux = 0 ; aux < aux ; aux ++ ) cin >> a [ a ] ;",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "for ( int n = 1 ; j < n - 1 ; j ++ )",
        "for ( int k = 1 ; k + i <= n ; k ++ ) res = max ( res , sum ( k , k + i ) - 1 ) ;"
      ],
      "err_line": 17,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}