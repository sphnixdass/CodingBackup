{
  "meta": {
    "index": 416,
    "hitid": "3MD8CKRQZZH0D5KZ7P8XTT3LT21JR9",
    "workerid": "A1APYLD4DUK33J",
    "probid": "205A",
    "subid": "47831675"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , temp = 0 , index",
      "code": "int n , temp = 0 , index ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer vector v initialized with n",
      "code": "vector < int > v ( n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read v [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> v [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer mn = value of largest element between beginning of v and end of v",
      "code": "int mn = * min_element ( v . begin ( ) , v . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to size of v exclusive",
      "code": "for ( int i = 0 ; i < v . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if v [ i ] is mn",
      "code": "if ( v [ i ] == mn )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment temp",
      "code": "temp ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "let index be i + 1",
      "code": "index = i + 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if temp is greater than 1",
      "code": "if ( temp > 1 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" Still Rozdil \"",
      "code": "puts ( \" Still Rozdil \" ) ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print index and \" \\ n \"",
      "code": "cout << index << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > v v n ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        12,
        11,
        3
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "cout << \" 2/3 \" ;",
        "if ( temp >= 1 )",
        "vector < int > v v n ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        5,
        12,
        11,
        6
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "cout << \" 2/3 \" ;",
        "if ( temp >= 1 )",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        3
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "cout << \" 2/3 \" ;",
        "vector < int > v v n ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        5,
        12,
        3,
        2
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "cout << \" 2/3 \" ;",
        "vector < int > v v n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        5,
        12,
        3,
        6
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "cout << \" 2/3 \" ;",
        "vector < int > v v n ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        5,
        12,
        2,
        6
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "cout << \" 2/3 \" ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        12,
        6
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "cout << \" 2/3 \" ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11,
        3
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "if ( temp >= 1 )",
        "vector < int > v v n ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        5,
        11,
        3,
        2
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "if ( temp >= 1 )",
        "vector < int > v v n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        5,
        11,
        3,
        6
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "if ( temp >= 1 )",
        "vector < int > v v n ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        5,
        11,
        2,
        6
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "if ( temp >= 1 )",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11,
        6
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "if ( temp >= 1 )",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "vector < int > v v n ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "vector < int > v v n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        5,
        3,
        2,
        6
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "vector < int > v v n ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "vector < int > v v n ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        5,
        2,
        6
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int mn = * max_element ( v . begin ( ) , v . end ( ) ) ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        3
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "if ( temp >= 1 )",
        "vector < int > v v n ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        12,
        11,
        3,
        2
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "if ( temp >= 1 )",
        "vector < int > v v n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        12,
        11,
        3,
        6
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "if ( temp >= 1 )",
        "vector < int > v v n ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        12,
        11,
        2,
        6
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "if ( temp >= 1 )",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        6
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "if ( temp >= 1 )",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "vector < int > v v n ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        12,
        3,
        2
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "vector < int > v v n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        12,
        3,
        2,
        6
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "vector < int > v v n ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        12,
        3,
        6
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "vector < int > v v n ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        12,
        2,
        6
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "cout << \" 2/3 \" ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "if ( temp >= 1 )",
        "vector < int > v v n ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        11,
        3,
        2
      ],
      "mod_code": [
        "if ( temp >= 1 )",
        "vector < int > v v n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        11,
        3,
        2,
        6
      ],
      "mod_code": [
        "if ( temp >= 1 )",
        "vector < int > v v n ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        11,
        3,
        6
      ],
      "mod_code": [
        "if ( temp >= 1 )",
        "vector < int > v v n ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        11,
        2,
        6
      ],
      "mod_code": [
        "if ( temp >= 1 )",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "if ( temp >= 1 )",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "vector < int > v v n ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        3,
        2,
        6
      ],
      "mod_code": [
        "vector < int > v v n ;",
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "vector < int > v v n ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘v’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = 0 ; i < v . size ( ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}