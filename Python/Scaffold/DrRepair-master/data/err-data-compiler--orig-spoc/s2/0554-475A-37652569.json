{
  "meta": {
    "index": 554,
    "hitid": "38Z7YZ2SB3W46TLTCSYXC2EGJE9QIR",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "475A",
    "subid": "37652569"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m , i , j = int",
      "code": "int n , m , i , j ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "bus = string vector of size 6",
      "code": "vector < string > bus ( 6 ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set bus [ 0 ] to \" + - - - - - - - - - - - - - - - - - - - - - - - - + \"",
      "code": "bus [ 0 ] = \" +------------------------+ \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set bus [ 1 ] to \" | # . # . # . # . # . # . # . # . # . # . # . | D | ) \"",
      "code": "bus [ 1 ] = \" |#.#.#.#.#.#.#.#.#.#.#.|D|) \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set bus [ 2 ] to \" | # . # . # . # . # . # . # . # . # . # . # . | . | \"",
      "code": "bus [ 2 ] = \" |#.#.#.#.#.#.#.#.#.#.#.|.| \" ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set bus [ 3 ] to \" | # . . . . . . . . . . . . . . . . . . . . . . . | \"",
      "code": "bus [ 3 ] = \" |#.......................| \" ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set bus [ 4 ] to \" | # . # . # . # . # . # . # . # . # . # . # . | . | ) \"",
      "code": "bus [ 4 ] = \" |#.#.#.#.#.#.#.#.#.#.#.|.|) \" ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set bus [ 5 ] to \" + - - - - - - - - - - - - - - - - - - - - - - - - + \"",
      "code": "bus [ 5 ] = \" +------------------------+ \" ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set m to the size of bus [ 0 ]",
      "code": "m = bus [ 0 ] . size ( ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 0 to m - 1",
      "code": "for ( i = 0 ; i < m - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = 0 to 6",
      "code": "for ( j = 0 ; j < 6 ; j ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if n is 0 then break the inner loop",
      "code": "if ( n == 0 ) { break ; }",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if bus [ j ] [ i ] is ' # '",
      "code": "if ( bus [ j ] [ i ] == ' # ' )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "set bus [ j ] [ i ] to ' O '",
      "code": "bus [ j ] [ i ] = ' O ' ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "decrement n",
      "code": "n -- ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if n is 0 break outer loop",
      "code": "if ( n == 0 ) { break ; }",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for i = 0 to 6 print bus [ i ]",
      "code": "for ( i = 0 ; i < 6 ; i ++ ) { cout << bus [ i ] << endl ; }",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , i , j , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "vector < string > bus [ 6 ] ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<std::__cxx11::basic_string<char> >’ and ‘const char [27]’)"
    }
  ]
}