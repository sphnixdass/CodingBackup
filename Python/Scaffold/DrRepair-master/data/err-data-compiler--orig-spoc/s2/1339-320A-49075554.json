{
  "meta": {
    "index": 1339,
    "hitid": "3BC9H1KCYU6VGQWKSJJ6QFQQYLPYWL",
    "workerid": "AIWEXPJAU66D9",
    "probid": "320A",
    "subid": "49075554"
  },
  "lines": [
    {
      "line": 0,
      "text": "create string str",
      "code": "string str ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer num with value 0",
      "code": "int num = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read standard input to str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "increment i in a loop from 0 to the length of str",
      "code": "for ( int i = 0 ; i < str . length ( ) ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if str [ i ] = ' 1 '",
      "code": "if ( str [ i ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "change num to 2",
      "code": "num = 2 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if str [ i ] is equal to ' 4 '",
      "code": "else if ( str [ i ] == ' 4 ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "decrement num",
      "code": "num -- ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if num is less than 0",
      "code": "if ( num < 0 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" YES \" to the standard output",
      "code": "cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "num = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        6
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;",
        "int num = 2 ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        6,
        14
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;",
        "int num = 2 ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        6,
        5
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;",
        "int num = 2 ;",
        "if ( str [ i ] = ' 1 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        6,
        0
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;",
        "int num = 2 ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        18,
        14
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        14,
        5
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;",
        "cout << \" NO \" ;",
        "if ( str [ i ] = ' 1 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        14,
        0
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;",
        "cout << \" NO \" ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        18,
        5
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;",
        "if ( str [ i ] = ' 1 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18,
        5,
        0
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;",
        "if ( str [ i ] = ' 1 ' )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        18,
        0
      ],
      "mod_code": [
        "n",
        "cout << \" YES \" ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "n",
        "int num = 2 ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        14
      ],
      "mod_code": [
        "n",
        "int num = 2 ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        14,
        5
      ],
      "mod_code": [
        "n",
        "int num = 2 ;",
        "cout << \" NO \" ;",
        "if ( str [ i ] = ' 1 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        14,
        0
      ],
      "mod_code": [
        "n",
        "int num = 2 ;",
        "cout << \" NO \" ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        6,
        5
      ],
      "mod_code": [
        "n",
        "int num = 2 ;",
        "if ( str [ i ] = ' 1 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6,
        5,
        0
      ],
      "mod_code": [
        "n",
        "int num = 2 ;",
        "if ( str [ i ] = ' 1 ' )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        6,
        0
      ],
      "mod_code": [
        "n",
        "int num = 2 ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        5
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;",
        "if ( str [ i ] = ' 1 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        5,
        0
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;",
        "if ( str [ i ] = ' 1 ' )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        14,
        0
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "n",
        "if ( str [ i ] = ' 1 ' )"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        0
      ],
      "mod_code": [
        "n",
        "if ( str [ i ] = ' 1 ' )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "n",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        6,
        14,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int num = 2 ;",
        "cout << \" NO \" ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        6,
        5,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int num = 2 ;",
        "if ( str [ i ] = ' 1 ' )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        6,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int num = 2 ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        14,
        5,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "cout << \" NO \" ;",
        "if ( str [ i ] = ' 1 ' )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        14,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "cout << \" NO \" ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        5,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "if ( str [ i ] = ' 1 ' )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        18,
        0
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        14,
        5,
        0
      ],
      "mod_code": [
        "int num = 2 ;",
        "cout << \" NO \" ;",
        "if ( str [ i ] = ' 1 ' )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        14,
        0
      ],
      "mod_code": [
        "int num = 2 ;",
        "cout << \" NO \" ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        5,
        0
      ],
      "mod_code": [
        "int num = 2 ;",
        "if ( str [ i ] = ' 1 ' )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "int num = 2 ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        5,
        0
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "if ( str [ i ] = ' 1 ' )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        0
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "if ( str [ i ] = ' 1 ' )",
        "string str << endl ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘<<’ token"
    }
  ]
}