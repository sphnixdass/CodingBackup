{
  "meta": {
    "index": 1013,
    "hitid": "3L21G7IH47Q2FPGHVVULXP0W28HY1N",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "760A",
    "subid": "47019239"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "m31 = int array = { 1 , 3 , 5 , 7 , 8 , 10 , 12 }",
      "code": "int m31 [ ] = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "m30 = int array = { 4 , 6 , 9 , 11 }",
      "code": "int m30 [ ] = { 4 , 6 , 9 , 11 } ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "m28 = 2 = int",
      "code": "int m28 = 2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "m , d = int",
      "code": "int m , d ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "res = double",
      "code": "double res ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read m , d",
      "code": "cin >> m >> d ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to 7 exclusive",
      "code": "for ( int i = 0 ; i < 7 ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if m = m31 [ i ] thenset res to ceil of to double ( 31 + ( d - 1 ) ) / 7 )",
      "code": "if ( m == m31 [ i ] ) res = ceil ( ( double ) ( 31 + ( d - 1 ) ) / 7 ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "for i = 0 to 4 excluisve",
      "code": "for ( int i = 0 ; i < 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if m = m30 then set res to ceil of to double ( 30 + ( d - 1 ) ) / 7 )",
      "code": "if ( m == m30 [ i ] ) res = ceil ( ( double ) ( 30 + ( d - 1 ) ) / 7 ) ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if m = m28 then set res to ceil of to double ( 28 + ( d - 1 ) ) / 7 )",
      "code": "if ( m == m28 ) res = ceil ( ( double ) ( 28 + ( d - 1 ) ) / 7 ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print to int ( res )",
      "code": "cout << ( int ) res << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int m30 = { 4 , 6 , 9 , 11 } ;"
      ],
      "err_line": 2,
      "err_msg": "scalar object ‘m30’ requires one element in initializer"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int m , m ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "int m30 = { 4 , 6 , 9 , 11 } ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        2,
        10
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        4
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        7
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        2,
        10
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        4
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        7
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "int m , m ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        2,
        4,
        7
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "int m , m ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        2,
        7
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        10,
        4
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        10,
        4,
        7
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        10,
        7
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        10,
        4
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        10,
        4,
        7
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        10,
        7
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "int m , m ;"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        4,
        7
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "int m , m ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int m31 = { 1 , 3 , 5 , 7 , 8 , 10 , 12 } ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "scalar object ‘m31’ requires one element in initializer"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;"
      ],
      "err_line": 2,
      "err_msg": "scalar object ‘m30’ requires one element in initializer"
    },
    {
      "mod_line": [
        2,
        10,
        4
      ],
      "mod_code": [
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;"
      ],
      "err_line": 2,
      "err_msg": "scalar object ‘m30’ requires one element in initializer"
    },
    {
      "mod_line": [
        2,
        10,
        4,
        7
      ],
      "mod_code": [
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "scalar object ‘m30’ requires one element in initializer"
    },
    {
      "mod_line": [
        2,
        10,
        7
      ],
      "mod_code": [
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "scalar object ‘m30’ requires one element in initializer"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;"
      ],
      "err_line": 2,
      "err_msg": "scalar object ‘m30’ requires one element in initializer"
    },
    {
      "mod_line": [
        2,
        10,
        4
      ],
      "mod_code": [
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;"
      ],
      "err_line": 2,
      "err_msg": "scalar object ‘m30’ requires one element in initializer"
    },
    {
      "mod_line": [
        2,
        10,
        4,
        7
      ],
      "mod_code": [
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "scalar object ‘m30’ requires one element in initializer"
    },
    {
      "mod_line": [
        2,
        10,
        7
      ],
      "mod_code": [
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "scalar object ‘m30’ requires one element in initializer"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "int m , m ;"
      ],
      "err_line": 2,
      "err_msg": "scalar object ‘m30’ requires one element in initializer"
    },
    {
      "mod_line": [
        2,
        4,
        7
      ],
      "mod_code": [
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "int m , m ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "scalar object ‘m30’ requires one element in initializer"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "int m30 = { 4 , 6 , 9 , 11 } ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "scalar object ‘m30’ requires one element in initializer"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        10,
        4,
        7
      ],
      "mod_code": [
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "if ( m == m30 ) res = ceil ( ceil ( 30 + ( d - 1 ) ) / 7 ) ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        10,
        4,
        7
      ],
      "mod_code": [
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;",
        "int m , m ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int m’"
    },
    {
      "mod_line": [
        10,
        7
      ],
      "mod_code": [
        "if ( m == m30 ) res = ceil ( double ( 30 + ( d - 1 ) ) / 7 ) ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "int m , m ;",
        "for ( i = 0 ; i < 7 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int m’"
    }
  ]
}