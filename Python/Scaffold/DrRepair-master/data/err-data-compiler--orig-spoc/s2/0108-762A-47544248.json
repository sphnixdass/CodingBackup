{
  "meta": {
    "index": 108,
    "hitid": "38G0E1M85MZ1KSCAS8HL1S1ZVO3VU1",
    "workerid": "A1AYVATMT88U1W",
    "probid": "762A",
    "subid": "47544248"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , k , x , s , i , j be integers with s = 0",
      "code": "long long n , k , x , s = 0 , i , j ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let flag , glag be integers with flag = 0 and glag = 0",
      "code": "int flag = 0 , glag = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let x is equal to square root ( ( long double ) n )",
      "code": "x = sqrt ( ( long double ) n ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to x inclusive",
      "code": "for ( i = 1 ; i <= x ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if n modulo i is equal to 0 , increase s by 1",
      "code": "if ( n % i == 0 ) { s ++ ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s is equal to k",
      "code": "if ( s == k )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "flag is equal to 1",
      "code": "flag = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "stop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if i is equal to x + 1 and s is not equal to k",
      "code": "if ( i == x + 1 && s != k )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for j = i - 1 , j is greater than 0 , decrease j by 1",
      "code": "for ( j = i - 1 ; j > 0 ; j -- )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if j is equal to n / j , decrease j by 1",
      "code": "if ( j == n / j ) j = j - 1 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if j is equal to 0 , stop",
      "code": "if ( j == 0 ) break ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if n modulo j is equal to 0 , increase s by 1",
      "code": "if ( n % j == 0 ) s ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if s is equal to k",
      "code": "if ( s == k )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "assign 1 to flag",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "i is equal to n / j",
      "code": "i = n / j ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "stop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "if flag is equal to 1",
      "code": "if ( flag == 1 )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print i and newline",
      "code": "cout << i << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print - 1 and newline",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int glag = 0 , glag = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int glag’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "flag = l ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 9,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( int j = i - 1 , j > 0 ; j -- )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘>’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 27,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "for ( int i = 1 ; i <= x ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        5,
        19
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "for ( int i = 1 ; i <= x ; i ++ )",
        "i /= j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        5,
        19,
        7
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "for ( int i = 1 ; i <= x ; i ++ )",
        "i /= j ;",
        "if ( s == ' k ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        5,
        19,
        20
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "for ( int i = 1 ; i <= x ; i ++ )",
        "i /= j ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        5,
        19,
        23
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "for ( int i = 1 ; i <= x ; i ++ )",
        "i /= j ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        5,
        7
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "for ( int i = 1 ; i <= x ; i ++ )",
        "if ( s == ' k ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        5,
        7,
        20
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "for ( int i = 1 ; i <= x ; i ++ )",
        "if ( s == ' k ' )",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        5,
        7,
        23
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "for ( int i = 1 ; i <= x ; i ++ )",
        "if ( s == ' k ' )",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        5,
        20
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "for ( int i = 1 ; i <= x ; i ++ )",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        5,
        20,
        23
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "for ( int i = 1 ; i <= x ; i ++ )",
        "stop ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        5,
        23
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "for ( int i = 1 ; i <= x ; i ++ )",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "i /= j ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        19,
        7
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "i /= j ;",
        "if ( s == ' k ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        19,
        7,
        20
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "i /= j ;",
        "if ( s == ' k ' )",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        19,
        7,
        23
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "i /= j ;",
        "if ( s == ' k ' )",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        19,
        20
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "i /= j ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        19,
        20,
        23
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "i /= j ;",
        "stop ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        19,
        23
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "i /= j ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "if ( s == ' k ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        7,
        20
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "if ( s == ' k ' )",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        7,
        20,
        23
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "if ( s == ' k ' )",
        "stop ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        7,
        23
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "if ( s == ' k ' )",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "stop ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        20,
        23
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "stop ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        1,
        23
      ],
      "mod_code": [
        "int n , k , x , s , i , i , j ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int i’"
    },
    {
      "mod_line": [
        5,
        19,
        7,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= x ; i ++ )",
        "i /= j ;",
        "if ( s == ' k ' )",
        "stop ;"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        19,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= x ; i ++ )",
        "i /= j ;",
        "stop ;"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        19,
        20,
        23
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= x ; i ++ )",
        "i /= j ;",
        "stop ;",
        "if ( ! flag )"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= x ; i ++ )",
        "if ( s == ' k ' )",
        "stop ;"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        20,
        23
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= x ; i ++ )",
        "if ( s == ' k ' )",
        "stop ;",
        "if ( ! flag )"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        20
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= x ; i ++ )",
        "stop ;"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        20,
        23
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= x ; i ++ )",
        "stop ;",
        "if ( ! flag )"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        7,
        20
      ],
      "mod_code": [
        "i /= j ;",
        "if ( s == ' k ' )",
        "stop ;"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        7,
        20,
        23
      ],
      "mod_code": [
        "i /= j ;",
        "if ( s == ' k ' )",
        "stop ;",
        "if ( ! flag )"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20
      ],
      "mod_code": [
        "i /= j ;",
        "stop ;"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        20,
        23
      ],
      "mod_code": [
        "i /= j ;",
        "stop ;",
        "if ( ! flag )"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        20
      ],
      "mod_code": [
        "if ( s == ' k ' )",
        "stop ;"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        20,
        23
      ],
      "mod_code": [
        "if ( s == ' k ' )",
        "stop ;",
        "if ( ! flag )"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23
      ],
      "mod_code": [
        "stop ;",
        "if ( ! flag )"
      ],
      "err_line": 20,
      "err_msg": "‘stop’ was not declared in this scope"
    }
  ]
}