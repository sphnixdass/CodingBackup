{
  "meta": {
    "index": 2776,
    "hitid": "3G3AJKPCXLMJ7OD0IDDNVN7ZESP4Y4",
    "workerid": "A1AYVATMT88U1W",
    "probid": "900A",
    "subid": "48700560"
  },
  "lines": [
    {
      "line": 0,
      "text": "x = array of integers of length 100001 , y = array of integers of length 100001",
      "code": "int x [ 100001 ] , y [ 100001 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let i , n , a , b be integers with a = 0 , b = 0",
      "code": "int i , n , a = 0 , b = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read x [ i ] and y [ i ]",
      "code": "for ( i = 0 ; i < n ; i ++ ) cin >> x [ i ] >> y [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if x [ i ] is greater than 0",
      "code": "if ( x [ i ] > 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment a by 1",
      "code": "a ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment b by 1",
      "code": "b ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if a < = 1 or b < = 1",
      "code": "if ( a <= 1 || b <= 1 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print Yes and newline",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print No and newline",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int x [ 100001 ] , x [ 100001 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "else do",
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        0
      ],
      "mod_code": [
        "else do",
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        8,
        13,
        0,
        12
      ],
      "mod_code": [
        "else do",
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        8,
        13,
        0,
        2
      ],
      "mod_code": [
        "else do",
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        8,
        13,
        0,
        3
      ],
      "mod_code": [
        "else do",
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        8,
        13,
        12
      ],
      "mod_code": [
        "else do",
        "else do",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        12,
        2
      ],
      "mod_code": [
        "else do",
        "else do",
        "cout << \" YES\\n \" ;",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        8,
        13,
        12,
        3
      ],
      "mod_code": [
        "else do",
        "else do",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        2
      ],
      "mod_code": [
        "else do",
        "else do",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        8,
        13,
        2,
        3
      ],
      "mod_code": [
        "else do",
        "else do",
        "int i , n , a = 0 , a = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        8,
        13,
        3
      ],
      "mod_code": [
        "else do",
        "else do",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        8,
        0,
        12
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        8,
        0,
        12,
        2
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "cout << \" YES\\n \" ;",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        8,
        0,
        12,
        3
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        8,
        0,
        2
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        8,
        0,
        2,
        3
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "int i , n , a = 0 , a = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        8,
        0,
        3
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "else do",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        12,
        2
      ],
      "mod_code": [
        "else do",
        "cout << \" YES\\n \" ;",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        8,
        12,
        2,
        3
      ],
      "mod_code": [
        "else do",
        "cout << \" YES\\n \" ;",
        "int i , n , a = 0 , a = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        8,
        12,
        3
      ],
      "mod_code": [
        "else do",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "else do",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        8,
        2,
        3
      ],
      "mod_code": [
        "else do",
        "int i , n , a = 0 , a = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        13,
        0
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        13,
        0,
        12
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        13,
        0,
        12,
        2
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "cout << \" YES\\n \" ;",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        13,
        0,
        12,
        3
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        13,
        0,
        2
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        13,
        0,
        2,
        3
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "int i , n , a = 0 , a = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        13,
        0,
        3
      ],
      "mod_code": [
        "else do",
        "int x [ 100001 ] , x [ 100001 ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "else do",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        12,
        2
      ],
      "mod_code": [
        "else do",
        "cout << \" YES\\n \" ;",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        13,
        12,
        2,
        3
      ],
      "mod_code": [
        "else do",
        "cout << \" YES\\n \" ;",
        "int i , n , a = 0 , a = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        13,
        12,
        3
      ],
      "mod_code": [
        "else do",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "else do",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        13,
        2,
        3
      ],
      "mod_code": [
        "else do",
        "int i , n , a = 0 , a = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int x [ 100001 ] , x [ 100001 ] ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        0,
        12,
        2
      ],
      "mod_code": [
        "int x [ 100001 ] , x [ 100001 ] ;",
        "cout << \" YES\\n \" ;",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        0,
        12,
        2,
        3
      ],
      "mod_code": [
        "int x [ 100001 ] , x [ 100001 ] ;",
        "cout << \" YES\\n \" ;",
        "int i , n , a = 0 , a = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        0,
        12,
        3
      ],
      "mod_code": [
        "int x [ 100001 ] , x [ 100001 ] ;",
        "cout << \" YES\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int x [ 100001 ] , x [ 100001 ] ;",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        0,
        2,
        3
      ],
      "mod_code": [
        "int x [ 100001 ] , x [ 100001 ] ;",
        "int i , n , a = 0 , a = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int x [ 100001 ] , x [ 100001 ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x [100001]’"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "int i , n , a = 0 , a = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        12,
        2,
        3
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "int i , n , a = 0 , a = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "int i , n , a = 0 , a = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int a’"
    }
  ]
}