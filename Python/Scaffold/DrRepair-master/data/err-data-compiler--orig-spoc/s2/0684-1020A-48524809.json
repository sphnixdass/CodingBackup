{
  "meta": {
    "index": 684,
    "hitid": "3OLZC0DJ8J9WB1HAYRS7IPDO1TKIVK",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1020A",
    "subid": "48524809"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new long int variables n , h , low , high , k , ta , ha , tb , hb and x",
      "code": "long int n , h , low , high , k , ta , ha , tb , hb , x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read input to n , h , low , high and k",
      "code": "cin >> n >> h >> low >> high >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while k is not 0",
      "code": "while ( k )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "assign 0 to x",
      "code": "x = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read ta , ha , tb and hb from the input",
      "code": "cin >> ta >> ha >> tb >> hb ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ta and tb have the same value",
      "code": "if ( ta == tb )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "change x to the absolute value of hb - ha",
      "code": "x = abs ( hb - ha ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if ha > high and hb > high",
      "code": "else if ( ha > high && hb > high )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "assign abs ( ta - tb ) + ( ha - high ) + ( hb - high ) to x",
      "code": "x = abs ( ta - tb ) + ( ha - high ) + ( hb - high ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if ha < low and hb < low",
      "code": "else if ( ha < low && hb < low )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set the value of x to abs ( ta - tb ) + ( low - ha ) + ( low - hb )",
      "code": "x = abs ( ta - tb ) + ( low - ha ) + ( low - hb ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "assign the absolute value of ( ta - tb ) + abs ( ha - hb ) to x",
      "code": "x = abs ( ta - tb ) + abs ( ha - hb ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "print x",
      "code": "cout << x << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "decrement k",
      "code": "k -- ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        7,
        12
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "cin >> ta >> ha >> ha >> hb ;",
        "x = abs ( hb ) - ha ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        7,
        1
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "cin >> ta >> ha >> ha >> hb ;",
        "x = abs ( hb ) - ha ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        6,
        5,
        13,
        12
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "cin >> ta >> ha >> ha >> hb ;",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        13,
        1
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "cin >> ta >> ha >> ha >> hb ;",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        6,
        5,
        12
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "cin >> ta >> ha >> ha >> hb ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5,
        12,
        1
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "cin >> ta >> ha >> ha >> hb ;",
        "n",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        6,
        5,
        1
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "cin >> ta >> ha >> ha >> hb ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        12
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "x = abs ( hb ) - ha ;",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        13,
        1
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "x = abs ( hb ) - ha ;",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        6,
        7,
        12
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "x = abs ( hb ) - ha ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        12,
        1
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "x = abs ( hb ) - ha ;",
        "n",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        6,
        7,
        1
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "x = abs ( hb ) - ha ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        6,
        13,
        12
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13,
        12,
        1
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "n",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        6,
        13,
        1
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        12,
        1
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "n",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "if ( ta % 2 == 0 )",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        12
      ],
      "mod_code": [
        "cin >> ta >> ha >> ha >> hb ;",
        "x = abs ( hb ) - ha ;",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        7,
        13,
        1
      ],
      "mod_code": [
        "cin >> ta >> ha >> ha >> hb ;",
        "x = abs ( hb ) - ha ;",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        5,
        7,
        12
      ],
      "mod_code": [
        "cin >> ta >> ha >> ha >> hb ;",
        "x = abs ( hb ) - ha ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        7,
        12,
        1
      ],
      "mod_code": [
        "cin >> ta >> ha >> ha >> hb ;",
        "x = abs ( hb ) - ha ;",
        "n",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        5,
        7,
        1
      ],
      "mod_code": [
        "cin >> ta >> ha >> ha >> hb ;",
        "x = abs ( hb ) - ha ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        5,
        13,
        12
      ],
      "mod_code": [
        "cin >> ta >> ha >> ha >> hb ;",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        13,
        12,
        1
      ],
      "mod_code": [
        "cin >> ta >> ha >> ha >> hb ;",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "n",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        5,
        13,
        1
      ],
      "mod_code": [
        "cin >> ta >> ha >> ha >> hb ;",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "cin >> ta >> ha >> ha >> hb ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        12,
        1
      ],
      "mod_code": [
        "cin >> ta >> ha >> ha >> hb ;",
        "n",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "cin >> ta >> ha >> ha >> hb ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        7,
        13,
        12
      ],
      "mod_code": [
        "x = abs ( hb ) - ha ;",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        13,
        12,
        1
      ],
      "mod_code": [
        "x = abs ( hb ) - ha ;",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "n",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        7,
        13,
        1
      ],
      "mod_code": [
        "x = abs ( hb ) - ha ;",
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "x = abs ( hb ) - ha ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        12,
        1
      ],
      "mod_code": [
        "x = abs ( hb ) - ha ;",
        "n",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "x = abs ( hb ) - ha ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        12,
        1
      ],
      "mod_code": [
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "n",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "x = abs ( ( ta - tb ) + abs ( ha - hb ) ) ;",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "n",
        "long long int n , h , low , high , k , ta , ha , hb , hb , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int hb’"
    }
  ]
}