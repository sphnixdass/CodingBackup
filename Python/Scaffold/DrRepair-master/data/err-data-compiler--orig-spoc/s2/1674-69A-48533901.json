{
  "meta": {
    "index": 1674,
    "hitid": "3AJA9FLWSCS7F4VKYCN303A2CC2FIO",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "69A",
    "subid": "48533901"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , x , y , z , xsum , ysum , zsum = int with xsum = 0 and ysum = 0 and zsum = 0",
      "code": "int n , x , y , z , xsum ( 0 ) , ysum ( 0 ) , zsum ( 0 ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "loop n times",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x then y then z",
      "code": "cin >> x >> y >> z ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "add x to xsum",
      "code": "xsum += x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "add y to ysum",
      "code": "ysum += y ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "add z to zsum",
      "code": "zsum += z ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if xsum , ysum and zsum are all 0",
      "code": "if ( xsum == 0 && ysum == 0 && zsum == 0 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , zsum = 0 , zsum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int zsum’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "xsum xsum x ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "zsum . push_back ( z ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘push_back’ in ‘zsum’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "while ( cin >> x >> y >> z )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "while ( cin >> x >> y >> z )",
        "xsum xsum x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        3
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "while ( cin >> x >> y >> z )",
        "xsum xsum x ;",
        "for ( int i = 0 ; n < n ; n ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        11
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "while ( cin >> x >> y >> z )",
        "xsum xsum x ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        12
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "while ( cin >> x >> y >> z )",
        "xsum xsum x ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        4,
        3
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "while ( cin >> x >> y >> z )",
        "for ( int i = 0 ; n < n ; n ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        4,
        3,
        11
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "while ( cin >> x >> y >> z )",
        "for ( int i = 0 ; n < n ; n ++ )",
        "n"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        4,
        3,
        12
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "while ( cin >> x >> y >> z )",
        "for ( int i = 0 ; n < n ; n ++ )",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        4,
        11
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "while ( cin >> x >> y >> z )",
        "n"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        4,
        11,
        12
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "while ( cin >> x >> y >> z )",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        4,
        12
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "while ( cin >> x >> y >> z )",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "xsum xsum x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        5,
        3
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "xsum xsum x ;",
        "for ( int i = 0 ; n < n ; n ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        5,
        3,
        11
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "xsum xsum x ;",
        "for ( int i = 0 ; n < n ; n ++ )",
        "n"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        5,
        3,
        12
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "xsum xsum x ;",
        "for ( int i = 0 ; n < n ; n ++ )",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        5,
        11
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "xsum xsum x ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        5,
        11,
        12
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "xsum xsum x ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        5,
        12
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "xsum xsum x ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "for ( int i = 0 ; n < n ; n ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        3,
        11
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "for ( int i = 0 ; n < n ; n ++ )",
        "n"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        3,
        11,
        12
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "for ( int i = 0 ; n < n ; n ++ )",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        3,
        12
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "for ( int i = 0 ; n < n ; n ++ )",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        11,
        12
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int n , x , y , z , xsum , ysum = 0 , ysum = 0 , zsum = 0 ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ysum’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "while ( cin >> x >> y >> z )",
        "xsum xsum x ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "while ( cin >> x >> y >> z )",
        "xsum xsum x ;",
        "for ( int i = 0 ; n < n ; n ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        4,
        5,
        3,
        11
      ],
      "mod_code": [
        "while ( cin >> x >> y >> z )",
        "xsum xsum x ;",
        "for ( int i = 0 ; n < n ; n ++ )",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        4,
        5,
        3,
        12
      ],
      "mod_code": [
        "while ( cin >> x >> y >> z )",
        "xsum xsum x ;",
        "for ( int i = 0 ; n < n ; n ++ )",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        4,
        5,
        11
      ],
      "mod_code": [
        "while ( cin >> x >> y >> z )",
        "xsum xsum x ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        4,
        5,
        11,
        12
      ],
      "mod_code": [
        "while ( cin >> x >> y >> z )",
        "xsum xsum x ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        4,
        5,
        12
      ],
      "mod_code": [
        "while ( cin >> x >> y >> z )",
        "xsum xsum x ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        4,
        3,
        11
      ],
      "mod_code": [
        "while ( cin >> x >> y >> z )",
        "for ( int i = 0 ; n < n ; n ++ )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        11,
        12
      ],
      "mod_code": [
        "while ( cin >> x >> y >> z )",
        "for ( int i = 0 ; n < n ; n ++ )",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "while ( cin >> x >> y >> z )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        11,
        12
      ],
      "mod_code": [
        "while ( cin >> x >> y >> z )",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "xsum xsum x ;",
        "for ( int i = 0 ; n < n ; n ++ )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        5,
        3,
        11
      ],
      "mod_code": [
        "xsum xsum x ;",
        "for ( int i = 0 ; n < n ; n ++ )",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        5,
        3,
        11,
        12
      ],
      "mod_code": [
        "xsum xsum x ;",
        "for ( int i = 0 ; n < n ; n ++ )",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        5,
        3,
        12
      ],
      "mod_code": [
        "xsum xsum x ;",
        "for ( int i = 0 ; n < n ; n ++ )",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "xsum xsum x ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        5,
        11,
        12
      ],
      "mod_code": [
        "xsum xsum x ;",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "xsum xsum x ;",
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘xsum’"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; n < n ; n ++ )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        11,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; n < n ; n ++ )",
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "n",
        "cout << \" NO \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}