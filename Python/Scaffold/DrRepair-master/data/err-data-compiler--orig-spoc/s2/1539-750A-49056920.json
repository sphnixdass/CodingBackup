{
  "meta": {
    "index": 1539,
    "hitid": "3FBEFUUYRKZWQTJBLVSMPZ967SNA6G",
    "workerid": "AIWEXPJAU66D9",
    "probid": "750A",
    "subid": "49056920"
  },
  "lines": [
    {
      "line": 0,
      "text": "max is a double function with double arguments a and b",
      "code": "double max ( double a , double b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return a if a > b or b otherwise",
      "code": "return a > b ? a : b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "function val with int argument n that returns integer",
      "code": "int val ( int n )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "return ( n * ( n + 1 ) ) / 2",
      "code": "return ( n * ( n + 1 ) ) / 2 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "bool function check with int arguments k and n_problems",
      "code": "bool check ( int k , int n_problems )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare integer t = val of n_problems",
      "code": "int t = val ( n_problems ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare int time_left = ( 240 - k ) / 5",
      "code": "int time_left = ( 240 - k ) / 5 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "return true if time_left > = t , else return false",
      "code": "return time_left >= t ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "int function res with int arguments n and k",
      "code": "int res ( int n , int k )",
      "indent": 0
    },
    {
      "line": 12,
      "text": "for i = n to 0 exclusive decrementing i",
      "code": "for ( int i = n ; i > 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if check ( k , i ) is true , return i",
      "code": "if ( check ( k , i ) == true ) return i ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 18,
      "text": "declare integers n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print res ( n , k ) and \" \\ n \"",
      "code": "cout << res ( n , k ) << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int val ( int n ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "bool check ( int k , int n_problems ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int t = n_problems ( n_problems ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘n_problems’ cannot be used as a function"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int res ( int n , int k ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "for ( i = n ; i > 0 ; i -- )"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12,
        6
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "for ( i = n ; i > 0 ; i -- )",
        "bool check ( int k , int n_problems ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12,
        6,
        7
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "for ( i = n ; i > 0 ; i -- )",
        "bool check ( int k , int n_problems ) ;",
        "int t = n_problems ( n_problems ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12,
        6,
        11
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "for ( i = n ; i > 0 ; i -- )",
        "bool check ( int k , int n_problems ) ;",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12,
        6,
        20
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "for ( i = n ; i > 0 ; i -- )",
        "bool check ( int k , int n_problems ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12,
        7
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "for ( i = n ; i > 0 ; i -- )",
        "int t = n_problems ( n_problems ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12,
        7,
        11
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "for ( i = n ; i > 0 ; i -- )",
        "int t = n_problems ( n_problems ) ;",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12,
        7,
        20
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "for ( i = n ; i > 0 ; i -- )",
        "int t = n_problems ( n_problems ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12,
        11
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "for ( i = n ; i > 0 ; i -- )",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12,
        11,
        20
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "for ( i = n ; i > 0 ; i -- )",
        "int res ( int n , int k ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12,
        20
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "for ( i = n ; i > 0 ; i -- )",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "bool check ( int k , int n_problems ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "bool check ( int k , int n_problems ) ;",
        "int t = n_problems ( n_problems ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        11
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "bool check ( int k , int n_problems ) ;",
        "int t = n_problems ( n_problems ) ;",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        20
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "bool check ( int k , int n_problems ) ;",
        "int t = n_problems ( n_problems ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        11
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "bool check ( int k , int n_problems ) ;",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        11,
        20
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "bool check ( int k , int n_problems ) ;",
        "int res ( int n , int k ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        6,
        20
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "bool check ( int k , int n_problems ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "int t = n_problems ( n_problems ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        11
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "int t = n_problems ( n_problems ) ;",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        11,
        20
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "int t = n_problems ( n_problems ) ;",
        "int res ( int n , int k ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        20
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "int t = n_problems ( n_problems ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        11,
        20
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "int res ( int n , int k ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "int val ( int n ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "bool check ( int k , int n_problems ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        6,
        7
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "bool check ( int k , int n_problems ) ;",
        "int t = n_problems ( n_problems ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        6,
        7,
        11
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "bool check ( int k , int n_problems ) ;",
        "int t = n_problems ( n_problems ) ;",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        6,
        7,
        20
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "bool check ( int k , int n_problems ) ;",
        "int t = n_problems ( n_problems ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        6,
        11
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "bool check ( int k , int n_problems ) ;",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        6,
        11,
        20
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "bool check ( int k , int n_problems ) ;",
        "int res ( int n , int k ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        6,
        20
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "bool check ( int k , int n_problems ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        7
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "int t = n_problems ( n_problems ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘n_problems’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        7,
        11
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "int t = n_problems ( n_problems ) ;",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘n_problems’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        7,
        11,
        20
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "int t = n_problems ( n_problems ) ;",
        "int res ( int n , int k ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "‘n_problems’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        7,
        20
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "int t = n_problems ( n_problems ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "‘n_problems’ cannot be used as a function"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        20
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "int res ( int n , int k ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        20
      ],
      "mod_code": [
        "for ( i = n ; i > 0 ; i -- )",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "bool check ( int k , int n_problems ) ;",
        "int t = n_problems ( n_problems ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        11
      ],
      "mod_code": [
        "bool check ( int k , int n_problems ) ;",
        "int t = n_problems ( n_problems ) ;",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        20
      ],
      "mod_code": [
        "bool check ( int k , int n_problems ) ;",
        "int t = n_problems ( n_problems ) ;",
        "int res ( int n , int k ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        7,
        20
      ],
      "mod_code": [
        "bool check ( int k , int n_problems ) ;",
        "int t = n_problems ( n_problems ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "bool check ( int k , int n_problems ) ;",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        11,
        20
      ],
      "mod_code": [
        "bool check ( int k , int n_problems ) ;",
        "int res ( int n , int k ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "bool check ( int k , int n_problems ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "int t = n_problems ( n_problems ) ;",
        "int res ( int n , int k ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘n_problems’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        11,
        20
      ],
      "mod_code": [
        "int t = n_problems ( n_problems ) ;",
        "int res ( int n , int k ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "‘n_problems’ cannot be used as a function"
    },
    {
      "mod_line": [
        7,
        20
      ],
      "mod_code": [
        "int t = n_problems ( n_problems ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 7,
      "err_msg": "‘n_problems’ cannot be used as a function"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "int res ( int n , int k ) ;",
        "cout << res ( n , k ) , \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}