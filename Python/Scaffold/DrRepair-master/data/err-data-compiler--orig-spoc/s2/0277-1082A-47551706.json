{
  "meta": {
    "index": 277,
    "hitid": "37Y5RYYI0PZD94P13IN3ACGWQ2UXSU",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1082A",
    "subid": "47551706"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int l",
      "code": "int l ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read l",
      "code": "cin >> l ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = l to 0 exclusive by decreasing by 1",
      "code": "for ( int i = l ; i > 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create ints n , x , y , and d",
      "code": "int n , x , y , d ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read n , x , y , and d",
      "code": "cin >> n >> x >> y >> d ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "let ints s = 0 and k = 0",
      "code": "int s = 0 , k = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if x is greater than y",
      "code": "if ( x > y )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if ( x - y ) modulo d is 0",
      "code": "if ( ( x - y ) % d == 0 )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "print ( x - y ) / d",
      "code": "cout << ( x - y ) / d ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else do",
      "code": "else",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if ( y - 1 ) modulo d is 0 , set s to ( ( x - 1 ) / d ) + 1 + ( ( y - 1 ) / d )",
      "code": "if ( ( y - 1 ) % d == 0 ) { s = ( ( x - 1 ) / d ) + 1 + ( ( y - 1 ) / d ) ; }",
      "indent": 4
    },
    {
      "line": 12,
      "text": "if ( n - y ) modulo d is 0 , set k to ( ( n - x ) / d ) + 1 + ( ( n - y ) / d )",
      "code": "if ( ( n - y ) % d == 0 ) { k = ( ( n - x ) / d ) + 1 + ( ( n - y ) / d ) ; }",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if s is equal to 0 and k is equal to 0",
      "code": "if ( s == 0 && k == 0 )",
      "indent": 4
    },
    {
      "line": 14,
      "text": "print - 1",
      "code": "cout << - 1 ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 16,
      "text": "if k is greater than s and s does not equal 0 , print s",
      "code": "if ( k > s && s != 0 ) cout << s ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "if s is greater than k and k is 0 , print s",
      "code": "if ( s > k && k == 0 ) cout << s ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "if k is greater than s and s equals 0 , print k",
      "code": "if ( k > s && s == 0 ) cout << k ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "if s is greater than k and k doesn ' t equal 0 , print k",
      "code": "if ( s > k && k != 0 ) cout << k ;",
      "indent": 5
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 22,
      "text": "else if ( y - x ) modulo d equals 0",
      "code": "else if ( ( y - x ) % d == 0 )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print ( y - x ) / d",
      "code": "cout << ( y - x ) / d ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if ( y - 1 ) modulo d equals 0 , set s to ( ( x - 1 ) / d ) + 1 + ( ( y - 1 ) / d )",
      "code": "if ( ( y - 1 ) % d == 0 ) { s = ( ( x - 1 ) / d ) + 1 + ( ( y - 1 ) / d ) ; }",
      "indent": 3
    },
    {
      "line": 26,
      "text": "if ( n - y ) % d equals 0 , set k to ( ( n - x ) / d ) + 1 + ( ( n - y ) / d )",
      "code": "if ( ( n - y ) % d == 0 ) { k = ( ( n - x ) / d ) + 1 + ( ( n - y ) / d ) ; }",
      "indent": 3
    },
    {
      "line": 27,
      "text": "if s is equal to 0 and k is equal to 0",
      "code": "if ( s == 0 && k == 0 )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "print - 1",
      "code": "cout << - 1 ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "else do",
      "code": "else",
      "indent": 3
    },
    {
      "line": 30,
      "text": "if k is greater than s and s is not 0 , print s",
      "code": "if ( k > s && s != 0 ) cout << s ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "if s greater than k and k is 0 , print s",
      "code": "if ( s > k && k == 0 ) cout << s ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "if k is greater than s and s equals 0 , print k",
      "code": "if ( k > s && s == 0 ) cout << k ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "if s is greater than k and k is not 0 , print k",
      "code": "if ( s > k && k != 0 ) cout << k ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n , x , y , d , d ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int d’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int s = 0 = 0 , k = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else if ( ( y - x ) modulo d == 0 )"
      ],
      "err_line": 22,
      "err_msg": "expected ‘)’ before ‘modulo’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 36,
      "err_msg": "expected ‘while’ before ‘cout’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 35,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}