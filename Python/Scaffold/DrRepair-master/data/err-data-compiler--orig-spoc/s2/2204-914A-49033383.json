{
  "meta": {
    "index": 2204,
    "hitid": "35NNO802AVQJ3W81W06G88JBFQGIN1",
    "workerid": "AIWEXPJAU66D9",
    "probid": "914A",
    "subid": "49033383"
  },
  "lines": [
    {
      "line": 0,
      "text": "create const int maxn = 1010",
      "code": "const int maxn = 1010 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare int n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare int array a with size maxn",
      "code": "int a [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "loop i from 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; ++ i ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort a",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i from n - 1 to 0 inclusive counting down",
      "code": "for ( int i = n - 1 ; i >= 0 ; -- i )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if square root of a [ i ] * square root of a [ i ] ! = a [ i ]",
      "code": "if ( ( ( int ) ( sqrt ( a [ i ] ) ) ) * ( ( int ) ( sqrt ( a [ i ] ) ) ) != a [ i ] )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print a [ i ]",
      "code": "cout << a [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        9,
        1
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "cout << a [ i ] ;",
        "bool n ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        9,
        1,
        6
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "cout << a [ i ] ;",
        "bool n ;",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        9,
        1,
        2
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "cout << a [ i ] ;",
        "bool n ;",
        "char a [ maxn ] ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        9,
        6
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "cout << a [ i ] ;",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        9,
        6,
        2
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "cout << a [ i ] ;",
        "sort ( a , a + 3 ) ;",
        "char a [ maxn ] ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        9,
        2
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "cout << a [ i ] ;",
        "char a [ maxn ] ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "bool n ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        1,
        6
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "bool n ;",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        1,
        6,
        2
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "bool n ;",
        "sort ( a , a + 3 ) ;",
        "char a [ maxn ] ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        1,
        2
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "bool n ;",
        "char a [ maxn ] ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "sort ( a , a + 3 ) ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8,
        6,
        2
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "sort ( a , a + 3 ) ;",
        "char a [ maxn ] ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "if ( sqrt ( a [ i ] . size ( ) * sqrt ( a [ i ] ) != a [ i ] ) )",
        "char a [ maxn ] ;"
      ],
      "err_line": 8,
      "err_msg": "request for member ‘size’ in ‘a[i]’, which is of non-class type ‘char’"
    }
  ]
}