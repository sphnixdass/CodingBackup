{
  "meta": {
    "index": 488,
    "hitid": "3IVEC1GSLPTCK0LI9VTIN2L8P45J1B",
    "workerid": "A1AYVATMT88U1W",
    "probid": "261A",
    "subid": "46688631"
  },
  "lines": [
    {
      "line": 0,
      "text": "mpu = map from long long to long long",
      "code": "map < long long , long long > mpu ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create a vector of long integers vec",
      "code": "vector < long long > vec ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "bool s [ 1000006 ] = { }",
      "code": "bool s [ 1000006 ] = { } ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "long long q [ 1000006 ] = { } , a [ 1000006 ] = { }",
      "code": "long long q [ 1000006 ] = { } , a [ 1000006 ] = { } ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "let n , m be long integers",
      "code": "long long n , m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to m exclusive , read q [ i ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) { cin >> q [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "sort the values q , q + m",
      "code": "sort ( q , q + m ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "sort the values a , a + n",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "let sum be a long integer with sum = 0",
      "code": "long long sum = 0 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "let p be a long integer with p = 0",
      "code": "long long p = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for integer i is equal to n - 1 , i > = 0",
      "code": "for ( int i = n - 1 ; i >= 0 ; )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if p is less than q [ 0 ]",
      "code": "if ( p < q [ 0 ] )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increment p by 1",
      "code": "p ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "increment sum by a [ i ]",
      "code": "sum += a [ i ] ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "decrement i by 1",
      "code": "i -- ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "proceed to next",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "decrement i by 1",
      "code": "i -- ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "if i > = 0 , decrement i by 1",
      "code": "if ( i >= 0 ) i -- ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "p is equal to 0",
      "code": "p = 0 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print sum and newline",
      "code": "cout << sum << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "map < long long to , long long > mpu ;"
      ],
      "err_line": 0,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool s [ l2 ] = { } ;"
      ],
      "err_line": 2,
      "err_msg": "‘l2’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "sort ( q , q + m ) + m ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "sort ( ( a , a + n ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "no matching function for call to ‘sort(long long int*)’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( p [ 0 ] < q [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "next ;"
      ],
      "err_line": 19,
      "err_msg": "‘next’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 25,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        14,
        6,
        15
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "m = getchar ( ) ;",
        "if ( p [ 0 ] < q [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        6,
        15,
        8
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "m = getchar ( ) ;",
        "if ( p [ 0 ] < q [ 0 ] )",
        "sort ( q , q + m ) + m ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        14,
        6,
        15,
        19
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "m = getchar ( ) ;",
        "if ( p [ 0 ] < q [ 0 ] )",
        "next ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "m = getchar ( ) ;",
        "sort ( q , q + m ) + m ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        14,
        6,
        8,
        19
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "m = getchar ( ) ;",
        "sort ( q , q + m ) + m ;",
        "next ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        14,
        6,
        19
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "m = getchar ( ) ;",
        "next ;"
      ],
      "err_line": 19,
      "err_msg": "‘next’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "if ( p [ 0 ] < q [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        15,
        8
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "if ( p [ 0 ] < q [ 0 ] )",
        "sort ( q , q + m ) + m ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        14,
        15,
        8,
        19
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "if ( p [ 0 ] < q [ 0 ] )",
        "sort ( q , q + m ) + m ;",
        "next ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        14,
        15,
        19
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "if ( p [ 0 ] < q [ 0 ] )",
        "next ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "sort ( q , q + m ) + m ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        14,
        8,
        19
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "sort ( q , q + m ) + m ;",
        "next ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; i -- )",
        "next ;"
      ],
      "err_line": 19,
      "err_msg": "‘next’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        15
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "if ( p [ 0 ] < q [ 0 ] )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        15,
        14
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "if ( p [ 0 ] < q [ 0 ] )",
        "for ( int i = n - 1 ; i >= 0 ; -- i )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        15,
        14,
        8
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "if ( p [ 0 ] < q [ 0 ] )",
        "for ( int i = n - 1 ; i >= 0 ; -- i )",
        "sort ( q , q + m ) + m ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        15,
        14,
        19
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "if ( p [ 0 ] < q [ 0 ] )",
        "for ( int i = n - 1 ; i >= 0 ; -- i )",
        "next ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        15,
        8
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "if ( p [ 0 ] < q [ 0 ] )",
        "sort ( q , q + m ) + m ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        15,
        8,
        19
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "if ( p [ 0 ] < q [ 0 ] )",
        "sort ( q , q + m ) + m ;",
        "next ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        15,
        19
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "if ( p [ 0 ] < q [ 0 ] )",
        "next ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        14,
        8
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "for ( int i = n - 1 ; i >= 0 ; -- i )",
        "sort ( q , q + m ) + m ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        14,
        8,
        19
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "for ( int i = n - 1 ; i >= 0 ; -- i )",
        "sort ( q , q + m ) + m ;",
        "next ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        14,
        19
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "for ( int i = n - 1 ; i >= 0 ; -- i )",
        "next ;"
      ],
      "err_line": 19,
      "err_msg": "‘next’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "sort ( q , q + m ) + m ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        8,
        19
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "sort ( q , q + m ) + m ;",
        "next ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "next ;"
      ],
      "err_line": 19,
      "err_msg": "‘next’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "if ( p [ 0 ] < q [ 0 ] )",
        "for ( int i = n - 1 ; i >= 0 ; -- i )"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        14,
        8
      ],
      "mod_code": [
        "if ( p [ 0 ] < q [ 0 ] )",
        "for ( int i = n - 1 ; i >= 0 ; -- i )",
        "sort ( q , q + m ) + m ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        14,
        8,
        19
      ],
      "mod_code": [
        "if ( p [ 0 ] < q [ 0 ] )",
        "for ( int i = n - 1 ; i >= 0 ; -- i )",
        "sort ( q , q + m ) + m ;",
        "next ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        14,
        19
      ],
      "mod_code": [
        "if ( p [ 0 ] < q [ 0 ] )",
        "for ( int i = n - 1 ; i >= 0 ; -- i )",
        "next ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "if ( p [ 0 ] < q [ 0 ] )",
        "sort ( q , q + m ) + m ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        8,
        19
      ],
      "mod_code": [
        "if ( p [ 0 ] < q [ 0 ] )",
        "sort ( q , q + m ) + m ;",
        "next ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        19
      ],
      "mod_code": [
        "if ( p [ 0 ] < q [ 0 ] )",
        "next ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘long long int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; -- i )",
        "sort ( q , q + m ) + m ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        14,
        8,
        19
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; -- i )",
        "sort ( q , q + m ) + m ;",
        "next ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "for ( int i = n - 1 ; i >= 0 ; -- i )",
        "next ;"
      ],
      "err_line": 19,
      "err_msg": "‘next’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "sort ( q , q + m ) + m ;",
        "next ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘void’ and ‘long long int’ to binary ‘operator+’"
    }
  ]
}