{
  "meta": {
    "index": 59,
    "hitid": "3DFYDSXB2WUSTXCGBJ32Y4Q501ZJU7",
    "workerid": "AIWEXPJAU66D9",
    "probid": "412A",
    "subid": "45247882"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if k is greater than n / 2",
      "code": "if ( k > n / 2 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = k to n exclusive , print \" RIGHT \\ n \"",
      "code": "for ( int i = k ; i < n ; i ++ ) cout << \" RIGHT\\n \" ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print \" PRINT \" , s [ n - 1 ] and a new line",
      "code": "cout << \" PRINT \" << s [ n - 1 ] << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i from n - 2 to 0 inclusive counting down",
      "code": "for ( int i = n - 2 ; i >= 0 ; i -- )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print \" LEFT \\ n \"",
      "code": "cout << \" LEFT\\n \" ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "print \" PRINT \" , s [ i ] and a new line",
      "code": "cout << \" PRINT \" << s [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i from 1 to k exclusive , print \" LEFT \\ n \"",
      "code": "for ( int i = 1 ; i < k ; i ++ ) cout << \" LEFT\\n \" ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print \" PRINT \" , s [ 0 ] and a new line",
      "code": "cout << \" PRINT \" << s [ 0 ] << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "for integer i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print \" RIGHT \\ n \"",
      "code": "cout << \" RIGHT\\n \" ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "print \" PRINT \" , s [ i ] and a new line",
      "code": "cout << \" PRINT \" << s [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "n , k ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> k )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << \" PRINT \" , s [ n - 1 ] << endl ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << \" PRINT \" , s [ i ] << endl ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << \" PRINT \" , s [ 0 ] << endl ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "cout << \" PRINT \" , s [ i ] << endl ;"
      ],
      "err_line": 17,
      "err_msg": "invalid operands of types ‘char’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    }
  ]
}