{
  "meta": {
    "index": 2030,
    "hitid": "3YLTXLH3DF0JAM9U6X1NCLNRFS5PHE",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "818A",
    "subid": "46283970"
  },
  "lines": [
    {
      "line": 0,
      "text": "let INF be a const int = 0x3f3f3f3f",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a be a long long array of length 200005",
      "code": "long long a [ 200000 + 5 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let i , j , k , l , r , co be a long long = 0",
      "code": "long long i , j , k , l , r , co = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let n , m , t be a long long",
      "code": "long long n , m , t ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set m = ( n + 1 ) / 2",
      "code": "m = ( n + 1 ) / 2 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "decrement n by m",
      "code": "n -= m ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if n < k",
      "code": "if ( n < k )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print 0 and space and 0 and space and n + m",
      "code": "cout << 0 << ' ' << 0 << ' ' << n + m << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "increment m by n % k",
      "code": "m += n % k ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "decrement n by n % k",
      "code": "n -= n % k ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print n / k and space and n / k * ( k - 1 ) and space and m",
      "code": "cout << n / k << ' ' << n / k * ( k - 1 ) << ' ' << m << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int m = ( n + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "cout << 0 << \" \" << n + m << \" \" << n + m << endl ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        14
      ],
      "mod_code": [
        "cout << 0 << \" \" << n + m << \" \" << n + m << endl ;",
        "n",
        "cout << n / k << \" \" << n / k * ( k - k ) << \" \" << m << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        6
      ],
      "mod_code": [
        "cout << 0 << \" \" << n + m << \" \" << n + m << endl ;",
        "n",
        "cout << n / k << \" \" << n / k * ( k - k ) << \" \" << m << endl ;",
        "int m = ( n + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        10,
        11,
        6
      ],
      "mod_code": [
        "cout << 0 << \" \" << n + m << \" \" << n + m << endl ;",
        "n",
        "int m = ( n + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        10,
        14,
        6
      ],
      "mod_code": [
        "cout << 0 << \" \" << n + m << \" \" << n + m << endl ;",
        "cout << n / k << \" \" << n / k * ( k - k ) << \" \" << m << endl ;",
        "int m = ( n + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "cout << 0 << \" \" << n + m << \" \" << n + m << endl ;",
        "int m = ( n + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "n",
        "cout << n / k << \" \" << n / k * ( k - k ) << \" \" << m << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        14,
        6
      ],
      "mod_code": [
        "n",
        "cout << n / k << \" \" << n / k * ( k - k ) << \" \" << m << endl ;",
        "int m = ( n + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        11,
        14,
        6,
        10
      ],
      "mod_code": [
        "n",
        "cout << n / k << \" \" << n / k * ( k - k ) << \" \" << m << endl ;",
        "int m = ( n + 1 ) / 2 ;",
        "cout << 0 << \" \" << n + m << ' ' << n + m << endl ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        11,
        14,
        10
      ],
      "mod_code": [
        "n",
        "cout << n / k << \" \" << n / k * ( k - k ) << \" \" << m << endl ;",
        "cout << 0 << \" \" << n + m << ' ' << n + m << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "n",
        "int m = ( n + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        11,
        6,
        10
      ],
      "mod_code": [
        "n",
        "int m = ( n + 1 ) / 2 ;",
        "cout << 0 << \" \" << n + m << ' ' << n + m << endl ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "n",
        "cout << 0 << \" \" << n + m << ' ' << n + m << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        6
      ],
      "mod_code": [
        "cout << n / k << \" \" << n / k * ( k - k ) << \" \" << m << endl ;",
        "int m = ( n + 1 ) / 2 ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        14,
        6,
        10
      ],
      "mod_code": [
        "cout << n / k << \" \" << n / k * ( k - k ) << \" \" << m << endl ;",
        "int m = ( n + 1 ) / 2 ;",
        "cout << 0 << \" \" << n + m << ' ' << n + m << endl ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int m’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "int m = ( n + 1 ) / 2 ;",
        "cout << 0 << \" \" << n + m << ' ' << n + m << endl ;"
      ],
      "err_line": 6,
      "err_msg": "conflicting declaration ‘int m’"
    }
  ]
}