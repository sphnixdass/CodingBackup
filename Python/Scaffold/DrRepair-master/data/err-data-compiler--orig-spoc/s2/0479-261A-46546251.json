{
  "meta": {
    "index": 479,
    "hitid": "36GJS3V78VK9OFBLREELUPPERTOGJ8",
    "workerid": "A1APYLD4DUK33J",
    "probid": "261A",
    "subid": "46546251"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant long long integer MAXN = 1e5 + 10",
      "code": "const long long int MAXN = 1e5 + 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare constant long long integer MINN = 1e5 + 10",
      "code": "const long long int MINN = 1e5 + 10 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare constant long long integer inf = 1e9 + 7",
      "code": "const long long int inf = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare integers m , n , c = 0 , integer arrays a size MAXN , b size MAXN",
      "code": "int m , a [ MAXN ] , n , b [ MAXN ] , c = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to m inclusive , read a [ i ]",
      "code": "for ( int i = 1 ; i <= ( m ) ; ++ i ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to n inclusive , read b [ i ]",
      "code": "for ( int i = 1 ; i <= ( n ) ; ++ i ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "sort from a + 1 to a + m + 1",
      "code": "sort ( a + 1 , a + m + 1 ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "sort from b + 1 to b + n + 1",
      "code": "sort ( b + 1 , b + n + 1 ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare integer it = n",
      "code": "int it = n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "while it is greater than 0",
      "code": "while ( it > 0 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to a [ i ] exclusive",
      "code": "for ( int i = 0 ; i < ( a [ 1 ] ) ; ++ i )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "increment c by b [ it ]",
      "code": "c += b [ it ] ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "decrement it",
      "code": "-- it ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if not it",
      "code": "if ( ! it )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "print c and newline",
      "code": "cout << c << endl ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "exit program with code 0",
      "code": "exit ( 0 ) ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "for i = 0 to 2 exclusive",
      "code": "for ( int i = 0 ; i < ( 2 ) ; ++ i )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "decrement it",
      "code": "-- it ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if not it",
      "code": "if ( ! it )",
      "indent": 3
    },
    {
      "line": 24,
      "text": "print c and newline",
      "code": "cout << c << endl ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "exit program with code 0",
      "code": "exit ( 0 ) ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int m , a [ MAXN ] , b [ MAXN ] , c = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "sort ( b + 1 + b + n + 1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [100010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int * it = n ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "exit ( l ) ;"
      ],
      "err_line": 18,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( i = 0 ; i < 2 ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "exit ( l ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        23,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a [ i ] ; i ++ )",
        "n = getchar ( ) ;",
        "if ( it )",
        "exit ( l ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a [ i ] ; i ++ )",
        "n = getchar ( ) ;",
        "exit ( l ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        25,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a [ i ] ; i ++ )",
        "n = getchar ( ) ;",
        "exit ( l ) ;",
        "if ( it )"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        7,
        25,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a [ i ] ; i ++ )",
        "n = getchar ( ) ;",
        "exit ( l ) ;",
        "sort ( a + 1 , a + m + m ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a [ i ] ; i ++ )",
        "if ( it )",
        "exit ( l ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a [ i ] ; i ++ )",
        "if ( it )",
        "exit ( l ) ;",
        "if ( it )"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        23,
        25,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a [ i ] ; i ++ )",
        "if ( it )",
        "exit ( l ) ;",
        "sort ( a + 1 , a + m + m ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a [ i ] ; i ++ )",
        "exit ( l ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a [ i ] ; i ++ )",
        "exit ( l ) ;",
        "if ( it )"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        16,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a [ i ] ; i ++ )",
        "exit ( l ) ;",
        "if ( it )",
        "sort ( a + 1 , a + m + m ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        25,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a [ i ] ; i ++ )",
        "exit ( l ) ;",
        "sort ( a + 1 , a + m + m ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        23,
        25
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( it )",
        "exit ( l ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        23,
        25,
        16
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( it )",
        "exit ( l ) ;",
        "if ( it )"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        23,
        25,
        9
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( it )",
        "exit ( l ) ;",
        "sort ( a + 1 , a + m + m ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        25
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "exit ( l ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        25,
        16
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "exit ( l ) ;",
        "if ( it )"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        25,
        16,
        9
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "exit ( l ) ;",
        "if ( it )",
        "sort ( a + 1 , a + m + m ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        25,
        9
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "exit ( l ) ;",
        "sort ( a + 1 , a + m + m ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25
      ],
      "mod_code": [
        "if ( it )",
        "exit ( l ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        16
      ],
      "mod_code": [
        "if ( it )",
        "exit ( l ) ;",
        "if ( it )"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        16,
        9
      ],
      "mod_code": [
        "if ( it )",
        "exit ( l ) ;",
        "if ( it )",
        "sort ( a + 1 , a + m + m ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        9
      ],
      "mod_code": [
        "if ( it )",
        "exit ( l ) ;",
        "sort ( a + 1 , a + m + m ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        16
      ],
      "mod_code": [
        "exit ( l ) ;",
        "if ( it )"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        16,
        9
      ],
      "mod_code": [
        "exit ( l ) ;",
        "if ( it )",
        "sort ( a + 1 , a + m + m ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        9
      ],
      "mod_code": [
        "exit ( l ) ;",
        "sort ( a + 1 , a + m + m ) ;"
      ],
      "err_line": 25,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}