{
  "meta": {
    "index": 574,
    "hitid": "3EHIMLB7F7TY4UADKGZCQZS1QI18H9",
    "workerid": "AIWEXPJAU66D9",
    "probid": "475A",
    "subid": "41201228"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare long long variable k",
      "code": "long long k ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string array s with 8 elements",
      "code": "string s [ 8 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "set s [ 1 ] to \" + - - - - - - - - - - - - - - - - - - - - - - - - + \"",
      "code": "s [ 1 ] = \" +------------------------+ \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set s [ 2 ] to \" | # . # . # . # . # . # . # . # . # . # . # . | D | ) \"",
      "code": "s [ 2 ] = \" |#.#.#.#.#.#.#.#.#.#.#.|D|) \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set s [ 3 ] to \" | # . # . # . # . # . # . # . # . # . # . # . | . | \"",
      "code": "s [ 3 ] = \" |#.#.#.#.#.#.#.#.#.#.#.|.| \" ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set s [ 4 ] to \" | # . . . . . . . . . . . . . . . . . . . . . . . | \"",
      "code": "s [ 4 ] = \" |#.......................| \" ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set s [ 5 ] to \" | # . # . # . # . # . # . # . # . # . # . # . | . | ) \"",
      "code": "s [ 5 ] = \" |#.#.#.#.#.#.#.#.#.#.#.|.|) \" ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "change s [ 6 ] to \" + - - - - - - - - - - - - - - - - - - - - - - - - + \"",
      "code": "s [ 6 ] = \" +------------------------+ \" ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "loop j from 1 to 25 inclusive",
      "code": "for ( long long j = 1 ; j <= 25 ; j ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "loop i from 2 to 5 inclusive",
      "code": "for ( long long i = 2 ; i <= 5 ; i ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "break if k = 0",
      "code": "if ( k == 0 ) break ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if s [ i ] [ j ] is ' # ' , change s [ i ] [ j ] to ' O ' and decrement k by one",
      "code": "if ( s [ i ] [ j ] == ' # ' ) s [ i ] [ j ] = ' O ' , k -- ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "break if k = 0",
      "code": "if ( k == 0 ) break ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i from 1 to 6 inclusive , print s [ i ] and \" \\ n \"",
      "code": "for ( long long i = 1 ; i <= 6 ; i ++ ) cout << s [ i ] << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s [ 8 ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘const char*’ to ‘char’ [-fpermissive]"
    }
  ]
}