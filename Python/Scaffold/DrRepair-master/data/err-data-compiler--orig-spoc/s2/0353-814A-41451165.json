{
  "meta": {
    "index": 353,
    "hitid": "3D4BBDG7ZHQLMPTRM7QFORNAX463C5",
    "workerid": "A1APYLD4DUK33J",
    "probid": "814A",
    "subid": "41451165"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n ,",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer arrays arr , arr2 , arr3 , arr4 , with arr size n , arr2 size k , arr3 size k , arr4 size n",
      "code": "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read arr [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to k exclusive",
      "code": "for ( int j = 0 ; j < k ; j ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read arr2 [ j ]",
      "code": "cin >> arr2 [ j ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set arr3 [ j ] to arr2 [ j ]",
      "code": "arr3 [ j ] = arr2 [ j ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "sort elements from arr3 to arr3 + k",
      "code": "sort ( arr3 , arr3 + k ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if k is greater than 1 and arr3 [ 0 ] is not arr3 [ k - 1 ]",
      "code": "if ( k > 1 && arr3 [ 0 ] != arr3 [ k - 1 ] )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" Yes \" print newline",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if arr [ i ] is 0",
      "code": "if ( arr [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set arr [ i ] to arr2 [ 0 ]",
      "code": "arr [ i ] = arr2 [ 0 ] ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set arr4 [ i ] to arr [ i ]",
      "code": "arr4 [ i ] = arr [ i ] ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set arr4 [ i ] to arr [ i ]",
      "code": "arr4 [ i ] = arr [ i ] ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "sort elements from arr4 to arr4 + n",
      "code": "sort ( arr4 , arr4 + n ) ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if arr [ i ] is not arr4 [ i ]",
      "code": "if ( arr [ i ] != arr4 [ i ] )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "print \" Yes \" print newline",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print \" No \" print newline",
      "code": "cout << \" No \" << endl ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> k )"
      ],
      "err_line": 4,
      "err_msg": "‘arr’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < k ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cin >> arr2 . at ( j ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘at’ in ‘arr2’, which is of non-class type ‘int [k]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "int arr [ i ] = arr2 [ 0 ] ;"
      ],
      "err_line": 16,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "sort ( arr4 + arr4 , arr4 + n ) ;"
      ],
      "err_line": 21,
      "err_msg": "invalid operands of types ‘int [n]’ and ‘int [n]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "sort ( arr3 + arr3 + k ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        9,
        16
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ i ] = arr2 [ 0 ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        9,
        16,
        14
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        9,
        16,
        7
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        9,
        14
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "sort ( arr3 + arr3 + k ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        9,
        14,
        7
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "sort ( arr3 + arr3 + k ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        9,
        7
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "sort ( arr3 + arr3 + k ) ;",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "int arr [ i ] = arr2 [ 0 ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        16,
        14
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        16,
        14,
        7
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        16,
        7
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        14,
        7
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ n ] , arr4 [ n ] ;",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        9,
        3,
        16
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "int arr [ i ] = arr2 [ 0 ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        9,
        3,
        16,
        14
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        9,
        3,
        16,
        7
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        9,
        3,
        14
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        9,
        3,
        14,
        7
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        9,
        3,
        7
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ i ] = arr2 [ 0 ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        9,
        16,
        14
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        9,
        16,
        14,
        7
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        16,
        7
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "invalid operands of types ‘int [k]’ and ‘int [k]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        9,
        14,
        7
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "sort ( arr3 + arr3 + k ) ;",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "int arr [ i ] = arr2 [ 0 ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        16,
        14
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        16,
        14,
        7
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        16,
        7
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "int arr [ i ] = arr2 [ 0 ] ;",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        14,
        7
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int arr [ n ] , arr2 [ k ] , arr3 [ k ] , arr4 [ k ] , arr4 [ n ] ;",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘int arr4 [n]’"
    },
    {
      "mod_line": [
        16,
        14
      ],
      "mod_code": [
        "int arr [ i ] = arr2 [ 0 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16,
        14,
        7
      ],
      "mod_code": [
        "int arr [ i ] = arr2 [ 0 ] ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        16,
        7
      ],
      "mod_code": [
        "int arr [ i ] = arr2 [ 0 ] ;",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "arr3 [ j ] [ j ] = arr2 [ j ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}