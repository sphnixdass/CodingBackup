{
  "meta": {
    "index": 933,
    "hitid": "39AYGO6AFFE3ACD0UZXRB5T66ZO6NY",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "146A",
    "subid": "41825099"
  },
  "lines": [
    {
      "line": 0,
      "text": "create int n , cont , cont2 , set cont and cont2 to 0",
      "code": "int n , cont = 0 , cont2 = 0 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string s",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "set check to true",
      "code": "bool check = true ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n and s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to size of s / 2 exclusive",
      "code": "for ( unsigned int i = 0 ; i < s . size ( ) / 2 ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s [ i ] = 4 or s [ i ] = 7",
      "code": "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set cont to cont + s [ i ] - 48",
      "code": "cont += ( ( ( int ) s [ i ] ) - 48 ) ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "assign false to check",
      "code": "check = false ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = size of s / 2 to size of s",
      "code": "for ( unsigned int i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if s [ i ] = 4 or 7",
      "code": "if ( s [ i ] == ' 4 ' || s [ i ] == ' 7 ' )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set cont2 to cont2 + s [ i ] - 48",
      "code": "cont2 += ( ( ( int ) s [ i ] ) - 48 ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "check = false",
      "code": "check = false ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if cont = cont2 and check = true",
      "code": "if ( cont == cont2 && check == true )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print YES and a newline",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print NO and a newline",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "check = true ;"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) / 2 ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( cont == cont2 && check = true )"
      ],
      "err_line": 19,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "check = true ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        3,
        1
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "check = true ;",
        "string S ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        3,
        1,
        12
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "check = true ;",
        "string S ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        3,
        1,
        8
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "check = true ;",
        "string S ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        3,
        1,
        21
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "check = true ;",
        "string S ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        3,
        12
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "check = true ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        3,
        12,
        8
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "check = true ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        3,
        12,
        21
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "check = true ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        3,
        8
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "check = true ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        3,
        8,
        21
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "check = true ;",
        "n",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        3,
        21
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "check = true ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "string S ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        1,
        12
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "string S ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        1,
        12,
        8
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "string S ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        1,
        12,
        21
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "string S ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        1,
        8
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "string S ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        21
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "string S ;",
        "n",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        1,
        21
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "string S ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        12,
        8
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        12,
        8,
        21
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        12,
        21
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        8,
        21
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "n",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "int n , cont = 0 , cont2 = 0 , cont2 = 0 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int cont2’"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "check = true ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        12
      ],
      "mod_code": [
        "check = true ;",
        "string S ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        12,
        8
      ],
      "mod_code": [
        "check = true ;",
        "string S ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        12,
        21
      ],
      "mod_code": [
        "check = true ;",
        "string S ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        8
      ],
      "mod_code": [
        "check = true ;",
        "string S ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        8,
        21
      ],
      "mod_code": [
        "check = true ;",
        "string S ;",
        "n",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        1,
        21
      ],
      "mod_code": [
        "check = true ;",
        "string S ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "check = true ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        8
      ],
      "mod_code": [
        "check = true ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        8,
        21
      ],
      "mod_code": [
        "check = true ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        21
      ],
      "mod_code": [
        "check = true ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "check = true ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        21
      ],
      "mod_code": [
        "check = true ;",
        "n",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "check = true ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘check’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "string S ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        8
      ],
      "mod_code": [
        "string S ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        8,
        21
      ],
      "mod_code": [
        "string S ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        21
      ],
      "mod_code": [
        "string S ;",
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "string S ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        21
      ],
      "mod_code": [
        "string S ;",
        "n",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        21
      ],
      "mod_code": [
        "string S ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        8,
        21
      ],
      "mod_code": [
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        21
      ],
      "mod_code": [
        "for ( i = s . size ( ) / 2 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        21
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}