{
  "meta": {
    "index": 842,
    "hitid": "32TMVRKDGNS4SIMI59FTWAJXLDI48M",
    "workerid": "A1APYLD4DUK33J",
    "probid": "267A",
    "subid": "43641245"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare hasil with integers x , y as arguments , returning integer",
      "code": "int hasil ( int x , int y )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer ret = 0",
      "code": "int ret = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while x is greater than 0 and y is greater than 0",
      "code": "while ( x > 0 && y > 0 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if x is less than y",
      "code": "if ( x < y )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "if y % x is 0",
      "code": "if ( y % x == 0 )",
      "indent": 3
    },
    {
      "line": 5,
      "text": "increment ret by y / x",
      "code": "ret += ( y / x ) ;",
      "indent": 4
    },
    {
      "line": 6,
      "text": "decrement ret",
      "code": "ret -- ;",
      "indent": 4
    },
    {
      "line": 7,
      "text": "let y be x",
      "code": "y = x ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment ret by y / x",
      "code": "ret += ( y / x ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "let y be y % x",
      "code": "y = y % x ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if x is greater than y",
      "code": "else if ( x > y )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if x % y is 0",
      "code": "if ( x % y == 0 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "increment ret by x / y",
      "code": "ret += ( x / y ) ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "decrement ret",
      "code": "ret -- ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "let x be y",
      "code": "x = y ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 18,
      "text": "increment ret by x / y",
      "code": "ret += ( x / y ) ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "let x be x % y",
      "code": "x = x % y ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "increment ret",
      "code": "ret ++ ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "end loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "return ret from function",
      "code": "return ret ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 29,
      "text": "declare tc as integer",
      "code": "int tc ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "read tc",
      "code": "cin >> tc ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "while decrement tc is true",
      "code": "while ( tc -- )",
      "indent": 1
    },
    {
      "line": 32,
      "text": "declare integers n , m",
      "code": "int n , m ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "print result of run hasil with n , m as arguments , newline",
      "code": "cout << hasil ( n , m ) << endl ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 21,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "end ;"
      ],
      "err_line": 23,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "int l , m ;"
      ],
      "err_line": 33,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        0
      ],
      "mod_code": [
        "int l , m ;",
        "int hasil ( int x , int y ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        0,
        16
      ],
      "mod_code": [
        "int l , m ;",
        "int hasil ( int x , int y ) ;",
        "int x = y ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        0,
        16,
        17
      ],
      "mod_code": [
        "int l , m ;",
        "int hasil ( int x , int y ) ;",
        "int x = y ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        0,
        16,
        33
      ],
      "mod_code": [
        "int l , m ;",
        "int hasil ( int x , int y ) ;",
        "int x = y ;",
        "cin >> n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        0,
        16,
        8
      ],
      "mod_code": [
        "int l , m ;",
        "int hasil ( int x , int y ) ;",
        "int x = y ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        0,
        17
      ],
      "mod_code": [
        "int l , m ;",
        "int hasil ( int x , int y ) ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        0,
        17,
        33
      ],
      "mod_code": [
        "int l , m ;",
        "int hasil ( int x , int y ) ;",
        "n",
        "cin >> n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        0,
        17,
        8
      ],
      "mod_code": [
        "int l , m ;",
        "int hasil ( int x , int y ) ;",
        "n",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        0,
        33
      ],
      "mod_code": [
        "int l , m ;",
        "int hasil ( int x , int y ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        0,
        33,
        8
      ],
      "mod_code": [
        "int l , m ;",
        "int hasil ( int x , int y ) ;",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        0,
        8
      ],
      "mod_code": [
        "int l , m ;",
        "int hasil ( int x , int y ) ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        32,
        16
      ],
      "mod_code": [
        "int l , m ;",
        "int x = y ;"
      ],
      "err_line": 33,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        16,
        17
      ],
      "mod_code": [
        "int l , m ;",
        "int x = y ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        16,
        17,
        33
      ],
      "mod_code": [
        "int l , m ;",
        "int x = y ;",
        "n",
        "cin >> n , m ;"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        16,
        17,
        8
      ],
      "mod_code": [
        "int l , m ;",
        "int x = y ;",
        "n",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        16,
        33
      ],
      "mod_code": [
        "int l , m ;",
        "int x = y ;",
        "cin >> n , m ;"
      ],
      "err_line": 33,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        16,
        33,
        8
      ],
      "mod_code": [
        "int l , m ;",
        "int x = y ;",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        16,
        8
      ],
      "mod_code": [
        "int l , m ;",
        "int x = y ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        17
      ],
      "mod_code": [
        "int l , m ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        17,
        33
      ],
      "mod_code": [
        "int l , m ;",
        "n",
        "cin >> n , m ;"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        17,
        33,
        8
      ],
      "mod_code": [
        "int l , m ;",
        "n",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        17,
        8
      ],
      "mod_code": [
        "int l , m ;",
        "n",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        33
      ],
      "mod_code": [
        "int l , m ;",
        "cin >> n , m ;"
      ],
      "err_line": 33,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        33,
        8
      ],
      "mod_code": [
        "int l , m ;",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        32,
        8
      ],
      "mod_code": [
        "int l , m ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "int x = y ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        17
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "int x = y ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        17,
        33
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "int x = y ;",
        "n",
        "cin >> n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        17,
        8
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "int x = y ;",
        "n",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        33
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "int x = y ;",
        "cin >> n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        33,
        8
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "int x = y ;",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        16,
        8
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "int x = y ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        17,
        33
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "n",
        "cin >> n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        17,
        33,
        8
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "n",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        17,
        8
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "n",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        33
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "cin >> n , m ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        33,
        8
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int hasil ( int x , int y ) ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "int x = y ;",
        "n"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        33
      ],
      "mod_code": [
        "int x = y ;",
        "n",
        "cin >> n , m ;"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        33,
        8
      ],
      "mod_code": [
        "int x = y ;",
        "n",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        8
      ],
      "mod_code": [
        "int x = y ;",
        "n",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        33,
        8
      ],
      "mod_code": [
        "int x = y ;",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "int x = y ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        33
      ],
      "mod_code": [
        "n",
        "cin >> n , m ;"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        33,
        8
      ],
      "mod_code": [
        "n",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        8
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        8
      ],
      "mod_code": [
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}