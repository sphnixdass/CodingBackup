{
  "meta": {
    "index": 2056,
    "hitid": "3OQQD2WO8I0CZSFREHM1ZUL5A9S3I9",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "716A",
    "subid": "49075024"
  },
  "lines": [
    {
      "line": 0,
      "text": "let int array arr of size 100010",
      "code": "int arr [ 100010 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create ints n , c , and hitung = 0",
      "code": "int n , c , hitung = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and c",
      "code": "cin >> n >> c ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n , read arr [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> arr [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = n to 2",
      "code": "for ( int i = n ; i >= 2 ; i -- )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if arr [ i ] - arr [ i - 1 ] is less than or equal to c",
      "code": "if ( arr [ i ] - arr [ i - 1 ] <= c )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment hitung",
      "code": "hitung ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print hitung + 1",
      "code": "cout << hitung + 1 << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print hitung + 1",
      "code": "cout << hitung + 1 << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "else do",
        "cout << hitung + 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        9
      ],
      "mod_code": [
        "else do",
        "cout << hitung + 1 ;",
        "cout << hitung + 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        9,
        5
      ],
      "mod_code": [
        "else do",
        "cout << hitung + 1 ;",
        "cout << hitung + 1 ;",
        "for ( int i = n ; i >= 3 ; i -- )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        13,
        5
      ],
      "mod_code": [
        "else do",
        "cout << hitung + 1 ;",
        "for ( int i = n ; i >= 3 ; i -- )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "else do",
        "cout << hitung + 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        9,
        5
      ],
      "mod_code": [
        "else do",
        "cout << hitung + 1 ;",
        "for ( int i = n ; i >= 3 ; i -- )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "else do",
        "for ( int i = n ; i >= 3 ; i -- )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}