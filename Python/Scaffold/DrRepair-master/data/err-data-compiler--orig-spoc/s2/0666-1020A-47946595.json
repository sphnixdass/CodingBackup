{
  "meta": {
    "index": 666,
    "hitid": "32L724R85LEJ6HKECFJ8CXO6F5JPI6",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "1020A",
    "subid": "47946595"
  },
  "lines": [
    {
      "line": 0,
      "text": "MAXN = constant long long integer = 200100 , md = constant long long integer of size 998244353",
      "code": "const long long MAXN = 200100 , md = 998244353 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n , h , a , b , k , ta , fa , tb , fb = long longs",
      "code": "long long n , h , a , b , k , ta , fa , tb , fb ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , h , a , b , k",
      "code": "cin >> n >> h >> a >> b >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "while looping decrease k by 1",
      "code": "while ( k -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read ta , fa , tb , fb",
      "code": "cin >> ta >> fa >> tb >> fb ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "ans = long long = the absolute value of the result of ta - tb",
      "code": "long long ans = abs ( ta - tb ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if ans is not zero",
      "code": "if ( ans != 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if fa > b or fa < a",
      "code": "if ( fa > b || fa < a )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "ans = ans + the lower value between the absolute value of the result of fa - a + the absolute value of the result of fb - a , and the absolute value of the result of fa - b + the absolute value of the result of fb - b",
      "code": "ans += min ( abs ( fa - a ) + abs ( fb - a ) , abs ( fa - b ) + abs ( fb - b ) ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "else if fb > b or fb < a",
      "code": "else if ( fb > b || fb < a )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "ans = ans + the lower value between the absolute value of the result of fb - b + the absolute value of the result of fa - b , and the absolute value of the result of fb - a + the absolute value of the result of fa - a",
      "code": "ans += min ( abs ( fb - b ) + abs ( fa - b ) , abs ( fb - a ) + abs ( fa - a ) ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "ans = ans + the absolute value of the result of fa - fb",
      "code": "ans += abs ( fa - fb ) ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "ans = ans + the absolute value of the result of fa - fb",
      "code": "ans += abs ( fa - fb ) ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print ans",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md [ 998244353 ] ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        11
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        4
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "while ( -- k )"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        3
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "cin >> n >> h >> a >> b , k ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        4
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "while ( -- k )"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        4,
        3
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "while ( -- k )",
        "cin >> n >> h >> a >> b , k ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9,
        3
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "cin >> n >> h >> a >> b , k ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        11,
        4
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "while ( -- k )"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        11,
        4,
        3
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "while ( -- k )",
        "cin >> n >> h >> a >> b , k ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        11,
        4,
        9
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "while ( -- k )",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        11,
        3
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "cin >> n >> h >> a >> b , k ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        11,
        3,
        9
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "cin >> n >> h >> a >> b , k ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        11,
        9
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "while ( -- k )"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        4,
        3
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "while ( -- k )",
        "cin >> n >> h >> a >> b , k ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        4,
        3,
        9
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "while ( -- k )",
        "cin >> n >> h >> a >> b , k ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        4,
        9
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "while ( -- k )",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "cin >> n >> h >> a >> b , k ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        3,
        9
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "cin >> n >> h >> a >> b , k ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "const long long int MAXN = 200100 , md ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘md’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        9,
        11,
        4
      ],
      "mod_code": [
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "while ( -- k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        9,
        11,
        4,
        3
      ],
      "mod_code": [
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "while ( -- k )",
        "cin >> n >> h >> a >> b , k ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        9,
        11,
        3
      ],
      "mod_code": [
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "cin >> n >> h >> a >> b , k ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "while ( -- k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        9,
        4,
        3
      ],
      "mod_code": [
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "while ( -- k )",
        "cin >> n >> h >> a >> b , k ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) + abs ( fb - b ) ;",
        "cin >> n >> h >> a >> b , k ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        11,
        4,
        3,
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "while ( -- k )",
        "cin >> n >> h >> a >> b , k ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        11,
        4,
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "while ( -- k )",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        11,
        3,
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "cin >> n >> h >> a >> b , k ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "ans += min ( abs ( fb - b ) + abs ( fb - b ) , abs ( fa - a ) - abs ( fa - a ) ) ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        4,
        3,
        9
      ],
      "mod_code": [
        "while ( -- k )",
        "cin >> n >> h >> a >> b , k ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "while ( -- k )",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "cin >> n >> h >> a >> b , k ;",
        "ans += min ( abs ( fa ) - a ) + abs ( fb - a ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(long long int)’"
    }
  ]
}