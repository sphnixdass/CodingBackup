{
  "meta": {
    "index": 995,
    "hitid": "3MXX6RQ9EVZPYALZRQH4IWENANM4PA",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "627A",
    "subid": "16989312"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x , x = long long",
      "code": "long long s , x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s , x",
      "code": "cin >> s >> x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a = long long = ( s - x ) / 2",
      "code": "long long a = ( s - x ) / 2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if x > s or a * 2 + x is not s or bitwise and of x and a is not 0",
      "code": "if ( x > s || a * 2 + x != s || ( x & a ) != 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "bit = long long = 0",
      "code": "long long bit = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "while x is nonzero",
      "code": "while ( x )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if bitwise and of x and 1 is nonzero , then increase bit by 1",
      "code": "if ( x & 1 ) bit ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "shift the values of x by 1",
      "code": "x >>= 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "ans = long long = 1LL shifted one bit to the left",
      "code": "long long ans = 1LL << bit ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if ans is 0 , then ans = ans - 2",
      "code": "if ( a == 0 ) ans -= 2 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long x , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( & 1 ) bit ++ ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int x , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "long long x , x ;",
        "if ( & 1 ) bit ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        10,
        13
      ],
      "mod_code": [
        "long long x , x ;",
        "if ( & 1 ) bit ++ ;",
        "long long ans = 1LL ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        10,
        13,
        14
      ],
      "mod_code": [
        "long long x , x ;",
        "if ( & 1 ) bit ++ ;",
        "long long ans = 1LL ;",
        "if ( ans == 0 ) ans -= 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        10,
        14
      ],
      "mod_code": [
        "long long x , x ;",
        "if ( & 1 ) bit ++ ;",
        "if ( ans == 0 ) ans -= 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "long long x , x ;",
        "long long ans = 1LL ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        13,
        14
      ],
      "mod_code": [
        "long long x , x ;",
        "long long ans = 1LL ;",
        "if ( ans == 0 ) ans -= 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        10
      ],
      "mod_code": [
        "long long x , x ;",
        "long long ans = 1LL ;",
        "if ( ans == 0 ) ans -= 2 ;",
        "if ( ! ( x & 1 ) ) bit ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        13,
        10
      ],
      "mod_code": [
        "long long x , x ;",
        "long long ans = 1LL ;",
        "if ( ! ( x & 1 ) ) bit ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "long long x , x ;",
        "if ( ans == 0 ) ans -= 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        14,
        10
      ],
      "mod_code": [
        "long long x , x ;",
        "if ( ans == 0 ) ans -= 2 ;",
        "if ( ! ( x & 1 ) ) bit ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "long long x , x ;",
        "if ( ! ( x & 1 ) ) bit ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "if ( & 1 ) bit ++ ;",
        "long long ans = 1LL ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        10,
        13,
        14
      ],
      "mod_code": [
        "if ( & 1 ) bit ++ ;",
        "long long ans = 1LL ;",
        "if ( ans == 0 ) ans -= 2 ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        10,
        13,
        14,
        1
      ],
      "mod_code": [
        "if ( & 1 ) bit ++ ;",
        "long long ans = 1LL ;",
        "if ( ans == 0 ) ans -= 2 ;",
        "long long int x , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        10,
        13,
        1
      ],
      "mod_code": [
        "if ( & 1 ) bit ++ ;",
        "long long ans = 1LL ;",
        "long long int x , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "if ( & 1 ) bit ++ ;",
        "if ( ans == 0 ) ans -= 2 ;"
      ],
      "err_line": 10,
      "err_msg": "lvalue required as unary ‘&’ operand"
    },
    {
      "mod_line": [
        10,
        14,
        1
      ],
      "mod_code": [
        "if ( & 1 ) bit ++ ;",
        "if ( ans == 0 ) ans -= 2 ;",
        "long long int x , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "if ( & 1 ) bit ++ ;",
        "long long int x , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        13,
        14,
        1
      ],
      "mod_code": [
        "long long ans = 1LL ;",
        "if ( ans == 0 ) ans -= 2 ;",
        "long long int x , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        13,
        14,
        1,
        10
      ],
      "mod_code": [
        "long long ans = 1LL ;",
        "if ( ans == 0 ) ans -= 2 ;",
        "long long int x , x ;",
        "if ( ! ( x & 1 ) ) bit ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "long long ans = 1LL ;",
        "long long int x , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        13,
        1,
        10
      ],
      "mod_code": [
        "long long ans = 1LL ;",
        "long long int x , x ;",
        "if ( ! ( x & 1 ) ) bit ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "if ( ans == 0 ) ans -= 2 ;",
        "long long int x , x ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        14,
        1,
        10
      ],
      "mod_code": [
        "if ( ans == 0 ) ans -= 2 ;",
        "long long int x , x ;",
        "if ( ! ( x & 1 ) ) bit ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "long long int x , x ;",
        "if ( ! ( x & 1 ) ) bit ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int x’"
    }
  ]
}