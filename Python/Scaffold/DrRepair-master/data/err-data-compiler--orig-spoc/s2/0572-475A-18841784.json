{
  "meta": {
    "index": 572,
    "hitid": "3X7837UUADS7RMMFF15ZIYCPWSN6JN",
    "workerid": "A1AYVATMT88U1W",
    "probid": "475A",
    "subid": "18841784"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , t be integers with t value is equal to 0",
      "code": "int n , t = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "sandali = array of strings of length 6",
      "code": "string sandali [ 6 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "the 0th element of sandali is equal to + - - - - - - - - - - - - - - - - - - - - - - - - +",
      "code": "sandali [ 0 ] = \" +------------------------+ \" ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "the 1st element of sandali is equal to | # . # . # . # . # . # . # . # . # . # . # . | D | )",
      "code": "sandali [ 1 ] = \" |#.#.#.#.#.#.#.#.#.#.#.|D|) \" ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "the 2nd element of sandali is equal to | # . # . # . # . # . # . # . # . # . # . # . | . |",
      "code": "sandali [ 2 ] = \" |#.#.#.#.#.#.#.#.#.#.#.|.| \" ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "the 3rd element of sandali is equal to | # . . . . . . . . . . . . . . . . . . . . . . . |",
      "code": "sandali [ 3 ] = \" |#.......................| \" ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "the 4th element of sandali is equal to | # . # . # . # . # . # . # . # . # . # . # . | . | )",
      "code": "sandali [ 4 ] = \" |#.#.#.#.#.#.#.#.#.#.#.|.|) \" ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "the 5th element of sandali is equal to + - - - - - - - - - - - - - - - - - - - - - - - - +",
      "code": "sandali [ 5 ] = \" +------------------------+ \" ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "while ( reading n )",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for ( integer i = 1 to 23 exclusive )",
      "code": "for ( int i = 1 ; i < 23 ; i ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for ( integer j = 1 to 5 exclusive )",
      "code": "for ( int j = 1 ; j < 5 ; j ++ )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if ( sandali [ j ] [ i ] is equal to # and n is greater than 0 )",
      "code": "if ( sandali [ j ] [ i ] == ' # ' && n > 0 )",
      "indent": 4
    },
    {
      "line": 13,
      "text": "the ith element of the column of the jth element of the row of sandali is equal to O",
      "code": "sandali [ j ] [ i ] = ' O ' ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "decrease the value of n by 1",
      "code": "n -- ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "while ( t is less than 6 )",
      "code": "while ( t < 6 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print sandali [ t ] and newline",
      "code": "cout << sandali [ t ] << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "increase t by 1",
      "code": "t ++ ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sandali . top ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘top’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "sandali . clear ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘clear’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , t , t = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string s [ 6 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘sandali’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "sandali . erase ( unique ( sandali . begin ) ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "sandali . resize ( sandali . size ( ) ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sandali . clear ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘clear’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "sandali . top ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘top’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( sandali [ 5 ] == ' + ' ) { - - - - - - - - - - - - - - - -- + ' } ; }"
      ],
      "err_line": 8,
      "err_msg": "missing terminating ' character"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        6
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        7
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        8
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali . top ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        7
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        8
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali . top ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali . top ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        7
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        8
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        7,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali . clear ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        8
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        8,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        4,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . erase ( sandali . begin ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . resize ( sandali ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        7
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        8
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        5,
        7,
        8
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        5,
        7,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . clear ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        5,
        8
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . resize ( sandali ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        5,
        8,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . resize ( sandali ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        5,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . top ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        6,
        7
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        8
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        6,
        7,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . top ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . top ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        6,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . top ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        7,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali . clear ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        8,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "sandali . 0th ( sandali ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 3,
      "err_msg": "invalid suffix \"th\" on integer constant"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        7
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        8
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        13
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        8
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        13
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali . clear ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        5,
        8,
        13
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        5,
        13
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . resize ( sandali ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . top ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        8
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        13
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . top ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        13
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . top ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        6,
        13
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . top ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        13
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        7,
        13
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali . clear ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        8,
        13
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "sandali . erase ( sandali . begin ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘erase’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        8
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        13
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        6,
        8,
        13
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        6,
        13
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "sandali . top ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        7,
        8
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        13
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        7,
        13
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "sandali . clear ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        8,
        13
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "sandali . resize ( sandali ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘resize’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘top’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘top’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        13
      ],
      "mod_code": [
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘top’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        6,
        7,
        13
      ],
      "mod_code": [
        "sandali . top ( ) ;",
        "sandali . clear ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘top’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "sandali . top ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘top’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        6,
        8,
        13
      ],
      "mod_code": [
        "sandali . top ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘top’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "sandali . top ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘top’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘clear’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        7,
        8,
        13
      ],
      "mod_code": [
        "sandali . clear ( ) ;",
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘clear’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "sandali . clear ( ) ;",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘clear’ in ‘sandali’, which is of non-class type ‘std::__cxx11::string [6] {aka std::__cxx11::basic_string<char> [6]}’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "if ( sandali [ 5 ] == ' + ' )",
        "sandali [ j ] = \" O \" ;"
      ],
      "err_line": 8,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘char’)"
    }
  ]
}