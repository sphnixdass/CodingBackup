{
  "meta": {
    "index": 1939,
    "hitid": "3L2OEKSTW94KQP02UG30CZN4GEEY8Y",
    "workerid": "A2CB1NPPWSL9Q2",
    "probid": "758A",
    "subid": "48974100"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "Create n , i , s , and b as integers , set s to 0 , and create a as an integer array with size of 101",
      "code": "int n , a [ 101 ] , i , s = 0 , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Set n to the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "Set a [ i ] to the input from i = 0 to i = n - 1",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "Sort the first n elements of a",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "Increase s by ( a [ n - i ] - a [ i ] ) from i = 0 to i = n - 1",
      "code": "for ( i = 0 ; i < n ; i ++ ) { s += ( a [ n - 1 ] - a [ i ] ) ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "Output s",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "a [ i ] = a - 1 ;"
      ],
      "err_line": 3,
      "err_msg": "invalid conversion from ‘int*’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "puts ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "a [ i ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        3,
        4
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "a [ i ] = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        5
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "a [ i ] = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        6
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "a [ i ] = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "puts ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        3,
        4,
        5
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "a [ i ] = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "s += ( a [ n - i ] - a [ i ] - a [ i ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "a [ i ] = 0 ;",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        6
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "a [ i ] = 0 ;",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;",
        "puts ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "a [ i ] = 0 ;",
        "puts ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        5
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "a [ i ] = 0 ;",
        "puts ( s ) ;",
        "s += ( a [ n - i ] - a [ i ] - a [ i ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "a [ i ] = 0 ;",
        "s += ( a [ n - i ] - a [ i ] - a [ i ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        6
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;",
        "puts ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        4,
        6
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "puts ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        4,
        6,
        5
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "puts ( s ) ;",
        "s += ( a [ n - i ] - a [ i ] - a [ i ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "s += ( a [ n - i ] - a [ i ] - a [ i ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;",
        "puts ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "puts ( s ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "puts ( s ) ;",
        "s += ( a [ n - i ] - a [ i ] - a [ i ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , i , s [ 101 ] , s [ 101 ] , b ;",
        "s += ( a [ n - i ] - a [ i ] - a [ i ] ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [101]’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        6
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;",
        "puts ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "puts ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        5
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "puts ( s ) ;",
        "s += ( a [ n - i ] - a [ i ] - a [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;",
        "puts ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "puts ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "puts ( s ) ;",
        "s += ( a [ n - i ] - a [ i ] - a [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;",
        "puts ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "puts ( s ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { a [ i ] = a [ i ] ; }",
        "puts ( s ) ;",
        "s += ( a [ n - i ] - a [ i ] - a [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "s += ( a [ n - i ] - a [ i ] ) = n - 1 ;",
        "puts ( s ) ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "puts ( s ) ;",
        "s += ( a [ n - i ] - a [ i ] - a [ i ] ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    }
  ]
}