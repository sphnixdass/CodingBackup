{
  "meta": {
    "index": 804,
    "hitid": "34KYK9TV2R26W1M0YMVLLFP47Z7BS0",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "255A",
    "subid": "48686528"
  },
  "lines": [
    {
      "line": 0,
      "text": "n = int",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a = int array of size 300",
      "code": "int a [ 300 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "loop while reading n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "k1 , k2 , k3 = int with k1 = 0 and k2 = 0 and k3 = 0",
      "code": "int k1 = 0 , k2 = 0 , k3 = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 1 to n inclusive incrementing i by 3 increment k1 by a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i += 3 ) k1 += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for i = 2 to n inclusive incrementing i by 3 increment k2 by a [ i ]",
      "code": "for ( int i = 2 ; i <= n ; i += 3 ) k2 += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for i = 3 to n inclusive incrementing i by 3 increment k3 by a [ i ]",
      "code": "for ( int i = 3 ; i <= n ; i += 3 ) k3 += a [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "k = int with k = max of max of k1 , k2 , k3",
      "code": "int k = max ( max ( k1 , k2 ) , k3 ) ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if k is k1",
      "code": "if ( k == k1 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print \" chest \"",
      "code": "cout << \" chest \" << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if l is l2",
      "code": "else if ( k == k2 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" biceps \"",
      "code": "cout << \" biceps \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" back \"",
      "code": "cout << \" back \" << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else if ( l == l2 )"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int ( int [ 300 ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘int’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int k1 = 0 , k2 , k3 = 0 , k3 = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int k3’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else if ( ( l == l2 ) )"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" chest \" ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        11,
        12
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" chest \" ;",
        "else if ( l == l2 )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        13
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" chest \" ;",
        "else if ( l == l2 )",
        "cout << \" biceps \" ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        15
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" chest \" ;",
        "else if ( l == l2 )",
        "cout << \" back \" ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        11,
        12,
        10
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" chest \" ;",
        "else if ( l == l2 )",
        "if ( ! k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        11,
        13
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        15
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        10
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "if ( ! k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        11,
        15
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" chest \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        11,
        15,
        10
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" chest \" ;",
        "cout << \" back \" ;",
        "if ( ! k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        11,
        10
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" chest \" ;",
        "if ( ! k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "else if ( l == l2 )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        12,
        13
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "else if ( l == l2 )",
        "cout << \" biceps \" ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        15
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "else if ( l == l2 )",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        10
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "else if ( l == l2 )",
        "cout << \" biceps \" ;",
        "if ( ! k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        12,
        15
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "else if ( l == l2 )",
        "cout << \" back \" ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        12,
        15,
        10
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "else if ( l == l2 )",
        "cout << \" back \" ;",
        "if ( ! k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        12,
        10
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "else if ( l == l2 )",
        "if ( ! k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        13,
        15
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        13,
        15,
        10
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "if ( ! k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        13,
        10
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" biceps \" ;",
        "if ( ! k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" back \" ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        15,
        10
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "cout << \" back \" ;",
        "if ( ! k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "int k = max ( max ( k1 , k2 , k3 ) ) ;",
        "if ( ! k )"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘max(const int&)’"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "else if ( l == l2 )"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        13
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "else if ( l == l2 )",
        "cout << \" biceps \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        15
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "else if ( l == l2 )",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        10
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "else if ( l == l2 )",
        "cout << \" biceps \" ;",
        "if ( ! k )"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        15
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "else if ( l == l2 )",
        "cout << \" back \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        15,
        10
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "else if ( l == l2 )",
        "cout << \" back \" ;",
        "if ( ! k )"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        10
      ],
      "mod_code": [
        "cout << \" chest \" ;",
        "else if ( l == l2 )",
        "if ( ! k )"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "else if ( l == l2 )",
        "cout << \" biceps \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        15
      ],
      "mod_code": [
        "else if ( l == l2 )",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        15,
        10
      ],
      "mod_code": [
        "else if ( l == l2 )",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "if ( ! k )"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        10
      ],
      "mod_code": [
        "else if ( l == l2 )",
        "cout << \" biceps \" ;",
        "if ( ! k )"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "else if ( l == l2 )",
        "cout << \" back \" ;"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15,
        10
      ],
      "mod_code": [
        "else if ( l == l2 )",
        "cout << \" back \" ;",
        "if ( ! k )"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "else if ( l == l2 )",
        "if ( ! k )"
      ],
      "err_line": 12,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}