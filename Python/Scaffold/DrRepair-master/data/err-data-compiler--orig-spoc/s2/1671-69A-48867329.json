{
  "meta": {
    "index": 1671,
    "hitid": "32XN26MTXZDI81O0GX1VPCFQNE7L04",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "69A",
    "subid": "48867329"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int and a = two dimensional int array with the sizes 101 and 10",
      "code": "int n , a [ 101 ] [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "loop while reading n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "read 3 values into a [ i ]",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) { cin >> a [ i ] [ j ] ; }",
      "indent": 3
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 6,
      "text": "sum = int with sum = 0",
      "code": "int sum = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for i = 0 to 3",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set sum to 0",
      "code": "sum = 0 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "for j = 0 to n add a [ j ] [ i ] to sum",
      "code": "for ( int j = 0 ; j < n ; j ++ ) { sum += a [ j ] [ i ] ; }",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if sum is not 0",
      "code": "if ( sum != 0 )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "break loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if sum equals 0 print \" YES \"",
      "code": "if ( sum == 0 ) { cout << \" YES \" << endl ; }",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set all values of a to 0",
      "code": "memset ( a , 0 , sizeof ( a ) ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10]’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a [ 101 ] , 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( { cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10]’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "bool sum = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10]’)"
    },
    {
      "mod_line": [
        4,
        6,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "bool sum = 0 ;",
        "int n , a [ 101 ] , 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        6,
        1,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "bool sum = 0 ;",
        "int n , a [ 101 ] , 10 ;",
        "while ( { cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        6,
        1,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "bool sum = 0 ;",
        "int n , a [ 101 ] , 10 ;",
        "int sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        6,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "bool sum = 0 ;",
        "while ( { cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        6,
        2,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "bool sum = 0 ;",
        "while ( { cin >> n )",
        "int sum = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "bool sum = 0 ;",
        "int sum = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10]’)"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "int n , a [ 101 ] , 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        1,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "int n , a [ 101 ] , 10 ;",
        "while ( { cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        1,
        2,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "int n , a [ 101 ] , 10 ;",
        "while ( { cin >> n )",
        "int sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        1,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "int n , a [ 101 ] , 10 ;",
        "int sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "while ( { cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        2,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "while ( { cin >> n )",
        "int sum = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) cin >> a [ i ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10]’)"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "int n , a [ 101 ] , 10 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6,
        1,
        2
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "int n , a [ 101 ] , 10 ;",
        "while ( { cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6,
        1,
        2,
        8
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "int n , a [ 101 ] , 10 ;",
        "while ( { cin >> n )",
        "int sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6,
        1,
        2,
        4
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "int n , a [ 101 ] , 10 ;",
        "while ( { cin >> n )",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6,
        1,
        8
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "int n , a [ 101 ] , 10 ;",
        "int sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6,
        1,
        8,
        4
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "int n , a [ 101 ] , 10 ;",
        "int sum = 0 ;",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6,
        1,
        4
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "int n , a [ 101 ] , 10 ;",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "while ( { cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        2,
        8
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "while ( { cin >> n )",
        "int sum = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        2,
        8,
        4
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "while ( { cin >> n )",
        "int sum = 0 ;",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        2,
        4
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "while ( { cin >> n )",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        8,
        4
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "int sum = 0 ;",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10]’)"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "bool sum = 0 ;",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10]’)"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , a [ 101 ] , 10 ;",
        "while ( { cin >> n )"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "int n , a [ 101 ] , 10 ;",
        "while ( { cin >> n )",
        "int sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        4
      ],
      "mod_code": [
        "int n , a [ 101 ] , 10 ;",
        "while ( { cin >> n )",
        "int sum = 0 ;",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "int n , a [ 101 ] , 10 ;",
        "while ( { cin >> n )",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , a [ 101 ] , 10 ;",
        "int sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        8,
        4
      ],
      "mod_code": [
        "int n , a [ 101 ] , 10 ;",
        "int sum = 0 ;",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , a [ 101 ] , 10 ;",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "int sum = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        4
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "int sum = 0 ;",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "int sum = 0 ;",
        "for ( int i = 0 ; i < 3 ; ++ i ) cin >> a [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [10]’)"
    }
  ]
}