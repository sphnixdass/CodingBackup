{
  "meta": {
    "index": 791,
    "hitid": "3P6ENY9P79QRT0MQT2B33OMFSRBIHL",
    "workerid": "A1APYLD4DUK33J",
    "probid": "225A",
    "subid": "45880550"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer x",
      "code": "int x ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create boolean isok with isok = true",
      "code": "bool isok = true ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integer set s",
      "code": "set < int > s ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "create integers a , b",
      "code": "int a , b ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read a read b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if i is 0",
      "code": "if ( i == 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set x to 7 - x",
      "code": "x = 7 - x ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "break current loop iteration",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "insert a into s",
      "code": "s . insert ( a ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "insert 7 - a into s",
      "code": "s . insert ( 7 - a ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "insert b into s",
      "code": "s . insert ( b ) ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "insert 7 - b into s",
      "code": "s . insert ( 7 - b ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "create integer vector t",
      "code": "vector < int > t ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "for i = 1 to 6 inclusive",
      "code": "for ( int i = 1 ; i <= 6 ; i ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if count of i in s is false , add element i to end of t",
      "code": "if ( ! s . count ( i ) ) t . push_back ( i ) ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "if x is not t [ 0 ] and x is not t [ 1 ]",
      "code": "if ( x != t [ 0 ] && x != t [ 1 ] )",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if x is t [ 0 ]",
      "code": "if ( x == t [ 0 ] )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "set x to t [ 0 ]",
      "code": "x = t [ 0 ] ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 28,
      "text": "set x to t [ 1 ]",
      "code": "x = t [ 1 ] ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int s ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘insert’ in ‘s’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "s . insert ( a a ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘)’ before ‘a’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "s . push ( b ) ;"
      ],
      "err_line": 16,
      "err_msg": "‘class std::set<int>’ has no member named ‘push’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "if ( ! x [ 0 ] )"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 28,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        12,
        25
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "break ;",
        "if ( ! x [ 0 ] )"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        12,
        25,
        4
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "break ;",
        "if ( ! x [ 0 ] )",
        "x = getchar ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        12,
        25,
        8
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "break ;",
        "if ( ! x [ 0 ] )",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        12,
        25,
        9
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "break ;",
        "if ( ! x [ 0 ] )",
        "a >> a >> b ;"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        12,
        4,
        8
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "break ;",
        "x = getchar ( ) ;",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        12,
        8
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "break ;",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        12,
        8,
        9
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "break ;",
        "a , b ;",
        "a >> a >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "if ( ! x [ 0 ] )"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        25,
        4
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "if ( ! x [ 0 ] )",
        "x = getchar ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        25,
        4,
        8
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "if ( ! x [ 0 ] )",
        "x = getchar ( ) ;",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        4,
        9
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "if ( ! x [ 0 ] )",
        "x = getchar ( ) ;",
        "a >> a >> b ;"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        25,
        8
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "if ( ! x [ 0 ] )",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        8,
        9
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "if ( ! x [ 0 ] )",
        "a , b ;",
        "a >> a >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        25,
        9
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "if ( ! x [ 0 ] )",
        "a >> a >> b ;"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        4,
        8
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "x = getchar ( ) ;",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        4,
        8,
        9
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "x = getchar ( ) ;",
        "a , b ;",
        "a >> a >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        8
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        8,
        9
      ],
      "mod_code": [
        "if ( s . count ( i ) ) t . push_back ( i ) ;",
        "a , b ;",
        "a >> a >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        25
      ],
      "mod_code": [
        "break ;",
        "if ( ! x [ 0 ] )"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        25,
        4
      ],
      "mod_code": [
        "break ;",
        "if ( ! x [ 0 ] )",
        "x = getchar ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        25,
        4,
        8
      ],
      "mod_code": [
        "break ;",
        "if ( ! x [ 0 ] )",
        "x = getchar ( ) ;",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        25,
        4,
        9
      ],
      "mod_code": [
        "break ;",
        "if ( ! x [ 0 ] )",
        "x = getchar ( ) ;",
        "a >> a >> b ;"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        25,
        8
      ],
      "mod_code": [
        "break ;",
        "if ( ! x [ 0 ] )",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        25,
        8,
        9
      ],
      "mod_code": [
        "break ;",
        "if ( ! x [ 0 ] )",
        "a , b ;",
        "a >> a >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        25,
        9
      ],
      "mod_code": [
        "break ;",
        "if ( ! x [ 0 ] )",
        "a >> a >> b ;"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        12,
        4,
        8
      ],
      "mod_code": [
        "break ;",
        "x = getchar ( ) ;",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4,
        8,
        9
      ],
      "mod_code": [
        "break ;",
        "x = getchar ( ) ;",
        "a , b ;",
        "a >> a >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "break ;",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8,
        9
      ],
      "mod_code": [
        "break ;",
        "a , b ;",
        "a >> a >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        4
      ],
      "mod_code": [
        "if ( ! x [ 0 ] )",
        "x = getchar ( ) ;"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        25,
        4,
        8
      ],
      "mod_code": [
        "if ( ! x [ 0 ] )",
        "x = getchar ( ) ;",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        4,
        8,
        9
      ],
      "mod_code": [
        "if ( ! x [ 0 ] )",
        "x = getchar ( ) ;",
        "a , b ;",
        "a >> a >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        4,
        9
      ],
      "mod_code": [
        "if ( ! x [ 0 ] )",
        "x = getchar ( ) ;",
        "a >> a >> b ;"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        25,
        8
      ],
      "mod_code": [
        "if ( ! x [ 0 ] )",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        8,
        9
      ],
      "mod_code": [
        "if ( ! x [ 0 ] )",
        "a , b ;",
        "a >> a >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        25,
        9
      ],
      "mod_code": [
        "if ( ! x [ 0 ] )",
        "a >> a >> b ;"
      ],
      "err_line": 25,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "a , b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "x = getchar ( ) ;",
        "a , b ;",
        "a >> a >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "a , b ;",
        "a >> a >> b ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    }
  ]
}