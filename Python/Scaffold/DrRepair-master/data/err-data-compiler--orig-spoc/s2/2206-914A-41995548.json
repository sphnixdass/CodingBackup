{
  "meta": {
    "index": 2206,
    "hitid": "3CIS7GGG65DKIHQOXISB1ODDVT2UEW",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "914A",
    "subid": "41995548"
  },
  "lines": [
    {
      "line": 0,
      "text": "maxn = const int with maxn = 1e3 + 5",
      "code": "const int maxn = 1e3 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "arr = int array of size maxn",
      "code": "int arr [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n values into arr",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort arr from beginning to n",
      "code": "sort ( arr , arr + n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = n - 1 to 0 inclusive decrementing i",
      "code": "for ( int i = n - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if arr [ i ] is less than 0",
      "code": "if ( arr [ i ] < 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print arr [ i ]",
      "code": "cout << arr [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "temp = int with temp = arr [ i ]",
      "code": "int temp = arr [ i ] ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if floor of sqrt of temp is sqrt of temp",
      "code": "if ( floor ( sqrt ( temp ) ) == sqrt ( temp ) )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print arr [ i ]",
      "code": "cout << arr [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . begin ( ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "if ( floor ( temp ) == sqrt ( temp ) )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        13,
        9
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "if ( floor ( temp ) == sqrt ( temp ) )",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        13,
        9,
        16
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "if ( floor ( temp ) == sqrt ( temp ) )",
        "cout << arr [ i ] ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        13,
        16
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "if ( floor ( temp ) == sqrt ( temp ) )",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "if ( floor ( sqrt ( temp ) == sqrt ( temp ) ) )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        13,
        9
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "if ( floor ( sqrt ( temp ) == sqrt ( temp ) ) )",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        13,
        9,
        16
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "if ( floor ( sqrt ( temp ) == sqrt ( temp ) ) )",
        "cout << arr [ i ] ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        13,
        16
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "if ( floor ( sqrt ( temp ) == sqrt ( temp ) ) )",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        9,
        16
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "cout << arr [ i ] ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . end ( ) ) ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "if ( floor ( temp ) == sqrt ( temp ) )",
        "sort ( arr . begin ( ) , arr . begin ( ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        13,
        6,
        9
      ],
      "mod_code": [
        "if ( floor ( temp ) == sqrt ( temp ) )",
        "sort ( arr . begin ( ) , arr . begin ( ) ) ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        13,
        6,
        9,
        16
      ],
      "mod_code": [
        "if ( floor ( temp ) == sqrt ( temp ) )",
        "sort ( arr . begin ( ) , arr . begin ( ) ) ;",
        "cout << arr [ i ] ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        13,
        6,
        16
      ],
      "mod_code": [
        "if ( floor ( temp ) == sqrt ( temp ) )",
        "sort ( arr . begin ( ) , arr . begin ( ) ) ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . begin ( ) ) ;",
        "if ( floor ( sqrt ( temp ) == sqrt ( temp ) ) )"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        13,
        9
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . begin ( ) ) ;",
        "if ( floor ( sqrt ( temp ) == sqrt ( temp ) ) )",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        13,
        9,
        16
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . begin ( ) ) ;",
        "if ( floor ( sqrt ( temp ) == sqrt ( temp ) ) )",
        "cout << arr [ i ] ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        13,
        16
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . begin ( ) ) ;",
        "if ( floor ( sqrt ( temp ) == sqrt ( temp ) ) )",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . begin ( ) ) ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        9,
        16
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . begin ( ) ) ;",
        "cout << arr [ i ] ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "sort ( arr . begin ( ) , arr . begin ( ) ) ;",
        "cout << arr [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "request for member ‘begin’ in ‘arr’, which is of non-class type ‘int [1005]’"
    }
  ]
}