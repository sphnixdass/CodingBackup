{
  "meta": {
    "index": 2333,
    "hitid": "34KYK9TV2R26W1M0YMVLLFP47Z8BS1",
    "workerid": "AIWEXPJAU66D9",
    "probid": "939A",
    "subid": "48688387"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read variable n from the input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "f is an array of integers with n + 1 elements",
      "code": "int f [ n + 1 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i from 1 to n inclusive , read standard input to f [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> f [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer variable flag with value 0",
      "code": "int flag = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "start for loop from i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if f [ f [ f [ i ] ] ] = i",
      "code": "if ( f [ f [ f [ i ] ] ] == i )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "change flag to 1",
      "code": "flag = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if flag = 1",
      "code": "if ( flag == 1 )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "flag = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( f [ f [ f [ f ] ] ] == i )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [(n + 1)][int [(n + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "flag = l ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "int f [ 4 + 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "int f [ 4 + 1 ] ;",
        "if ( f [ f [ f [ f ] ] ] == i )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "int f [ 4 + 1 ] ;",
        "flag = l ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        3,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "int f [ 4 + 1 ] ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "if ( f [ f [ f [ f ] ] ] == i )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "flag = l ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        7,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "flag = l ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        8,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "flag = l ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "n ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int f [ 4 + 1 ] ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int f [ 4 + 1 ] ;",
        "if ( f [ f [ f [ f ] ] ] == i )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int f [ 4 + 1 ] ;",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "flag = l ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        7,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int f [ 4 + 1 ] ;",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "if ( ! flag )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int f [ 4 + 1 ] ;",
        "flag = l ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        8,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int f [ 4 + 1 ] ;",
        "flag = l ;",
        "if ( ! flag )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int f [ 4 + 1 ] ;",
        "if ( ! flag )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( f [ f [ f [ f ] ] ] == i )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "flag = l ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        8,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "flag = l ;",
        "if ( ! flag )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "if ( ! flag )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = l ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "flag = l ;",
        "if ( ! flag )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "if ( ! flag )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "n ;",
        "int f [ 4 + 1 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        7
      ],
      "mod_code": [
        "n ;",
        "int f [ 4 + 1 ] ;",
        "if ( f [ f [ f [ f ] ] ] == i )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        8
      ],
      "mod_code": [
        "n ;",
        "int f [ 4 + 1 ] ;",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "flag = l ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        7,
        12
      ],
      "mod_code": [
        "n ;",
        "int f [ 4 + 1 ] ;",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        8
      ],
      "mod_code": [
        "n ;",
        "int f [ 4 + 1 ] ;",
        "flag = l ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        12
      ],
      "mod_code": [
        "n ;",
        "int f [ 4 + 1 ] ;",
        "flag = l ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3,
        12
      ],
      "mod_code": [
        "n ;",
        "int f [ 4 + 1 ] ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "n ;",
        "if ( f [ f [ f [ f ] ] ] == i )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        8
      ],
      "mod_code": [
        "n ;",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "flag = l ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        12
      ],
      "mod_code": [
        "n ;",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "flag = l ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        12
      ],
      "mod_code": [
        "n ;",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "n ;",
        "flag = l ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "n ;",
        "flag = l ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "n ;",
        "if ( ! flag )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int f [ 4 + 1 ] ;",
        "if ( f [ f [ f [ f ] ] ] == i )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "int f [ 4 + 1 ] ;",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "flag = l ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        7,
        8,
        12
      ],
      "mod_code": [
        "int f [ 4 + 1 ] ;",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "flag = l ;",
        "if ( ! flag )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        7,
        12
      ],
      "mod_code": [
        "int f [ 4 + 1 ] ;",
        "if ( f [ f [ f [ f ] ] ] == i )",
        "if ( ! flag )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [5][int [5]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int f [ 4 + 1 ] ;",
        "flag = l ;"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        12
      ],
      "mod_code": [
        "int f [ 4 + 1 ] ;",
        "flag = l ;",
        "if ( ! flag )"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "if ( f [ f [ f [ f ] ] ] == i )",
        "flag = l ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [(n + 1)][int [(n + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        8,
        12
      ],
      "mod_code": [
        "if ( f [ f [ f [ f ] ] ] == i )",
        "flag = l ;",
        "if ( ! flag )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [(n + 1)][int [(n + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        12
      ],
      "mod_code": [
        "if ( f [ f [ f [ f ] ] ] == i )",
        "if ( ! flag )"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int [(n + 1)][int [(n + 1)]]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "flag = l ;",
        "if ( ! flag )"
      ],
      "err_line": 8,
      "err_msg": "‘l’ was not declared in this scope"
    }
  ]
}