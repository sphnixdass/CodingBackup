{
  "meta": {
    "index": 1776,
    "hitid": "3SV8KD29L4M4QGC8ZR2MGB5XH8JZKG",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "897A",
    "subid": "48790320"
  },
  "lines": [
    {
      "line": 0,
      "text": "eps = 1e - 6",
      "code": "const double eps = 1e-6 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "PI = 3 . 14159265358979323846264338",
      "code": "const double PI = 3.14159265358979323846264338f ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "pi = acos ( - 1 )",
      "code": "const double pi = acos ( - 1.0 ) ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "inf = 3f3f3f3f in exadecimal",
      "code": "const int inf = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "mod = 1000000007",
      "code": "const long long mod = 100000007 ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "MAXN = 200005",
      "code": "const int MAXN = 200005 ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "function read ( no arg , return int )",
      "code": "inline int read ( )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "c = 0 , f = 1",
      "code": "int c = 0 , f = 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "get char ch from keyboard",
      "code": "char ch = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "while ch is not between ' 0 ' and ' 9 '",
      "code": "while ( ch < ' 0 ' || ch > ' 9 ' )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if ch is ' - ' f = - 1",
      "code": "if ( ch == ' - ' ) f = - 1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "get char ch from keyboard",
      "code": "ch = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "while ch is between ' 0 ' and ' 9 '",
      "code": "while ( ch >= ' 0 ' && ch <= ' 9 ' )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "c = c * 10 + ch - ' 0 '",
      "code": "c = c * 10 + ch - ' 0 ' ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "get char ch from keyboard",
      "code": "ch = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "return c * f",
      "code": "return c * f ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 20,
      "text": "n , m = int",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "while m is not 0 , decrement m",
      "code": "while ( m -- )",
      "indent": 1
    },
    {
      "line": 25,
      "text": "l , r = int",
      "code": "int l , r ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "op1 , op2 = char",
      "code": "char op1 , op2 ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "read l , r , op1 , op2",
      "code": "cin >> l >> r >> op1 >> op2 ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "for i = l - 1 to r - 1 inclusive",
      "code": "for ( int i = l - 1 ; i <= r - 1 ; i ++ )",
      "indent": 2
    },
    {
      "line": 29,
      "text": "if s [ i ] is op1 s [ i ] = op2",
      "code": "if ( s [ i ] == op1 ) s [ i ] = op2 ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print s",
      "code": "cout << s << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "eps -= 6 ;"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cin >> ch [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cin >> ch [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cin >> ch [ i ] ;"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "eps *= 6 ;"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "const double PI = acos ( - 1 ) ;"
      ],
      "err_line": 2,
      "err_msg": "redefinition of ‘const double PI’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "inline int read ( int , int ) ;"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 23,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 23,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "for ( i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 28,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        11
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        15
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        28
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        29
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        15
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        15,
        28
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        15,
        29
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        28
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        28,
        29
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        29
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        15
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        15,
        28
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        15,
        29
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        28
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        28,
        29
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        29
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        15,
        28
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        15,
        28,
        29
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        15,
        29
      ],
      "mod_code": [
        "eps -= 6 ;",
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        28
      ],
      "mod_code": [
        "eps -= 6 ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        28,
        29
      ],
      "mod_code": [
        "eps -= 6 ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        0,
        29
      ],
      "mod_code": [
        "eps -= 6 ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "‘eps’ does not name a type"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        15
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        28
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        15,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        28
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        28,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        28
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        28,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        28
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        28,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "‘ch’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        28
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        28,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        28
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        28,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        28,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        29
      ],
      "mod_code": [
        "cin >> ch [ i ] ;",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 15,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        29
      ],
      "mod_code": [
        "for ( int i = l - 1 ; i >= r - 1 ; i -- )",
        "if ( s [ i ] == s [ i ] )"
      ],
      "err_line": 30,
      "err_msg": "expected primary-expression before ‘}’ token"
    }
  ]
}