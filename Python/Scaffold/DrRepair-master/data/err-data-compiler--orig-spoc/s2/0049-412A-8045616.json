{
  "meta": {
    "index": 49,
    "hitid": "30QQTY5GMKEZ92BEAAE5VELW96Z7UO",
    "workerid": "AIWEXPJAU66D9",
    "probid": "412A",
    "subid": "8045616"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer number = 0",
      "code": "int number = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create integer position = 0",
      "code": "int position = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read number",
      "code": "cin >> number ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read position",
      "code": "cin >> position ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare string variable a = \" \"",
      "code": "string a = \" \" ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare integer right = number - position",
      "code": "int right = number - position ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare integer left = position - 1",
      "code": "int left = position - 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if right is greater than left",
      "code": "if ( right > left )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for integer i = 0 to position - 1 exclusive , print \" LEFT \"",
      "code": "for ( int i = 0 ; i < position - 1 ; i ++ ) { cout << \" LEFT \" << endl ; }",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for i from 0 to number exclusive",
      "code": "for ( int i = 0 ; i < number ; i ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print \" PRINT \" and a [ i ]",
      "code": "cout << \" PRINT \" << a [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if i ! = number - 1 , print \" RIGHT \"",
      "code": "if ( i != number - 1 ) cout << \" RIGHT \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for integer i = position to number exclusive , print \" RIGHT \"",
      "code": "for ( int i = position ; i < number ; i ++ ) { cout << \" RIGHT \" << endl ; }",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for i = number - 1 to 0 inclusive decrementing i",
      "code": "for ( int i = number - 1 ; i >= 0 ; i -- )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print \" PRINT \" and a [ i ]",
      "code": "cout << \" PRINT \" << a [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if i ! = 0 , print \" LEFT \"",
      "code": "if ( i != 0 ) cout << \" LEFT \" << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "number = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘number’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "position = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘position’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "getline ( cin , number ) ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "position ( position ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘position’ cannot be used as a function"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "const string a = \" \" ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘const string {aka const std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < number ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = number - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}