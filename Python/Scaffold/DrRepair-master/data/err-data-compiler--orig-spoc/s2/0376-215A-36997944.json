{
  "meta": {
    "index": 376,
    "hitid": "362E9TQF2HKDT4RF9WTLIOAEEEUGIR",
    "workerid": "AIWEXPJAU66D9",
    "probid": "215A",
    "subid": "36997944"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integer arrays a and b with size 51",
      "code": "int a [ 51 ] , b [ 51 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare ints i and j",
      "code": "int i , j ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "loop i from 1 to n inclusive , read input to a [ i ]",
      "code": "for ( i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read input to m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "loop i from 1 to m inclusive , read input to b [ i ]",
      "code": "for ( i = 1 ; i <= m ; i ++ ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare int variables temp , cnt and maxx with cnt and maxx = 0",
      "code": "int temp , cnt = 0 , maxx = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "loop i from 1 to m inclusive",
      "code": "for ( i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for j from 1 to n inclusive",
      "code": "for ( j = 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if b [ i ] modulo a [ j ] is 0",
      "code": "if ( b [ i ] % a [ j ] == 0 )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "assign b [ i ] / a [ j ] to temp",
      "code": "temp = b [ i ] / a [ j ] ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if maxx is less than temp",
      "code": "if ( maxx < temp )",
      "indent": 4
    },
    {
      "line": 14,
      "text": "change maxx to temp",
      "code": "maxx = temp ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "assign 1 to cnt",
      "code": "cnt = 1 ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "else if maxx = temp",
      "code": "else if ( maxx == temp )",
      "indent": 4
    },
    {
      "line": 17,
      "text": "increment cnt by one",
      "code": "cnt ++ ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "n , m ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int a [ 51 ] [ 51 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [51]’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n , j ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int temp , cnt = 0 , cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        11,
        15,
        3
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int cnt = 1 ;",
        "int n , j ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        15,
        3,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int cnt = 1 ;",
        "int n , j ;",
        "int temp , cnt = 0 , cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        15,
        3,
        16
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int cnt = 1 ;",
        "int n , j ;",
        "else if ( maxx = temp )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        15,
        3,
        4
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int cnt = 1 ;",
        "int n , j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        15,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int cnt = 1 ;",
        "int temp , cnt = 0 , cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        11,
        15,
        8,
        16
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int cnt = 1 ;",
        "int temp , cnt = 0 , cnt = 0 ;",
        "else if ( maxx = temp )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        11,
        15,
        8,
        4
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int cnt = 1 ;",
        "int temp , cnt = 0 , cnt = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int n , j ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        3,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int n , j ;",
        "int temp , cnt = 0 , cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        3,
        8,
        16
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int n , j ;",
        "int temp , cnt = 0 , cnt = 0 ;",
        "else if ( maxx = temp )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        3,
        8,
        4
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int n , j ;",
        "int temp , cnt = 0 , cnt = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        3,
        16
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int n , j ;",
        "else if ( maxx = temp )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        3,
        16,
        4
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int n , j ;",
        "else if ( maxx = temp )",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        3,
        4
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int n , j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int temp , cnt = 0 , cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        11,
        8,
        16
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int temp , cnt = 0 , cnt = 0 ;",
        "else if ( maxx = temp )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        11,
        8,
        16,
        4
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int temp , cnt = 0 , cnt = 0 ;",
        "else if ( maxx = temp )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        11,
        8,
        4
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int temp , cnt = 0 , cnt = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int n , j ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        15,
        3,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int n , j ;",
        "int temp , cnt = 0 , cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        15,
        3,
        8,
        16
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int n , j ;",
        "int temp , cnt = 0 , cnt = 0 ;",
        "else if ( maxx = temp )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        15,
        3,
        8,
        4
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int n , j ;",
        "int temp , cnt = 0 , cnt = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        15,
        3,
        16
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int n , j ;",
        "else if ( maxx = temp )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        15,
        3,
        16,
        4
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int n , j ;",
        "else if ( maxx = temp )",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        15,
        3,
        4
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int n , j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        15,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int temp , cnt = 0 , cnt = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        15,
        8,
        16
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int temp , cnt = 0 , cnt = 0 ;",
        "else if ( maxx = temp )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        15,
        8,
        16,
        4
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int temp , cnt = 0 , cnt = 0 ;",
        "else if ( maxx = temp )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        15,
        8,
        4
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "int temp , cnt = 0 , cnt = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int n , j ;",
        "int temp , cnt = 0 , cnt = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        8,
        16
      ],
      "mod_code": [
        "int n , j ;",
        "int temp , cnt = 0 , cnt = 0 ;",
        "else if ( maxx = temp )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        8,
        16,
        4
      ],
      "mod_code": [
        "int n , j ;",
        "int temp , cnt = 0 , cnt = 0 ;",
        "else if ( maxx = temp )",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        8,
        4
      ],
      "mod_code": [
        "int n , j ;",
        "int temp , cnt = 0 , cnt = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "int n , j ;",
        "else if ( maxx = temp )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        16,
        4
      ],
      "mod_code": [
        "int n , j ;",
        "else if ( maxx = temp )",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int n , j ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "int temp , cnt = 0 , cnt = 0 ;",
        "else if ( maxx = temp )"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        8,
        16,
        4
      ],
      "mod_code": [
        "int temp , cnt = 0 , cnt = 0 ;",
        "else if ( maxx = temp )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "int temp , cnt = 0 , cnt = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int cnt’"
    }
  ]
}