{
  "meta": {
    "index": 1576,
    "hitid": "3Q7TKIAPOT4C7LPUS9PQ4JZ9IQGDL0",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1028A",
    "subid": "48403448"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer mod = 998244353",
      "code": "const int mod = 998244353 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare qpow with long longs x , y as arguments , returning long long",
      "code": "long long qpow ( long long x , long long y )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let long long s = 1",
      "code": "long long s = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while y is true",
      "code": "while ( y )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if y bitwise and 1 , let s be s * x % mod",
      "code": "if ( y & 1 ) s = s * x % mod ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "let x be x * x % mod",
      "code": "x = x * x % mod ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "let y be y bitshift right 1",
      "code": "y >>= 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "return s from function",
      "code": "return s ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "declare inline read with no arguments , returning long long",
      "code": "inline long long read ( )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "declare long longs x = 0 , f = 1",
      "code": "long long x = 0 , f = 1 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "declare character ch = read character",
      "code": "char ch = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "while ch is less than ' 0 ' or ch is greater than ' 9 '",
      "code": "while ( ch < ' 0 ' || ch > ' 9 ' )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if ch is ' - ' , let f be - 1",
      "code": "if ( ch == ' - ' ) f = - 1 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "let ch be read character",
      "code": "ch = getchar ( ) ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "while ch is greater than or equal to ' 0 ' and ch is less than or equal to ' 9 ' , let x be x * 10 + ch - ' 0 ' , let ch be read character",
      "code": "while ( ch >= ' 0 ' && ch <= ' 9 ' ) x = x * 10 + ch - ' 0 ' , ch = getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "return x * f",
      "code": "return x * f ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 20,
      "text": "declare inve with long long x as argument , returning long long",
      "code": "long long inve ( long long x )",
      "indent": 0
    },
    {
      "line": 21,
      "text": "return 1 if x is 1 else ( mod - mod / x ) * result of run inve ( mod % x ) % mod",
      "code": "return x == 1 ? 1 : ( mod - mod / x ) * inve ( mod % x ) % mod ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 23,
      "text": "declare character array s size 150 by 150",
      "code": "char s [ 150 ] [ 150 ] ;",
      "indent": 0
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 25,
      "text": "declare integers n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "for i = 1 to n inclusive , read ( s [ i ] + 1 )",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> ( s [ i ] + 1 ) ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "declare integers ti , tj",
      "code": "int ti , tj ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "declare integers w = 0 , h = 0",
      "code": "int w = 0 , h = 0 ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "declare integer f = 0",
      "code": "int f = 0 ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 33,
      "text": "if s [ i ] [ j ] is ' B '",
      "code": "if ( s [ i ] [ j ] == ' B ' )",
      "indent": 3
    },
    {
      "line": 34,
      "text": "let ti be i , let tj be j",
      "code": "ti = i , tj = j ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "let f be 1",
      "code": "f = 1 ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "end loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 39,
      "text": "if f is true , end loop",
      "code": "if ( f ) break ;",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "for j = tj to m inclusive",
      "code": "for ( int j = tj ; j <= m ; j ++ )",
      "indent": 1
    },
    {
      "line": 42,
      "text": "if s [ ti ] [ j ] is ' B '",
      "code": "if ( s [ ti ] [ j ] == ' B ' )",
      "indent": 2
    },
    {
      "line": 43,
      "text": "increment w",
      "code": "w ++ ;",
      "indent": 3
    },
    {
      "line": 44,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 45,
      "text": "end loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 46,
      "text": "for i = ti to n inclusive",
      "code": "for ( int i = ti ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 47,
      "text": "if s [ i ] [ tj ] is ' B '",
      "code": "if ( s [ i ] [ tj ] == ' B ' )",
      "indent": 2
    },
    {
      "line": 48,
      "text": "increment h",
      "code": "h ++ ;",
      "indent": 3
    },
    {
      "line": 49,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 50,
      "text": "end loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 51,
      "text": "print ( h / 2 + ti ) , \" \" , ( w / 2 + tj ) , \" \\ n \"",
      "code": "cout << ( h / 2 + ti ) << \" \" << ( w / 2 + tj ) << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 53,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long qpow ( long long x , long long y ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "inline long long read ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "long long x = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "char s [ 150 [ 150 ] ;"
      ],
      "err_line": 23,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "int l , m ;"
      ],
      "err_line": 26,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "int w = 0 ;"
      ],
      "err_line": 48,
      "err_msg": "‘h’ was not declared in this scope"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "f = 0 ;"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 32,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "f = l ;"
      ],
      "err_line": 35,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "end ;"
      ],
      "err_line": 36,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "for ( j = tj ; j <= m ; j ++ )"
      ],
      "err_line": 41,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 45,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "end ;"
      ],
      "err_line": 45,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "for ( i = ti ; i <= n ; i ++ )"
      ],
      "err_line": 46,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        49
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 50,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        50
      ],
      "mod_code": [
        "end ;"
      ],
      "err_line": 50,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        51
      ],
      "mod_code": [
        "cout << ( h / 2 + ti ) , \" \" << ( w / 2 + tj ) << \" \\n \" ;"
      ],
      "err_line": 51,
      "err_msg": "invalid operands of types ‘const char [2]’ and ‘int’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        26,
        35
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = l ;"
      ],
      "err_line": 35,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        35,
        31
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = l ;",
        "f = 0 ;"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        35,
        31,
        47
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = l ;",
        "f = 0 ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        35,
        31,
        36
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = l ;",
        "f = 0 ;",
        "end ;"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        35,
        31,
        0
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = l ;",
        "f = 0 ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        26,
        35,
        47
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = l ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )"
      ],
      "err_line": 35,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        35,
        47,
        36
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = l ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "end ;"
      ],
      "err_line": 35,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        35,
        47,
        0
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = l ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        26,
        35,
        36
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = l ;",
        "end ;"
      ],
      "err_line": 35,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        35,
        36,
        0
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = l ;",
        "end ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        26,
        35,
        0
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = l ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        26,
        31
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = 0 ;"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        47
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = 0 ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        47,
        36
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = 0 ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "end ;"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        47,
        0
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = 0 ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        26,
        31,
        36
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = 0 ;",
        "end ;"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        31,
        36,
        0
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = 0 ;",
        "end ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        26,
        31,
        0
      ],
      "mod_code": [
        "cin >> n , m ;",
        "f = 0 ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        26,
        47,
        36
      ],
      "mod_code": [
        "cin >> n , m ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "end ;"
      ],
      "err_line": 36,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        47,
        36,
        0
      ],
      "mod_code": [
        "cin >> n , m ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "end ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        26,
        47,
        0
      ],
      "mod_code": [
        "cin >> n , m ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        26,
        36
      ],
      "mod_code": [
        "cin >> n , m ;",
        "end ;"
      ],
      "err_line": 36,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        36,
        0
      ],
      "mod_code": [
        "cin >> n , m ;",
        "end ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        26,
        0
      ],
      "mod_code": [
        "cin >> n , m ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        35,
        31
      ],
      "mod_code": [
        "f = l ;",
        "f = 0 ;"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        31,
        47
      ],
      "mod_code": [
        "f = l ;",
        "f = 0 ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        31,
        47,
        36
      ],
      "mod_code": [
        "f = l ;",
        "f = 0 ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "end ;"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        31,
        47,
        0
      ],
      "mod_code": [
        "f = l ;",
        "f = 0 ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        35,
        31,
        36
      ],
      "mod_code": [
        "f = l ;",
        "f = 0 ;",
        "end ;"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        31,
        36,
        0
      ],
      "mod_code": [
        "f = l ;",
        "f = 0 ;",
        "end ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        35,
        31,
        0
      ],
      "mod_code": [
        "f = l ;",
        "f = 0 ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        35,
        47
      ],
      "mod_code": [
        "f = l ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )"
      ],
      "err_line": 35,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        47,
        36
      ],
      "mod_code": [
        "f = l ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "end ;"
      ],
      "err_line": 35,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        47,
        36,
        0
      ],
      "mod_code": [
        "f = l ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "end ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        35,
        47,
        0
      ],
      "mod_code": [
        "f = l ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        35,
        36
      ],
      "mod_code": [
        "f = l ;",
        "end ;"
      ],
      "err_line": 35,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        36,
        0
      ],
      "mod_code": [
        "f = l ;",
        "end ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        35,
        0
      ],
      "mod_code": [
        "f = l ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        31,
        47
      ],
      "mod_code": [
        "f = 0 ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        47,
        36
      ],
      "mod_code": [
        "f = 0 ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "end ;"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        47,
        36,
        0
      ],
      "mod_code": [
        "f = 0 ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "end ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        31,
        47,
        0
      ],
      "mod_code": [
        "f = 0 ;",
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        31,
        36
      ],
      "mod_code": [
        "f = 0 ;",
        "end ;"
      ],
      "err_line": 31,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        36,
        0
      ],
      "mod_code": [
        "f = 0 ;",
        "end ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        31,
        0
      ],
      "mod_code": [
        "f = 0 ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        47,
        36
      ],
      "mod_code": [
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "end ;"
      ],
      "err_line": 36,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        36,
        0
      ],
      "mod_code": [
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "end ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        47,
        0
      ],
      "mod_code": [
        "if ( s [ i ] [ ' tj ' ] == ' B ' )",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    },
    {
      "mod_line": [
        36,
        0
      ],
      "mod_code": [
        "end ;",
        "const mod int mod = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "‘mod’ does not name a type"
    }
  ]
}