{
  "meta": {
    "index": 1734,
    "hitid": "3E6L1VR4XWGRMK0JWBEE30KX4856FU",
    "workerid": "AIWEXPJAU66D9",
    "probid": "592A",
    "subid": "46957300"
  },
  "lines": [
    {
      "line": 0,
      "text": "define constant integer variable maxn = 15",
      "code": "const int maxn = 15 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "mod is a new constant integer with value 1000000007",
      "code": "const int mod = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create constant double eps = 1e10 - 7",
      "code": "const double eps = 1e10 - 7 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create new 2d array of characters mat with size 8 by 8",
      "code": "char mat [ 8 ] [ 8 ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read user input to mat [ i ] from i = 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ ) cin >> mat [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare ints Mina and Minb = 999999",
      "code": "int Mina = 999999 , Minb = 999999 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "start for loop from i = 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for j from 0 to 8 exclusive incrementing j",
      "code": "for ( int j = 0 ; j < 8 ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if mat [ j ] [ i ] = ' B ' , stop the loop",
      "code": "if ( mat [ j ] [ i ] == ' B ' ) break ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if mat [ j ] [ i ] = ' W '",
      "code": "if ( mat [ j ] [ i ] == ' W ' )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "assign min of Mina and j to Mina",
      "code": "Mina = min ( Mina , j ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 0 to 8 exclusive incrementing i",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for integer j = 7 to 0 inclusive counting down",
      "code": "for ( int j = 7 ; j >= 0 ; j -- )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if mat [ j ] [ i ] = ' W ' , stop the loop",
      "code": "if ( mat [ j ] [ i ] == ' W ' ) break ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if mat [ j ] [ i ] = ' B '",
      "code": "if ( mat [ j ] [ i ] == ' B ' )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "change Minb to min of Minb and 8 - j",
      "code": "Minb = min ( Minb , 8 - j ) ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if Mina is less than Minb",
      "code": "if ( Mina < Minb )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print \" A \" to stdout",
      "code": "puts ( \" A \" ) ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 28,
      "text": "print \" B \"",
      "code": "puts ( \" B \" ) ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const maxn = 15 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxn’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "char arr [ 8 ] [ 8 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘mat’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ ) cin >> mat [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "stdout << \" A \" ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘_IO_FILE*’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 27,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        21
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        21,
        26
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "stdout << \" A \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        21,
        26,
        12
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "stdout << \" A \" ;",
        "break the ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        21,
        26,
        25
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "stdout << \" A \" ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        21,
        26,
        27
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "stdout << \" A \" ;",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        21,
        12
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "break the ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        21,
        12,
        25
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "break the ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        21,
        12,
        27
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "break the ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        21,
        25
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        21,
        25,
        27
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "if ( Mina > Minb )",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        21,
        27
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        26
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "stdout << \" A \" ;"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘_IO_FILE*’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        28,
        26,
        12
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "stdout << \" A \" ;",
        "break the ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        26,
        12,
        25
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "stdout << \" A \" ;",
        "break the ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        26,
        12,
        27
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "stdout << \" A \" ;",
        "break the ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        26,
        25
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "stdout << \" A \" ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘_IO_FILE*’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        28,
        26,
        25,
        27
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "stdout << \" A \" ;",
        "if ( Mina > Minb )",
        "n"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘_IO_FILE*’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        28,
        26,
        27
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "stdout << \" A \" ;",
        "n"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘_IO_FILE*’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        28,
        12
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        12,
        25
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        12,
        25,
        27
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "if ( Mina > Minb )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        12,
        27
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "break the ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        28,
        25,
        27
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "if ( Mina > Minb )",
        "n"
      ],
      "err_line": 27,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        27
      ],
      "mod_code": [
        "cout << \" B \" ;",
        "n"
      ],
      "err_line": 27,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        26
      ],
      "mod_code": [
        "break the ;",
        "stdout << \" A \" ;"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        26,
        12
      ],
      "mod_code": [
        "break the ;",
        "stdout << \" A \" ;",
        "break the ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        26,
        12,
        25
      ],
      "mod_code": [
        "break the ;",
        "stdout << \" A \" ;",
        "break the ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        26,
        12,
        27
      ],
      "mod_code": [
        "break the ;",
        "stdout << \" A \" ;",
        "break the ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        26,
        25
      ],
      "mod_code": [
        "break the ;",
        "stdout << \" A \" ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        26,
        25,
        27
      ],
      "mod_code": [
        "break the ;",
        "stdout << \" A \" ;",
        "if ( Mina > Minb )",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        26,
        27
      ],
      "mod_code": [
        "break the ;",
        "stdout << \" A \" ;",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        12
      ],
      "mod_code": [
        "break the ;",
        "break the ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        12,
        25
      ],
      "mod_code": [
        "break the ;",
        "break the ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        12,
        25,
        27
      ],
      "mod_code": [
        "break the ;",
        "break the ;",
        "if ( Mina > Minb )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        12,
        27
      ],
      "mod_code": [
        "break the ;",
        "break the ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        25
      ],
      "mod_code": [
        "break the ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        25,
        27
      ],
      "mod_code": [
        "break the ;",
        "if ( Mina > Minb )",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        21,
        27
      ],
      "mod_code": [
        "break the ;",
        "n"
      ],
      "err_line": 21,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        26,
        12
      ],
      "mod_code": [
        "stdout << \" A \" ;",
        "break the ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        26,
        12,
        25
      ],
      "mod_code": [
        "stdout << \" A \" ;",
        "break the ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        26,
        12,
        25,
        27
      ],
      "mod_code": [
        "stdout << \" A \" ;",
        "break the ;",
        "if ( Mina > Minb )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        26,
        12,
        27
      ],
      "mod_code": [
        "stdout << \" A \" ;",
        "break the ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        26,
        25
      ],
      "mod_code": [
        "stdout << \" A \" ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘_IO_FILE*’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        26,
        25,
        27
      ],
      "mod_code": [
        "stdout << \" A \" ;",
        "if ( Mina > Minb )",
        "n"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘_IO_FILE*’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        26,
        27
      ],
      "mod_code": [
        "stdout << \" A \" ;",
        "n"
      ],
      "err_line": 26,
      "err_msg": "invalid operands of types ‘_IO_FILE*’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        12,
        25
      ],
      "mod_code": [
        "break the ;",
        "if ( Mina > Minb )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        12,
        25,
        27
      ],
      "mod_code": [
        "break the ;",
        "if ( Mina > Minb )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        12,
        27
      ],
      "mod_code": [
        "break the ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        25,
        27
      ],
      "mod_code": [
        "if ( Mina > Minb )",
        "n"
      ],
      "err_line": 27,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}