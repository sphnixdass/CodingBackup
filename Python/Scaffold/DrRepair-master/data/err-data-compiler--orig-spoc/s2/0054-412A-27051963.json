{
  "meta": {
    "index": 54,
    "hitid": "344M16OZKI97NR6F0HGPNTLJNXAENP",
    "workerid": "A1APYLD4DUK33J",
    "probid": "412A",
    "subid": "27051963"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string a",
      "code": "string a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if n / 2 is less than k",
      "code": "if ( n / 2 < k )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = k to n exclusive , print \" RIGHT \\ n \"",
      "code": "for ( int j = k ; j < n ; j ++ ) { cout << \" RIGHT\\n \" ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = n - 1 to 0 inclusive , decrementing j",
      "code": "for ( int j = n - 1 ; j >= 0 ; j -- )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print \" PRINT \" print a [ j ] print \" \\ n \"",
      "code": "cout << \" PRINT \" << a [ j ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if j is not 0 print \" LEFT \\ n \"",
      "code": "if ( j != 0 ) cout << \" LEFT\\n \" ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for j = k to 1 exclusive , decrementing j , print \" LEFT \\ n \"",
      "code": "for ( int j = k ; j > 1 ; j -- ) { cout << \" LEFT\\n \" ; }",
      "indent": 2
    },
    {
      "line": 13,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print \" PRINT \" print a [ j ] print \" \\ n \"",
      "code": "cout << \" PRINT \" << a [ j ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if j is not n - 1 , print \" RIGHT \\ n \"",
      "code": "if ( j != n - 1 ) cout << \" RIGHT\\n \" ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "n , k ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> k )"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 3,
      "err_msg": "conflicting declaration ‘std::__cxx11::string n’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = n - 1 ; j >= 0 ; j -- )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "<< \" PRINT \" << a [ j ] << \" \\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "<< \" PRINT \" << a [ j ] << \" \\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘<<’ token"
    }
  ]
}