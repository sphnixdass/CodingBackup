{
  "meta": {
    "index": 1277,
    "hitid": "3BA7SXOG1JKBTOOGGLB643U7C488R4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "959A",
    "subid": "48428247"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integers N = 1e5 + 10 and INF = 1e9 + 7",
      "code": "const int N = 1e5 + 10 , INF = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print \" Ehab \" is n modulo 2 is 1 , else print \" Mahmoud \" ; then print ' \\ n '",
      "code": "cout << ( ( n % 2 ) ? \" Ehab \" : \" Mahmoud \" ) << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << \" Ehab \" == n % 2 << \" \\n \" : \" Mahmoud \" ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int N = 1e5 + 10 and INF = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << \" Ehab \" == n % 2 << \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "cout << \" Ehab \" == n % 2 << \" \\n \" : \" Mahmoud \" ;",
        "const int N = 1e5 + 10 and INF = 1e9 + 7 ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0,
        3
      ],
      "mod_code": [
        "cout << \" Ehab \" == n % 2 << \" \\n \" : \" Mahmoud \" ;",
        "const int N = 1e5 + 10 and INF = 1e9 + 7 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0,
        3,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" == n % 2 << \" \\n \" : \" Mahmoud \" ;",
        "const int N = 1e5 + 10 and INF = 1e9 + 7 ;",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        0,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" == n % 2 << \" \\n \" : \" Mahmoud \" ;",
        "const int N = 1e5 + 10 and INF = 1e9 + 7 ;",
        "n ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "cout << \" Ehab \" == n % 2 << \" \\n \" : \" Mahmoud \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        4,
        3,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" == n % 2 << \" \\n \" : \" Mahmoud \" ;",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "cout << \" Ehab \" == n % 2 << \" \\n \" : \" Mahmoud \" ;",
        "n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "const int N = 1e5 + 10 and INF = 1e9 + 7 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        2
      ],
      "mod_code": [
        "const int N = 1e5 + 10 and INF = 1e9 + 7 ;",
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        2,
        4
      ],
      "mod_code": [
        "const int N = 1e5 + 10 and INF = 1e9 + 7 ;",
        "n = getchar ( ) ;",
        "n ;",
        "cout << \" Ehab \" == n % 2 << \" \\n \" ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3,
        4
      ],
      "mod_code": [
        "const int N = 1e5 + 10 and INF = 1e9 + 7 ;",
        "n = getchar ( ) ;",
        "cout << \" Ehab \" == n % 2 << \" \\n \" ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "const int N = 1e5 + 10 and INF = 1e9 + 7 ;",
        "n ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        4
      ],
      "mod_code": [
        "const int N = 1e5 + 10 and INF = 1e9 + 7 ;",
        "n ;",
        "cout << \" Ehab \" == n % 2 << \" \\n \" ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "const int N = 1e5 + 10 and INF = 1e9 + 7 ;",
        "cout << \" Ehab \" == n % 2 << \" \\n \" ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n ;",
        "cout << \" Ehab \" == n % 2 << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cout << \" Ehab \" == n % 2 << \" \\n \" ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "n ;",
        "cout << \" Ehab \" == n % 2 << \" \\n \" ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}