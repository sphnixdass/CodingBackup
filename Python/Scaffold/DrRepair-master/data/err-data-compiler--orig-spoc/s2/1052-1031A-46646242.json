{
  "meta": {
    "index": 1052,
    "hitid": "3UYRNV2KITTQEQWONEUPVJPXCUG8NO",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1031A",
    "subid": "46646242"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare new constant integer called maxn = 1e3 + 5",
      "code": "const int maxn = 1e3 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new int variables w , h and k",
      "code": "int w , h , k ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read input to w , h and k",
      "code": "cin >> w >> h >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer variable total = 0",
      "code": "int total = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer variable sum with value 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "change the value of sum to ( w + h - 2 ) * 2",
      "code": "sum = ( w + h - 2 ) * 2 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "in a for loop , change i from 1 to k inclusive",
      "code": "for ( int i = 1 ; i <= k ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "a is a new integer with value sum - 16 * ( i - 1 )",
      "code": "int a = sum - 16 * ( i - 1 ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "assign total + a to total",
      "code": "total = total + a ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print total",
      "code": "cout << total << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "const int w , h , k ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "int * total = 0 ;",
        "sum -= h - 2 ) * 2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "int * total = 0 ;",
        "sum -= h - 2 ) * 2 ;",
        "for ( i = 1 ; i <= k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        1
      ],
      "mod_code": [
        "int * total = 0 ;",
        "sum -= h - 2 ) * 2 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "const int w , h , k ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        11
      ],
      "mod_code": [
        "int * total = 0 ;",
        "sum -= h - 2 ) * 2 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ' total ' ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        8
      ],
      "mod_code": [
        "int * total = 0 ;",
        "sum -= h - 2 ) * 2 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        1
      ],
      "mod_code": [
        "int * total = 0 ;",
        "sum -= h - 2 ) * 2 ;",
        "const int w , h , k ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6,
        1,
        11
      ],
      "mod_code": [
        "int * total = 0 ;",
        "sum -= h - 2 ) * 2 ;",
        "const int w , h , k ;",
        "cout << ' total ' ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6,
        1,
        8
      ],
      "mod_code": [
        "int * total = 0 ;",
        "sum -= h - 2 ) * 2 ;",
        "const int w , h , k ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        6,
        11
      ],
      "mod_code": [
        "int * total = 0 ;",
        "sum -= h - 2 ) * 2 ;",
        "cout << ' total ' ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        11,
        8
      ],
      "mod_code": [
        "int * total = 0 ;",
        "sum -= h - 2 ) * 2 ;",
        "cout << ' total ' ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        6,
        8
      ],
      "mod_code": [
        "int * total = 0 ;",
        "sum -= h - 2 ) * 2 ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "int * total = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        1
      ],
      "mod_code": [
        "int * total = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "const int w , h , k ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        1,
        11
      ],
      "mod_code": [
        "int * total = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "const int w , h , k ;",
        "cout << ' total ' ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        1,
        8
      ],
      "mod_code": [
        "int * total = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "const int w , h , k ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        7,
        11
      ],
      "mod_code": [
        "int * total = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ' total ' ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        8
      ],
      "mod_code": [
        "int * total = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ' total ' ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "int * total = 0 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "int * total = 0 ;",
        "const int w , h , k ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        1,
        11
      ],
      "mod_code": [
        "int * total = 0 ;",
        "const int w , h , k ;",
        "cout << ' total ' ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        1,
        11,
        8
      ],
      "mod_code": [
        "int * total = 0 ;",
        "const int w , h , k ;",
        "cout << ' total ' ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        1,
        8
      ],
      "mod_code": [
        "int * total = 0 ;",
        "const int w , h , k ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        11,
        8
      ],
      "mod_code": [
        "int * total = 0 ;",
        "cout << ' total ' ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "int * total = 0 ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘-’ token"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "for ( i = 1 ; i <= k ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        7,
        1
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "const int w , h , k ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        1,
        11
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "const int w , h , k ;",
        "cout << ' total ' ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        1,
        8
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "const int w , h , k ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        7,
        11
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ' total ' ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        7,
        11,
        8
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ' total ' ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        7,
        8
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "for ( i = 1 ; i <= k ; i ++ )",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "const int w , h , k ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        1,
        11
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "const int w , h , k ;",
        "cout << ' total ' ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        1,
        11,
        8
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "const int w , h , k ;",
        "cout << ' total ' ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        1,
        8
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "const int w , h , k ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "cout << ' total ' ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        11,
        8
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "cout << ' total ' ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "sum -= h - 2 ) * 2 ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "const int w , h , k ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        1,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "const int w , h , k ;",
        "cout << ' total ' ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        1,
        11,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "const int w , h , k ;",
        "cout << ' total ' ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        1,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "const int w , h , k ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ' total ' ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "cout << ' total ' ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= k ; i ++ )",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "const int w , h , k ;",
        "cout << ' total ' ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        8
      ],
      "mod_code": [
        "const int w , h , k ;",
        "cout << ' total ' ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "const int w , h , k ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "uninitialized const ‘w’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "cout << ' total ' ;",
        "int a - 16 * ( i - 1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected initializer before ‘-’ token"
    }
  ]
}