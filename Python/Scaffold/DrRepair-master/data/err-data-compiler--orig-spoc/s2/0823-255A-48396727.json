{
  "meta": {
    "index": 823,
    "hitid": "3MD8CKRQZZH0D5KZ7P8XTT3LT2WRJC",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "255A",
    "subid": "48396727"
  },
  "lines": [
    {
      "line": 0,
      "text": "INF = 3f3f3f3f in exadecimal",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n , chest , bic , back = int",
      "code": "int n , chest , bic , back ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "chest , bic , back = 0",
      "code": "chest = bic = back = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "aux1 , aux2 , aux3 = int",
      "code": "int aux1 , aux2 , aux3 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to n inclusive by 3",
      "code": "for ( int i = 1 ; i <= n ; i += 3 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "aux1 , aux2 , aux3 = 0",
      "code": "aux1 = aux2 = aux3 = 0 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read aux1",
      "code": "cin >> aux1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if i + 1 < = n read aux2",
      "code": "if ( i + 1 <= n ) cin >> aux2 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if i + 2 < = n read aux3",
      "code": "if ( i + 2 <= n ) cin >> aux3 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "add aux1 to chest",
      "code": "chest += aux1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "add aux2 to bic",
      "code": "bic += aux2 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "add aux3 to back",
      "code": "back += aux3 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if chest < bic and chest < back",
      "code": "if ( chest > bic and chest > back )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" chest \"",
      "code": "cout << \" chest \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else if back > bic and back > chest",
      "code": "else if ( back > bic and back > chest )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" back \"",
      "code": "cout << \" back \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" biceps \"",
      "code": "cout << \" biceps \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , chest , bic , back , back ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int back’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int chest , bic , back = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int aux1 , aux2 , aux3 , aux3 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int aux3’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "aux1 ( aux1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘aux1’ cannot be used as a function"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "back . push_back ( aux3 ) ;"
      ],
      "err_line": 13,
      "err_msg": "request for member ‘push_back’ in ‘back’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "int aux1 = 0 , aux2 = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        7,
        15
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "int aux1 = 0 , aux2 = 0 ;",
        "if ( chest < bic && chest < back )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        7,
        15,
        16
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "int aux1 = 0 , aux2 = 0 ;",
        "if ( chest < bic && chest < back )",
        "cout << \" chest \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        7,
        15,
        18
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "int aux1 = 0 , aux2 = 0 ;",
        "if ( chest < bic && chest < back )",
        "cout << \" back \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        7,
        15,
        20
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "int aux1 = 0 , aux2 = 0 ;",
        "if ( chest < bic && chest < back )",
        "cout << \" biceps \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        7,
        16
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "int aux1 = 0 , aux2 = 0 ;",
        "cout << \" chest \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        7,
        16,
        18
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "int aux1 = 0 , aux2 = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        7,
        16,
        20
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "int aux1 = 0 , aux2 = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        7,
        18
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "int aux1 = 0 , aux2 = 0 ;",
        "cout << \" back \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        7,
        18,
        20
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "int aux1 = 0 , aux2 = 0 ;",
        "cout << \" back \" ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        7,
        20
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "int aux1 = 0 , aux2 = 0 ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "if ( chest < bic && chest < back )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        15,
        16
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "if ( chest < bic && chest < back )",
        "cout << \" chest \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        15,
        16,
        18
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "if ( chest < bic && chest < back )",
        "cout << \" chest \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        15,
        16,
        20
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "if ( chest < bic && chest < back )",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        15,
        18
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "if ( chest < bic && chest < back )",
        "cout << \" back \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        15,
        18,
        20
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "if ( chest < bic && chest < back )",
        "cout << \" back \" ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        15,
        20
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "if ( chest < bic && chest < back )",
        "cout << \" biceps \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "cout << \" chest \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        16,
        18
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        16,
        18,
        20
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" back \" ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        16,
        20
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "cout << \" back \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        18,
        20
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "cout << \" back \" ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "int chest = 0 , bic = 0 ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int chest’"
    }
  ]
}