{
  "meta": {
    "index": 2157,
    "hitid": "3I6NF2WGIGQ1HGW02CARTF6985TG5B",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "831A",
    "subid": "49080082"
  },
  "lines": [
    {
      "line": 0,
      "text": "MAXN = constant integer equal to 500010",
      "code": "const int MAXN = 500010 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a [ MAXN ] = integer array",
      "code": "int a [ MAXN ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let n be integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read n values into array a [ i ] excluding a [ 0 ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set ok to true",
      "code": "bool ok = true ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set a [ 0 ] = - 0x7f7f7f7f",
      "code": "a [ 0 ] = - 0x7f7f7f7f ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set integer i equal to 1",
      "code": "int i = 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to n inclusive",
      "code": "for ( ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if a [ i ] is greater than a [ i - 1 ]",
      "code": "if ( a [ i ] > a [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "count = integer = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i = 1 to n inclusive",
      "code": "for ( ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if a [ i ] is equal to a [ i - 1 ]",
      "code": "if ( a [ i ] == a [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 1 to n inclusive",
      "code": "for ( ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if a [ i ] is less than a [ i - 1 ]",
      "code": "if ( a [ i ] < a [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 27,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "if i is different from n + 1",
      "code": "if ( i != n + 1 )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "pint NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "otherwise",
      "code": "else",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "a [ MAXN ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "ok = true ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "n ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "i = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "count = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 20,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 26,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 31,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "ok = true ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        7
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "ok = true ;",
        "a [ 0 ] = ' - ' ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        7,
        9
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "ok = true ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        7,
        16
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "ok = true ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        7,
        23
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "ok = true ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        9
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        16
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        9,
        23
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        16
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        16,
        23
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        23
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "a [ 0 ] = ' - ' ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        16
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        23
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7,
        16
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7,
        16,
        23
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        7,
        23
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        9,
        16
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        9,
        16,
        23
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        9,
        23
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        16
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        16,
        23
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        23
      ],
      "mod_code": [
        "a [ MAXN ] ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "ok = true ;",
        "a [ 0 ] = ' - ' ;"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "ok = true ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        16
      ],
      "mod_code": [
        "ok = true ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9,
        23
      ],
      "mod_code": [
        "ok = true ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        16
      ],
      "mod_code": [
        "ok = true ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        16,
        23
      ],
      "mod_code": [
        "ok = true ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        23
      ],
      "mod_code": [
        "ok = true ;",
        "a [ 0 ] = ' - ' ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        16
      ],
      "mod_code": [
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        16,
        23
      ],
      "mod_code": [
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        23
      ],
      "mod_code": [
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16
      ],
      "mod_code": [
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        16,
        23
      ],
      "mod_code": [
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        23
      ],
      "mod_code": [
        "ok = true ;",
        "for ( int i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘ok’ was not declared in this scope"
    }
  ]
}