{
  "meta": {
    "index": 2377,
    "hitid": "3RBI0I35XEXYPSUWIZ84LIFTZ5SY31",
    "workerid": "A1AYVATMT88U1W",
    "probid": "62A",
    "subid": "44363306"
  },
  "lines": [
    {
      "line": 0,
      "text": "let INF be a constant integer with value as INF = 0x3f3f3f3f",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let i , j , k be integers",
      "code": "int i , j , k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let n , m be integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let a , b , c , d be integers",
      "code": "int a , b , c , d ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a , b , c , d",
      "code": "cin >> a >> b >> c >> d ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if ( ( c - ( b - 1 ) ) is less than 5 and c - b + 1 is greater than or equal to 0 )",
      "code": "if ( ( c - ( b - 1 ) ) < 5 && c - b + 1 >= 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print YES and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if ( ( d - ( a - 1 ) ) is less than 5 and d - a + 1 is greater than or equal to 0 )",
      "code": "if ( ( d - ( a - 1 ) ) < 5 && d - a + 1 >= 0 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print YES and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if ( ( c - ( b - 1 ) * 2 ) is less than 5 and c - ( b - 1 ) is greater than or equal to 0 )",
      "code": "if ( ( c - ( b - 1 ) * 2 ) < 5 && c - ( b - 1 ) >= 0 )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print YES and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if ( ( d - ( a - 1 ) * 2 ) is less than 5 and d - ( a - 1 ) is greater than or equal to 0 )",
      "code": "if ( ( d - ( a - 1 ) * 2 ) < 5 && d - ( a - 1 ) >= 0 )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print YES and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print NO and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const INF = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "if ( ( ( d - ( a - 1 ) ) < 5 && d - a + 1 ) >= 0 )",
        "const INF = 0x3f3f3f3f ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0,
        5
      ],
      "mod_code": [
        "if ( ( ( d - ( a - 1 ) ) < 5 && d - a + 1 ) >= 0 )",
        "const INF = 0x3f3f3f3f ;",
        "cin >> a >> b >> c , d ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "const INF = 0x3f3f3f3f ;",
        "cin >> a >> b >> c , d ;"
      ],
      "err_line": 0,
      "err_msg": "‘INF’ does not name a type"
    }
  ]
}