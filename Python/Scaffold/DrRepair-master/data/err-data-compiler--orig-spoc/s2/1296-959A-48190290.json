{
  "meta": {
    "index": 1296,
    "hitid": "3YOAVL4CA0BJCEN5EZF69UG1JZUZ4G",
    "workerid": "A1APYLD4DUK33J",
    "probid": "959A",
    "subid": "48190290"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long longs n , c with c = 0",
      "code": "long long n , c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n % 2 is 0",
      "code": "if ( n % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print \" Mahmoud \" print newline",
      "code": "cout << \" Mahmoud \" << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" Ehab \" print newline",
      "code": "cout << \" Ehab \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "<< \" Mahmoud \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "<< \" Ehab \" << endl ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "<< \" Ehab \" << endl ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        2,
        4
      ],
      "mod_code": [
        "<< \" Ehab \" << endl ;",
        "n = getchar ( ) ;",
        "<< \" Mahmoud \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        2,
        4,
        5
      ],
      "mod_code": [
        "<< \" Ehab \" << endl ;",
        "n = getchar ( ) ;",
        "<< \" Mahmoud \" << endl ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        2,
        5
      ],
      "mod_code": [
        "<< \" Ehab \" << endl ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "<< \" Ehab \" << endl ;",
        "<< \" Mahmoud \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        4,
        5
      ],
      "mod_code": [
        "<< \" Ehab \" << endl ;",
        "<< \" Mahmoud \" << endl ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "<< \" Ehab \" << endl ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "<< \" Mahmoud \" << endl ;"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "<< \" Mahmoud \" << endl ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "<< \" Mahmoud \" << endl ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "expected primary-expression before ‘<<’ token"
    }
  ]
}