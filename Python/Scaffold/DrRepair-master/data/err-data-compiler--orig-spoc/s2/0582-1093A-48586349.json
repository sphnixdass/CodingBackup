{
  "meta": {
    "index": 582,
    "hitid": "3BFF0DJK8X66SNGHY8M6L9VQCJ8STX",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1093A",
    "subid": "48586349"
  },
  "lines": [
    {
      "line": 0,
      "text": "set constant long long mod1 to 998244353",
      "code": "const long long mod1 = 998244353 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "set constant long long mod2 to 1000000007",
      "code": "const long long mod2 = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in the function pow with integer arguments a and b that returns long long",
      "code": "long long pow ( int a , int b )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "if b = 0 | | a = 1 return 1",
      "code": "if ( b == 0 || a == 1 ) return 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if b is even",
      "code": "if ( b % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare long long k = a in power b / 2",
      "code": "long long k = pow ( a , b / 2 ) ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "return k squared",
      "code": "return ( k * k ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare long long k = a in power b / 2",
      "code": "long long k = pow ( a , b / 2 ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "return k * k * a",
      "code": "return k * k * a ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 12,
      "text": "long long function powmod with long long arguments a , b and mod",
      "code": "long long powmod ( long long a , long long b , long long mod )",
      "indent": 0
    },
    {
      "line": 13,
      "text": "if b = 0 | | a = 1",
      "code": "if ( b == 0 || a == 1 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if mod = 1",
      "code": "if ( mod == 1 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if b is even",
      "code": "if ( b % 2 == 0 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "long long k = powmod of a , b / 2 and mod",
      "code": "long long k = powmod ( a , b / 2 , mod ) ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "return ( k * k ) % mod",
      "code": "return ( k * k ) % mod ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 23,
      "text": "long long k = powmod of a , b / 2 and mod",
      "code": "long long k = powmod ( a , b / 2 , mod ) ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "return ( ( k * k ) % mod * a ) % mod",
      "code": "return ( ( k * k ) % mod * a ) % mod ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 27,
      "text": "long long function gcd with long long arguments a and b",
      "code": "long long gcd ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 28,
      "text": "return b if a = 0",
      "code": "if ( a == 0 ) return b ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "return a if b = 0",
      "code": "if ( b == 0 ) return a ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "if a is greater than b",
      "code": "if ( a > b )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "return gcd of a % b and b",
      "code": "return gcd ( a % b , b ) ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 33,
      "text": "return gcd of b % a and a",
      "code": "return gcd ( b % a , a ) ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 35,
      "text": "prime is a integer function with integer argument p",
      "code": "int prime ( int p )",
      "indent": 0
    },
    {
      "line": 36,
      "text": "for integer i = 2 while i * i < = p",
      "code": "for ( int i = 2 ; i * i <= p ; i ++ )",
      "indent": 1
    },
    {
      "line": 37,
      "text": "if p % i = 0 & & i is less than p return 0",
      "code": "if ( p % i == 0 && i < p ) return 0 ;",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "return 1",
      "code": "return 1 ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 41,
      "text": "long long function sqr with long long argument i",
      "code": "long long sqr ( long long i )",
      "indent": 0
    },
    {
      "line": 42,
      "text": "return i * i",
      "code": "return i * i ;",
      "indent": 1
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 45,
      "text": "create integer a",
      "code": "int a ;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 47,
      "text": "declare integer array m with size a",
      "code": "int m [ a ] ;",
      "indent": 1
    },
    {
      "line": 48,
      "text": "declare integer array ans with size a",
      "code": "int ans [ a ] ;",
      "indent": 1
    },
    {
      "line": 49,
      "text": "for i = 0 to a exclusive",
      "code": "for ( int i = 0 ; i < a ; i ++ )",
      "indent": 1
    },
    {
      "line": 50,
      "text": "read m [ i ]",
      "code": "cin >> m [ i ] ;",
      "indent": 2
    },
    {
      "line": 51,
      "text": "if m [ i ] % 7 = 0",
      "code": "if ( m [ i ] % 7 == 0 )",
      "indent": 2
    },
    {
      "line": 52,
      "text": "ans [ i ] = m [ i ] / 7",
      "code": "ans [ i ] = m [ i ] / 7 ;",
      "indent": 3
    },
    {
      "line": 53,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 54,
      "text": "ans [ i ] = m [ i ] / 7 + 1",
      "code": "ans [ i ] = m [ i ] / 7 + 1 ;",
      "indent": 3
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 56,
      "text": "for i = 0 to a exclusive print ans [ i ] and \" \\ n \"",
      "code": "for ( int i = 0 ; i < a ; i ++ ) cout << ans [ i ] << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 57,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 58,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "long long powmod ( long long a , long long b , long long mod ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( b == 0 || a = 1 )"
      ],
      "err_line": 13,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "long long k = powmod ( a , b / 2 ) , mod ;"
      ],
      "err_line": 20,
      "err_msg": "too few arguments to function ‘long long int powmod(long long int, long long int, long long int)’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 22,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "long long k = powmod ( a , b / 2 ) , mod ;"
      ],
      "err_line": 23,
      "err_msg": "too few arguments to function ‘long long int powmod(long long int, long long int, long long int)’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "long long gcd ( long long a a , long long b )"
      ],
      "err_line": 27,
      "err_msg": "expected ‘,’ or ‘...’ before ‘a’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "return gcd ( a % b % b ) ;"
      ],
      "err_line": 31,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 32,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "return gcd ( b % a % a ) ;"
      ],
      "err_line": 33,
      "err_msg": "too few arguments to function ‘long long int gcd(long long int, long long int)’"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "int prime = int ( p ) ;"
      ],
      "err_line": 35,
      "err_msg": "‘p’ was not declared in this scope"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "long long sqr ( long long i ) ;"
      ],
      "err_line": 42,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 46,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "getline ( cin , a ) ;"
      ],
      "err_line": 46,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        47
      ],
      "mod_code": [
        "m [ a ] ;"
      ],
      "err_line": 47,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        48
      ],
      "mod_code": [
        "ans [ a ] ;"
      ],
      "err_line": 48,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        49
      ],
      "mod_code": [
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 49,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        50
      ],
      "mod_code": [
        "cin >> m . at ( i ) ;"
      ],
      "err_line": 50,
      "err_msg": "request for member ‘at’ in ‘m’, which is of non-class type ‘int [a]’"
    },
    {
      "mod_line": [
        53
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 53,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        16
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "n"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        16,
        12
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "n",
        "long long powmod ( long long a , long long b , long long mod ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        46,
        16,
        12,
        49
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "n",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        46,
        16,
        12,
        0
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "n",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        46,
        16,
        12,
        52
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "n",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        46,
        16,
        49
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "n",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        16,
        49,
        0
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "n",
        "for ( i = 0 ; i < a ; i ++ )",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        46,
        16,
        49,
        52
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "n",
        "for ( i = 0 ; i < a ; i ++ )",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        16,
        0
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "n",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        46,
        16,
        0,
        52
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "n",
        "const long long const mod1 = 998244353 ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        46,
        16,
        52
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "n",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        12
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "long long powmod ( long long a , long long b , long long mod ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        46,
        12,
        49
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        46,
        12,
        49,
        0
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "for ( i = 0 ; i < a ; i ++ )",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        46,
        12,
        49,
        52
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "for ( i = 0 ; i < a ; i ++ )",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        46,
        12,
        0
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        46,
        12,
        0,
        52
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "const long long const mod1 = 998244353 ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        46,
        12,
        52
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        46,
        49
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 46,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        46,
        49,
        0
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "for ( i = 0 ; i < a ; i ++ )",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        46,
        49,
        0,
        52
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "for ( i = 0 ; i < a ; i ++ )",
        "const long long const mod1 = 998244353 ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        46,
        49,
        52
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "for ( i = 0 ; i < a ; i ++ )",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 46,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        46,
        0
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        46,
        0,
        52
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "const long long const mod1 = 998244353 ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        46,
        52
      ],
      "mod_code": [
        "getline ( cin , a ) ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 46,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        16,
        12
      ],
      "mod_code": [
        "n",
        "long long powmod ( long long a , long long b , long long mod ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        12,
        49
      ],
      "mod_code": [
        "n",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        12,
        49,
        0
      ],
      "mod_code": [
        "n",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "for ( i = 0 ; i < a ; i ++ )",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        12,
        49,
        52
      ],
      "mod_code": [
        "n",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "for ( i = 0 ; i < a ; i ++ )",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        12,
        0
      ],
      "mod_code": [
        "n",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        12,
        0,
        52
      ],
      "mod_code": [
        "n",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "const long long const mod1 = 998244353 ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        12,
        52
      ],
      "mod_code": [
        "n",
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        16,
        49
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        49,
        0
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < a ; i ++ )",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        49,
        0,
        52
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < a ; i ++ )",
        "const long long const mod1 = 998244353 ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        49,
        52
      ],
      "mod_code": [
        "n",
        "for ( i = 0 ; i < a ; i ++ )",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        0
      ],
      "mod_code": [
        "n",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        0,
        52
      ],
      "mod_code": [
        "n",
        "const long long const mod1 = 998244353 ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        16,
        52
      ],
      "mod_code": [
        "n",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        49
      ],
      "mod_code": [
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        49,
        0
      ],
      "mod_code": [
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "for ( i = 0 ; i < a ; i ++ )",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        12,
        49,
        0,
        52
      ],
      "mod_code": [
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "for ( i = 0 ; i < a ; i ++ )",
        "const long long const mod1 = 998244353 ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        12,
        49,
        52
      ],
      "mod_code": [
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "for ( i = 0 ; i < a ; i ++ )",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        12,
        0,
        52
      ],
      "mod_code": [
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "const long long const mod1 = 998244353 ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        12,
        52
      ],
      "mod_code": [
        "long long powmod ( long long a , long long b , long long mod ) ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 13,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < a ; i ++ )",
        "const long long const mod1 = 998244353 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        49,
        0,
        52
      ],
      "mod_code": [
        "for ( i = 0 ; i < a ; i ++ )",
        "const long long const mod1 = 998244353 ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    },
    {
      "mod_line": [
        49,
        52
      ],
      "mod_code": [
        "for ( i = 0 ; i < a ; i ++ )",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 49,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        52
      ],
      "mod_code": [
        "const long long const mod1 = 998244353 ;",
        "ans [ i ] /= 7 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘const’"
    }
  ]
}