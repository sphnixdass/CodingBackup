{
  "meta": {
    "index": 1936,
    "hitid": "3H781YYV6TC5I4BZXD21WSRBCFUTE3",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "758A",
    "subid": "48475894"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integers = n , a [ 105 ] , i , s",
      "code": "int n , a [ 105 ] , i , s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while inputting n loop the following",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set s to 0",
      "code": "s = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "read n values in array a",
      "code": "for ( i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if n is 1 then do the following",
      "code": "if ( n == 1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "output s",
      "code": "cout << s << endl ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "sort the values of a to a + n",
      "code": "sort ( a , a + n ) ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "for = 0 to less than n - 1 add a [ n - 1 ] - a [ i ] to s",
      "code": "for ( i = 0 ; i < n - 1 ; i ++ ) { s += ( a [ n - 1 ] - a [ i ] ) ; }",
      "indent": 3
    },
    {
      "line": 10,
      "text": "output s",
      "code": "cout << s << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a [ 105 ] >> i , s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( { cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "while ( n == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "sort ( a + a + n ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [105]’ and ‘int [105]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) s = s [ n - 1 ] - a [ i ] ;"
      ],
      "err_line": 9,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "while ( { cin >> n )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        2,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "while ( { cin >> n )",
        "int n , a [ 105 ] >> i , s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        2,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "while ( { cin >> n )",
        "int n , a [ 105 ] >> i , s ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        2,
        1,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "while ( { cin >> n )",
        "int n , a [ 105 ] >> i , s ;",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        2,
        1,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "while ( { cin >> n )",
        "int n , a [ 105 ] >> i , s ;",
        "while ( n == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        2,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "while ( { cin >> n )",
        "n"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        2,
        7,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "while ( { cin >> n )",
        "n",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        2,
        7,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "while ( { cin >> n )",
        "n",
        "while ( n == 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        2,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "while ( { cin >> n )",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        2,
        8,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "while ( { cin >> n )",
        "sort ( a + a + n ) ;",
        "while ( n == 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        2,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "while ( { cin >> n )",
        "while ( n == 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "int n , a [ 105 ] >> i , s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        1,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "int n , a [ 105 ] >> i , s ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        1,
        7,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "int n , a [ 105 ] >> i , s ;",
        "n",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        1,
        7,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "int n , a [ 105 ] >> i , s ;",
        "n",
        "while ( n == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        1,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "int n , a [ 105 ] >> i , s ;",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        1,
        8,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "int n , a [ 105 ] >> i , s ;",
        "sort ( a + a + n ) ;",
        "while ( n == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        1,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "int n , a [ 105 ] >> i , s ;",
        "while ( n == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        7,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "n",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        7,
        8,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "n",
        "sort ( a + a + n ) ;",
        "while ( n == 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        7,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "n",
        "while ( n == 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 8,
      "err_msg": "invalid operands of types ‘int [105]’ and ‘int [105]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        9,
        8,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "sort ( a + a + n ) ;",
        "while ( n == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; s < n - 1 ; i ++ ) { s = s [ n - 1 ] - a [ i ] ; }",
        "while ( n == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "int n , a [ 105 ] >> i , s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        1,
        7
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "int n , a [ 105 ] >> i , s ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        1,
        7,
        8
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "int n , a [ 105 ] >> i , s ;",
        "n",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        1,
        7,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "int n , a [ 105 ] >> i , s ;",
        "n",
        "while ( n == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        1,
        8
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "int n , a [ 105 ] >> i , s ;",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        1,
        8,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "int n , a [ 105 ] >> i , s ;",
        "sort ( a + a + n ) ;",
        "while ( n == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        1,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "int n , a [ 105 ] >> i , s ;",
        "while ( n == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "n"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "n",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        8,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "n",
        "sort ( a + a + n ) ;",
        "while ( n == 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "n",
        "while ( n == 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        8,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "sort ( a + a + n ) ;",
        "while ( n == 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "while ( { cin >> n )",
        "while ( n == 1 )"
      ],
      "err_line": 2,
      "err_msg": "expected primary-expression before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , a [ 105 ] >> i , s ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        1,
        7,
        8
      ],
      "mod_code": [
        "int n , a [ 105 ] >> i , s ;",
        "n",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        1,
        7,
        8,
        5
      ],
      "mod_code": [
        "int n , a [ 105 ] >> i , s ;",
        "n",
        "sort ( a + a + n ) ;",
        "while ( n == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        1,
        7,
        5
      ],
      "mod_code": [
        "int n , a [ 105 ] >> i , s ;",
        "n",
        "while ( n == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , a [ 105 ] >> i , s ;",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        1,
        8,
        5
      ],
      "mod_code": [
        "int n , a [ 105 ] >> i , s ;",
        "sort ( a + a + n ) ;",
        "while ( n == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , a [ 105 ] >> i , s ;",
        "while ( n == 1 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "n",
        "sort ( a + a + n ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8,
        5
      ],
      "mod_code": [
        "n",
        "sort ( a + a + n ) ;",
        "while ( n == 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "n",
        "while ( n == 1 )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "sort ( a + a + n ) ;",
        "while ( n == 1 )"
      ],
      "err_line": 7,
      "err_msg": "‘else’ without a previous ‘if’"
    }
  ]
}