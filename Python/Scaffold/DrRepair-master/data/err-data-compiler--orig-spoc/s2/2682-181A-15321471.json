{
  "meta": {
    "index": 2682,
    "hitid": "32PT7WK7DM9VRHZ5M3LQ8X5SHHND39",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "181A",
    "subid": "15321471"
  },
  "lines": [
    {
      "line": 0,
      "text": "set constant int maxn = 100",
      "code": "const int maxn = 100 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n , m , int arrays a and b of length 3 , set t = 0",
      "code": "int n , m , a [ 3 ] , b [ 3 ] , t = 0 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create char x",
      "code": "char x ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if x = *",
      "code": "if ( x == ' * ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "a [ t ] = i",
      "code": "a [ t ] = i ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "b [ t + + ] = j",
      "code": "b [ t ++ ] = j ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if ( a [ 0 ] = a [ 1 ] and b [ 0 ] = b [ 2 ] )",
      "code": "if ( a [ 0 ] == a [ 1 ] && b [ 0 ] == b [ 2 ] )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print a [ 2 ] + 1 , \" \" , b [ 1 ] + 1",
      "code": "cout << a [ 2 ] + 1 << \" \" << b [ 1 ] + 1 << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else if a [ 0 ] = a [ 2 ] and b [ 0 ] = b [ 1 ]",
      "code": "else if ( a [ 0 ] == a [ 2 ] && b [ 0 ] == b [ 1 ] )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print a [ 1 ] + 1 , \" \" , b [ 2 ] + 1",
      "code": "cout << a [ 1 ] + 1 << \" \" << b [ 2 ] + 1 << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "otherwise if a [ 1 ] = a [ 0 ] and b [ 1 ] = b [ 2 ]",
      "code": "else if ( a [ 1 ] == a [ 0 ] && b [ 1 ] == b [ 2 ] )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print a [ 2 ] + 1 , \" \" , b [ 0 ] + 1",
      "code": "cout << a [ 2 ] + 1 << \" \" << b [ 0 ] + 1 << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "else if a [ 1 ] equal to a [ 2 ] and b [ 1 ] equal to b [ 0 ]",
      "code": "else if ( a [ 1 ] == a [ 2 ] && b [ 1 ] == b [ 0 ] )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print a [ 0 ] + 1 , \" \" , b [ 2 ] + 1",
      "code": "cout << a [ 0 ] + 1 << \" \" << b [ 2 ] + 1 << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "other if ( a [ 2 ] = a [ 1 ] and b [ 2 ] = b [ 0 ]",
      "code": "else if ( a [ 2 ] == a [ 1 ] && b [ 2 ] == b [ 0 ] )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print a [ 0 ] + 1 , \" \" , b [ 1 ] + 1",
      "code": "cout << a [ 0 ] + 1 << \" \" << b [ 1 ] + 1 << endl ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "otherwise if a [ 2 ] = a [ 0 ] and b [ 2 ] = a [ 1 ]",
      "code": "else if ( a [ 2 ] == a [ 0 ] && b [ 2 ] == a [ 1 ] )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print a [ 1 ] + 1 , \" \" , b [ 0 ] + 1",
      "code": "cout << a [ 1 ] + 1 << \" \" << b [ 0 ] + 1 << endl ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a [ 3 ] , t [ 3 ] , t = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int t’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char * x ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( x == \" * \" )"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "b [ t + ] ] = j ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "char * x ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "char * x ;",
        "if ( x == \" * \" )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        7
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "char * x ;",
        "if ( x == \" * \" )",
        "x = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        20
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "char * x ;",
        "if ( x == \" * \" )",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        9
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "char * x ;",
        "if ( x == \" * \" )",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        7
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "char * x ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        20
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "char * x ;",
        "x = getchar ( ) ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        7,
        9
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "char * x ;",
        "x = getchar ( ) ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        20
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "char * x ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        20,
        9
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "char * x ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        9
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "char * x ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "if ( x == \" * \" )"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        7
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "if ( x == \" * \" )",
        "x = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        7,
        20
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "if ( x == \" * \" )",
        "x = getchar ( ) ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        7,
        9
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "if ( x == \" * \" )",
        "x = getchar ( ) ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        20
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "if ( x == \" * \" )",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        20,
        9
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "if ( x == \" * \" )",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "if ( x == \" * \" )",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        20
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "x = getchar ( ) ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        20,
        9
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "x = getchar ( ) ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "x = getchar ( ) ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        20,
        9
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , a [ 3 ] , b [ 3 ] , t = 0 ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        7
      ],
      "mod_code": [
        "char * x ;",
        "if ( x == \" * \" )",
        "x = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        7,
        20
      ],
      "mod_code": [
        "char * x ;",
        "if ( x == \" * \" )",
        "x = getchar ( ) ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        8,
        7,
        9
      ],
      "mod_code": [
        "char * x ;",
        "if ( x == \" * \" )",
        "x = getchar ( ) ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "char * x ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        7,
        20
      ],
      "mod_code": [
        "char * x ;",
        "x = getchar ( ) ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        7,
        20,
        9
      ],
      "mod_code": [
        "char * x ;",
        "x = getchar ( ) ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        7,
        9
      ],
      "mod_code": [
        "char * x ;",
        "x = getchar ( ) ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20
      ],
      "mod_code": [
        "char * x ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        20,
        9
      ],
      "mod_code": [
        "char * x ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "char * x ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "if ( x == \" * \" )",
        "x = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        20
      ],
      "mod_code": [
        "if ( x == \" * \" )",
        "x = getchar ( ) ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        20,
        9
      ],
      "mod_code": [
        "if ( x == \" * \" )",
        "x = getchar ( ) ;",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        7,
        9
      ],
      "mod_code": [
        "if ( x == \" * \" )",
        "x = getchar ( ) ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "if ( x == \" * \" )",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        20,
        9
      ],
      "mod_code": [
        "if ( x == \" * \" )",
        "cout << a [ 2 ] << 1 << \" \" << b [ 0 ] + 1 << endl ;",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "if ( x == \" * \" )",
        "a [ t ++ ] = i ;"
      ],
      "err_line": 8,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    }
  ]
}