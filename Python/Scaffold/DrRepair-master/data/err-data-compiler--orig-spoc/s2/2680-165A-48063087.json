{
  "meta": {
    "index": 2680,
    "hitid": "3Y40HMYLL1CTOHH5SNI3PDYKBZCXU7",
    "workerid": "AIWEXPJAU66D9",
    "probid": "165A",
    "subid": "48063087"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n and supercentral with supercentral = 0 , and integer arrays x and y with 200 elements each",
      "code": "int n , x [ 200 ] , y [ 200 ] , supercentral ( 0 ) ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive read x [ i ] and y [ i ]",
      "code": "for ( int i = 0 ; i < n ; ++ i ) { cin >> x [ i ] >> y [ i ] ; }",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare int variable bit = 15",
      "code": "int bit = 15 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for integer j = 0 while j < n and bit ! = 0 exclusive",
      "code": "for ( int j = 0 ; j < n && bit != 0 ; ++ j )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if x [ j ] = x [ i ]",
      "code": "if ( x [ j ] == x [ i ] )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if y [ j ] is less than y [ i ] , set bit to bit & ( 15 - 1 )",
      "code": "if ( y [ j ] < y [ i ] ) { bit &= ( 15 - 1 ) ; }",
      "indent": 4
    },
    {
      "line": 9,
      "text": "if y [ j ] is greater than y [ i ] , set bit to bit & ( 15 - 2 )",
      "code": "if ( y [ j ] > y [ i ] ) { bit &= ( 15 - 2 ) ; }",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if y [ j ] = y [ i ]",
      "code": "if ( y [ j ] == y [ i ] )",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if x [ j ] is less than x [ i ] , set bit to bit & ( 15 - 4 )",
      "code": "if ( x [ j ] < x [ i ] ) { bit &= ( 15 - 4 ) ; }",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if x [ j ] is greater than x [ i ] , set bit to bit & ( 15 - 8 )",
      "code": "if ( x [ j ] > x [ i ] ) { bit &= ( 15 - 8 ) ; }",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "if bit = 0 , add 1 to supercentral",
      "code": "if ( bit == 0 ) { supercentral += 1 ; }",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print supercentral",
      "code": "cout << supercentral << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , x [ 200 ] , y [ 200 ] , y [ 200 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        12
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        13
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        4
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        8,
        12
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        13
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        8,
        12,
        4
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        8,
        13
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        8,
        13,
        4
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        8,
        4
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        9,
        12
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        9,
        12,
        13
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        9,
        12,
        4
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        9,
        13
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        4
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        9,
        4
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        12,
        13
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        12,
        13,
        4
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        12,
        4
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        13,
        4
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , supercentral [ 200 ] , y [ 200 ] , y [ 200 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y [200]’"
    },
    {
      "mod_line": [
        8,
        9,
        12,
        4
      ],
      "mod_code": [
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        4
      ],
      "mod_code": [
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        9,
        4
      ],
      "mod_code": [
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        13,
        4
      ],
      "mod_code": [
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        12,
        4
      ],
      "mod_code": [
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13,
        4
      ],
      "mod_code": [
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "if ( y [ j ] < y [ i ] ) bit += ( 15 - 1 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        13,
        4
      ],
      "mod_code": [
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12,
        4
      ],
      "mod_code": [
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        13,
        4
      ],
      "mod_code": [
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( y [ j ] > y [ i ] ) bit += ( 15 - 2 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        13,
        4
      ],
      "mod_code": [
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "if ( x [ j ] < x [ i ] ) bit += ( 15 - 4 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "if ( x [ j ] > x [ i ] ) bit += ( 15 - 8 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}