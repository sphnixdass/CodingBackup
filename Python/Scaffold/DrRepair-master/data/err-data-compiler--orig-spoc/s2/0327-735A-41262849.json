{
  "meta": {
    "index": 327,
    "hitid": "3KTZHH2ONI9KW8BOBDFPI40X7488MQ",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "735A",
    "subid": "41262849"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read n and k",
      "code": "while ( cin >> n >> k )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string s",
      "code": "string s ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "set Start to 0 and End to n - 1",
      "code": "int Start = 0 , End = n - 1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s [ i ] = G",
      "code": "if ( s [ i ] == ' G ' )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set Start = i",
      "code": "Start = i ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else if s [ i ] = T",
      "code": "else if ( s [ i ] == ' T ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "set End to i",
      "code": "End = i ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set flag to true",
      "code": "bool flag = true ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set tmp to max ( Start , End ) - min ( Start , End )",
      "code": "int tmp = max ( Start , End ) - min ( Start , End ) ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if tmp mod k different from 0",
      "code": "if ( tmp % k != 0 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "assign false to flag",
      "code": "flag = false ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if Start > End",
      "code": "if ( Start > End )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "for i = Start to End inclusive , with increment i = i - k",
      "code": "for ( int i = Start ; i >= End ; i -= k )",
      "indent": 4
    },
    {
      "line": 20,
      "text": "if s [ i ] = #",
      "code": "if ( s [ i ] == ' # ' )",
      "indent": 5
    },
    {
      "line": 21,
      "text": "set flag to false",
      "code": "flag = false ;",
      "indent": 6
    },
    {
      "line": 22,
      "text": "break",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 26,
      "text": "for i = Start to End inclusive",
      "code": "for ( int i = Start ; i <= End ; i += k )",
      "indent": 4
    },
    {
      "line": 27,
      "text": "if s [ i ] = ' #",
      "code": "if ( s [ i ] == ' # ' )",
      "indent": 5
    },
    {
      "line": 28,
      "text": "set flag to false",
      "code": "flag = false ;",
      "indent": 6
    },
    {
      "line": 29,
      "text": "break",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "if flag different from 0",
      "code": "if ( flag )",
      "indent": 2
    },
    {
      "line": 35,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 37,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "flag = true ;"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "tmp = max ( Start , End ) - min ( Start , End ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 5,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( s [ i ] == G )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( s [ i ] == T )"
      ],
      "err_line": 9,
      "err_msg": "‘T’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 26,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "for ( i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 26,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 37,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "flag = true ;"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        14
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "flag = true ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        19
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "flag = true ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        26
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "flag = true ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        14,
        19
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "flag = true ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        19
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "flag = true ;",
        "for ( int i = Start ; i <= End ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        26
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "flag = true ;",
        "for ( int i = Start ; i <= End ; i += k )",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        26
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "flag = true ;",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        26,
        19
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "flag = true ;",
        "for ( int i = Start ; i <= End ; i ++ )",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13,
        19
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "flag = true ;",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        19
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        19,
        26
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i += k )",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        26
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        26,
        19
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i ++ )",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14,
        19
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "for ( int i = Start ; i <= End ; i += k )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        19,
        26
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "for ( int i = Start ; i <= End ; i += k )",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        26
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        26,
        19
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "for ( int i = Start ; i <= End ; i ++ )",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "Start = 0 , End = n - 1 ;",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 4,
      "err_msg": "‘Start’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14
      ],
      "mod_code": [
        "flag = true ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19
      ],
      "mod_code": [
        "flag = true ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19,
        26
      ],
      "mod_code": [
        "flag = true ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i += k )",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        26
      ],
      "mod_code": [
        "flag = true ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        26,
        19
      ],
      "mod_code": [
        "flag = true ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i ++ )",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        14,
        19
      ],
      "mod_code": [
        "flag = true ;",
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = Start ; i <= End ; i += k )"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19,
        26
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = Start ; i <= End ; i += k )",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        26,
        19
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = Start ; i <= End ; i ++ )",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "flag = true ;",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 13,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i += k )"
      ],
      "err_line": 14,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19,
        26
      ],
      "mod_code": [
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i += k )",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26
      ],
      "mod_code": [
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        26,
        19
      ],
      "mod_code": [
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i ++ )",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 14,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "tmp = max ( Start , End ) - min ( Start , End ) ;",
        "for ( int i = Start ; i <= End ; i = i - k )"
      ],
      "err_line": 14,
      "err_msg": "‘tmp’ was not declared in this scope"
    }
  ]
}