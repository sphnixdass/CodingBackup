{
  "meta": {
    "index": 673,
    "hitid": "3FHTJGYT8NU5AQEJMRJ5RLBQ0SRPGE",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1020A",
    "subid": "49042978"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variables n , h , a , b , k and s",
      "code": "int n , h , a , b , k , s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read standard input to n , h , a , b and k",
      "code": "cin >> n >> h >> a >> b >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create new integers t1 , f1 , t2 and f2",
      "code": "int t1 , f1 , t2 , f2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i from 0 to k exclusive incrementing i",
      "code": "for ( int i = 0 ; i < k ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "assign 0 to s",
      "code": "s = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read t1 , f1 , t2 and f2 from the input",
      "code": "cin >> t1 >> f1 >> t2 >> f2 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if t2 is greater than t1",
      "code": "if ( t2 > t1 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if f1 < = b and f1 > = a",
      "code": "if ( f1 <= b && f1 >= a )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "change s to s + t2 - t1",
      "code": "s = s + t2 - t1 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "if f2 > = f1",
      "code": "if ( f2 >= f1 )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set s to s + f2 - f1",
      "code": "s = s + f2 - f1 ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 13,
      "text": "change s to s + f1 - f2",
      "code": "s = s + f1 - f2 ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else if f1 is less than a",
      "code": "else if ( f1 < a )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "set s to s + t2 - t1 + a - f1",
      "code": "s = s + t2 - t1 + a - f1 ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "if f2 > = a",
      "code": "if ( f2 >= a )",
      "indent": 4
    },
    {
      "line": 18,
      "text": "set s to s + f2 - a",
      "code": "s = s + f2 - a ;",
      "indent": 5
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 20,
      "text": "change the value of s to s + a - f2",
      "code": "s = s + a - f2 ;",
      "indent": 5
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 22,
      "text": "else if f1 is greater than b",
      "code": "else if ( f1 > b )",
      "indent": 3
    },
    {
      "line": 23,
      "text": "change s to s + t2 - t1 + f1 - b",
      "code": "s = s + t2 - t1 + f1 - b ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "if f2 > = b",
      "code": "if ( f2 >= b )",
      "indent": 4
    },
    {
      "line": 25,
      "text": "set new value of s to s + f2 - b",
      "code": "s = s + f2 - b ;",
      "indent": 5
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 27,
      "text": "assign s + b - f2 to s",
      "code": "s = s + b - f2 ;",
      "indent": 5
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 30,
      "text": "else if t1 is greater than t2",
      "code": "else if ( t1 > t2 )",
      "indent": 2
    },
    {
      "line": 31,
      "text": "if f1 < = b and f1 > = a",
      "code": "if ( f1 <= b && f1 >= a )",
      "indent": 3
    },
    {
      "line": 32,
      "text": "assign s + t1 - t2 to s",
      "code": "s = s + t1 - t2 ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "if f2 > = f1",
      "code": "if ( f2 >= f1 )",
      "indent": 4
    },
    {
      "line": 34,
      "text": "assign value of s + f2 - f1 to s",
      "code": "s = s + f2 - f1 ;",
      "indent": 5
    },
    {
      "line": 35,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 36,
      "text": "change s to s + f1 - f2",
      "code": "s = s + f1 - f2 ;",
      "indent": 5
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 38,
      "text": "else if f1 is less than a",
      "code": "else if ( f1 < a )",
      "indent": 3
    },
    {
      "line": 39,
      "text": "assign s + t1 - t2 + a - f1 to s",
      "code": "s = s + t1 - t2 + a - f1 ;",
      "indent": 4
    },
    {
      "line": 40,
      "text": "if f2 > = a",
      "code": "if ( f2 >= a )",
      "indent": 4
    },
    {
      "line": 41,
      "text": "change s to s + f2 - a",
      "code": "s = s + f2 - a ;",
      "indent": 5
    },
    {
      "line": 42,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 43,
      "text": "assign s + a - f2 to s",
      "code": "s = s + a - f2 ;",
      "indent": 5
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 45,
      "text": "else if f1 is greater than b",
      "code": "else if ( f1 > b )",
      "indent": 3
    },
    {
      "line": 46,
      "text": "change s to s + t1 - t2 + f1 - b",
      "code": "s = s + t1 - t2 + f1 - b ;",
      "indent": 4
    },
    {
      "line": 47,
      "text": "if f2 > = b",
      "code": "if ( f2 >= b )",
      "indent": 4
    },
    {
      "line": 48,
      "text": "assign s + f2 - b to s",
      "code": "s = s + f2 - b ;",
      "indent": 5
    },
    {
      "line": 49,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 50,
      "text": "assign s + b - f2 to s",
      "code": "s = s + b - f2 ;",
      "indent": 5
    },
    {
      "line": 51,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 52,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 53,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 54,
      "text": "if f2 > = f1",
      "code": "if ( f2 >= f1 )",
      "indent": 3
    },
    {
      "line": 55,
      "text": "change s to s + f2 - f1",
      "code": "s = s + f2 - f1 ;",
      "indent": 4
    },
    {
      "line": 56,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 57,
      "text": "set s to s + f1 - f2",
      "code": "s = s + f1 - f2 ;",
      "indent": 4
    },
    {
      "line": 58,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 59,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 60,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 2
    },
    {
      "line": 61,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 62,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 63,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , h , a , b , k >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 36,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 43,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 50,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        53
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 54,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        56
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 57,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        49
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        49,
        26
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        49,
        26,
        6
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        49,
        26,
        53
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "n",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        49,
        26,
        2
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        49,
        6
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        49,
        6,
        53
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        49,
        6,
        2
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        49,
        53
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        49,
        53,
        2
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        49,
        2
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        26
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        26,
        6
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        26,
        6,
        53
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        26,
        6,
        2
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        26,
        53
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        26,
        53,
        2
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        26,
        2
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        53
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        53,
        2
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        53
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        53,
        2
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "t1 , f1 , t2 , f2 ;",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘t1’ was not declared in this scope"
    },
    {
      "mod_line": [
        49,
        26
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        26,
        6
      ],
      "mod_code": [
        "n",
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        26,
        6,
        53
      ],
      "mod_code": [
        "n",
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "n"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        26,
        6,
        2
      ],
      "mod_code": [
        "n",
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        26,
        53
      ],
      "mod_code": [
        "n",
        "n",
        "n"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        26,
        53,
        2
      ],
      "mod_code": [
        "n",
        "n",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        26,
        2
      ],
      "mod_code": [
        "n",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        6
      ],
      "mod_code": [
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;"
      ],
      "err_line": 50,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        6,
        53
      ],
      "mod_code": [
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "n"
      ],
      "err_line": 50,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        6,
        53,
        2
      ],
      "mod_code": [
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 50,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        6,
        2
      ],
      "mod_code": [
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 50,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        53
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 50,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        53,
        2
      ],
      "mod_code": [
        "n",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 50,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        49,
        2
      ],
      "mod_code": [
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 50,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        6
      ],
      "mod_code": [
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        6,
        53
      ],
      "mod_code": [
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "n"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        6,
        53,
        2
      ],
      "mod_code": [
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        6,
        2
      ],
      "mod_code": [
        "n",
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53,
        2
      ],
      "mod_code": [
        "n",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        2
      ],
      "mod_code": [
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 27,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        53
      ],
      "mod_code": [
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "n"
      ],
      "err_line": 54,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        53,
        2
      ],
      "mod_code": [
        "cin >> t1 >> f1 >> t2 >> f2 >> f2 ;",
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        53,
        2
      ],
      "mod_code": [
        "n",
        "cin >> n >> h >> a , b >> k ;"
      ],
      "err_line": 54,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}