{
  "meta": {
    "index": 266,
    "hitid": "3TL87MO8CMJ9553QJFKGSJ2UTGULF6",
    "workerid": "A1AYVATMT88U1W",
    "probid": "895A",
    "subid": "45179100"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let t , n , m , h , i , j , k , l , s , ans , ar [ 1000 ] be integers with ans is equal to 1000 , and ar = array of integers of length 1000",
      "code": "int t , n , m , h , i , j , k , l , s , ans = 1000 , ar [ 1000 ] ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ ) cin >> ar [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for j = 0 to n exclusive",
      "code": "for ( j = 0 ; j < n ; j ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for ( i is equal to j , s is equal to 0 , i is less than n , increase i value by 1 )",
      "code": "for ( i = j , s = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "let s is equal to ( s + ith element of array ar )",
      "code": "s += ar [ i ] ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if ( s is greater than 180 )",
      "code": "if ( s > 180 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "ans is equal to minimum of ( ans , 2 * minimum of ( s - 180 , 180 - s + ith element of array ar ) )",
      "code": "ans = min ( ans , 2 * min ( s - 180 , 180 - s + ar [ i ] ) ) ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "stop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s = s + ar [ ar [ ar ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , s [ 1000 ] , ans , ar [ 1000 ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int s [1000]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "stop ;"
      ],
      "err_line": 9,
      "err_msg": "‘stop’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = j ; s < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        6
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = j ; s < n ; i ++ )",
        "s = s + ar [ ar [ ar ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        8
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = j ; s < n ; i ++ )",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        6
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = j ; s < n ; i ++ )",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "s = s + ar [ ar [ ar ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        3,
        6,
        8
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "s = s + ar [ ar [ ar ] ;",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        3,
        8
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        3,
        8,
        6
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        3,
        6
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( int i = 0 ; i < n ; i ++ )",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( i = j ; s < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( i = j ; s < n ; i ++ )",
        "s = s + ar [ ar [ ar ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        5,
        6,
        8
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( i = j ; s < n ; i ++ )",
        "s = s + ar [ ar [ ar ] ;",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        5,
        8
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( i = j ; s < n ; i ++ )",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        5,
        8,
        6
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( i = j ; s < n ; i ++ )",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        5,
        6
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "for ( i = j ; s < n ; i ++ )",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "s = s + ar [ ar [ ar ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        6,
        8
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "s = s + ar [ ar [ ar ] ;",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        8,
        6
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "int t , n , m , h , i , j , k , l , s [ 1000 ] , ans , ans , ar [ 1000 ] ;",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int ans’"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = j ; s < n ; i ++ )",
        "s = s + ar [ ar [ ar ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        5,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = j ; s < n ; i ++ )",
        "s = s + ar [ ar [ ar ] ;",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        5,
        8,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = j ; s < n ; i ++ )",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        5,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( i = j ; s < n ; i ++ )",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "s = s + ar [ ar [ ar ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "s = s + ar [ ar [ ar ] ;",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        8,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( i = j ; s < n ; i ++ )",
        "s = s + ar [ ar [ ar ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "for ( i = j ; s < n ; i ++ )",
        "s = s + ar [ ar [ ar ] ;",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        8,
        6
      ],
      "mod_code": [
        "for ( i = j ; s < n ; i ++ )",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "for ( i = j ; s < n ; i ++ )",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "s = s + ar [ ar [ ar ] ;",
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "ans = min ( ans , 2 * min ( s - 180 , 180 - s + 180 ) ) ;",
        "s = s + ar [ ar ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘int [1000][int [1000]]’ for array subscript"
    }
  ]
}