{
  "meta": {
    "index": 2284,
    "hitid": "3DQYSJDTYL5CZLKJ2N3YLVCHPBIXEQ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "168A",
    "subid": "48722851"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long int variables x , y and n",
      "code": "long long int x , y , n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , x and y",
      "code": "cin >> n >> x >> y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create double m = ( n * y ) / 100",
      "code": "double m = ( double ( n * y ) / 100 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare long long int dem = m rounded up",
      "code": "long long int dem = ceil ( m ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if x > = dem",
      "code": "if ( x >= dem )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print dem - x",
      "code": "cout << dem - x << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long int x , y , n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int n’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        7
      ],
      "mod_code": [
        "double m = ( n * y ) / 100 ;",
        "cin >> n >> x , y ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        7,
        4
      ],
      "mod_code": [
        "double m = ( n * y ) / 100 ;",
        "cin >> n >> x , y ;",
        "n",
        "long long int dem = ceil ( dem ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        2,
        7,
        8
      ],
      "mod_code": [
        "double m = ( n * y ) / 100 ;",
        "cin >> n >> x , y ;",
        "n",
        "cout << ( dem - x ) - x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "double m = ( n * y ) / 100 ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "double m = ( n * y ) / 100 ;",
        "n",
        "long long int dem = ceil ( dem ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        8
      ],
      "mod_code": [
        "double m = ( n * y ) / 100 ;",
        "n",
        "long long int dem = ceil ( dem ) ;",
        "cout << ( dem - x ) - x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "double m = ( n * y ) / 100 ;",
        "n",
        "cout << ( dem - x ) - x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "cin >> n >> x , y ;",
        "double m = ( int ) ( n * y ) / 100 ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        4
      ],
      "mod_code": [
        "cin >> n >> x , y ;",
        "double m = ( int ) ( n * y ) / 100 ;",
        "n",
        "long long int dem = ceil ( dem ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        7,
        8
      ],
      "mod_code": [
        "cin >> n >> x , y ;",
        "double m = ( int ) ( n * y ) / 100 ;",
        "n",
        "cout << ( dem - x ) - x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cin >> n >> x , y ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        4
      ],
      "mod_code": [
        "cin >> n >> x , y ;",
        "n",
        "long long int dem = ceil ( dem ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        4,
        8
      ],
      "mod_code": [
        "cin >> n >> x , y ;",
        "n",
        "long long int dem = ceil ( dem ) ;",
        "cout << ( dem - x ) - x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        7,
        8
      ],
      "mod_code": [
        "cin >> n >> x , y ;",
        "n",
        "cout << ( dem - x ) - x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "double m = ( int ) ( n * y ) / 100 ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        4
      ],
      "mod_code": [
        "double m = ( int ) ( n * y ) / 100 ;",
        "n",
        "long long int dem = ceil ( dem ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        4,
        8
      ],
      "mod_code": [
        "double m = ( int ) ( n * y ) / 100 ;",
        "n",
        "long long int dem = ceil ( dem ) ;",
        "cout << ( dem - x ) - x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "double m = ( int ) ( n * y ) / 100 ;",
        "n",
        "cout << ( dem - x ) - x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "n",
        "long long int dem = ceil ( dem ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        4,
        8
      ],
      "mod_code": [
        "n",
        "long long int dem = ceil ( dem ) ;",
        "cout << ( dem - x ) - x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "n",
        "cout << ( dem - x ) - x << endl ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}