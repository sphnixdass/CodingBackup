{
  "meta": {
    "index": 646,
    "hitid": "3PUOXASB57XK9KTHVUBXQ2RH5R5Z99",
    "workerid": "AIWEXPJAU66D9",
    "probid": "817A",
    "subid": "36053160"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers x1 , x2 , y1 , y2 , a and b",
      "code": "int x1 , x2 , y1 , y2 , a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x1 , y1 , x2 , y2 , a and b",
      "code": "cin >> x1 >> y1 >> x2 >> y2 >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer t1 = absolute value of y1 - y2",
      "code": "int t1 = abs ( y1 - y2 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if ( t1 % b ) ! = 0",
      "code": "if ( ( t1 % b ) != 0 )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare integer t2 = absolute value of x1 - x2",
      "code": "int t2 = abs ( x1 - x2 ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if ( t2 % a ) ! = 0",
      "code": "if ( ( t2 % a ) != 0 )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "declare integers count1 = abs ( y1 - y2 ) / b and count2 = abs ( x1 - x2 ) / a",
      "code": "int count1 = abs ( y1 - y2 ) / b , count2 = abs ( x1 - x2 ) / a ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "create integer t3 = absolute value of count1 - count2",
      "code": "int t3 = abs ( count1 - count2 ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if t3 is odd",
      "code": "if ( ! ( t3 % 2 == 0 ) )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int x1 , x2 , y1 , y2 , a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int count1 = abs ( y1 - y2 ) / b = abs ( abs ( x1 - x2 ) / a ) ;"
      ],
      "err_line": 13,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( ! ( t2 % a ) != 0 )",
        "int x1 , x2 , y1 , y2 , a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        1,
        13
      ],
      "mod_code": [
        "if ( ! ( t2 % a ) != 0 )",
        "int x1 , x2 , y1 , y2 , a >> b ;",
        "int count1 = abs ( y1 - y2 ) / b = abs ( abs ( x1 - x2 ) / a ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        1,
        13,
        2
      ],
      "mod_code": [
        "if ( ! ( t2 % a ) != 0 )",
        "int x1 , x2 , y1 , y2 , a >> b ;",
        "int count1 = abs ( y1 - y2 ) / b = abs ( abs ( x1 - x2 ) / a ) ;",
        "cin >> x1 >> y1 >> x2 , y2 >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        1,
        2
      ],
      "mod_code": [
        "if ( ! ( t2 % a ) != 0 )",
        "int x1 , x2 , y1 , y2 , a >> b ;",
        "cin >> x1 >> y1 >> x2 , y2 >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "if ( ! ( t2 % a ) != 0 )",
        "int count1 = abs ( y1 - y2 ) / b = abs ( abs ( x1 - x2 ) / a ) ;"
      ],
      "err_line": 13,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        9,
        13,
        2
      ],
      "mod_code": [
        "if ( ! ( t2 % a ) != 0 )",
        "int count1 = abs ( y1 - y2 ) / b = abs ( abs ( x1 - x2 ) / a ) ;",
        "cin >> x1 >> y1 >> x2 , y2 >> a >> b ;"
      ],
      "err_line": 13,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int x1 , x2 , y1 , y2 , a >> b ;",
        "int count1 = abs ( y1 - y2 ) / b = abs ( abs ( x1 - x2 ) / a ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        1,
        13,
        2
      ],
      "mod_code": [
        "int x1 , x2 , y1 , y2 , a >> b ;",
        "int count1 = abs ( y1 - y2 ) / b = abs ( abs ( x1 - x2 ) / a ) ;",
        "cin >> x1 >> y1 >> x2 , y2 >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int x1 , x2 , y1 , y2 , a >> b ;",
        "cin >> x1 >> y1 >> x2 , y2 >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "int count1 = abs ( y1 - y2 ) / b = abs ( abs ( x1 - x2 ) / a ) ;",
        "cin >> x1 >> y1 >> x2 , y2 >> a >> b ;"
      ],
      "err_line": 13,
      "err_msg": "lvalue required as left operand of assignment"
    }
  ]
}