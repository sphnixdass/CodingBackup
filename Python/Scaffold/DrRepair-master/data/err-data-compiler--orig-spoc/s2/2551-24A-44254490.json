{
  "meta": {
    "index": 2551,
    "hitid": "374UMBUHN5JQL6RL1MW664R8Q17TCV",
    "workerid": "A1APYLD4DUK33J",
    "probid": "24A",
    "subid": "44254490"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare gcd1 with integers a , b as arguments , returning integer",
      "code": "int gcd1 ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if a is 0 , return b from function",
      "code": "if ( a == 0 ) return b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return result of run gcd1 with b % a , a as arguments",
      "code": "return gcd1 ( b % a , a ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare modx with long long base , long long ex as arguments , returning long long",
      "code": "long long modx ( long long base , long long ex )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create long longs ans , val with ans = 1LL , val = base",
      "code": "long long ans = 1LL , val = base ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while ex is greater than 0LL",
      "code": "while ( ex > 0LL )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if ex bitwise and 1LL , set ans to ( ans * val ) % 1000000009LL",
      "code": "if ( ex & 1LL ) ans = ( ans * val ) % 1000000009LL ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set val to ( val * val ) % 1000000009LL",
      "code": "val = ( val * val ) % 1000000009LL ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set ex to ex bitshift right 1LL",
      "code": "ex = ex >> 1LL ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "return ans from function",
      "code": "return ans ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "create integers ans1 , ans2 with ans1 = 0 , ans2 = 0",
      "code": "int ans1 = 0 , ans2 = 0 ;",
      "indent": 0
    },
    {
      "line": 14,
      "text": "create integers n , a , b , c",
      "code": "int n , a , b , c ;",
      "indent": 0
    },
    {
      "line": 15,
      "text": "create constant integer maxn with maxn = 105",
      "code": "const int maxn = 105 ;",
      "indent": 0
    },
    {
      "line": 16,
      "text": "create boolean array visit with size maxn",
      "code": "bool visit [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 17,
      "text": "create integer vector array adj with size maxn",
      "code": "vector < int > adj [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 18,
      "text": "create 2d integer array dist with size maxn by maxn",
      "code": "int dist [ maxn ] [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 19,
      "text": "create integer vector v",
      "code": "vector < int > v ;",
      "indent": 0
    },
    {
      "line": 20,
      "text": "declare dfs with integer start as argument , returning void",
      "code": "void dfs ( int start )",
      "indent": 0
    },
    {
      "line": 21,
      "text": "set visit [ start ] to true",
      "code": "visit [ start ] = true ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "add element start to end of v",
      "code": "v . push_back ( start ) ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 0 to size of adj [ start ] exclusive",
      "code": "for ( int i = 0 ; i < adj [ start ] . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "create integer pt with pt = adj [ start ] [ i ]",
      "code": "int pt = adj [ start ] [ i ] ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if visit [ pt ] is false , run dfs with pt as argument",
      "code": "if ( ! visit [ pt ] ) dfs ( pt ) ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 29,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 31,
      "text": "read a read b read c",
      "code": "cin >> a >> b >> c ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "add element b to end of adj [ a ]",
      "code": "adj [ a ] . push_back ( b ) ;",
      "indent": 2
    },
    {
      "line": 33,
      "text": "add element a to end of adj [ b ]",
      "code": "adj [ b ] . push_back ( a ) ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "set dist [ b ] [ a ] to c",
      "code": "dist [ b ] [ a ] = c ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "run dfs with 1 as argument",
      "code": "dfs ( 1 ) ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "for i = 0 to size of v exclusive , increment ans1 by dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ]",
      "code": "for ( int i = 0 ; i < v . size ( ) ; i ++ ) { ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ] ; }",
      "indent": 1
    },
    {
      "line": 38,
      "text": "for i = size of v - 1 to 0 inclusive , decrementing i",
      "code": "for ( int i = v . size ( ) - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 39,
      "text": "if i is 0",
      "code": "if ( i == 0 )",
      "indent": 2
    },
    {
      "line": 40,
      "text": "increment ans2 by dist [ v [ i ] ] [ v [ size of v - 1 ] ]",
      "code": "ans2 += dist [ v [ i ] ] [ v [ v . size ( ) - 1 ] ] ;",
      "indent": 3
    },
    {
      "line": 41,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 42,
      "text": "increment ans2 by dist [ v [ i ] ] [ v [ i - 1 ] ]",
      "code": "ans2 += dist [ v [ i ] ] [ v [ i - 1 ] ] ;",
      "indent": 3
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 44,
      "text": "print minimum of ans1 and ans2 print newline",
      "code": "cout << min ( ans1 , ans2 ) << endl ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 46,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        37
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;"
      ],
      "err_line": 40,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return gcd1 ( b % a ) ;"
      ],
      "err_line": 2,
      "err_msg": "too few arguments to function ‘int gcd1(int, int)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "long long modx ( long long base , long long ex ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long ans = 1LL , ans = base ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘long long int ans’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "return ans )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "int ans1 = 0 , ans1 = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n , a , b , c ;"
      ],
      "err_line": 14,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "bool s [ maxn ] ;"
      ],
      "err_line": 21,
      "err_msg": "‘visit’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int adj [ maxn ] ;"
      ],
      "err_line": 23,
      "err_msg": "request for member ‘size’ in ‘adj[start]’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "vector < int > s ;"
      ],
      "err_line": 22,
      "err_msg": "‘v’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "void dfs ( int start ) ;"
      ],
      "err_line": 21,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "bool visit [ start ] = true ;"
      ],
      "err_line": 21,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "v . end ( start ) ;"
      ],
      "err_line": 22,
      "err_msg": "no matching function for call to ‘std::vector<int>::end(int&)’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( i = 0 ; i < adj [ start ] . size ( ) ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "adj [ a ] . end ( b ) ;"
      ],
      "err_line": 32,
      "err_msg": "no matching function for call to ‘std::vector<int>::end(int&)’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "adj [ b ] . end ( a ) ;"
      ],
      "err_line": 33,
      "err_msg": "no matching function for call to ‘std::vector<int>::end(int&)’"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "dfs ( l ) ;"
      ],
      "err_line": 36,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        41
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 42,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "ans2 += dist [ v [ v ] ] [ v [ i - 1 ] ] ;"
      ],
      "err_line": 42,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        37,
        40
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        37,
        40,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "dist [ b ] [ ' a ' ] = c ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        37,
        40,
        34,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "int ans1 = 0 , ans1 = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        37,
        40,
        34,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        40,
        34,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        37,
        40,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "int ans1 = 0 , ans1 = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        37,
        40,
        13,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        37,
        40,
        13,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        37,
        40,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        40,
        30,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        37,
        40,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        37,
        34
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "dist [ b ] [ ' a ' ] = c ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        37,
        34,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "int ans1 = 0 , ans1 = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        37,
        34,
        13,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        37,
        34,
        13,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        37,
        34,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        34,
        30,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        37,
        34,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        37,
        13
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "int ans1 = 0 , ans1 = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        37,
        13,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        37,
        13,
        30,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        37,
        13,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        37,
        30
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        37,
        30,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        37,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < v . size ( ) ; i ++ ) ans1 += dist [ v [ i ] ] [ v [ ( i + 1 ) % n ] ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        40,
        34
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "dist [ b ] [ ' a ' ] = c ;"
      ],
      "err_line": 40,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        40,
        34,
        13
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "int ans1 = 0 , ans1 = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        40,
        34,
        13,
        30
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        40,
        34,
        13,
        18
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        40,
        34,
        30
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        40,
        34,
        30,
        18
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        40,
        34,
        18
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "dist [ b ] [ ' a ' ] = c ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        40,
        13
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "int ans1 = 0 , ans1 = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        40,
        13,
        30
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        40,
        13,
        30,
        18
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        40,
        13,
        18
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        40,
        30
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        40,
        30,
        18
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        40,
        18
      ],
      "mod_code": [
        "ans2 += dist [ v [ i ] ] [ v . size ( ) - 1 ] ] ++ ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        13
      ],
      "mod_code": [
        "dist [ b ] [ ' a ' ] = c ;",
        "int ans1 = 0 , ans1 = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        34,
        13,
        30
      ],
      "mod_code": [
        "dist [ b ] [ ' a ' ] = c ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        34,
        13,
        30,
        18
      ],
      "mod_code": [
        "dist [ b ] [ ' a ' ] = c ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        34,
        13,
        18
      ],
      "mod_code": [
        "dist [ b ] [ ' a ' ] = c ;",
        "int ans1 = 0 , ans1 = 0 ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        34,
        30
      ],
      "mod_code": [
        "dist [ b ] [ ' a ' ] = c ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 30,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        34,
        30,
        18
      ],
      "mod_code": [
        "dist [ b ] [ ' a ' ] = c ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        34,
        18
      ],
      "mod_code": [
        "dist [ b ] [ ' a ' ] = c ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    },
    {
      "mod_line": [
        13,
        30
      ],
      "mod_code": [
        "int ans1 = 0 , ans1 = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        13,
        30,
        18
      ],
      "mod_code": [
        "int ans1 = 0 , ans1 = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "int ans1 = 0 , ans1 = 0 ;",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 13,
      "err_msg": "redefinition of ‘int ans1’"
    },
    {
      "mod_line": [
        30,
        18
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int dist [ maxn [ maxn ] ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘const int[const int]’ for array subscript"
    }
  ]
}