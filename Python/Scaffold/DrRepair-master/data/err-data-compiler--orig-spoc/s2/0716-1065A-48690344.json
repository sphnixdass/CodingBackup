{
  "meta": {
    "index": 716,
    "hitid": "3CVDZS288HUTBNLBJRLVSWHJU8IFMB",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1065A",
    "subid": "48690344"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while t - - is truthy",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "make long long ints s , a , b , and c",
      "code": "long long s , a , b , c ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read s , a , b , and c",
      "code": "cin >> s >> a >> b >> c ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "let long long n = s / c",
      "code": "long long n = s / c ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "make long long int off = n / a",
      "code": "long long off = n / a ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "create long long ans = off * a + off * b + n % a",
      "code": "long long ans = off * a + off * b + n % a ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int * t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "long long ans = off * ( a + off * b + n % a ) ;",
        "int * t ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        1,
        2
      ],
      "mod_code": [
        "long long ans = off * ( a + off * b + n % a ) ;",
        "int * t ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        1,
        2,
        5
      ],
      "mod_code": [
        "long long ans = off * ( a + off * b + n % a ) ;",
        "int * t ;",
        "t = getchar ( ) ;",
        "s >> s >> a >> b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        1,
        5
      ],
      "mod_code": [
        "long long ans = off * ( a + off * b + n % a ) ;",
        "int * t ;",
        "s >> s >> a >> b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int * t ;",
        "t = getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "int * t ;",
        "t = getchar ( ) ;",
        "s >> s >> a >> b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int * t ;",
        "s >> s >> a >> b >> c ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    }
  ]
}