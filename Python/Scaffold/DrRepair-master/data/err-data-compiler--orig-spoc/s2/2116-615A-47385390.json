{
  "meta": {
    "index": 2116,
    "hitid": "37S0QRNUFBA5BJ9KHC56DMZ2NZD88W",
    "workerid": "AIWEXPJAU66D9",
    "probid": "615A",
    "subid": "47385390"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare int variables n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create an array of integers a with 105 elements",
      "code": "int a [ 105 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read character from the input",
      "code": "getchar ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while n ! = 0 , decrement it and continue the loop",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare integer t",
      "code": "int t ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "create integer c",
      "code": "int c ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "loop , decrementing t , while it is not 0",
      "code": "while ( t -- )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "read input to c",
      "code": "cin >> c ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "assign 1 to a [ c ]",
      "code": "a [ c ] = 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "loop i from 1 to m inclusive",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if a [ i ] = 0",
      "code": "if ( a [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 11,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "a [ 105 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 7,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "c ;"
      ],
      "err_line": 8,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "while ( it )"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "a [ c ] [ 1 ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        16,
        9
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "cout << \" NO \" ;",
        "while ( it )"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        16,
        9,
        5
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "cout << \" NO \" ;",
        "while ( it )",
        "while ( n ) { continue ; }"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        16,
        9,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "cout << \" NO \" ;",
        "while ( it )",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        20,
        16,
        9,
        10
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "cout << \" NO \" ;",
        "while ( it )",
        "c = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        16,
        5,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "cout << \" NO \" ;",
        "while ( n ) { continue ; }",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        20,
        16,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "cout << \" NO \" ;",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        20,
        16,
        1,
        10
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "cout << \" NO \" ;",
        "int n and m ;",
        "c = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        20,
        9
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "while ( it )"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        9,
        5
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "while ( it )",
        "while ( n ) { continue ; }"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        9,
        5,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "while ( it )",
        "while ( n ) { continue ; }",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        20,
        9,
        5,
        10
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "while ( it )",
        "while ( n ) { continue ; }",
        "c = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        9,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "while ( it )",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        20,
        9,
        1,
        10
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "while ( it )",
        "int n and m ;",
        "c = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        20,
        9,
        10
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "while ( it )",
        "c = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        5,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "while ( n ) { continue ; }",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        20,
        5,
        1,
        10
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "while ( n ) { continue ; }",
        "int n and m ;",
        "c = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        20,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        20,
        1,
        10
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "int n and m ;",
        "c = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( it )"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        9,
        5
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( it )",
        "while ( n ) { continue ; }"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        9,
        5,
        1
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( it )",
        "while ( n ) { continue ; }",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        9,
        5,
        10
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( it )",
        "while ( n ) { continue ; }",
        "c = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        9,
        1
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( it )",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        9,
        1,
        10
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( it )",
        "int n and m ;",
        "c = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        9,
        10
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( it )",
        "c = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        5,
        1
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( n ) { continue ; }",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        5,
        1,
        10
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "while ( n ) { continue ; }",
        "int n and m ;",
        "c = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        1,
        10
      ],
      "mod_code": [
        "cout << \" NO \" ;",
        "int n and m ;",
        "c = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "while ( it )",
        "while ( n ) { continue ; }"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        1
      ],
      "mod_code": [
        "while ( it )",
        "while ( n ) { continue ; }",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        5,
        1,
        10
      ],
      "mod_code": [
        "while ( it )",
        "while ( n ) { continue ; }",
        "int n and m ;",
        "c = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        5,
        10
      ],
      "mod_code": [
        "while ( it )",
        "while ( n ) { continue ; }",
        "c = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "while ( it )",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        1,
        10
      ],
      "mod_code": [
        "while ( it )",
        "int n and m ;",
        "c = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "while ( it )",
        "c = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘it’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "while ( n ) { continue ; }",
        "int n and m ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        1,
        10
      ],
      "mod_code": [
        "while ( n ) { continue ; }",
        "int n and m ;",
        "c = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n and m ;",
        "c = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    }
  ]
}