{
  "meta": {
    "index": 337,
    "hitid": "3VMHWJRYHVA45ZKFXYN43DXH1C5FXY",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "735A",
    "subid": "48056141"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create ints n , k , i , ti , and tg",
      "code": "int n , k , i , ti , tg ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "make string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if str [ i ] is equal to ' T '",
      "code": "if ( str [ i ] == ' T ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set ti to i",
      "code": "ti = i ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if str [ i ] is equal to ' G '",
      "code": "else if ( str [ i ] == ' G ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set tg to i",
      "code": "tg = i ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if tg is less than ti",
      "code": "if ( tg < ti )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = tg to n exclusive",
      "code": "for ( i = tg ; i < n ; i += k )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if i is equal to ti",
      "code": "if ( i == ti )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "print \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "else if str [ i ] is equal to ' # '",
      "code": "else if ( str [ i ] == ' # ' )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "show \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "else if tg is greater than ti",
      "code": "else if ( tg > ti )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "for i = tg to 0 by decreasing by k",
      "code": "for ( i = tg ; i >= 0 ; i -= k )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if i is equal to ti",
      "code": "if ( i == ti )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "show \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "else if str [ i ] is equal to ' # '",
      "code": "else if ( str [ i ] == ' # ' )",
      "indent": 3
    },
    {
      "line": 29,
      "text": "print \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 33,
      "text": "show \" NO \\ n \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "else do",
      "code": "else",
      "indent": 1
    },
    {
      "line": 35,
      "text": "display \" YES \\ n \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        34
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34
      ],
      "mod_code": [
        "for ( int i = tg ; i < n ; i ++ )",
        "else do"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34,
        7
      ],
      "mod_code": [
        "for ( int i = tg ; i < n ; i ++ )",
        "else do",
        "int ti = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34,
        7,
        4
      ],
      "mod_code": [
        "for ( int i = tg ; i < n ; i ++ )",
        "else do",
        "int ti = i ;",
        "getline ( cin , str ) ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = tg ; i < n ; i ++ )",
        "else do",
        "int ti = i ;",
        "int tg = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34,
        4
      ],
      "mod_code": [
        "for ( int i = tg ; i < n ; i ++ )",
        "else do",
        "getline ( cin , str ) ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34,
        4,
        9
      ],
      "mod_code": [
        "for ( int i = tg ; i < n ; i ++ )",
        "else do",
        "getline ( cin , str ) ;",
        "int tg = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34,
        9
      ],
      "mod_code": [
        "for ( int i = tg ; i < n ; i ++ )",
        "else do",
        "int tg = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34
      ],
      "mod_code": [
        "for ( i = tg ; i < n ; i ++ )",
        "else do"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34,
        7
      ],
      "mod_code": [
        "for ( i = tg ; i < n ; i ++ )",
        "else do",
        "int ti = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34,
        7,
        4
      ],
      "mod_code": [
        "for ( i = tg ; i < n ; i ++ )",
        "else do",
        "int ti = i ;",
        "getline ( cin , str ) ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34,
        7,
        9
      ],
      "mod_code": [
        "for ( i = tg ; i < n ; i ++ )",
        "else do",
        "int ti = i ;",
        "int tg = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34,
        4
      ],
      "mod_code": [
        "for ( i = tg ; i < n ; i ++ )",
        "else do",
        "getline ( cin , str ) ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34,
        4,
        9
      ],
      "mod_code": [
        "for ( i = tg ; i < n ; i ++ )",
        "else do",
        "getline ( cin , str ) ;",
        "int tg = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        13,
        34,
        9
      ],
      "mod_code": [
        "for ( i = tg ; i < n ; i ++ )",
        "else do",
        "int tg = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        34,
        7
      ],
      "mod_code": [
        "else do",
        "int ti = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        34,
        7,
        4
      ],
      "mod_code": [
        "else do",
        "int ti = i ;",
        "getline ( cin , str ) ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        34,
        7,
        4,
        9
      ],
      "mod_code": [
        "else do",
        "int ti = i ;",
        "getline ( cin , str ) ;",
        "int tg = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        34,
        7,
        9
      ],
      "mod_code": [
        "else do",
        "int ti = i ;",
        "int tg = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        34,
        4
      ],
      "mod_code": [
        "else do",
        "getline ( cin , str ) ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        34,
        4,
        9
      ],
      "mod_code": [
        "else do",
        "getline ( cin , str ) ;",
        "int tg = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        34,
        9
      ],
      "mod_code": [
        "else do",
        "int tg = i ;"
      ],
      "err_line": 37,
      "err_msg": "expected ‘while’ before numeric constant"
    }
  ]
}