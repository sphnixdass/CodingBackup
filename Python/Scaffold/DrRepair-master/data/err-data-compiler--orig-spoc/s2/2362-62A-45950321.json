{
  "meta": {
    "index": 2362,
    "hitid": "34O39PNDK62UVMMNJXVGV5K8KARBR4",
    "workerid": "A1AYVATMT88U1W",
    "probid": "62A",
    "subid": "45950321"
  },
  "lines": [
    {
      "line": 0,
      "text": "let boolean solve ( int a , int b ) be a function which accepts integers a and b and returns integer values",
      "code": "bool solve ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "return the value of ( a is less than or equal to b + 1 and b is less than or equal to ( a + 1 ) * 2 )",
      "code": "return a <= b + 1 && b <= ( a + 1 ) * 2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "let la , ra , lb , rb be integers",
      "code": "int la , ra , lb , rb ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read la , ra , lb , rb",
      "code": "cin >> la >> ra >> lb >> rb ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if ( solve ( la , rb ) or solve ( ra , lb ) )",
      "code": "if ( solve ( la , rb ) || solve ( ra , lb ) )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print YES and newline",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print NO and newline",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool solve ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        6,
        8
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        6,
        8,
        0
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "else do",
        "bool solve ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        8,
        5
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "else do",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        6,
        0
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "bool solve ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        0,
        5
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "bool solve ( int a , int b , int b )",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        8,
        0
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "else do",
        "bool solve ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        1,
        8,
        0,
        5
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "else do",
        "bool solve ( int a , int b , int b )",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        1,
        8,
        5
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "else do",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "bool solve ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        1,
        0,
        5
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "bool solve ( int a , int b , int b )",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "return a <= b + 1 && b <= ( a + 1 ) * 2 ) ;",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 1,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "else do"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        8,
        0
      ],
      "mod_code": [
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "else do",
        "bool solve ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        6,
        8,
        0,
        5
      ],
      "mod_code": [
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "else do",
        "bool solve ( int a , int b , int b )",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        6,
        8,
        5
      ],
      "mod_code": [
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "else do",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "bool solve ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        6,
        0,
        5
      ],
      "mod_code": [
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "bool solve ( int a , int b , int b )",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( solve ( la , rb ) || solve ( ra , lb ) ) ;",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 8,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "else do",
        "bool solve ( int a , int b , int b )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        8,
        0,
        5
      ],
      "mod_code": [
        "else do",
        "bool solve ( int a , int b , int b )",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "else do",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "bool solve ( int a , int b , int b )",
        "cin >> la >> ra >> lb , rb ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int b’"
    }
  ]
}