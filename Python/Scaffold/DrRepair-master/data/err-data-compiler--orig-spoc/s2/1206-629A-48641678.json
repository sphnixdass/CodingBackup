{
  "meta": {
    "index": 1206,
    "hitid": "36JW4WBR06E7J9K0SU5I0R9NDMMFH5",
    "workerid": "A9X69TEYMWYG7",
    "probid": "629A",
    "subid": "48641678"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string a",
      "code": "int a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create char b [ a + 1 ] [ a + 1 ]",
      "code": "char b [ a + 1 ] [ a + 1 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "c , d = 0",
      "code": "int c = 0 , d = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 i < a",
      "code": "for ( int i = 0 ; i < a ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 j < a read b [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < a ; j ++ ) { cin >> b [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 0 i < a",
      "code": "for ( int i = 0 ; i < a ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for j = 0 j < a",
      "code": "for ( int j = 0 ; j < a ; j ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "for u = j + 1 u < a",
      "code": "for ( int u = j + 1 ; u < a ; u ++ )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if b [ i ] [ j ] = C and b [ i ] [ u ] = C",
      "code": "if ( b [ i ] [ j ] == ' C ' && b [ i ] [ u ] == ' C ' ) { c ++ ; }",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "d + = c",
      "code": "d += c ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "c = 0",
      "code": "c = 0 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 0 i < a",
      "code": "for ( int i = 0 ; i < a ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for j = 0 j < a",
      "code": "for ( int j = 0 ; j < a ; j ++ )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "for u = j + 1 u < a",
      "code": "for ( int u = j + 1 ; u < a ; u ++ )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if if ( b [ j ] [ i ] = C and b [ u ] [ i ] = C",
      "code": "if ( b [ j ] [ i ] == ' C ' && b [ u ] [ i ] == ' C ' ) { c ++ ; }",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "d + = c",
      "code": "d += c ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "c = 0",
      "code": "c = 0 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print d",
      "code": "cout << d << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string a ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )"
      ],
      "err_line": 20,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "getline ( cin , a ) ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "c = 0 , d = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < a ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( u = j + 1 ; u < a ; u ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == ' C ' )"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < a ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < a ; j ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( u = j + 1 ; u < a ; u ++ )"
      ],
      "err_line": 19,
      "err_msg": "‘u’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == ' C ' )"
      ],
      "err_line": 20,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        15
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        15,
        20
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        15,
        24
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;",
        "int c = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        15,
        26
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;",
        "cout << d ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        20
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        20,
        24
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "int c = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        20,
        26
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "cout << d ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        24
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        24,
        26
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;",
        "cout << d ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        26
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "cout << d ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "string a ;",
        "int c = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        15,
        20
      ],
      "mod_code": [
        "string a ;",
        "int c = 0 ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        15,
        20,
        24
      ],
      "mod_code": [
        "string a ;",
        "int c = 0 ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "int c = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        15,
        20,
        26
      ],
      "mod_code": [
        "string a ;",
        "int c = 0 ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "cout << d ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        15,
        24
      ],
      "mod_code": [
        "string a ;",
        "int c = 0 ;",
        "int c = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        15,
        24,
        26
      ],
      "mod_code": [
        "string a ;",
        "int c = 0 ;",
        "int c = 0 ;",
        "cout << d ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        15,
        26
      ],
      "mod_code": [
        "string a ;",
        "int c = 0 ;",
        "cout << d ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        20
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        20,
        24
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "int c = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        20,
        24,
        26
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "int c = 0 ;",
        "cout << d ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        20,
        26
      ],
      "mod_code": [
        "string a ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "cout << d ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        24
      ],
      "mod_code": [
        "string a ;",
        "int c = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        24,
        26
      ],
      "mod_code": [
        "string a ;",
        "int c = 0 ;",
        "cout << d ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        26
      ],
      "mod_code": [
        "string a ;",
        "cout << d ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        20
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        20,
        24
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "int c = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        20,
        26
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "cout << d ;"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        24
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;",
        "int c = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        24,
        26
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;",
        "int c = 0 ;",
        "cout << d ;"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15,
        26
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;",
        "cout << d ;"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20,
        24
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "int c = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20,
        24,
        26
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "int c = 0 ;",
        "cout << d ;"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20,
        26
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "cout << d ;"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        24
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        24,
        26
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "int c = 0 ;",
        "cout << d ;"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        26
      ],
      "mod_code": [
        "if ( b [ i ] [ j ] == C && b [ i ] [ u ] == C )",
        "cout << d ;"
      ],
      "err_line": 11,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20
      ],
      "mod_code": [
        "int c = 0 ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )"
      ],
      "err_line": 20,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24
      ],
      "mod_code": [
        "int c = 0 ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "int c = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        24,
        26
      ],
      "mod_code": [
        "int c = 0 ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "int c = 0 ;",
        "cout << d ;"
      ],
      "err_line": 20,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        20,
        26
      ],
      "mod_code": [
        "int c = 0 ;",
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "cout << d ;"
      ],
      "err_line": 20,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24
      ],
      "mod_code": [
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "int c = 0 ;"
      ],
      "err_line": 20,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26
      ],
      "mod_code": [
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "int c = 0 ;",
        "cout << d ;"
      ],
      "err_line": 20,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26
      ],
      "mod_code": [
        "if ( b [ j ] [ i ] == C && b [ u ] [ i ] == C )",
        "cout << d ;"
      ],
      "err_line": 20,
      "err_msg": "‘C’ was not declared in this scope"
    }
  ]
}