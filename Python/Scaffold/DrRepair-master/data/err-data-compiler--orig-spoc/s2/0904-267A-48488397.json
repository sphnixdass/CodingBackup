{
  "meta": {
    "index": 904,
    "hitid": "3QGHA0EA0JUZ3I39IR5MI4SPDC2BWE",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "267A",
    "subid": "48488397"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "a , b , k , n , i = long longs , s = long long = 0",
      "code": "long long a , b , s = 0 , k , n , i ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "s = 0",
      "code": "s = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "while a > 0 and b > 0",
      "code": "while ( a > 0 && b > 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a > b",
      "code": "if ( a > b )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "k = a / b",
      "code": "k = a / b ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "a = a - k * b",
      "code": "a -= k * b ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "s = s + k",
      "code": "s += k ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 12,
      "text": "k = b / a",
      "code": "k = b / a ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "b = b - k * a",
      "code": "b -= k * a ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "s = s + k",
      "code": "s += k ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "k /= a ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12,
        11,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "k /= a ;",
        "n",
        "cin >> a , b ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12,
        11,
        8
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "k /= a ;",
        "n",
        "k /= b ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n",
        "cin >> a , b ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11,
        4,
        8
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n",
        "cin >> a , b ;",
        "k /= b ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11,
        8
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n",
        "k /= b ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "k /= a ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        4
      ],
      "mod_code": [
        "k /= a ;",
        "n",
        "cin >> a , b ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        4,
        8
      ],
      "mod_code": [
        "k /= a ;",
        "n",
        "cin >> a , b ;",
        "k /= b ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        11,
        8
      ],
      "mod_code": [
        "k /= a ;",
        "n",
        "k /= b ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "n",
        "cin >> a , b ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        4,
        8
      ],
      "mod_code": [
        "n",
        "cin >> a , b ;",
        "k /= b ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "n",
        "k /= b ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}