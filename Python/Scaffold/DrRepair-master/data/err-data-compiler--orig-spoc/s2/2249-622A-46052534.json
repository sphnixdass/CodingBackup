{
  "meta": {
    "index": 2249,
    "hitid": "3UQVX1UPFSBC7F2S6RJQAGGHI1C203",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "622A",
    "subid": "46052534"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "i , j , k = long long",
      "code": "long long i , j , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "n , m = long long",
      "code": "long long n , m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set m to sqrt of n * 2",
      "code": "m = sqrt ( n * 2 ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set j to m * ( m + 1 ) / 2",
      "code": "j = m * ( m + 1 ) / 2 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if j > n",
      "code": "if ( j > n )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "decrement m",
      "code": "m -- ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set j to m * ( m + 1 ) / 2",
      "code": "j = m * ( m + 1 ) / 2 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "set k to n mod j",
      "code": "k = n % j ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if not k",
      "code": "if ( ! k )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print m",
      "code": "cout << m << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print k",
      "code": "cout << k << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        11,
        5,
        10
      ],
      "mod_code": [
        "m *= 2 ;",
        "if ( k != k )",
        "j -= ( m + 1 ) / 2 ;",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        4,
        11,
        3,
        10
      ],
      "mod_code": [
        "m *= 2 ;",
        "if ( k != k )",
        "n = getchar ( ) ;",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        4,
        11,
        10
      ],
      "mod_code": [
        "m *= 2 ;",
        "if ( k != k )",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        4,
        5,
        3,
        10
      ],
      "mod_code": [
        "m *= 2 ;",
        "j -= ( m + 1 ) / 2 ;",
        "n = getchar ( ) ;",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        4,
        5,
        10
      ],
      "mod_code": [
        "m *= 2 ;",
        "j -= ( m + 1 ) / 2 ;",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        4,
        3,
        10
      ],
      "mod_code": [
        "m *= 2 ;",
        "n = getchar ( ) ;",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "m *= 2 ;",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        11,
        5,
        3,
        10
      ],
      "mod_code": [
        "if ( k != k )",
        "j -= ( m + 1 ) / 2 ;",
        "n = getchar ( ) ;",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        11,
        5,
        10
      ],
      "mod_code": [
        "if ( k != k )",
        "j -= ( m + 1 ) / 2 ;",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        11,
        3,
        10
      ],
      "mod_code": [
        "if ( k != k )",
        "n = getchar ( ) ;",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "if ( k != k )",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        5,
        3,
        10
      ],
      "mod_code": [
        "j -= ( m + 1 ) / 2 ;",
        "n = getchar ( ) ;",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "j -= ( m + 1 ) / 2 ;",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int k = n % j ;"
      ],
      "err_line": 10,
      "err_msg": "conflicting declaration ‘int k’"
    }
  ]
}