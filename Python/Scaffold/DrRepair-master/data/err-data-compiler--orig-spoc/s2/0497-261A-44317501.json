{
  "meta": {
    "index": 497,
    "hitid": "3RSBJ6YZECKHBQ6NW708K06OP8YOF0",
    "workerid": "AIWEXPJAU66D9",
    "probid": "261A",
    "subid": "44317501"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long longs m , n , i and j",
      "code": "long long m , n , i , j ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "discounts is a new array of long longs with 100005 elements",
      "code": "long long discounts [ 100005 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set the values of first sizeof ( discounts ) bytes at the pointer discounts to 0",
      "code": "memset ( discounts , 0 , sizeof ( discounts ) ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read m from the input",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read user input to discounts m times",
      "code": "for ( i = 0 ; i < m ; i ++ ) cin >> discounts [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort discounts from index 0 to m",
      "code": "sort ( discounts , discounts + m ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read n from the user input",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "items is an array of long longs with 100005 elements",
      "code": "long long items [ 100005 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set first sizeof ( items ) bytes at the pointer items to 0",
      "code": "memset ( items , 0 , sizeof ( items ) ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read n elements from the user input to items",
      "code": "for ( i = 0 ; i < n ; i ++ ) cin >> items [ i ] ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "sort items",
      "code": "sort ( items , items + n ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "reverse items",
      "code": "reverse ( items , items + n ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "create new long longs k and total = 0",
      "code": "long long k = 0 , total = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i from 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "change total to the sum of total and items [ i ]",
      "code": "total += items [ i ] ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increment k",
      "code": "k ++ ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if k is equal to discounts [ 0 ]",
      "code": "if ( k == discounts [ 0 ] )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "change the value of k to 0",
      "code": "k = 0 ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "change i to i + 2",
      "code": "i += 2 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print total and \" \\ n \"",
      "code": "cout << total << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘begin’ in ‘items’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "reverse ( s . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "memset ( discounts , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sort ( discounts , discounts discounts m ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘discounts’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "memset ( items , 0 , sizeof ( ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "reverse ( s . begin ( ) , 0 ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "cout << ( total << \" \\n \" ) ;"
      ],
      "err_line": 22,
      "err_msg": "invalid operands of types ‘long long int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "reverse ( s . begin ( ) , s . end ( ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘begin’ in ‘items’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        11,
        12,
        22
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘begin’ in ‘items’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        11,
        12,
        22,
        3
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;",
        "memset ( discounts , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        12,
        22,
        17
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘begin’ in ‘items’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        11,
        12,
        3
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "memset ( discounts , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        12,
        3,
        17
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "memset ( discounts , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        12,
        17
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘begin’ in ‘items’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘begin’ in ‘items’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        11,
        22,
        12
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;",
        "reverse ( s . begin ( ) , 0 ) ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘begin’ in ‘items’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        11,
        22,
        12,
        3
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;",
        "reverse ( s . begin ( ) , 0 ) ;",
        "memset ( discounts , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        22,
        12,
        17
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;",
        "reverse ( s . begin ( ) , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘begin’ in ‘items’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        11,
        22,
        3
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;",
        "memset ( discounts , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        22,
        3,
        17
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;",
        "memset ( discounts , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        22,
        17
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘begin’ in ‘items’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "reverse ( s . begin ( ) , 0 ) ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘begin’ in ‘items’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        11,
        12,
        3
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "reverse ( s . begin ( ) , 0 ) ;",
        "memset ( discounts , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        12,
        3,
        17
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "reverse ( s . begin ( ) , 0 ) ;",
        "memset ( discounts , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        12,
        17
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "reverse ( s . begin ( ) , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘begin’ in ‘items’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "memset ( discounts , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        3,
        17
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "memset ( discounts , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "sort ( items . begin ( ) , items . end ( ) ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘begin’ in ‘items’, which is of non-class type ‘long long int [100005]’"
    },
    {
      "mod_line": [
        12,
        22
      ],
      "mod_code": [
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        22,
        3
      ],
      "mod_code": [
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;",
        "memset ( discounts , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        12,
        22,
        3,
        17
      ],
      "mod_code": [
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;",
        "memset ( discounts , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        12,
        22,
        17
      ],
      "mod_code": [
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "cout << ( total << \" \\n \" ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "memset ( discounts , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        12,
        3,
        17
      ],
      "mod_code": [
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "memset ( discounts , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "reverse ( s . begin ( ) , s . end ( ) ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        12
      ],
      "mod_code": [
        "cout << ( total << \" \\n \" ) ;",
        "reverse ( s . begin ( ) , 0 ) ;"
      ],
      "err_line": 12,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        12,
        3
      ],
      "mod_code": [
        "cout << ( total << \" \\n \" ) ;",
        "reverse ( s . begin ( ) , 0 ) ;",
        "memset ( discounts , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        22,
        12,
        3,
        17
      ],
      "mod_code": [
        "cout << ( total << \" \\n \" ) ;",
        "reverse ( s . begin ( ) , 0 ) ;",
        "memset ( discounts , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        22,
        12,
        17
      ],
      "mod_code": [
        "cout << ( total << \" \\n \" ) ;",
        "reverse ( s . begin ( ) , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        3
      ],
      "mod_code": [
        "cout << ( total << \" \\n \" ) ;",
        "memset ( discounts , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        22,
        3,
        17
      ],
      "mod_code": [
        "cout << ( total << \" \\n \" ) ;",
        "memset ( discounts , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        22,
        17
      ],
      "mod_code": [
        "cout << ( total << \" \\n \" ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 22,
      "err_msg": "invalid operands of types ‘long long int’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "reverse ( s . begin ( ) , 0 ) ;",
        "memset ( discounts , 0 ) ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        12,
        3,
        17
      ],
      "mod_code": [
        "reverse ( s . begin ( ) , 0 ) ;",
        "memset ( discounts , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "reverse ( s . begin ( ) , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 12,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "memset ( discounts , 0 ) ;",
        "if ( k == discounts [ 0 ] ) k ++ ;"
      ],
      "err_line": 3,
      "err_msg": "too few arguments to function ‘void* memset(void*, int, size_t)’"
    }
  ]
}