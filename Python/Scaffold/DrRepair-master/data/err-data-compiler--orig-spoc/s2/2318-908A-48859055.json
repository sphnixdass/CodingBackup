{
  "meta": {
    "index": 2318,
    "hitid": "3M4KL7H8KVH0W56BPCZTEYG33YM16O",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "908A",
    "subid": "48859055"
  },
  "lines": [
    {
      "line": 0,
      "text": "ans = int",
      "code": "int ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to size of s",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if isalpha of s [ i ]",
      "code": "if ( isalpha ( s [ i ] ) )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if s [ i ] is ' a ' or ' e ' or ' o ' or ' i ' or ' u ' increment ans",
      "code": "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' o ' || s [ i ] == ' i ' || s [ i ] == ' u ' ) ans ++ ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if s [ i ] is uneven",
      "code": "else if ( s [ i ] % 2 != 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "s >> s ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        3,
        4
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "s >> s ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        3,
        4,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "s >> s ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        4,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "s >> s ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        3,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "s >> s ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        2,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "s >> s ;",
        "string S ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "s >> s ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        2,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string S ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "string S ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' e ' || s [ i ] == ' u ' ) ans ++ ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        4,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        6,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        2,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string S ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        2,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;",
        "string S ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "s >> s ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "string S ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;",
        "string S ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        2,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "string S ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < s . size ( ) ; i ++ )",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;",
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;",
        "string S ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( s [ i ] == ' a ' || s [ i ] == ' o ' || s [ i ] == ' u ' ) ans ++ ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "string S ;",
        "if ( isalpha ( s [ i ] ) [ i ] )"
      ],
      "err_line": 3,
      "err_msg": "‘s’ was not declared in this scope"
    }
  ]
}