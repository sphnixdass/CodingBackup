{
  "meta": {
    "index": 401,
    "hitid": "3YOAVL4CA0BJCEN5EZF69UG1KMMZ4J",
    "workerid": "AIWEXPJAU66D9",
    "probid": "215A",
    "subid": "39120126"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare int arrays a and b with size 52",
      "code": "int a [ 52 ] , b [ 52 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i from 0 to n exclusive , read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to m exclusive , read b [ i ]",
      "code": "for ( int i = 0 ; i < m ; i ++ ) { cin >> b [ i ] ; }",
      "indent": 1
    },
    {
      "line": 7,
      "text": "ppp is a map of int to int",
      "code": "map < int , int > ppp ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "declare int maxn = - 1",
      "code": "int maxn = - 1 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "loop i from 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "loop j from 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if b [ i ] % a [ j ] is true , skip the rest of the loop",
      "code": "if ( b [ i ] % a [ j ] ) { continue ; }",
      "indent": 3
    },
    {
      "line": 12,
      "text": "new integer x = b [ i ] / a [ j ]",
      "code": "int x = b [ i ] / a [ j ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if x > = maxn",
      "code": "if ( x >= maxn )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set maxn to x",
      "code": "maxn = x ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "increment ppp [ maxn ] by one",
      "code": "ppp [ maxn ] ++ ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print ppp [ maxn ]",
      "code": "cout << ppp [ maxn ] << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int a [ 52 ] and b [ 52 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "map < int , int > :: ppp ;"
      ],
      "err_line": 7,
      "err_msg": "‘ppp’ is not a member of ‘std::map<int, int>’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "const int maxn = - 1 ;"
      ],
      "err_line": 14,
      "err_msg": "assignment of read-only variable ‘maxn’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "x = b [ i ] / a [ j ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5,
        2
      ],
      "mod_code": [
        "const int maxn = x ;",
        "m = getchar ( ) ;",
        "int a [ 52 ] and b [ 52 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        5,
        2,
        12
      ],
      "mod_code": [
        "const int maxn = x ;",
        "m = getchar ( ) ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "x = b [ i ] / a [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        5,
        2,
        19
      ],
      "mod_code": [
        "const int maxn = x ;",
        "m = getchar ( ) ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "cout << ppp [ maxn ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        5,
        2,
        8
      ],
      "mod_code": [
        "const int maxn = x ;",
        "m = getchar ( ) ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        5,
        12
      ],
      "mod_code": [
        "const int maxn = x ;",
        "m = getchar ( ) ;",
        "x = b [ i ] / a [ j ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5,
        12,
        19
      ],
      "mod_code": [
        "const int maxn = x ;",
        "m = getchar ( ) ;",
        "x = b [ i ] / a [ j ] ;",
        "cout << ppp [ maxn ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5,
        12,
        8
      ],
      "mod_code": [
        "const int maxn = x ;",
        "m = getchar ( ) ;",
        "x = b [ i ] / a [ j ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "const int maxn = x ;",
        "int a [ 52 ] and b [ 52 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        2,
        12
      ],
      "mod_code": [
        "const int maxn = x ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "x = b [ i ] / a [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        2,
        12,
        19
      ],
      "mod_code": [
        "const int maxn = x ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "x = b [ i ] / a [ j ] ;",
        "cout << ppp [ maxn ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        2,
        12,
        8
      ],
      "mod_code": [
        "const int maxn = x ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "x = b [ i ] / a [ j ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        2,
        19
      ],
      "mod_code": [
        "const int maxn = x ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "cout << ppp [ maxn ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        2,
        19,
        8
      ],
      "mod_code": [
        "const int maxn = x ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "cout << ppp [ maxn ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        2,
        8
      ],
      "mod_code": [
        "const int maxn = x ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "const int maxn = x ;",
        "x = b [ i ] / a [ j ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        12,
        19
      ],
      "mod_code": [
        "const int maxn = x ;",
        "x = b [ i ] / a [ j ] ;",
        "cout << ppp [ maxn ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        12,
        19,
        8
      ],
      "mod_code": [
        "const int maxn = x ;",
        "x = b [ i ] / a [ j ] ;",
        "cout << ppp [ maxn ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        12,
        8
      ],
      "mod_code": [
        "const int maxn = x ;",
        "x = b [ i ] / a [ j ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "int a [ 52 ] and b [ 52 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        2,
        12
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "x = b [ i ] / a [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        2,
        12,
        19
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "x = b [ i ] / a [ j ] ;",
        "cout << ppp [ maxn ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        2,
        12,
        8
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "x = b [ i ] / a [ j ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        2,
        19
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "cout << ppp [ maxn ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        2,
        19,
        8
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "cout << ppp [ maxn ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        2,
        8
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "int a [ 52 ] and b [ 52 ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "x = b [ i ] / a [ j ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        19
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "x = b [ i ] / a [ j ] ;",
        "cout << ppp [ maxn ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        19,
        8
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "x = b [ i ] / a [ j ] ;",
        "cout << ppp [ maxn ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        8
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "x = b [ i ] / a [ j ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        19,
        8
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "cout << ppp [ maxn ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 14,
      "err_msg": "assignment of read-only variable ‘maxn’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "m = getchar ( ) ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 14,
      "err_msg": "assignment of read-only variable ‘maxn’"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "int a [ 52 ] and b [ 52 ] ;",
        "x = b [ i ] / a [ j ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        12,
        19
      ],
      "mod_code": [
        "int a [ 52 ] and b [ 52 ] ;",
        "x = b [ i ] / a [ j ] ;",
        "cout << ppp [ maxn ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        12,
        19,
        8
      ],
      "mod_code": [
        "int a [ 52 ] and b [ 52 ] ;",
        "x = b [ i ] / a [ j ] ;",
        "cout << ppp [ maxn ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        12,
        8
      ],
      "mod_code": [
        "int a [ 52 ] and b [ 52 ] ;",
        "x = b [ i ] / a [ j ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "int a [ 52 ] and b [ 52 ] ;",
        "cout << ppp [ maxn ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        19,
        8
      ],
      "mod_code": [
        "int a [ 52 ] and b [ 52 ] ;",
        "cout << ppp [ maxn ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "int a [ 52 ] and b [ 52 ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "x = b [ i ] / a [ j ] ;",
        "cout << ppp [ maxn ] ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        19,
        8
      ],
      "mod_code": [
        "x = b [ i ] / a [ j ] ;",
        "cout << ppp [ maxn ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "x = b [ i ] / a [ j ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        8
      ],
      "mod_code": [
        "cout << ppp [ maxn ] ;",
        "const int maxn = - 1 ;"
      ],
      "err_line": 14,
      "err_msg": "assignment of read-only variable ‘maxn’"
    }
  ]
}