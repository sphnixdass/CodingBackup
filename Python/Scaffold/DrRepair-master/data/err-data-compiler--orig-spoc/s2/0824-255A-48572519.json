{
  "meta": {
    "index": 824,
    "hitid": "3MDWE879UHWORMQ1PGVU4KKEFBI9BN",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "255A",
    "subid": "48572519"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , x , a , b , c = int with a = 0 and b = 0 and c = 0",
      "code": "int n , x , a = 0 , b = 0 , c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if i mod 3 is 1",
      "code": "if ( i % 3 == 1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment a by x",
      "code": "a += x ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if mod 3 is 2",
      "code": "else if ( i % 3 == 2 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment b by x",
      "code": "b += x ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment c by x",
      "code": "c += x ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if a > b and a > c",
      "code": "if ( a > b && a > c )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print \" chest \"",
      "code": "cout << \" chest \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "else if a < b and b > c",
      "code": "else if ( a < b && b > c )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print \" biceps \"",
      "code": "cout << \" biceps \" << endl ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" back \"",
      "code": "cout << \" back \" << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , x , a = 0 , b = 0 , b = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" chest \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        13,
        15
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        17
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        13,
        15,
        5
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" chest \" ;",
        "cout << \" biceps \" ;",
        "if ( i % 3 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        13,
        17
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" chest \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        13,
        17,
        5
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" chest \" ;",
        "cout << \" back \" ;",
        "if ( i % 3 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        13,
        5
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" chest \" ;",
        "if ( i % 3 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" biceps \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        15,
        17
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        15,
        17,
        5
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" biceps \" ;",
        "cout << \" back \" ;",
        "if ( i % 3 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        15,
        5
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" biceps \" ;",
        "if ( i % 3 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" back \" ;"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        17,
        5
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "cout << \" back \" ;",
        "if ( i % 3 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "else if ( if ( 3 ) == 2 )",
        "if ( i % 3 )"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘if’"
    }
  ]
}