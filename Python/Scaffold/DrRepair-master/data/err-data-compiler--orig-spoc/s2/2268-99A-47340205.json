{
  "meta": {
    "index": 2268,
    "hitid": "3L55D8AUFARM2SQFBSJ5ELJN655CYO",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "99A",
    "subid": "47340205"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "dot = integer",
      "code": "int dot ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to ( cast to integer ) s . length ( ) exclusive",
      "code": "for ( int i = 0 ; i < ( int ) s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if ( s [ i ] is . ) , dot = i",
      "code": "if ( s [ i ] == ' . ' ) dot = i ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ( s [ dot - 1 ] is 9 )",
      "code": "if ( s [ dot - 1 ] == ' 9 ' )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print GOTO Vasilisa .",
      "code": "cout << \" GOTO Vasilisa. \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "exit on 0",
      "code": "exit ( 0 ) ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "down = bool with down = false",
      "code": "bool down = false ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if ( ( cast to integer ) ( s [ dot + 1 ] - 0 ) < 5 ) , down = true",
      "code": "if ( ( int ) ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to dot - 1 exclusive , print s [ i ]",
      "code": "for ( int i = 0 ; i < dot - 1 ; i ++ ) cout << s [ i ] ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print ( cast to character ) ( s [ dot - 1 ] + ( if down , 0 else 1 ) )",
      "code": "cout << ( char ) ( s [ dot - 1 ] + ( down ? 0 : 1 ) ) << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << GOTO << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) { down = true ) ; }"
      ],
      "err_line": 11,
      "err_msg": "expected ‘)’ before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << ( ( s [ dot - 1 ] + ( down [ dot - 1 ] ) ) ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << ( GOTO ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘)’ before ‘down’"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) { down = true ) ; }"
      ],
      "err_line": 7,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        13
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) { down = true ) ; }",
        "cout << ( ( s [ dot - 1 ] + ( down [ dot - 1 ] ) ) ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        13,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) { down = true ) ; }",
        "cout << ( ( s [ dot - 1 ] + ( down [ dot - 1 ] ) ) ) << endl ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) { down = true ) ; }",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        1,
        13
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) { down = true ) ; }",
        "string S ;",
        "cout << ( s [ dot - 1 ] + ( s [ dot - 1 ] ) ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        13
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) { down = true ) ; }",
        "cout << ( s [ dot - 1 ] + ( s [ dot - 1 ] ) ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "cout << ( ( s [ dot - 1 ] + ( down [ dot - 1 ] ) ) ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        11
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "cout << ( ( s [ dot - 1 ] + ( down [ dot - 1 ] ) ) ) << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;"
      ],
      "err_line": 7,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        11,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "cout << ( ( s [ dot - 1 ] + ( down [ dot - 1 ] ) ) ) << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "cout << ( ( s [ dot - 1 ] + ( down [ dot - 1 ] ) ) ) << endl ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;"
      ],
      "err_line": 7,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        1,
        13
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;",
        "string S ;",
        "cout << ( s [ dot - 1 ] + ( s [ dot - 1 ] ) ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        13
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;",
        "cout << ( s [ dot - 1 ] + ( s [ dot - 1 ] ) ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        13
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "string S ;",
        "cout << ( s [ dot - 1 ] + ( s [ dot - 1 ] ) ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "cout << GOTO << endl ;",
        "cout << ( s [ dot - 1 ] + ( s [ dot - 1 ] ) ) << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘GOTO’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) { down = true ) ; }",
        "cout << ( ( s [ dot - 1 ] + ( down [ dot - 1 ] ) ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘)’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        13,
        1
      ],
      "mod_code": [
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) { down = true ) ; }",
        "cout << ( ( s [ dot - 1 ] + ( down [ dot - 1 ] ) ) ) << endl ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) { down = true ) ; }",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1,
        13
      ],
      "mod_code": [
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) { down = true ) ; }",
        "string S ;",
        "cout << ( s [ dot - 1 ] + ( s [ dot - 1 ] ) ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) { down = true ) ; }",
        "cout << ( s [ dot - 1 ] + ( s [ dot - 1 ] ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘)’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        11
      ],
      "mod_code": [
        "cout << ( ( s [ dot - 1 ] + ( down [ dot - 1 ] ) ) ) << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘)’ before ‘down’"
    },
    {
      "mod_line": [
        13,
        11,
        1
      ],
      "mod_code": [
        "cout << ( ( s [ dot - 1 ] + ( down [ dot - 1 ] ) ) ) << endl ;",
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "cout << ( ( s [ dot - 1 ] + ( down [ dot - 1 ] ) ) ) << endl ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1,
        13
      ],
      "mod_code": [
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;",
        "string S ;",
        "cout << ( s [ dot - 1 ] + ( s [ dot - 1 ] ) ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "if ( ( ( s [ dot + 1 ] - ' 0 ' ) < 5 ) down = true ;",
        "cout << ( s [ dot - 1 ] + ( s [ dot - 1 ] ) ) << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘)’ before ‘down’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "string S ;",
        "cout << ( s [ dot - 1 ] + ( s [ dot - 1 ] ) ) << endl ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    }
  ]
}