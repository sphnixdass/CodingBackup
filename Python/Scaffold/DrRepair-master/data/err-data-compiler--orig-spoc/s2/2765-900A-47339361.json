{
  "meta": {
    "index": 2765,
    "hitid": "322ZSN9Z5GENQ2E687QON6FKZQ74TF",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "900A",
    "subid": "47339361"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , count1 , count2 , x , y = integers with count1 = 0 , count2 = 0",
      "code": "int n , count1 = 0 , count2 = 0 , x , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement n",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x , y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if ( x < 0 )",
      "code": "if ( x < 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment count1",
      "code": "count1 ++ ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment count2",
      "code": "count2 ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if ( count1 < = 1 or count2 < = 1 )",
      "code": "if ( count1 <= 1 || count2 <= 1 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print Yes",
      "code": "cout << \" Yes\\n \" ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print No",
      "code": "cout << \" No\\n \" ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "n",
        "while ( -- n )"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        14
      ],
      "mod_code": [
        "n",
        "while ( -- n )",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        14,
        13
      ],
      "mod_code": [
        "n",
        "while ( -- n )",
        "cout << \" NO\\n \" ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        14,
        2
      ],
      "mod_code": [
        "n",
        "while ( -- n )",
        "cout << \" NO\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        14,
        4
      ],
      "mod_code": [
        "n",
        "while ( -- n )",
        "cout << \" NO\\n \" ;",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        13
      ],
      "mod_code": [
        "n",
        "while ( -- n )",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        13,
        2
      ],
      "mod_code": [
        "n",
        "while ( -- n )",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        13,
        4
      ],
      "mod_code": [
        "n",
        "while ( -- n )",
        "n",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        2
      ],
      "mod_code": [
        "n",
        "while ( -- n )",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        2,
        4
      ],
      "mod_code": [
        "n",
        "while ( -- n )",
        "n = getchar ( ) ;",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        3,
        4
      ],
      "mod_code": [
        "n",
        "while ( -- n )",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "n",
        "cout << \" NO\\n \" ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        13
      ],
      "mod_code": [
        "n",
        "cout << \" NO\\n \" ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        13,
        2
      ],
      "mod_code": [
        "n",
        "cout << \" NO\\n \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        13,
        4
      ],
      "mod_code": [
        "n",
        "cout << \" NO\\n \" ;",
        "n",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        2
      ],
      "mod_code": [
        "n",
        "cout << \" NO\\n \" ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        2,
        4
      ],
      "mod_code": [
        "n",
        "cout << \" NO\\n \" ;",
        "n = getchar ( ) ;",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        14,
        4
      ],
      "mod_code": [
        "n",
        "cout << \" NO\\n \" ;",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        13,
        2
      ],
      "mod_code": [
        "n",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        13,
        2,
        4
      ],
      "mod_code": [
        "n",
        "n",
        "n = getchar ( ) ;",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        13,
        4
      ],
      "mod_code": [
        "n",
        "n",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        2,
        4
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "n",
        "cin >> x , y ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        14,
        13
      ],
      "mod_code": [
        "while ( -- n )",
        "cout << \" NO\\n \" ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        14,
        13,
        2
      ],
      "mod_code": [
        "while ( -- n )",
        "cout << \" NO\\n \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        14,
        13,
        4
      ],
      "mod_code": [
        "while ( -- n )",
        "cout << \" NO\\n \" ;",
        "n",
        "cin >> x , y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        13
      ],
      "mod_code": [
        "while ( -- n )",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        13,
        2
      ],
      "mod_code": [
        "while ( -- n )",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        13,
        2,
        4
      ],
      "mod_code": [
        "while ( -- n )",
        "n",
        "n = getchar ( ) ;",
        "cin >> x , y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        13,
        4
      ],
      "mod_code": [
        "while ( -- n )",
        "n",
        "cin >> x , y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        13
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;",
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        13,
        2
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;",
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        13,
        2,
        4
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;",
        "n",
        "n = getchar ( ) ;",
        "cin >> x , y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        13,
        4
      ],
      "mod_code": [
        "cout << \" NO\\n \" ;",
        "n",
        "cin >> x , y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        2,
        4
      ],
      "mod_code": [
        "n",
        "n = getchar ( ) ;",
        "cin >> x , y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "n",
        "cin >> x , y ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}