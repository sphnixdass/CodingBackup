{
  "meta": {
    "index": 503,
    "hitid": "3ZTE0JGGCEMA8EMD55A7CULLSV6OCP",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "261A",
    "subid": "29833377"
  },
  "lines": [
    {
      "line": 0,
      "text": "constant long long integer mod = 1e9 + 7",
      "code": "const long long mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "R [ 65 ] = long long integer",
      "code": "long long POWER [ 65 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "long long integer r ( long long a , long long b )",
      "code": "long long power ( long long a , long long b )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "long long integer ret = 1",
      "code": "long long ret = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if b is true do the following",
      "code": "while ( b )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if b & 1 is true",
      "code": "if ( b & 1 ) ret *= a ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "multiply a by a",
      "code": "a *= a ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if ret is greater than or equal to mod then do the following ret modulo = mod",
      "code": "if ( ret >= mod ) ret %= mod ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if a is greater than or equal to mod then do the following a modulo = mod",
      "code": "if ( a >= mod ) a %= mod ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "right shift b by 1",
      "code": "b >>= 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "return ret",
      "code": "return ret ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "long long x ) = long long integers",
      "code": "long long inv ( long long x )",
      "indent": 0
    },
    {
      "line": 14,
      "text": "return power ( x , mod - 2 )",
      "code": "return power ( x , mod - 2 ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "create function predcompute",
      "code": "void precompute ( )",
      "indent": 0
    },
    {
      "line": 17,
      "text": "set POWER [ 0 ] to 1",
      "code": "POWER [ 0 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for 1 to less than 63 do the following",
      "code": "for ( long long i = 1 ; i < 63 ; i ++ ) POWER [ i ] = POWER [ i - 1 ] << 1LL ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 20,
      "text": "create vector v",
      "code": "vector < long long > v ;",
      "indent": 0
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 22,
      "text": "namespace std",
      "code": "std :",
      "indent": 0
    },
    {
      "line": 23,
      "text": "m , mi = mod = long long integers",
      "code": "long long m , mi = mod ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "for 0 to less than m do the following",
      "code": "for ( long long i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "ong x = long long integers",
      "code": "long long x ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "set mi to min ( mi , x )",
      "code": "mi = min ( mi , x ) ;",
      "indent": 2
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 30,
      "text": "n = long long integers",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 32,
      "text": "for 0 to less than n do the following",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 33,
      "text": "ong x = long long integers",
      "code": "long long x ;",
      "indent": 2
    },
    {
      "line": 34,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "add new element x to end of vector v",
      "code": "v . push_back ( x ) ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "sort the values of ) to v . end (",
      "code": "sort ( v . begin ( ) , v . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "reverse v from begin to end",
      "code": "reverse ( v . begin ( ) , v . end ( ) ) ;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "long long integer = ret = 0 , num = 0",
      "code": "long long ret = 0 , num = 0 ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "for 0 to less than ( ( long long ) v . size ( ) ) do the following",
      "code": "for ( long long i = 0 ; i < ( ( long long ) v . size ( ) ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 41,
      "text": "if num is mi then do the following",
      "code": "if ( num == mi )",
      "indent": 2
    },
    {
      "line": 42,
      "text": "i equals i plus 1",
      "code": "i += 1 ;",
      "indent": 3
    },
    {
      "line": 43,
      "text": "set num to 0",
      "code": "num = 0 ;",
      "indent": 3
    },
    {
      "line": 44,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 45,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 46,
      "text": "ret equals ret plus v [ i ]",
      "code": "ret += v [ i ] ;",
      "indent": 2
    },
    {
      "line": 47,
      "text": "add one to num",
      "code": "num ++ ;",
      "indent": 2
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 49,
      "text": "output ret",
      "code": "cout << ret << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "R [ 65 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long r ( long long a , long long b )"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "long long x )"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 63 ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "std = std ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 40,
      "err_msg": "lvalue required as increment operand"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "i = i plus 1 ;"
      ],
      "err_line": 42,
      "err_msg": "expected ‘;’ before ‘plus’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "R [ 65 ] = ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long r ( long long a )"
      ],
      "err_line": 4,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "long long x ;"
      ],
      "err_line": 14,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "return abs ( x , mod - 2 ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘abs(long long int&, long long int)’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "int POWER [ 0 ] = 1 ;"
      ],
      "err_line": 17,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 63 ; j ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "std = getchar ( ) ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "for ( int i = 0 ; j < m ; i ++ )"
      ],
      "err_line": 25,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "int mi = min ( mi , x ) ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "for ( int j = 0 ; i < n ; i ++ )"
      ],
      "err_line": 32,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "v . end ( x ) ;"
      ],
      "err_line": 35,
      "err_msg": "no matching function for call to ‘std::vector<long long int>::end(long long int&)’"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "for ( ( i = 0 ) ; v < ( ( long long ) v . size ( ) ) ; 0 ++ )"
      ],
      "err_line": 40,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 44,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        13
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "long long x )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        13,
        18
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        13,
        22
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "long long x )",
        "std = std ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        13,
        40
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "long long x )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        13,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "long long x )",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        18
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "for ( int i = 1 ; i < 63 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        18,
        22
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        18,
        40
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        18,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        22
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "std = std ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        22,
        40
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        22,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "std = std ;",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        40
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        40,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long r ( long long a , long long b )",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long x )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        18
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        18,
        22
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        18,
        40
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        18,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        22
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long x )",
        "std = std ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        22,
        40
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long x )",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        22,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long x )",
        "std = std ;",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        40
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long x )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        40,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long x )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        13,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "long long x )",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        18
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "for ( int i = 1 ; i < 63 ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        18,
        22
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        18,
        22,
        40
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        18,
        22,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        18,
        40
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        18,
        40,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        18,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "std = std ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        22,
        40
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        22,
        40,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        22,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "std = std ;",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        40
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        40,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        1,
        42
      ],
      "mod_code": [
        "R [ 65 ] ;",
        "i = i plus 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘R’ does not name a type"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "long long x )"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        13,
        18
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        22
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        40
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        42
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "i = i plus 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        13,
        22
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "long long x )",
        "std = std ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        13,
        22,
        40
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "long long x )",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        13,
        22,
        42
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "long long x )",
        "std = std ;",
        "i = i plus 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        13,
        40
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "long long x )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        13,
        40,
        42
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "long long x )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        13,
        42
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "long long x )",
        "i = i plus 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "for ( int i = 1 ; i < 63 ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        18,
        22
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        18,
        22,
        40
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        18,
        22,
        42
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;",
        "i = i plus 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        18,
        40
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        18,
        40,
        42
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        18,
        42
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "i = i plus 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        22
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "std = std ;"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        22,
        40
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        22,
        40,
        42
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        22,
        42
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "std = std ;",
        "i = i plus 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        40
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        40,
        42
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        42
      ],
      "mod_code": [
        "long long r ( long long a , long long b )",
        "i = i plus 1 ;"
      ],
      "err_line": 14,
      "err_msg": "‘power’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        18,
        22
      ],
      "mod_code": [
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        18,
        22,
        40
      ],
      "mod_code": [
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        18,
        22,
        42
      ],
      "mod_code": [
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;",
        "i = i plus 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        18,
        40
      ],
      "mod_code": [
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        18,
        40,
        42
      ],
      "mod_code": [
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        18,
        42
      ],
      "mod_code": [
        "long long x )",
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "i = i plus 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        22
      ],
      "mod_code": [
        "long long x )",
        "std = std ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        22,
        40
      ],
      "mod_code": [
        "long long x )",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        22,
        40,
        42
      ],
      "mod_code": [
        "long long x )",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        22,
        42
      ],
      "mod_code": [
        "long long x )",
        "std = std ;",
        "i = i plus 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        40
      ],
      "mod_code": [
        "long long x )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        40,
        42
      ],
      "mod_code": [
        "long long x )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        13,
        42
      ],
      "mod_code": [
        "long long x )",
        "i = i plus 1 ;"
      ],
      "err_line": 13,
      "err_msg": "expected initializer before ‘)’ token"
    },
    {
      "mod_line": [
        18,
        22
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        22,
        40
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        22,
        40,
        42
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        22,
        42
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "std = std ;",
        "i = i plus 1 ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        40
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        40,
        42
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        42
      ],
      "mod_code": [
        "for ( int i = 1 ; i < 63 ; i ++ )",
        "i = i plus 1 ;"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        22,
        40
      ],
      "mod_code": [
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        22,
        40,
        42
      ],
      "mod_code": [
        "std = std ;",
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        22,
        42
      ],
      "mod_code": [
        "std = std ;",
        "i = i plus 1 ;"
      ],
      "err_line": 22,
      "err_msg": "expected primary-expression before ‘=’ token"
    },
    {
      "mod_line": [
        40,
        42
      ],
      "mod_code": [
        "for ( long long i = 0 ; i < ( long long ) v . size ( ) ; ++ 0 )",
        "i = i plus 1 ;"
      ],
      "err_line": 40,
      "err_msg": "lvalue required as increment operand"
    }
  ]
}