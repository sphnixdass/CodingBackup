{
  "meta": {
    "index": 1373,
    "hitid": "3JHB4BPSFK3BVSSQ8YSKZ9FD1BMQ9J",
    "workerid": "A277IUJ2DY3GZQ",
    "probid": "54A",
    "subid": "35272229"
  },
  "lines": [
    {
      "line": 0,
      "text": "let kMaxN be a constant int with value 400",
      "code": "const int kMaxN = 400 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a an int array of length kMaxN",
      "code": "int a [ kMaxN ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let N , K , C ints",
      "code": "int N , K , C ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read N , K , and C",
      "code": "cin >> N >> K >> C ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read the first C values of a",
      "code": "for ( int i = 0 ; i < C ; ++ i ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let pt , pending , and gifts be ints with pt = 0 , pending = K - 1 , gifts = 0",
      "code": "int pt = 0 , pending = K - 1 , gifts = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i from 1 to N",
      "code": "for ( int i = 1 ; i <= N ; ++ i )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if i equals a [ pt ]",
      "code": "if ( i == a [ pt ] )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "preincrement gifts",
      "code": "++ gifts ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "preincrement pt",
      "code": "++ pt ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "set pending to K - 1",
      "code": "pending = K - 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if pending is 0",
      "code": "if ( pending == 0 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set pending to K - 1",
      "code": "pending = K - 1 ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "preincrement gifts",
      "code": "++ gifts ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "otherwise",
      "code": "else",
      "indent": 3
    },
    {
      "line": 17,
      "text": "decrement pending",
      "code": "pending -- ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print gifts",
      "code": "cout << gifts << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "< long pt ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int kMaxN = 400 ;"
      ],
      "err_line": 1,
      "err_msg": "array bound is not an integer constant before ‘]’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int * a [ kMaxN ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "const int pt = 0 , pending = K - 1 , gifts = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "increment of read-only variable ‘gifts’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 1 ; i <= N ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( i == a [ j ] )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "srand ( ) ;"
      ],
      "err_line": 10,
      "err_msg": "too few arguments to function ‘void srand(unsigned int)’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 16,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "gifts = gifts ;",
        "< long pt ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        9,
        10,
        15
      ],
      "mod_code": [
        "gifts = gifts ;",
        "< long pt ;",
        "gifts = gifts ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        12
      ],
      "mod_code": [
        "gifts = gifts ;",
        "< long pt ;",
        "gifts = gifts ;",
        "otherwise"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        21
      ],
      "mod_code": [
        "gifts = gifts ;",
        "< long pt ;",
        "gifts = gifts ;",
        "cout << ' gifts ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        9,
        10,
        15,
        4
      ],
      "mod_code": [
        "gifts = gifts ;",
        "< long pt ;",
        "gifts = gifts ;",
        "cin >> N , K >> C ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        9,
        10,
        12
      ],
      "mod_code": [
        "gifts = gifts ;",
        "< long pt ;",
        "otherwise"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        21
      ],
      "mod_code": [
        "gifts = gifts ;",
        "< long pt ;",
        "otherwise",
        "cout << ' gifts ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        9,
        10,
        12,
        4
      ],
      "mod_code": [
        "gifts = gifts ;",
        "< long pt ;",
        "otherwise",
        "cin >> N , K >> C ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        9,
        10,
        21
      ],
      "mod_code": [
        "gifts = gifts ;",
        "< long pt ;",
        "cout << ' gifts ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        9,
        10,
        21,
        4
      ],
      "mod_code": [
        "gifts = gifts ;",
        "< long pt ;",
        "cout << ' gifts ' ;",
        "cin >> N , K >> C ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        9,
        10,
        4
      ],
      "mod_code": [
        "gifts = gifts ;",
        "< long pt ;",
        "cin >> N , K >> C ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        9,
        15,
        12
      ],
      "mod_code": [
        "gifts = gifts ;",
        "gifts = gifts ;",
        "otherwise"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        12,
        21
      ],
      "mod_code": [
        "gifts = gifts ;",
        "gifts = gifts ;",
        "otherwise",
        "cout << ' gifts ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15,
        12,
        4
      ],
      "mod_code": [
        "gifts = gifts ;",
        "gifts = gifts ;",
        "otherwise",
        "cin >> N , K >> C ;"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "gifts = gifts ;",
        "otherwise"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        21
      ],
      "mod_code": [
        "gifts = gifts ;",
        "otherwise",
        "cout << ' gifts ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        21,
        4
      ],
      "mod_code": [
        "gifts = gifts ;",
        "otherwise",
        "cout << ' gifts ' ;",
        "cin >> N , K >> C ;"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        12,
        4
      ],
      "mod_code": [
        "gifts = gifts ;",
        "otherwise",
        "cin >> N , K >> C ;"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "< long pt ;",
        "gifts = gifts ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        12
      ],
      "mod_code": [
        "< long pt ;",
        "gifts = gifts ;",
        "otherwise"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        12,
        21
      ],
      "mod_code": [
        "< long pt ;",
        "gifts = gifts ;",
        "otherwise",
        "cout << ' gifts ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        12,
        4
      ],
      "mod_code": [
        "< long pt ;",
        "gifts = gifts ;",
        "otherwise",
        "cin >> N , K >> C ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        21
      ],
      "mod_code": [
        "< long pt ;",
        "gifts = gifts ;",
        "cout << ' gifts ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        21,
        4
      ],
      "mod_code": [
        "< long pt ;",
        "gifts = gifts ;",
        "cout << ' gifts ' ;",
        "cin >> N , K >> C ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        15,
        4
      ],
      "mod_code": [
        "< long pt ;",
        "gifts = gifts ;",
        "cin >> N , K >> C ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "< long pt ;",
        "otherwise"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        12,
        21
      ],
      "mod_code": [
        "< long pt ;",
        "otherwise",
        "cout << ' gifts ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        12,
        21,
        4
      ],
      "mod_code": [
        "< long pt ;",
        "otherwise",
        "cout << ' gifts ' ;",
        "cin >> N , K >> C ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        12,
        4
      ],
      "mod_code": [
        "< long pt ;",
        "otherwise",
        "cin >> N , K >> C ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        21
      ],
      "mod_code": [
        "< long pt ;",
        "cout << ' gifts ' ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        21,
        4
      ],
      "mod_code": [
        "< long pt ;",
        "cout << ' gifts ' ;",
        "cin >> N , K >> C ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "< long pt ;",
        "cin >> N , K >> C ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<’ token"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "gifts = gifts ;",
        "otherwise"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12,
        21
      ],
      "mod_code": [
        "gifts = gifts ;",
        "otherwise",
        "cout << ' gifts ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12,
        21,
        4
      ],
      "mod_code": [
        "gifts = gifts ;",
        "otherwise",
        "cout << ' gifts ' ;",
        "cin >> N , K >> C ;"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        12,
        4
      ],
      "mod_code": [
        "gifts = gifts ;",
        "otherwise",
        "cin >> N , K >> C ;"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        21
      ],
      "mod_code": [
        "otherwise",
        "cout << ' gifts ' ;"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        21,
        4
      ],
      "mod_code": [
        "otherwise",
        "cout << ' gifts ' ;",
        "cin >> N , K >> C ;"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "otherwise",
        "cin >> N , K >> C ;"
      ],
      "err_line": 12,
      "err_msg": "‘otherwise’ was not declared in this scope"
    }
  ]
}