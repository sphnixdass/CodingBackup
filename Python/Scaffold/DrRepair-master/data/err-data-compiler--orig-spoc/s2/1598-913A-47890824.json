{
  "meta": {
    "index": 1598,
    "hitid": "3K8CQCU3KEV14RS6LHAV9ZSJU1EWNM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "913A",
    "subid": "47890824"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long long variables n and m",
      "code": "long long n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n > = 60",
      "code": "if ( n >= 60 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print m to the standard output",
      "code": "cout << m << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print m & ( ( 1ll < < n ) - 1 )",
      "code": "cout << ( m & ( ( 1ll << n ) - 1 ) ) << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << m & ( ( 1ll << n ) - 1 ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘long long int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "cout << m & ( ( 1ll < n << n ) - 1 ) << endl ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int’ and ‘<unresolved overloaded function type>’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "cout << m & ( ( 1ll << n ) - 1 ) << endl ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "cout << m & ( ( 1ll < n << n ) - 1 ) << endl ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}