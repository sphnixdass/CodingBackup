{
  "meta": {
    "index": 2574,
    "hitid": "3Z3R5YC0P3HXOIBVSOM7EACBNEZTF6",
    "workerid": "AIWEXPJAU66D9",
    "probid": "24A",
    "subid": "45666924"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variable n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "let vis be an array of integers of length 105",
      "code": "int vis [ 105 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integers t and v and integer array k with size 105",
      "code": "int k [ 105 ] , t , v ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integer arrays a , b and c with size 105",
      "code": "int a [ 105 ] , b [ 105 ] , c [ 105 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer arrays x , y and z with size 105",
      "code": "int x [ 105 ] , y [ 105 ] , z [ 105 ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let s be a 2d array of integers with size 105 by 105",
      "code": "int s [ 105 ] [ 105 ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare integers called s1 , s2 , s3 and sum",
      "code": "int s1 , s2 , s3 , sum ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "call function memset with arguments vis , 0 and sizeof ( vis )",
      "code": "memset ( vis , 0 , sizeof ( vis ) ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "call function memset with arguments k , 0 and sizeof ( k )",
      "code": "memset ( k , 0 , sizeof ( k ) ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "call function memset with arguments x , 0 and sizeof ( x )",
      "code": "memset ( x , 0 , sizeof ( x ) ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "call function memset with arguments y , 0 and sizeof ( y )",
      "code": "memset ( y , 0 , sizeof ( y ) ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "call function memset with arguments z , 0 and sizeof ( z )",
      "code": "memset ( z , 0 , sizeof ( z ) ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "call function memset with arguments s , 0 and sizeof ( s )",
      "code": "memset ( s , 0 , sizeof ( s ) ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "sum = 0",
      "code": "sum = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for integer i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "read a [ i ] , b [ i ] and c [ i ]",
      "code": "cin >> a [ i ] >> b [ i ] >> c [ i ] ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "increment vis [ a [ i ] ]",
      "code": "vis [ a [ i ] ] ++ ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "decrement vis [ b [ i ] ]",
      "code": "vis [ b [ i ] ] -- ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "increase sum by c [ i ]",
      "code": "sum += c [ i ] ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "set t to 0",
      "code": "t = 0 ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for integer i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if vis [ i ] is equal to 0",
      "code": "if ( vis [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "set value of k [ t ] to i",
      "code": "k [ t ] = i ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "increase t",
      "code": "t ++ ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "if t is equal to n",
      "code": "if ( t == n )",
      "indent": 1
    },
    {
      "line": 30,
      "text": "print 0 and a new line",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 31,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 32,
      "text": "for i = 0 to t exclusive",
      "code": "for ( int i = 0 ; i < t ; i ++ )",
      "indent": 2
    },
    {
      "line": 33,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 3
    },
    {
      "line": 34,
      "text": "if k [ i ] is equal to a [ j ]",
      "code": "if ( k [ i ] == a [ j ] )",
      "indent": 4
    },
    {
      "line": 35,
      "text": "set s1 to b [ j ]",
      "code": "s1 = b [ j ] ;",
      "indent": 5
    },
    {
      "line": 36,
      "text": "set s3 to c [ j ]",
      "code": "s3 = c [ j ] ;",
      "indent": 5
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 38,
      "text": "if k [ i ] is equal to b [ j ] , set s2 to a [ j ]",
      "code": "if ( k [ i ] == b [ j ] ) { s2 = a [ j ] ; }",
      "indent": 4
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 40,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 3
    },
    {
      "line": 41,
      "text": "if k [ i ] is equal to a [ j ]",
      "code": "if ( k [ i ] == a [ j ] )",
      "indent": 4
    },
    {
      "line": 42,
      "text": "set value of b [ j ] to k [ i ]",
      "code": "b [ j ] = k [ i ] ;",
      "indent": 5
    },
    {
      "line": 43,
      "text": "set c [ j ] to 0",
      "code": "c [ j ] = 0 ;",
      "indent": 5
    },
    {
      "line": 44,
      "text": "else if k [ i ] is equal to b [ j ]",
      "code": "else if ( k [ i ] == b [ j ] )",
      "indent": 4
    },
    {
      "line": 45,
      "text": "set b [ j ] to s1",
      "code": "b [ j ] = s1 ;",
      "indent": 5
    },
    {
      "line": 46,
      "text": "assign c [ j ] + s3 to c [ j ]",
      "code": "c [ j ] = c [ j ] + s3 ;",
      "indent": 5
    },
    {
      "line": 47,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 49,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 50,
      "text": "set value of v to 0",
      "code": "v = 0 ;",
      "indent": 2
    },
    {
      "line": 51,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 52,
      "text": "if c [ i ] ! = 0",
      "code": "if ( c [ i ] != 0 )",
      "indent": 3
    },
    {
      "line": 53,
      "text": "x [ v ] = a [ i ]",
      "code": "x [ v ] = a [ i ] ;",
      "indent": 4
    },
    {
      "line": 54,
      "text": "set y [ v ] to b [ i ]",
      "code": "y [ v ] = b [ i ] ;",
      "indent": 4
    },
    {
      "line": 55,
      "text": "z [ v ] = c [ i ]",
      "code": "z [ v ] = c [ i ] ;",
      "indent": 4
    },
    {
      "line": 56,
      "text": "increase v",
      "code": "v ++ ;",
      "indent": 4
    },
    {
      "line": 57,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 58,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 59,
      "text": "gb1 and gb2 are integers = 0",
      "code": "int gb1 = 0 , gb2 = 0 ;",
      "indent": 2
    },
    {
      "line": 60,
      "text": "create integer f with value 0",
      "code": "int f = 0 ;",
      "indent": 2
    },
    {
      "line": 61,
      "text": "set integer ss to x [ 0 ]",
      "code": "int ss = x [ 0 ] ;",
      "indent": 2
    },
    {
      "line": 62,
      "text": "set t to 0",
      "code": "t = 0 ;",
      "indent": 2
    },
    {
      "line": 63,
      "text": "call memset with arguments vis , 0 and sizeof ( vis )",
      "code": "memset ( vis , 0 , sizeof ( vis ) ) ;",
      "indent": 2
    },
    {
      "line": 64,
      "text": "while f is less than v",
      "code": "while ( f < v )",
      "indent": 2
    },
    {
      "line": 65,
      "text": "for integer j = 0 to v exclusive",
      "code": "for ( int j = 0 ; j < v ; j ++ )",
      "indent": 3
    },
    {
      "line": 66,
      "text": "if vis [ j ] is equal to 0",
      "code": "if ( vis [ j ] == 0 )",
      "indent": 4
    },
    {
      "line": 67,
      "text": "if x [ j ] = ss or y [ j ] = ss",
      "code": "if ( ( x [ j ] == ss ) || ( y [ j ] == ss ) )",
      "indent": 5
    },
    {
      "line": 68,
      "text": "set value of vis [ j ] to 1",
      "code": "vis [ j ] = 1 ;",
      "indent": 6
    },
    {
      "line": 69,
      "text": "if f is even",
      "code": "if ( f % 2 == 0 )",
      "indent": 6
    },
    {
      "line": 70,
      "text": "ss = y [ j ]",
      "code": "ss = y [ j ] ;",
      "indent": 7
    },
    {
      "line": 71,
      "text": "increase gb1 by z [ j ]",
      "code": "gb1 += z [ j ] ;",
      "indent": 7
    },
    {
      "line": 72,
      "text": "else",
      "code": "else",
      "indent": 6
    },
    {
      "line": 73,
      "text": "set value of ss to x [ j ]",
      "code": "ss = x [ j ] ;",
      "indent": 7
    },
    {
      "line": 74,
      "text": "increase gb2 by z [ j ]",
      "code": "gb2 += z [ j ] ;",
      "indent": 7
    },
    {
      "line": 75,
      "text": "DUMMY",
      "code": "}",
      "indent": 6
    },
    {
      "line": 76,
      "text": "break the loop",
      "code": "break ;",
      "indent": 6
    },
    {
      "line": 77,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 78,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 79,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 80,
      "text": "increase f",
      "code": "f ++ ;",
      "indent": 3
    },
    {
      "line": 81,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 82,
      "text": "print min of gb1 and gb2 and a new line",
      "code": "cout << min ( gb1 , gb2 ) << endl ;",
      "indent": 2
    },
    {
      "line": 83,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 84,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 85,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;"
      ],
      "err_line": 17,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int x [ 105 ] , y [ 105 ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int sum = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int * vis [ 105 ] ;"
      ],
      "err_line": 68,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int t , k [ 105 ] , t ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int s1 , s2 , s3 >> sum ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "vis ( vis , 0 , sizeof ( vis ) ) ;"
      ],
      "err_line": 9,
      "err_msg": "‘vis’ cannot be used as a function"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "memset ( ( k , 0 , sizeof ( k ) ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "memset ( ( x , 0 , sizeof ( x ) ) ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "memset ( ( y , 0 , sizeof ( y ) ) ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid conversion from ‘long unsigned int’ to ‘void*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "z ( z , 0 , sizeof ( z ) ) ;"
      ],
      "err_line": 13,
      "err_msg": "‘z’ cannot be used as a function"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "memset ( s , 0 , s ( s ) ) ;"
      ],
      "err_line": 14,
      "err_msg": "‘s’ cannot be used as a function"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "s1 [ a [ i ] ] ++ ;"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "s1 [ b [ i ] ] -- ;"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "int t = 0 ;"
      ],
      "err_line": 22,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "else if ( t == n )"
      ],
      "err_line": 29,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 32,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "for ( i = 0 ; i < t ; i ++ )"
      ],
      "err_line": 32,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 33,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "s1 %= b ;"
      ],
      "err_line": 35,
      "err_msg": "invalid use of non-lvalue array"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 40,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        45
      ],
      "mod_code": [
        "int b [ j ] = s1 ;"
      ],
      "err_line": 45,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        50
      ],
      "mod_code": [
        "* v = 0 ;"
      ],
      "err_line": 50,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        51
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 51,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        60
      ],
      "mod_code": [
        "f = 0 ;"
      ],
      "err_line": 60,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        61
      ],
      "mod_code": [
        "ss = x [ 0 ] ;"
      ],
      "err_line": 61,
      "err_msg": "‘ss’ was not declared in this scope"
    },
    {
      "mod_line": [
        63
      ],
      "mod_code": [
        "vis ( vis , 0 , sizeof ( vis ) ) ;"
      ],
      "err_line": 63,
      "err_msg": "‘vis’ cannot be used as a function"
    },
    {
      "mod_line": [
        72
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 73,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        76
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 76,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int a [ 105 ] , b [ 105 ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        4,
        5
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int a [ 105 ] , b [ 105 ] ;",
        "int x [ 105 ] , y [ 105 ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        15
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int a [ 105 ] , b [ 105 ] ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        60
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int a [ 105 ] , b [ 105 ] ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        4,
        5,
        40
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int a [ 105 ] , b [ 105 ] ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        4,
        15
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int a [ 105 ] , b [ 105 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        4,
        15,
        60
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int a [ 105 ] , b [ 105 ] ;",
        "int sum = 0 ;",
        "f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        4,
        15,
        40
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int a [ 105 ] , b [ 105 ] ;",
        "int sum = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        4,
        60
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int a [ 105 ] , b [ 105 ] ;",
        "f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        4,
        60,
        40
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int a [ 105 ] , b [ 105 ] ;",
        "f = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        4,
        40
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int a [ 105 ] , b [ 105 ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int x [ 105 ] , y [ 105 ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        5,
        15
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        5,
        15,
        60
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "int sum = 0 ;",
        "f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        5,
        15,
        40
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "int sum = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        5,
        60
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        5,
        60,
        40
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "f = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        5,
        40
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int sum = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        15,
        60
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int sum = 0 ;",
        "f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        15,
        60,
        40
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int sum = 0 ;",
        "f = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        15,
        40
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "int sum = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        60
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "f = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        60,
        40
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "f = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        3,
        40
      ],
      "mod_code": [
        "int t , v [ 105 ] , t ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "int x [ 105 ] , y [ 105 ] ;"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        15
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        60
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "int sum = 0 ;",
        "f = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        40
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "int sum = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        60
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "f = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        60,
        40
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "f = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        40
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "int x [ 105 ] , y [ 105 ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        4,
        15,
        60
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "int sum = 0 ;",
        "f = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        4,
        15,
        60,
        40
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "int sum = 0 ;",
        "f = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        4,
        15,
        40
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "int sum = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        4,
        60
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "f = 0 ;"
      ],
      "err_line": 17,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        60,
        40
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "f = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        40
      ],
      "mod_code": [
        "int a [ 105 ] , b [ 105 ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "int x [ 105 ] , y [ 105 ] ;",
        "int sum = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        60
      ],
      "mod_code": [
        "int x [ 105 ] , y [ 105 ] ;",
        "int sum = 0 ;",
        "f = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        60,
        40
      ],
      "mod_code": [
        "int x [ 105 ] , y [ 105 ] ;",
        "int sum = 0 ;",
        "f = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        40
      ],
      "mod_code": [
        "int x [ 105 ] , y [ 105 ] ;",
        "int sum = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        60
      ],
      "mod_code": [
        "int x [ 105 ] , y [ 105 ] ;",
        "f = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        60,
        40
      ],
      "mod_code": [
        "int x [ 105 ] , y [ 105 ] ;",
        "f = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        40
      ],
      "mod_code": [
        "int x [ 105 ] , y [ 105 ] ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘z’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        60
      ],
      "mod_code": [
        "int sum = 0 ;",
        "f = 0 ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        15,
        60,
        40
      ],
      "mod_code": [
        "int sum = 0 ;",
        "f = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        15,
        40
      ],
      "mod_code": [
        "int sum = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘int sum’"
    },
    {
      "mod_line": [
        60,
        40
      ],
      "mod_code": [
        "f = 0 ;",
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 40,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}