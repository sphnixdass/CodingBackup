{
  "meta": {
    "index": 539,
    "hitid": "3RDTX9JRTYV1PANBCZJEZIYIWLN79V",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1040A",
    "subid": "47477768"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , blanco and negro",
      "code": "int n , blanco , negro ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , blanco and negro",
      "code": "cin >> n >> blanco >> negro ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let array be integer array with size n",
      "code": "int array [ n ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop i from 0 to n exclusive , reading array [ i ]",
      "code": "for ( int i = int ( 0 ) ; i < int ( n ) ; i ++ ) { cin >> array [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare int variables i = 0 and j = n - 1",
      "code": "int i = 0 , j = n - 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare boolean flag = true",
      "code": "bool flag = true ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare int cont = 0",
      "code": "int cont = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while i < = j and flag is true",
      "code": "while ( i <= j && flag )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if array [ i ] = 2 and array [ j ] is equal to 2",
      "code": "if ( array [ i ] == 2 && array [ j ] == 2 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if i = j",
      "code": "if ( i == j )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increase cont by blanco if blanco < negro , else by negro",
      "code": "cont += blanco < negro ? blanco : negro ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increase cont by 2 * blanco if blanco < negro , else by 2 * negro",
      "code": "cont += blanco < negro ? 2 * blanco : 2 * negro ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "else if array [ i ] = 2",
      "code": "else if ( array [ i ] == 2 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increase cont by blanco if array [ j ] = 0 , else by negro",
      "code": "cont += array [ j ] == 0 ? blanco : negro ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else if array [ j ] = 2",
      "code": "else if ( array [ j ] == 2 )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increase cont by blanco if array [ i ] = 0 , else by negro",
      "code": "cont += array [ i ] == 0 ? blanco : negro ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 19,
      "text": "set flag to true if array [ i ] = array [ j ] , else set it to false",
      "code": "flag = array [ i ] == array [ j ] ? true : false ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "decrement j by one",
      "code": "j -- ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print cont if is true or - 1 otherwise",
      "code": "cout << ( flag ? cont : - 1 ) << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "cont += blanco [ j ] == 0 ? blanco : negro ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , blanco , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a [ n ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘array’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int i = 0 = n - 1 , j ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cont += ( blanco * blanco ) ? cont += 2 * negro ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "cont += blanco [ i ] == 0 ? blanco : negro ;"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 19,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        15
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cont += blanco [ j ] == 0 ? blanco : negro ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        15,
        19
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "flag = array [ i ] == ' array ' ? true : false ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        24
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "flag = array [ i ] == ' array ' ? true : false ;",
        "cout << ( cont ? cont : - 1 ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        7
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "flag = array [ i ] == ' array ' ? true : false ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        13,
        15,
        24
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "cout << ( cont ? cont : - 1 ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        19
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "flag = ( array [ i ] ) ? true : false ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        15,
        24,
        7
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        13,
        15,
        19
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "flag = ( array [ i ] ) ? true : false ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        15,
        19,
        7
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "flag = ( array [ i ] ) ? true : false ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        13,
        15,
        7
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "flag = array [ i ] == ' array ' ? true : false ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        19,
        24
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "flag = array [ i ] == ' array ' ? true : false ;",
        "cout << ( cont ? cont : - 1 ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        19,
        24,
        7
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "flag = array [ i ] == ' array ' ? true : false ;",
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        13,
        19,
        7
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "flag = array [ i ] == ' array ' ? true : false ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        13,
        24
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cout << ( cont ? cont : - 1 ) << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        24,
        19
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "flag = ( array [ i ] ) ? true : false ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        24,
        19,
        7
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "flag = ( array [ i ] ) ? true : false ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        13,
        24,
        7
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "flag = ( array [ i ] ) ? true : false ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘:’ before ‘;’ token"
    },
    {
      "mod_line": [
        13,
        19,
        7
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "flag = ( array [ i ] ) ? true : false ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        13,
        7
      ],
      "mod_code": [
        "cont += blanco * blanco ? cont += 2 * negro ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        15,
        19
      ],
      "mod_code": [
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "flag = array [ i ] == ' array ' ? true : false ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        19,
        24
      ],
      "mod_code": [
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "flag = array [ i ] == ' array ' ? true : false ;",
        "cout << ( cont ? cont : - 1 ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        19,
        24,
        7
      ],
      "mod_code": [
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "flag = array [ i ] == ' array ' ? true : false ;",
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        15,
        19,
        7
      ],
      "mod_code": [
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "flag = array [ i ] == ' array ' ? true : false ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        15,
        24
      ],
      "mod_code": [
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "cout << ( cont ? cont : - 1 ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        24,
        19
      ],
      "mod_code": [
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "flag = ( array [ i ] ) ? true : false ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        24,
        19,
        7
      ],
      "mod_code": [
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "flag = ( array [ i ] ) ? true : false ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        15,
        24,
        7
      ],
      "mod_code": [
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        15,
        19
      ],
      "mod_code": [
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "flag = ( array [ i ] ) ? true : false ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        19,
        7
      ],
      "mod_code": [
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "flag = ( array [ i ] ) ? true : false ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "cont += blanco [ j ] == 0 ? blanco : negro ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        19,
        24,
        7
      ],
      "mod_code": [
        "flag = array [ i ] == ' array ' ? true : false ;",
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "flag = array [ i ] == ' array ' ? true : false ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        24,
        19,
        7
      ],
      "mod_code": [
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "flag = ( array [ i ] ) ? true : false ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        24,
        7
      ],
      "mod_code": [
        "cout << ( cont ? cont : - 1 ) << endl ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    },
    {
      "mod_line": [
        19,
        7
      ],
      "mod_code": [
        "flag = ( array [ i ] ) ? true : false ;",
        "const int cont = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of read-only variable ‘cont’"
    }
  ]
}