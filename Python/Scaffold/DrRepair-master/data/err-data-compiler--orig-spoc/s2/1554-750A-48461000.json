{
  "meta": {
    "index": 1554,
    "hitid": "3WYZV0QBFJ7ESI8ZSW18KN6WME6XBR",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "750A",
    "subid": "48461000"
  },
  "lines": [
    {
      "line": 0,
      "text": "create double ints n and k",
      "code": "double n , k ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "while cin > > n > > k is truthy",
      "code": "while ( cin >> n >> k )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer res = floor ( ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) / 2 )",
      "code": "int res = floor ( ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) / 2 ) ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "print ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) / 2",
      "code": "cerr << ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) / 2 << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if res is greater than n , set res to n",
      "code": "if ( res > n ) { res = n ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> ( n >> k ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘double’ and ‘double’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int res = floor ( ( ( ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) ) / 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        3,
        4,
        2
      ],
      "mod_code": [
        "int res = floor ( ( ( ( - 1 + sqrt ( 1 + 8 ) / ( 240 - k ) / 5 ) ) ) / 2 ) ;",
        "cout << ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) / 2 << endl ;",
        "while ( cin >> ( n >> k ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘double’ and ‘double’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int res = floor ( ( ( ( - 1 + sqrt ( 1 + 8 ) / ( 240 - k ) / 5 ) ) ) / 2 ) ;",
        "while ( cin >> ( n >> k ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘double’ and ‘double’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "int res = floor ( ( ( ( - 1 + sqrt ( 1 + 8 ) / ( 240 - k ) / 5 ) ) ) / 2 ) ;",
        "while ( cin >> ( n >> k ) )",
        "cout << ( - 1 + sqrt ( 1 + 8 ) / ( 240 - k ) / 5 ) / 2 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘double’ and ‘double’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "cout << ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) / 2 << endl ;",
        "while ( cin >> ( n >> k ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘double’ and ‘double’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        2,
        3
      ],
      "mod_code": [
        "cout << ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) / 2 << endl ;",
        "while ( cin >> ( n >> k ) )",
        "int res = floor ( ( ( ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) ) / 2 ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘double’ and ‘double’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "cout << ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) / 2 << endl ;",
        "int res = floor ( ( ( ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) ) / 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "while ( cin >> ( n >> k ) )",
        "cout << ( - 1 + sqrt ( 1 + 8 ) / ( 240 - k ) / 5 ) / 2 << endl ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘double’ and ‘double’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        4,
        3
      ],
      "mod_code": [
        "while ( cin >> ( n >> k ) )",
        "cout << ( - 1 + sqrt ( 1 + 8 ) / ( 240 - k ) / 5 ) / 2 << endl ;",
        "int res = floor ( ( ( ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) ) / 2 ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘double’ and ‘double’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "while ( cin >> ( n >> k ) )",
        "int res = floor ( ( ( ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) ) / 2 ) ;"
      ],
      "err_line": 2,
      "err_msg": "invalid operands of types ‘double’ and ‘double’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "cout << ( - 1 + sqrt ( 1 + 8 ) / ( 240 - k ) / 5 ) / 2 << endl ;",
        "int res = floor ( ( ( ( - 1 + sqrt ( 1 + 8 * ( 240 - k ) / 5 ) ) ) / 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘)’ before ‘;’ token"
    }
  ]
}