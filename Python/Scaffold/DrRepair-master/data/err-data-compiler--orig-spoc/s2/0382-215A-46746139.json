{
  "meta": {
    "index": 382,
    "hitid": "3E9VAUV7BW8Y9DTHRENE8QTZ62FAYF",
    "workerid": "AIWEXPJAU66D9",
    "probid": "215A",
    "subid": "46746139"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare int arrays a and b with size 100",
      "code": "int a [ 100 ] , b [ 100 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "m , n , mx and cnt are ints with mx and cnt = 0",
      "code": "int m , n , mx = 0 , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 1 to n inclusive , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read input to m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to m inclusive",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read b [ i ]",
      "code": "cin >> b [ i ] ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for j from 1 to n inclusive",
      "code": "for ( int j = 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if b [ i ] % a [ j ] = 0",
      "code": "if ( b [ i ] % a [ j ] == 0 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if mx is less than b [ i ] / a [ j ]",
      "code": "if ( mx < b [ i ] / a [ j ] )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "assign b [ i ] / a [ j ] to mx",
      "code": "mx = b [ i ] / a [ j ] ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "change cnt to 1",
      "code": "cnt = 1 ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "else if mx = b [ i ] / a [ j ]",
      "code": "else if ( mx == b [ i ] / a [ j ] )",
      "indent": 4
    },
    {
      "line": 14,
      "text": "increment cnt by one",
      "code": "cnt ++ ;",
      "indent": 5
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 100 ] and b [ 100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int m , n , mx = 0 , mx = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int mx’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> b . at ( i ) ;"
      ],
      "err_line": 7,
      "err_msg": "request for member ‘at’ in ‘b’, which is of non-class type ‘int [100]’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        0
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "cin >> m >> m ;",
        "int a [ 100 ] and b [ 100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        5,
        0,
        11
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "cin >> m >> m ;",
        "int a [ 100 ] and b [ 100 ] ;",
        "mx -= a [ i ] / a [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        5,
        0,
        6
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "cin >> m >> m ;",
        "int a [ 100 ] and b [ 100 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        5,
        0,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "cin >> m >> m ;",
        "int a [ 100 ] and b [ 100 ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        5,
        11,
        6
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "cin >> m >> m ;",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5,
        11,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "cin >> m >> m ;",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        5,
        6
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "cin >> m >> m ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5,
        6,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "cin >> m >> m ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "cin >> m >> m ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int a [ 100 ] and b [ 100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        0,
        11
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int a [ 100 ] and b [ 100 ] ;",
        "mx -= a [ i ] / a [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        0,
        11,
        6
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int a [ 100 ] and b [ 100 ] ;",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        0,
        11,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int a [ 100 ] and b [ 100 ] ;",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        0,
        6
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int a [ 100 ] and b [ 100 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        0,
        6,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int a [ 100 ] and b [ 100 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        0,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "int a [ 100 ] and b [ 100 ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        9,
        11,
        6
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11,
        6,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        11,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        6,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "for ( i = 1 ; i <= m ; i ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "if ( ! b [ i ] % a [ j ] )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "int a [ 100 ] and b [ 100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        0,
        11
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "int a [ 100 ] and b [ 100 ] ;",
        "mx -= a [ i ] / a [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        0,
        11,
        6
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "int a [ 100 ] and b [ 100 ] ;",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        0,
        11,
        8
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "int a [ 100 ] and b [ 100 ] ;",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        0,
        6
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "int a [ 100 ] and b [ 100 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        0,
        6,
        8
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "int a [ 100 ] and b [ 100 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        0,
        8
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "int a [ 100 ] and b [ 100 ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        11,
        6
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11,
        6,
        8
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11,
        8
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        6,
        8
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cin >> m >> m ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "int a [ 100 ] and b [ 100 ] ;",
        "mx -= a [ i ] / a [ j ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        0,
        11,
        6
      ],
      "mod_code": [
        "int a [ 100 ] and b [ 100 ] ;",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        0,
        11,
        6,
        8
      ],
      "mod_code": [
        "int a [ 100 ] and b [ 100 ] ;",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        0,
        11,
        8
      ],
      "mod_code": [
        "int a [ 100 ] and b [ 100 ] ;",
        "mx -= a [ i ] / a [ j ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int a [ 100 ] and b [ 100 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        0,
        6,
        8
      ],
      "mod_code": [
        "int a [ 100 ] and b [ 100 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int a [ 100 ] and b [ 100 ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "mx -= a [ i ] / a [ j ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        6,
        8
      ],
      "mod_code": [
        "mx -= a [ i ] / a [ j ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "mx -= a [ i ] / a [ j ] ;",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "for ( j = 1 ; j <= n ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}