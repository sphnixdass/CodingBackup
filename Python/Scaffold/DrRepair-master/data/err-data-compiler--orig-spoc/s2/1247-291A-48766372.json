{
  "meta": {
    "index": 1247,
    "hitid": "3J9UN9O9J3MCDB00DCPI9X2YKCZ0JP",
    "workerid": "AIWEXPJAU66D9",
    "probid": "291A",
    "subid": "48766372"
  },
  "lines": [
    {
      "line": 0,
      "text": "new long long integer constant with name INF",
      "code": "const long long int INF = ( long long int ) ( 8e16 ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "new long long integer constant MOD = 1000000007",
      "code": "const long long int MOD = 1000000007 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create a map from long long integers to long long integers called mp",
      "code": "map < long long int , long long int > mp ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "define function print",
      "code": "void print ( )",
      "indent": 0
    },
    {
      "line": 4,
      "text": "print - 1 and ' \\ n '",
      "code": "cout << - 1 << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "exit the program with code 0",
      "code": "exit ( 0 ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "create long long integer variable with name n",
      "code": "long long int n ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "start for loop from i = 1 to n inclusive incrementing i",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare new long long integer called a",
      "code": "long long int a ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "read user input to a",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment mp [ a ]",
      "code": "mp [ a ] ++ ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "create long long integer ans with value 0",
      "code": "long long int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "create iterator for long long int to long long int map , called it",
      "code": "map < long long int , long long int > :: iterator it ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "move it through mp",
      "code": "for ( it = mp . begin ( ) ; it != mp . end ( ) ; it ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "call print ( ) if it - > second > 1 and it - > second % 2 > 0 and it - > first > 0",
      "code": "if ( it -> second > 1 && it -> second % 2 > 0 && it -> first > 0 ) print ( ) ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "if it - > first > 0 and it - > second > 2 , print ( )",
      "code": "if ( it -> first > 0 && it -> second > 2 ) print ( ) ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if it - > first > 0 , change ans to ans + it - > second / 2",
      "code": "if ( it -> first > 0 ) ans += it -> second / 2 ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print ans and ' \\ n '",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const long long int INF ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;"
      ],
      "err_line": 17,
      "err_msg": "cannot convert ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ to ‘void*’ for argument ‘1’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;"
      ],
      "err_line": 18,
      "err_msg": "‘second’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const long long INF ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "void print ( ) { }"
      ],
      "err_line": 4,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << \" -1\\n ' ;"
      ],
      "err_line": 4,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "exit ( l ) ;"
      ],
      "err_line": 5,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( it = mp . begin ( ) ; it != mp . end ( ) ; it ++ ) mp [ it ] . end ( ) ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator[]’ (operand types are ‘std::map<long long int, long long int>’ and ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "print ( it -> second > 1 && second % 2 > 0 && second % 2 > 0 ) ;"
      ],
      "err_line": 18,
      "err_msg": "‘second’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" ( \" << endl ;"
      ],
      "err_line": 19,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "const long long int INF ;",
        "memset ( mp . begin ( ) , mp . end ( ) ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        18
      ],
      "mod_code": [
        "const long long int INF ;",
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        18,
        19
      ],
      "mod_code": [
        "const long long int INF ;",
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        18,
        10
      ],
      "mod_code": [
        "const long long int INF ;",
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        18,
        13
      ],
      "mod_code": [
        "const long long int INF ;",
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        19
      ],
      "mod_code": [
        "const long long int INF ;",
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        19,
        10
      ],
      "mod_code": [
        "const long long int INF ;",
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        19,
        13
      ],
      "mod_code": [
        "const long long int INF ;",
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        10
      ],
      "mod_code": [
        "const long long int INF ;",
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        10,
        13
      ],
      "mod_code": [
        "const long long int INF ;",
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        17,
        13
      ],
      "mod_code": [
        "const long long int INF ;",
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "const long long int INF ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        18,
        19
      ],
      "mod_code": [
        "const long long int INF ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        18,
        19,
        10
      ],
      "mod_code": [
        "const long long int INF ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        18,
        19,
        13
      ],
      "mod_code": [
        "const long long int INF ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        18,
        10
      ],
      "mod_code": [
        "const long long int INF ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        18,
        10,
        13
      ],
      "mod_code": [
        "const long long int INF ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        18,
        13
      ],
      "mod_code": [
        "const long long int INF ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "const long long int INF ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19,
        10
      ],
      "mod_code": [
        "const long long int INF ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19,
        10,
        13
      ],
      "mod_code": [
        "const long long int INF ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        19,
        13
      ],
      "mod_code": [
        "const long long int INF ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "const long long int INF ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10,
        13
      ],
      "mod_code": [
        "const long long int INF ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "const long long int INF ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "uninitialized const ‘INF’ [-fpermissive]"
    },
    {
      "mod_line": [
        17,
        18
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;"
      ],
      "err_line": 17,
      "err_msg": "cannot convert ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ to ‘void*’ for argument ‘1’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        17,
        18,
        19
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;"
      ],
      "err_line": 17,
      "err_msg": "cannot convert ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ to ‘void*’ for argument ‘1’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        10
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        19,
        13
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        17,
        18,
        10
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        10,
        13
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        18,
        13
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;"
      ],
      "err_line": 17,
      "err_msg": "cannot convert ‘std::map<long long int, long long int>::iterator {aka std::_Rb_tree_iterator<std::pair<const long long int, long long int> >}’ to ‘void*’ for argument ‘1’ to ‘void* memset(void*, int, size_t)’"
    },
    {
      "mod_line": [
        17,
        19,
        10
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        10,
        13
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        13
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        17,
        10
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        10,
        13
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        13
      ],
      "mod_code": [
        "memset ( mp . begin ( ) , mp . end ( ) ) ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;"
      ],
      "err_line": 18,
      "err_msg": "‘second’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        10
      ],
      "mod_code": [
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        10,
        13
      ],
      "mod_code": [
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        19,
        13
      ],
      "mod_code": [
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        18,
        10
      ],
      "mod_code": [
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        10,
        13
      ],
      "mod_code": [
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        13
      ],
      "mod_code": [
        "print ( it -> second > 1 && second % 2 > 0 && it -> first > 0 ) ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        19,
        10
      ],
      "mod_code": [
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        10,
        13
      ],
      "mod_code": [
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        13
      ],
      "mod_code": [
        "if ( it -> first > 0 && it -> 2 > 2 ) cout << \" \\n \" ;",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "mp [ ++ ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}