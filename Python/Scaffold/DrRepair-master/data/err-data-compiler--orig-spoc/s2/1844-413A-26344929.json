{
  "meta": {
    "index": 1844,
    "hitid": "3HEM8MA6H96WNF8XPNOHLZFS6F5PQE",
    "workerid": "AIWEXPJAU66D9",
    "probid": "413A",
    "subid": "26344929"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variables n , m , min and max",
      "code": "int n , m , min , max ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read standard input to n , m , min and max",
      "code": "cin >> n >> m >> min >> max ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "minTemp is a new integer = 0",
      "code": "int minTemp = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "new integer maxTemp = 0",
      "code": "int maxTemp = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare new integer input",
      "code": "int input ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read variable input from the input",
      "code": "cin >> input ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if input < min or input > max",
      "code": "if ( input < min || input > max )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print \" Incorrect \"",
      "code": "cout << \" Incorrect \" << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "exit the program with code 0",
      "code": "exit ( 0 ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if input is equal to min , set the value of minTemp to 1",
      "code": "if ( input == min ) minTemp = 1 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if input = max , set maxTemp to 1",
      "code": "if ( input == max ) maxTemp = 1 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if n - m > = 2",
      "code": "if ( n - m >= 2 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" Correct \" to the standard output",
      "code": "cout << \" Correct \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "exit the program",
      "code": "exit ( 0 ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if minTemp is true and maxTemp is true",
      "code": "if ( minTemp && maxTemp )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" Correct \" to the standard output",
      "code": "cout << \" Correct \" << endl ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "terminate the process",
      "code": "exit ( 0 ) ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "if ( minTempormaxTemp ) is true and n - m = 1",
      "code": "if ( ( minTemp || maxTemp ) && n - m == 1 )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" Correct \"",
      "code": "cout << \" Correct \" << endl ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "terminate the process",
      "code": "exit ( 0 ) ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print \" Incorrect \"",
      "code": "cout << \" Incorrect \" << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( ( minTempormaxTemp ) && n - m == 1 )"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "break ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , min ( max ) ;"
      ],
      "err_line": 1,
      "err_msg": "cannot resolve overloaded function ‘max’ based on conversion to type ‘int’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "minTemp = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘minTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "maxTemp = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘maxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 7,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cin >> t ;"
      ],
      "err_line": 7,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "exit ( l ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "if ( ( minTempormaxTemp ) && ( n - m ) == 1 )"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        21
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        23
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        24
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Correct \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "break ;",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        20,
        21,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        20,
        23
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        23,
        24
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        23,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "break ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        23,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        20,
        24,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        20,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        20,
        25,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        21,
        23
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        21,
        23,
        24
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        21,
        23,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        21,
        23,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        21,
        24
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Correct \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        21,
        24,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        21,
        24,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Correct \" ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        21,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        21,
        25,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        21,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        23
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        23,
        24
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        23,
        24,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        23,
        24,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        23,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "break ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        23,
        25,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        23,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        24,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        24,
        25,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        16,
        25,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        21
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        21,
        23
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        21,
        23,
        24
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        21,
        23,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        21,
        23,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        21,
        24
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Correct \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        21,
        24,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        21,
        24,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Correct \" ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        21,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        21,
        25,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        21,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        23
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        24
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        24,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        24,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "break ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        25,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        23,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        24,
        25,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        20,
        25,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        23
      ],
      "mod_code": [
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        23,
        24
      ],
      "mod_code": [
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        23,
        24,
        25
      ],
      "mod_code": [
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        23,
        24,
        27
      ],
      "mod_code": [
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        23,
        25
      ],
      "mod_code": [
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        23,
        25,
        27
      ],
      "mod_code": [
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        23,
        27
      ],
      "mod_code": [
        "break ;",
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        24
      ],
      "mod_code": [
        "break ;",
        "cout << \" Correct \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        24,
        25
      ],
      "mod_code": [
        "break ;",
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        24,
        25,
        27
      ],
      "mod_code": [
        "break ;",
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        24,
        27
      ],
      "mod_code": [
        "break ;",
        "cout << \" Correct \" ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        25
      ],
      "mod_code": [
        "break ;",
        "break ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        25,
        27
      ],
      "mod_code": [
        "break ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        21,
        27
      ],
      "mod_code": [
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 21,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        23,
        24
      ],
      "mod_code": [
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        24,
        25
      ],
      "mod_code": [
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        24,
        25,
        27
      ],
      "mod_code": [
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        24,
        27
      ],
      "mod_code": [
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Correct \" ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25
      ],
      "mod_code": [
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "break ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        25,
        27
      ],
      "mod_code": [
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        27
      ],
      "mod_code": [
        "if ( ( minTempormaxTemp ) && n - m == 1 )",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 23,
      "err_msg": "‘minTempormaxTemp’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        25
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        24,
        25,
        27
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    },
    {
      "mod_line": [
        25,
        27
      ],
      "mod_code": [
        "break ;",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 25,
      "err_msg": "break statement not within loop or switch"
    }
  ]
}