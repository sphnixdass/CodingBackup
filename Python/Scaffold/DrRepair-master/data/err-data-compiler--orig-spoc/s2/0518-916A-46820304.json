{
  "meta": {
    "index": 518,
    "hitid": "3HEM8MA6H96WNF8XPNOHLZFS6F1QPB",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "916A",
    "subid": "46820304"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function digsum with argument of a 64 bit signed integer pointer x that returns an integer",
      "code": "int digsum ( int64_t & x )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "sum = integer = 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while x is not 0",
      "code": "while ( x != 0 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "sum = sum + x modulo 10",
      "code": "sum += x % 10 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "x = x / 10",
      "code": "x /= 10 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "return sum",
      "code": "return sum ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 9,
      "text": "n = integer = 0",
      "code": "int n { 0 } ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "h = integer = 0",
      "code": "int h { 0 } ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "m = integer = 0",
      "code": "int m { 0 } ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "read n , h , m",
      "code": "cin >> n >> h >> m ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "sum = integer = h * 60 + m )",
      "code": "int sum = ( h * 60 + m ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "count = integer = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "while sum modulo 10 is not 7 and ( sum / 60 ) modulo 10 is not 7",
      "code": "while ( sum % 10 != 7 and ( sum / 60 ) % 10 != 7 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "sum = sum - n",
      "code": "sum -= n ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "increase count by 1",
      "code": "count += 1 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if sum < 0 , then sum = sum + 1440",
      "code": "if ( sum < 0 ) { sum += 1440 ; }",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print count",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int digsum ( signed int * x )"
      ],
      "err_line": 3,
      "err_msg": "invalid operands of types ‘int*’ and ‘int’ to binary ‘operator%’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "count = 0 ;"
      ],
      "err_line": 14,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "count = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        14,
        20
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "count = 0 ;",
        "cout << ' count ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        14,
        20,
        1
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "count = 0 ;",
        "cout << ' count ' ;",
        "sum = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        14,
        20,
        12
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "count = 0 ;",
        "cout << ' count ' ;",
        "cin >> n >> h , m ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        14,
        20,
        15
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "count = 0 ;",
        "cout << ' count ' ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        14,
        1
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "count = 0 ;",
        "sum = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        14,
        1,
        12
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "count = 0 ;",
        "sum = 0 ;",
        "cin >> n >> h , m ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        14,
        1,
        15
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "count = 0 ;",
        "sum = 0 ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        14,
        12
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "count = 0 ;",
        "cin >> n >> h , m ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        14,
        12,
        15
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "count = 0 ;",
        "cin >> n >> h , m ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        14,
        15
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "count = 0 ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        20
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "cout << ' count ' ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        20,
        1
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "cout << ' count ' ;",
        "sum = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        20,
        1,
        12
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "cout << ' count ' ;",
        "sum = 0 ;",
        "cin >> n >> h , m ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        20,
        1,
        15
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "cout << ' count ' ;",
        "sum = 0 ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        20,
        12
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "cout << ' count ' ;",
        "cin >> n >> h , m ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        20,
        12,
        15
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "cout << ' count ' ;",
        "cin >> n >> h , m ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        20,
        15
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "cout << ' count ' ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "sum = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        1,
        12
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "sum = 0 ;",
        "cin >> n >> h , m ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        1,
        12,
        15
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "sum = 0 ;",
        "cin >> n >> h , m ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        1,
        15
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "sum = 0 ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "cin >> n >> h , m ;"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        12,
        15
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "cin >> n >> h , m ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "int digsum ( signed signed int * x )",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 0,
      "err_msg": "duplicate ‘signed’"
    },
    {
      "mod_line": [
        14,
        20
      ],
      "mod_code": [
        "count = 0 ;",
        "cout << ' count ' ;"
      ],
      "err_line": 14,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        14,
        20,
        1
      ],
      "mod_code": [
        "count = 0 ;",
        "cout << ' count ' ;",
        "sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        1,
        12
      ],
      "mod_code": [
        "count = 0 ;",
        "cout << ' count ' ;",
        "sum = 0 ;",
        "cin >> n >> h , m ;"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        1,
        15
      ],
      "mod_code": [
        "count = 0 ;",
        "cout << ' count ' ;",
        "sum = 0 ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        20,
        12
      ],
      "mod_code": [
        "count = 0 ;",
        "cout << ' count ' ;",
        "cin >> n >> h , m ;"
      ],
      "err_line": 14,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        14,
        20,
        12,
        15
      ],
      "mod_code": [
        "count = 0 ;",
        "cout << ' count ' ;",
        "cin >> n >> h , m ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 14,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        14,
        20,
        15
      ],
      "mod_code": [
        "count = 0 ;",
        "cout << ' count ' ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 14,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "count = 0 ;",
        "sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        12
      ],
      "mod_code": [
        "count = 0 ;",
        "sum = 0 ;",
        "cin >> n >> h , m ;"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        12,
        15
      ],
      "mod_code": [
        "count = 0 ;",
        "sum = 0 ;",
        "cin >> n >> h , m ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        15
      ],
      "mod_code": [
        "count = 0 ;",
        "sum = 0 ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "count = 0 ;",
        "cin >> n >> h , m ;"
      ],
      "err_line": 14,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        14,
        12,
        15
      ],
      "mod_code": [
        "count = 0 ;",
        "cin >> n >> h , m ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 14,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "count = 0 ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 14,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        20,
        1
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        1,
        12
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "sum = 0 ;",
        "cin >> n >> h , m ;"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        1,
        12,
        15
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "sum = 0 ;",
        "cin >> n >> h , m ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        1,
        15
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "sum = 0 ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "sum = 0 ;",
        "cin >> n >> h , m ;"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        12,
        15
      ],
      "mod_code": [
        "sum = 0 ;",
        "cin >> n >> h , m ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "sum = 0 ;",
        "while ( ( sum % 10 != 7 && ( sum / 60 ) % 10 ) != 7 )"
      ],
      "err_line": 1,
      "err_msg": "‘sum’ was not declared in this scope"
    }
  ]
}