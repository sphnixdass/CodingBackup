{
  "meta": {
    "index": 595,
    "hitid": "3SCKNODZ0XAMECR5D92JHJT20N9N74",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1093A",
    "subid": "49069633"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer called t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "decrement t in a loop",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "p is integer",
      "code": "int p ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read p",
      "code": "cin >> p ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if p % 7 = 0",
      "code": "if ( p % 7 == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print p / 7 and a new line",
      "code": "cout << p / 7 << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print ( p / 7 ) + 1 and a new line",
      "code": "cout << ( p / 7 ) + 1 << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( ; t -- )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "p >> p ;",
        "for ( ; t -- )"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "p >> p ;",
        "for ( ; t -- )",
        "t = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        3,
        2,
        8
      ],
      "mod_code": [
        "p >> p ;",
        "for ( ; t -- )",
        "t = getchar ( ) ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        3,
        8
      ],
      "mod_code": [
        "p >> p ;",
        "for ( ; t -- )",
        "n"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        5,
        2,
        8
      ],
      "mod_code": [
        "p >> p ;",
        "t = getchar ( ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "p >> p ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "for ( ; t -- )",
        "t = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "for ( ; t -- )",
        "t = getchar ( ) ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "for ( ; t -- )",
        "n"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}