{
  "meta": {
    "index": 1181,
    "hitid": "3JMNNNO3B1Y5F53DZYCBHBPLI4D2WM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "4A",
    "subid": "49047749"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a be integer",
      "code": "int a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if a = 2 or a is odd",
      "code": "if ( a == 2 || a % 2 == 1 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print \" NO \"",
      "code": "cout << \" NO \"",
      "indent": 2
    },
    {
      "line": 5,
      "text": "print new line",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" YES \"",
      "code": "cout << \" YES \"",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print new line",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "a ;"
      ],
      "err_line": 1,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "getline ( cin , a ) ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cout << \" NO \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "cout << \" YES \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << endl ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << endl ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        8
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << endl ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        9,
        8
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" \\n \" ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" YES \" << endl ;",
        "cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" YES \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        8
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << endl ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        9,
        8
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" \\n \" ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cout << endl ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘cout’"
    }
  ]
}