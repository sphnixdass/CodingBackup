{
  "meta": {
    "index": 637,
    "hitid": "3BCRDCM0ODO226SXXM5BJDC2BHL6KK",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "817A",
    "subid": "46639117"
  },
  "lines": [
    {
      "line": 0,
      "text": "solveequal is a function without arguments",
      "code": "void solveequal ( ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "x1 , x2 , y1 and y2 = long long int",
      "code": "long long int x1 , x2 , y1 , y2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read x1 , y1 , x2 , y2",
      "code": "cin >> x1 >> y1 >> x2 >> y2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "x and y = long long int",
      "code": "long long int x , y ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read x , y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 )",
      "code": "long long int dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if dx modulo x or dy modulo y",
      "code": "if ( dx % x or dy % y )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" NO \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "k1 = dx / x",
      "code": "long long int k1 = dx / x ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "k1 = k1 and 1",
      "code": "k1 &= 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "k2 = dy / y",
      "code": "long long int k2 = dy / y ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "k2 = k2 and 1",
      "code": "k2 &= 1 ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if k1 = = k2",
      "code": "if ( k1 == k2 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" YES \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print \" NO \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "k1 = dx / x ;"
      ],
      "err_line": 10,
      "err_msg": "‘k1’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "k2 = dy / y ;"
      ],
      "err_line": 12,
      "err_msg": "‘k2’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "solveequal ( a ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected constructor, destructor, or type conversion before ‘(’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "long long int x = y , y ;"
      ],
      "err_line": 4,
      "err_msg": "‘y’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "k1 /= x ;"
      ],
      "err_line": 10,
      "err_msg": "‘k1’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "if ( k1 == k2 ) return 1 ;"
      ],
      "err_line": 16,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        10
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = dx / x ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        10,
        11
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = dx / x ;",
        "k1 = k1 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        10,
        12
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = dx / x ;",
        "k2 = dy / y ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        10,
        13
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = dx / x ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        11
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = k1 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        11,
        12
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = k1 , 1 ;",
        "k2 = dy / y ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        11,
        13
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = k1 , 1 ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        12
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k2 = dy / y ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        12,
        13
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k2 = dy / y ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        13
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k1 = dx / x ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        11
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k1 = dx / x ;",
        "k1 = k1 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        11,
        12
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k1 = dx / x ;",
        "k1 = k1 , 1 ;",
        "k2 = dy / y ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        11,
        13
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k1 = dx / x ;",
        "k1 = k1 , 1 ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        12
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k1 = dx / x ;",
        "k2 = dy / y ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        12,
        13
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k1 = dx / x ;",
        "k2 = dy / y ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        10,
        13
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k1 = dx / x ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k1 = k1 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        12
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k1 = k1 , 1 ;",
        "k2 = dy / y ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        12,
        13
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k1 = k1 , 1 ;",
        "k2 = dy / y ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        13
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k1 = k1 , 1 ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k2 = dy / y ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12,
        13
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k2 = dy / y ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "solveequal = min ( 0 ) ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘solveequal’ does not name a type"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = dx / x ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        11
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = dx / x ;",
        "k1 = k1 , 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        12
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = dx / x ;",
        "k1 = k1 , 1 ;",
        "k2 = dy / y ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        11,
        13
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = dx / x ;",
        "k1 = k1 , 1 ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        12
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = dx / x ;",
        "k2 = dy / y ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        12,
        13
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = dx / x ;",
        "k2 = dy / y ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        13
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = dx / x ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = k1 , 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        12
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = k1 , 1 ;",
        "k2 = dy / y ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        12,
        13
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = k1 , 1 ;",
        "k2 = dy / y ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        11,
        13
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k1 = k1 , 1 ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k2 = dy / y ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        12,
        13
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k2 = dy / y ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        13
      ],
      "mod_code": [
        "dx = abs ( x2 - x1 ) , dy = abs ( y2 - y1 ) ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘dx’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "k1 = dx / x ;",
        "k1 = k1 , 1 ;"
      ],
      "err_line": 10,
      "err_msg": "‘k1’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        12
      ],
      "mod_code": [
        "k1 = dx / x ;",
        "k1 = k1 , 1 ;",
        "k2 = dy / y ;"
      ],
      "err_line": 10,
      "err_msg": "‘k1’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        12,
        13
      ],
      "mod_code": [
        "k1 = dx / x ;",
        "k1 = k1 , 1 ;",
        "k2 = dy / y ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 10,
      "err_msg": "‘k1’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        11,
        13
      ],
      "mod_code": [
        "k1 = dx / x ;",
        "k1 = k1 , 1 ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 10,
      "err_msg": "‘k1’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "k1 = dx / x ;",
        "k2 = dy / y ;"
      ],
      "err_line": 10,
      "err_msg": "‘k1’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12,
        13
      ],
      "mod_code": [
        "k1 = dx / x ;",
        "k2 = dy / y ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 10,
      "err_msg": "‘k1’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        13
      ],
      "mod_code": [
        "k1 = dx / x ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 10,
      "err_msg": "‘k1’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "k1 = k1 , 1 ;",
        "k2 = dy / y ;"
      ],
      "err_line": 12,
      "err_msg": "‘k2’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        13
      ],
      "mod_code": [
        "k1 = k1 , 1 ;",
        "k2 = dy / y ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘k2’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "k2 = dy / y ;",
        "k2 = k2 , 1 ;"
      ],
      "err_line": 12,
      "err_msg": "‘k2’ was not declared in this scope"
    }
  ]
}