{
  "meta": {
    "index": 2195,
    "hitid": "3V0TR1NRVAWIB6FX27Z7S1PSB1N4AV",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "102A",
    "subid": "46814202"
  },
  "lines": [
    {
      "line": 0,
      "text": "create int array a of size 200",
      "code": "int a [ 200 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make integer array mapp of size 200 with array of size 200",
      "code": "int mapp [ 200 ] [ 200 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "make ints n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "make integers x and y",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read x and y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set map [ x ] [ y ] and mapp [ y ] [ x ] to 1",
      "code": "mapp [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "create ints num = 0 and minn = 9999999",
      "code": "int num = 0 , minn = 9999999 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for j = 1 to n",
      "code": "for ( int j = 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for k = 1 to n",
      "code": "for ( int k = 1 ; k <= n ; k ++ )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if mapp [ j ] [ i ] , mapp [ i ] [ k ] , and mapp [ j ] [ k ] are truthy",
      "code": "if ( mapp [ j ] [ i ] && mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
      "indent": 4
    },
    {
      "line": 16,
      "text": "set num to a [ i ] + a [ j ] + a [ k ]",
      "code": "num = a [ i ] + a [ j ] + a [ k ] ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "if num is less than minn , set minn to num",
      "code": "if ( num < minn ) minn = num ;",
      "indent": 5
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if minn is equal to 9999999",
      "code": "if ( minn == 9999999 )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "else do",
      "code": "else",
      "indent": 1
    },
    {
      "line": 25,
      "text": "output minn",
      "code": "cout << minn << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int arr [ 200 ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int mapp [ 200 ] of { } ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘of’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "else if ( minn == 9999999 )"
      ],
      "err_line": 22,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        15,
        11
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "int num = 0 , minn = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        15,
        11,
        4
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "int num = 0 , minn = 0 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        15,
        11,
        24
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "int num = 0 , minn = 0 ;",
        "else do"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        15,
        4
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "while ( cin >> n >> m )"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        15,
        4,
        24
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        15,
        24
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "else do"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "int num = 0 , minn = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        11,
        4
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "int num = 0 , minn = 0 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        11,
        4,
        24
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "int num = 0 , minn = 0 ;",
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        11,
        24
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "int num = 0 , minn = 0 ;",
        "else do"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "while ( cin >> n >> m )"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        4,
        24
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        9,
        24
      ],
      "mod_code": [
        "map [ x ] [ y ] = mapp [ y ] [ x ] = 1 ;",
        "else do"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘[’ token"
    },
    {
      "mod_line": [
        15,
        11,
        4,
        24
      ],
      "mod_code": [
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "int num = 0 , minn = 0 ;",
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        11,
        4,
        9
      ],
      "mod_code": [
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "int num = 0 , minn = 0 ;",
        "while ( cin >> n >> m )",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        15,
        11,
        24
      ],
      "mod_code": [
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "int num = 0 , minn = 0 ;",
        "else do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        11,
        24,
        9
      ],
      "mod_code": [
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "int num = 0 , minn = 0 ;",
        "else do",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        15,
        11,
        9
      ],
      "mod_code": [
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "int num = 0 , minn = 0 ;",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        15,
        4,
        24
      ],
      "mod_code": [
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        4,
        24,
        9
      ],
      "mod_code": [
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "while ( cin >> n >> m )",
        "else do",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        15,
        4,
        9
      ],
      "mod_code": [
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "while ( cin >> n >> m )",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        15,
        24
      ],
      "mod_code": [
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "else do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        15,
        24,
        9
      ],
      "mod_code": [
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "else do",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "if ( mapp [ j ] [ i ] == mapp [ i ] [ k ] && mapp [ j ] [ k ] )",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        11,
        4,
        24
      ],
      "mod_code": [
        "int num = 0 , minn = 0 ;",
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        4,
        24,
        9
      ],
      "mod_code": [
        "int num = 0 , minn = 0 ;",
        "while ( cin >> n >> m )",
        "else do",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        11,
        4,
        9
      ],
      "mod_code": [
        "int num = 0 , minn = 0 ;",
        "while ( cin >> n >> m )",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        11,
        24
      ],
      "mod_code": [
        "int num = 0 , minn = 0 ;",
        "else do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        11,
        24,
        9
      ],
      "mod_code": [
        "int num = 0 , minn = 0 ;",
        "else do",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "int num = 0 , minn = 0 ;",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        4,
        24
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "else do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        24,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "else do",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "while ( cin >> n >> m )",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    },
    {
      "mod_line": [
        24,
        9
      ],
      "mod_code": [
        "else do",
        "map . map ( mapp [ x ] [ y ] , mapp [ y ] [ x ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "missing template arguments before ‘.’ token"
    }
  ]
}