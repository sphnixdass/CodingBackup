{
  "meta": {
    "index": 820,
    "hitid": "3J94SKDEKIJY5WM90M9JNU3CW0B5DZ",
    "workerid": "AIWEXPJAU66D9",
    "probid": "255A",
    "subid": "45472065"
  },
  "lines": [
    {
      "line": 0,
      "text": "a is a new array of integers with size 1100",
      "code": "int a [ 1100 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n is a new integer variable",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read standard input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "start for loop from i = 1 to n inclusive , read standard input to a [ i ] on each loop",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create long longs sa , sb and sc = 0",
      "code": "long long sa = 0 , sb = 0 , sc = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "declare integer variable with name t and value i % 3",
      "code": "int t = i % 3 ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if t = 1",
      "code": "if ( t == 1 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "add a [ i ] to sa",
      "code": "sa += a [ i ] ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if t = 2",
      "code": "else if ( t == 2 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "add a [ i ] to sb",
      "code": "sb += a [ i ] ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if t is equal to 0",
      "code": "else if ( t == 0 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increase sc by a [ i ]",
      "code": "sc += a [ i ] ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "create long long variable with name maxx = max ( max ( sa , sb ) , sc )",
      "code": "long long maxx = max ( max ( sa , sb ) , sc ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if sa = maxx",
      "code": "if ( sa == maxx )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" chest \" to standard output",
      "code": "puts ( \" chest \" ) ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "else if sb = maxx",
      "code": "else if ( sb == maxx )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" biceps \" to stdout",
      "code": "puts ( \" biceps \" ) ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else if sc = maxx",
      "code": "else if ( sc == maxx )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print \" back \"",
      "code": "puts ( \" back \" ) ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘sc’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "long long maxx = max ( max ( max , sb ) , sc ) ;"
      ],
      "err_line": 15,
      "err_msg": "no matching function for call to ‘max(<unresolved overloaded function type>, long long int&)’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "stdout << \" biceps \" ;"
      ],
      "err_line": 19,
      "err_msg": "invalid operands of types ‘_IO_FILE*’ and ‘const char [7]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "cout << \" back \" ;"
      ],
      "err_line": 13,
      "err_msg": "‘sc’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        21,
        8
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "cout << \" back \" ;",
        "if ( t = 1 )"
      ],
      "err_line": 13,
      "err_msg": "‘sc’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        21,
        8,
        10
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "cout << \" back \" ;",
        "if ( t = 1 )",
        "else if ( t = 2 )"
      ],
      "err_line": 13,
      "err_msg": "‘sc’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        21,
        8,
        0
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "cout << \" back \" ;",
        "if ( t = 1 )",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        5,
        21,
        10
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "cout << \" back \" ;",
        "else if ( t = 2 )"
      ],
      "err_line": 13,
      "err_msg": "‘sc’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        21,
        10,
        0
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "cout << \" back \" ;",
        "else if ( t = 2 )",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        5,
        21,
        0
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "cout << \" back \" ;",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "if ( t = 1 )"
      ],
      "err_line": 13,
      "err_msg": "‘sc’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        10
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "if ( t = 1 )",
        "else if ( t = 2 )"
      ],
      "err_line": 13,
      "err_msg": "‘sc’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        0
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "if ( t = 1 )",
        "else if ( t = 2 )",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        5,
        8,
        10,
        21
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "if ( t = 1 )",
        "else if ( t = 2 )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘sc’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        0
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "if ( t = 1 )",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        5,
        8,
        0,
        21
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "if ( t = 1 )",
        "a [ 1100 ] ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        5,
        8,
        21
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "if ( t = 1 )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘sc’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "else if ( t = 2 )"
      ],
      "err_line": 13,
      "err_msg": "‘sc’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        0
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "else if ( t = 2 )",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        5,
        10,
        0,
        21
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "else if ( t = 2 )",
        "a [ 1100 ] ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        5,
        10,
        21
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "else if ( t = 2 )",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘sc’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        5,
        0,
        21
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "a [ 1100 ] ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "long long sa = 0 , sb = 0 ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "‘sc’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        8,
        10,
        0
      ],
      "mod_code": [
        "cout << \" back \" ;",
        "if ( t = 1 )",
        "else if ( t = 2 )",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        21,
        8,
        0
      ],
      "mod_code": [
        "cout << \" back \" ;",
        "if ( t = 1 )",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        21,
        10,
        0
      ],
      "mod_code": [
        "cout << \" back \" ;",
        "else if ( t = 2 )",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        21,
        0
      ],
      "mod_code": [
        "cout << \" back \" ;",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        8,
        10,
        0
      ],
      "mod_code": [
        "if ( t = 1 )",
        "else if ( t = 2 )",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        8,
        10,
        0,
        21
      ],
      "mod_code": [
        "if ( t = 1 )",
        "else if ( t = 2 )",
        "a [ 1100 ] ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "if ( t = 1 )",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        8,
        0,
        21
      ],
      "mod_code": [
        "if ( t = 1 )",
        "a [ 1100 ] ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "else if ( t = 2 )",
        "a [ 1100 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0,
        21
      ],
      "mod_code": [
        "else if ( t = 2 )",
        "a [ 1100 ] ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "a [ 1100 ] ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    }
  ]
}