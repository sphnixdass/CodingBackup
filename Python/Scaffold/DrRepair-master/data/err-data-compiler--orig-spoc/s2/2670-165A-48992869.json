{
  "meta": {
    "index": 2670,
    "hitid": "371QPA24C2I6Y3HNLP7MP88HN6QT1K",
    "workerid": "AIWEXPJAU66D9",
    "probid": "165A",
    "subid": "48992869"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers n and ans",
      "code": "int n , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create booleans u , l , r and lf",
      "code": "bool u , l , r , lf ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "p is an array of int / int pairs with 201 element",
      "code": "pair < int , int > p [ 201 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "loop i from 0 to n exclusive , read p [ i ] . first and p [ i ] . second",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] . second ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "loop i from 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "change lf to false",
      "code": "lf = false ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "change r to false",
      "code": "r = false ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "change u to false",
      "code": "u = false ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "change l to false",
      "code": "l = false ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "loop j from 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if p [ i ] . first is equal to p [ j ] . first",
      "code": "if ( p [ i ] . first == p [ j ] . first )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if p [ i ] . second is greater than p [ j ] . second , set l to true",
      "code": "if ( p [ i ] . second > p [ j ] . second ) l = true ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "if p [ i ] . second is less than p [ j ] . second , set u to true",
      "code": "if ( p [ i ] . second < p [ j ] . second ) u = true ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if p [ i ] . second = p [ j ] . second",
      "code": "if ( p [ i ] . second == p [ j ] . second )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "if p [ i ] . first is greater than p [ j ] . first , set lf to true",
      "code": "if ( p [ i ] . first > p [ j ] . first ) lf = true ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "if p [ i ] . first is less than p [ j ] . first , set r to true",
      "code": "if ( p [ i ] . first < p [ j ] . first ) r = true ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if lf , r , u and l are all true , increment ans by one",
      "code": "if ( lf == true && r == true && u == true && l == true ) ans ++ ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "pairs [ 201 ] = { 201 / 201 ;"
      ],
      "err_line": 2,
      "err_msg": "‘pairs’ does not name a type"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] . first >> p [ i ] ; }"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] ;",
        "if ( lf == true , r , u , l ) ans ++ ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        5,
        21,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] ;",
        "if ( lf == true , r , u , l ) ans ++ ;",
        "if ( p [ i ] . second = p [ j ] . second )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        5,
        21,
        16,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] ;",
        "if ( lf == true , r , u , l ) ans ++ ;",
        "if ( p [ i ] . second = p [ j ] . second )",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        21,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] ;",
        "if ( lf == true , r , u , l ) ans ++ ;",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] ;",
        "if ( lf == true , r , u && l ) ans ++ ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        5,
        21,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] ;",
        "if ( lf == true , r , u && l ) ans ++ ;",
        "if ( p [ i ] . second = p [ j ] . second )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        5,
        21,
        16,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] ;",
        "if ( lf == true , r , u && l ) ans ++ ;",
        "if ( p [ i ] . second = p [ j ] . second )",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        21,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] ;",
        "if ( lf == true , r , u && l ) ans ++ ;",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        16
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] ;",
        "if ( p [ i ] . second = p [ j ] . second )"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        5,
        16,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] ;",
        "if ( p [ i ] . second = p [ j ] . second )",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) cin >> p [ i ] . first >> p [ i ] ;",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        21,
        16,
        5
      ],
      "mod_code": [
        "if ( lf == true , r , u , l ) ans ++ ;",
        "if ( p [ i ] . second = p [ j ] . second )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] . first >> p [ i ] ; }"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        21,
        16,
        5,
        1
      ],
      "mod_code": [
        "if ( lf == true , r , u , l ) ans ++ ;",
        "if ( p [ i ] . second = p [ j ] . second )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] . first >> p [ i ] ; }",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        21,
        16,
        1
      ],
      "mod_code": [
        "if ( lf == true , r , u , l ) ans ++ ;",
        "if ( p [ i ] . second = p [ j ] . second )",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        21,
        5
      ],
      "mod_code": [
        "if ( lf == true , r , u , l ) ans ++ ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] . first >> p [ i ] ; }"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        21,
        5,
        1
      ],
      "mod_code": [
        "if ( lf == true , r , u , l ) ans ++ ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] . first >> p [ i ] ; }",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        21,
        1
      ],
      "mod_code": [
        "if ( lf == true , r , u , l ) ans ++ ;",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        21,
        16,
        5
      ],
      "mod_code": [
        "if ( lf == true , r , u && l ) ans ++ ;",
        "if ( p [ i ] . second = p [ j ] . second )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] . first >> p [ i ] ; }"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        21,
        16,
        5,
        1
      ],
      "mod_code": [
        "if ( lf == true , r , u && l ) ans ++ ;",
        "if ( p [ i ] . second = p [ j ] . second )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] . first >> p [ i ] ; }",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        21,
        16,
        1
      ],
      "mod_code": [
        "if ( lf == true , r , u && l ) ans ++ ;",
        "if ( p [ i ] . second = p [ j ] . second )",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        21,
        5
      ],
      "mod_code": [
        "if ( lf == true , r , u && l ) ans ++ ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] . first >> p [ i ] ; }"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        21,
        5,
        1
      ],
      "mod_code": [
        "if ( lf == true , r , u && l ) ans ++ ;",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] . first >> p [ i ] ; }",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        21,
        1
      ],
      "mod_code": [
        "if ( lf == true , r , u && l ) ans ++ ;",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        5
      ],
      "mod_code": [
        "if ( p [ i ] . second = p [ j ] . second )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] . first >> p [ i ] ; }"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::basic_istream<char>::__istream_type {aka std::basic_istream<char>}’ and ‘std::pair<int, int>’)"
    },
    {
      "mod_line": [
        16,
        5,
        1
      ],
      "mod_code": [
        "if ( p [ i ] . second = p [ j ] . second )",
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] . first >> p [ i ] ; }",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        16,
        1
      ],
      "mod_code": [
        "if ( p [ i ] . second = p [ j ] . second )",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ ) { cin >> p [ i ] . first >> p [ i ] ; }",
        "bool u , l , r , lf and lf ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘and’ token"
    }
  ]
}