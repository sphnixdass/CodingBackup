{
  "meta": {
    "index": 137,
    "hitid": "362E9TQF2HKDT4RF9WTLIOAEDR0GIM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "954A",
    "subid": "39058490"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare integer variable N",
      "code": "int N ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare character variables c and temp",
      "code": "char c , temp ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer variables r and u",
      "code": "int r , u ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read N",
      "code": "cin >> N ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare integer ans = N",
      "code": "int ans = N ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer flag = 0",
      "code": "int flag = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for integer i = 0 to N exclusive",
      "code": "for ( int i = 0 ; i < N ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if temp",
      "code": "if ( temp )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if temp = ' R ' & & c = ' U ' & & flag is < = 0",
      "code": "if ( temp == ' R ' && c == ' U ' && ! flag )",
      "indent": 3
    },
    {
      "line": 11,
      "text": "decrease ans by one",
      "code": "ans -- ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "else if temp = ' U ' & & c = ' R ' & & flag is < = 0",
      "code": "else if ( temp == ' U ' && c == ' R ' && ! flag )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "decrease ans",
      "code": "ans -- ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 17,
      "text": "set value of flag to 0",
      "code": "flag = 0 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "set value of temp to c",
      "code": "temp = c ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "flag = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        9,
        10,
        5,
        20
      ],
      "mod_code": [
        "if ( ! temp )",
        "if ( temp == ' R ' && c == ' U ' && flag )",
        "int ans = 20 ;",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        9,
        10,
        8,
        20
      ],
      "mod_code": [
        "if ( ! temp )",
        "if ( temp == ' R ' && c == ' U ' && flag )",
        "c = getchar ( ) ;",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        9,
        10,
        20
      ],
      "mod_code": [
        "if ( ! temp )",
        "if ( temp == ' R ' && c == ' U ' && flag )",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        9,
        10,
        20,
        15
      ],
      "mod_code": [
        "if ( ! temp )",
        "if ( temp == ' R ' && c == ' U ' && flag )",
        "* temp = c ;",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        9,
        5,
        8,
        20
      ],
      "mod_code": [
        "if ( ! temp )",
        "int ans = 20 ;",
        "c = getchar ( ) ;",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        9,
        5,
        20
      ],
      "mod_code": [
        "if ( ! temp )",
        "int ans = 20 ;",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        9,
        5,
        20,
        15
      ],
      "mod_code": [
        "if ( ! temp )",
        "int ans = 20 ;",
        "* temp = c ;",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        9,
        8,
        20
      ],
      "mod_code": [
        "if ( ! temp )",
        "c = getchar ( ) ;",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        9,
        8,
        20,
        15
      ],
      "mod_code": [
        "if ( ! temp )",
        "c = getchar ( ) ;",
        "* temp = c ;",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "if ( ! temp )",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        9,
        20,
        15
      ],
      "mod_code": [
        "if ( ! temp )",
        "* temp = c ;",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        10,
        5,
        8,
        20
      ],
      "mod_code": [
        "if ( temp == ' R ' && c == ' U ' && flag )",
        "int ans = 20 ;",
        "c = getchar ( ) ;",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        10,
        5,
        20
      ],
      "mod_code": [
        "if ( temp == ' R ' && c == ' U ' && flag )",
        "int ans = 20 ;",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        10,
        5,
        20,
        15
      ],
      "mod_code": [
        "if ( temp == ' R ' && c == ' U ' && flag )",
        "int ans = 20 ;",
        "* temp = c ;",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        10,
        8,
        20
      ],
      "mod_code": [
        "if ( temp == ' R ' && c == ' U ' && flag )",
        "c = getchar ( ) ;",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        10,
        8,
        20,
        15
      ],
      "mod_code": [
        "if ( temp == ' R ' && c == ' U ' && flag )",
        "c = getchar ( ) ;",
        "* temp = c ;",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        10,
        20
      ],
      "mod_code": [
        "if ( temp == ' R ' && c == ' U ' && flag )",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        10,
        20,
        15
      ],
      "mod_code": [
        "if ( temp == ' R ' && c == ' U ' && flag )",
        "* temp = c ;",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        5,
        8,
        20
      ],
      "mod_code": [
        "int ans = 20 ;",
        "c = getchar ( ) ;",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        5,
        8,
        20,
        15
      ],
      "mod_code": [
        "int ans = 20 ;",
        "c = getchar ( ) ;",
        "* temp = c ;",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        5,
        20
      ],
      "mod_code": [
        "int ans = 20 ;",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        5,
        20,
        15
      ],
      "mod_code": [
        "int ans = 20 ;",
        "* temp = c ;",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        8,
        20
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "* temp = c ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        8,
        20,
        15
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "* temp = c ;",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        20,
        15
      ],
      "mod_code": [
        "* temp = c ;",
        "int flag = 1 ;"
      ],
      "err_line": 20,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    }
  ]
}