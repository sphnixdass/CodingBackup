{
  "meta": {
    "index": 921,
    "hitid": "3WYZV0QBFJ7ESI8ZSW18KN6WME8BX7",
    "workerid": "A1AYVATMT88U1W",
    "probid": "267A",
    "subid": "49080081"
  },
  "lines": [
    {
      "line": 0,
      "text": "let maxn be a constant integer with maxn is equal to 1e5 + 5",
      "code": "const int maxn = 1e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , a , b , ans be long integers",
      "code": "long long n , a , b , ans ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for long integer i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read a , b",
      "code": "cin >> a >> b ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "ans is equal to 0",
      "code": "ans = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a is greater than b",
      "code": "if ( a > b )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "let t be a long integer with t = a",
      "code": "long long t = a ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "a is equal to b",
      "code": "a = b ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "b is equal to t",
      "code": "b = t ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "while a is not equal to 0",
      "code": "while ( a != 0 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment ans by b / a",
      "code": "ans += b / a ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "let t be a long integer with t = a",
      "code": "long long t = a ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "a is equal to b modulo a",
      "code": "a = b % a ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "b is equal to t",
      "code": "b = t ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print ans and newline",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        15,
        3,
        5,
        0
      ],
      "mod_code": [
        "a %= a ;",
        "n = getchar ( ) ;",
        "cin >> a , b ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        15,
        3,
        9,
        0
      ],
      "mod_code": [
        "a %= a ;",
        "n = getchar ( ) ;",
        "int a = b ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        15,
        3,
        10,
        0
      ],
      "mod_code": [
        "a %= a ;",
        "n = getchar ( ) ;",
        "b -= t ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        15,
        3,
        0
      ],
      "mod_code": [
        "a %= a ;",
        "n = getchar ( ) ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        15,
        5,
        9,
        0
      ],
      "mod_code": [
        "a %= a ;",
        "cin >> a , b ;",
        "int a = b ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        15,
        5,
        10,
        0
      ],
      "mod_code": [
        "a %= a ;",
        "cin >> a , b ;",
        "b -= t ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        15,
        5,
        0
      ],
      "mod_code": [
        "a %= a ;",
        "cin >> a , b ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        15,
        9,
        10,
        0
      ],
      "mod_code": [
        "a %= a ;",
        "int a = b ;",
        "b -= t ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        15,
        9,
        0
      ],
      "mod_code": [
        "a %= a ;",
        "int a = b ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        15,
        10,
        0
      ],
      "mod_code": [
        "a %= a ;",
        "b -= t ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "a %= a ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        3,
        5,
        9,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> a , b ;",
        "int a = b ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        3,
        5,
        10,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> a , b ;",
        "b -= t ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        3,
        5,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> a , b ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int a = b ;",
        "b -= t ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        3,
        9,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int a = b ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        3,
        10,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "b -= t ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        9,
        10,
        0
      ],
      "mod_code": [
        "cin >> a , b ;",
        "int a = b ;",
        "b -= t ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        9,
        0
      ],
      "mod_code": [
        "cin >> a , b ;",
        "int a = b ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        10,
        0
      ],
      "mod_code": [
        "cin >> a , b ;",
        "b -= t ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "cin >> a , b ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        9,
        10,
        0
      ],
      "mod_code": [
        "int a = b ;",
        "b -= t ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "int a = b ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "b -= t ;",
        "const int maxn be = 1e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "expected initializer before ‘be’"
    }
  ]
}