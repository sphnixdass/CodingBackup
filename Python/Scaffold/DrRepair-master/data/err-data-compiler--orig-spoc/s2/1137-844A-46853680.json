{
  "meta": {
    "index": 1137,
    "hitid": "3YZ7A3YHR5N47L5RXC48ITPCX3MS5H",
    "workerid": "AIWEXPJAU66D9",
    "probid": "844A",
    "subid": "46853680"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create new strings input and insertion",
      "code": "string input , insertion ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create new integers unique and inputLength with inputLength = 0",
      "code": "int unique , inputLength = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read input and unique from the input",
      "code": "cin >> input >> unique ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "assign the new value = length of input to inputLength",
      "code": "inputLength = input . length ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if inputLength is less than unique",
      "code": "if ( inputLength < unique )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" impossible \"",
      "code": "cout << \" impossible \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create new set of unique strings called inputs",
      "code": "set < string > inputs ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "start for loop from i = 0 to inputLength exclusive",
      "code": "for ( int i = 0 ; i < inputLength ; i ++ )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "change the value of insertion to input [ i ]",
      "code": "insertion = input [ i ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "insert insertion to the inputs",
      "code": "inputs . insert ( insertion ) ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if unique is greater than length of inputs",
      "code": "if ( unique > inputs . size ( ) )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print unique - length of inputs",
      "code": "cout << unique - inputs . size ( ) << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << unique ( unique ( 0 ) ) << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string input ;"
      ],
      "err_line": 10,
      "err_msg": "‘insertion’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "if ( inputLength < unique ( inputLength ) )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 7,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "set < string > n ;"
      ],
      "err_line": 11,
      "err_msg": "‘inputs’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cin . insert ( insertion ) ;"
      ],
      "err_line": 11,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘insert’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘size’ in ‘unique’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "cout << unique ( unique ( 0 ) ) << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        14,
        10
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "insertion += i ;"
      ],
      "err_line": 14,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        14,
        10,
        5
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "insertion += i ;",
        "if ( inputLength < unique ( inputLength ) )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        14,
        10,
        9
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "insertion += i ;",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14,
        5
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "if ( inputLength < unique ( inputLength ) )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        14,
        5,
        9
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "if ( inputLength < unique ( inputLength ) )",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        14,
        9
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        5
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "insertion += i ;",
        "if ( inputLength < unique ( inputLength ) )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        10,
        5,
        9
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "insertion += i ;",
        "if ( inputLength < unique ( inputLength ) )",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        10,
        5,
        14
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "insertion += i ;",
        "if ( inputLength < unique ( inputLength ) )",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        10,
        9
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "insertion += i ;",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        9,
        14
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "insertion += i ;",
        "for ( i = 0 ; i < inputLength ; i ++ )",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        14
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "insertion += i ;",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘size’ in ‘unique’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "if ( inputLength < unique ( inputLength ) )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        5,
        9
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "if ( inputLength < unique ( inputLength ) )",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        5,
        9,
        14
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "if ( inputLength < unique ( inputLength ) )",
        "for ( i = 0 ; i < inputLength ; i ++ )",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        5,
        14
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "if ( inputLength < unique ( inputLength ) )",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        14
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "for ( i = 0 ; i < inputLength ; i ++ )",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        14
      ],
      "mod_code": [
        "cout << \" impossible \" ;",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘size’ in ‘unique’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        14,
        10
      ],
      "mod_code": [
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "insertion += i ;"
      ],
      "err_line": 14,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        14,
        10,
        5
      ],
      "mod_code": [
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "insertion += i ;",
        "if ( inputLength < unique ( inputLength ) )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        14,
        10,
        5,
        9
      ],
      "mod_code": [
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "insertion += i ;",
        "if ( inputLength < unique ( inputLength ) )",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        14,
        10,
        9
      ],
      "mod_code": [
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "insertion += i ;",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "if ( inputLength < unique ( inputLength ) )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        14,
        5,
        9
      ],
      "mod_code": [
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "if ( inputLength < unique ( inputLength ) )",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "cout << unique ( unique ( 0 ) ) << endl ;",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        5
      ],
      "mod_code": [
        "insertion += i ;",
        "if ( inputLength < unique ( inputLength ) )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        10,
        5,
        9
      ],
      "mod_code": [
        "insertion += i ;",
        "if ( inputLength < unique ( inputLength ) )",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        10,
        5,
        9,
        14
      ],
      "mod_code": [
        "insertion += i ;",
        "if ( inputLength < unique ( inputLength ) )",
        "for ( i = 0 ; i < inputLength ; i ++ )",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        10,
        5,
        14
      ],
      "mod_code": [
        "insertion += i ;",
        "if ( inputLength < unique ( inputLength ) )",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "insertion += i ;",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        14
      ],
      "mod_code": [
        "insertion += i ;",
        "for ( i = 0 ; i < inputLength ; i ++ )",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "insertion += i ;",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 14,
      "err_msg": "request for member ‘size’ in ‘unique’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "if ( inputLength < unique ( inputLength ) )",
        "for ( i = 0 ; i < inputLength ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        9,
        14
      ],
      "mod_code": [
        "if ( inputLength < unique ( inputLength ) )",
        "for ( i = 0 ; i < inputLength ; i ++ )",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        5,
        14
      ],
      "mod_code": [
        "if ( inputLength < unique ( inputLength ) )",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 5,
      "err_msg": "‘unique’ cannot be used as a function"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < inputLength ; i ++ )",
        "cout << unique ( unique . size ( ) ) << endl ;"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}