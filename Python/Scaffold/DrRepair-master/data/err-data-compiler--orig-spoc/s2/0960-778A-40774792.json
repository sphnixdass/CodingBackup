{
  "meta": {
    "index": 960,
    "hitid": "356ZPKYPUHB5WHZJGX5BYLIU41KYPD",
    "workerid": "A1APYLD4DUK33J",
    "probid": "778A",
    "subid": "40774792"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integer Max with Max = 200010",
      "code": "const int Max = 200010 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create strings s1 , s2",
      "code": "string s1 , s2 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integer array op with size Max",
      "code": "int op [ Max ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create integer array vis with size Max",
      "code": "int vis [ Max ] ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare judge with integer mid as argument , returning boolean",
      "code": "bool judge ( int mid )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "create string temp with temp = \" \"",
      "code": "string temp = \" \" ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "set bytes from vis to size of vis to value 0",
      "code": "memset ( vis , 0 , sizeof ( vis ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to mid exclusive , set vis [ op [ i ] ] to 1",
      "code": "for ( int i = 0 ; i < mid ; i ++ ) { vis [ op [ i ] ] = 1 ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer len with len = length of s1",
      "code": "int len = s1 . length ( ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to len exclusive",
      "code": "for ( int i = 0 ; i < len ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if not vis [ i ] , increment temp by s1 [ i ]",
      "code": "if ( ! vis [ i ] ) temp += s1 [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "create integers p1 , p2 , len1 , len2 , with p1 = 0 , p2 = 0 , len1 = length of temp , len2 = length of s2",
      "code": "int p1 = 0 , p2 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "while p1 is less than len1 and p2 is less than len2",
      "code": "while ( p1 < len1 && p2 < len2 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if temp [ p1 ] is s2 [ p2 ] increment p2",
      "code": "if ( temp [ p1 ] == s2 [ p2 ] ) p2 ++ ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment p1",
      "code": "p1 ++ ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "return 2 is len2",
      "code": "return p2 == len2 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 20,
      "text": "while read s1 read s2",
      "code": "while ( cin >> s1 >> s2 )",
      "indent": 1
    },
    {
      "line": 21,
      "text": "create integer len with len = length of s1",
      "code": "int len = s1 . length ( ) ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "for i = 0 to len exclusive",
      "code": "for ( int i = 0 ; i < len ; i ++ )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "read op [ i ]",
      "code": "cin >> op [ i ] ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "decrement op [ i ]",
      "code": "op [ i ] -- ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "create integers left , right with left = 0 , right = len",
      "code": "int left = 0 , right = len ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "while right - left is greater than 3",
      "code": "while ( right - left > 3 )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "create integer mid with mid = ( left + right ) / 2",
      "code": "int mid = ( left + right ) / 2 ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "if result of run judge with mid as argument is true",
      "code": "if ( judge ( mid ) )",
      "indent": 3
    },
    {
      "line": 30,
      "text": "set left to mid",
      "code": "left = mid ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 32,
      "text": "set right to mid",
      "code": "right = mid ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "create integer ans with ans = left",
      "code": "int ans = left ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "for i = left to right inclusive",
      "code": "for ( int i = left ; i <= right ; i ++ )",
      "indent": 2
    },
    {
      "line": 37,
      "text": "if result of run judge with i as argument is true , set ans to i",
      "code": "if ( judge ( i ) ) { ans = i ; }",
      "indent": 3
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 39,
      "text": "print ans print newline",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "s1 , s2 ;"
      ],
      "err_line": 1,
      "err_msg": "‘s1’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "op [ Max ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘op’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a [ Max ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘vis’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "bool judge ( int mid ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "const string temp = \" \" ;"
      ],
      "err_line": 10,
      "err_msg": "passing ‘const string {aka const std::__cxx11::basic_string<char>}’ as ‘this’ argument discards qualifiers [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int p1 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "return 2 == len2 ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "while ( s1 >> s1 >> s2 )"
      ],
      "err_line": 20,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "cin >> op . at ( i ) ;"
      ],
      "err_line": 23,
      "err_msg": "request for member ‘at’ in ‘op’, which is of non-class type ‘int [200010]’"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "int left , right = 0 , right = len ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "int mid = ( long left + right ) / 2 ;"
      ],
      "err_line": 28,
      "err_msg": "expected primary-expression before ‘long’"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 31,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "ans = left ;"
      ],
      "err_line": 35,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "for ( i = left ; i <= right ; i ++ )"
      ],
      "err_line": 36,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        17
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "return 2 == len2 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        17,
        35
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "return 2 == len2 ;",
        "ans = left ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        17,
        35,
        26
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "return 2 == len2 ;",
        "ans = left ;",
        "int left , right = 0 , right = len ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        17,
        35,
        21
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "return 2 == len2 ;",
        "ans = left ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        17,
        35,
        0
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "return 2 == len2 ;",
        "ans = left ;",
        "const int Max = 20 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        17,
        26
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "return 2 == len2 ;",
        "int left , right = 0 , right = len ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        17,
        26,
        21
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "return 2 == len2 ;",
        "int left , right = 0 , right = len ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        17,
        26,
        0
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "return 2 == len2 ;",
        "int left , right = 0 , right = len ;",
        "const int Max = 20 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        17,
        21
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "return 2 == len2 ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        17,
        21,
        0
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "return 2 == len2 ;",
        "int len = strlen ( s1 ) ;",
        "const int Max = 20 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        17,
        0
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "return 2 == len2 ;",
        "const int Max = 20 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        35
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "ans = left ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        35,
        26
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "ans = left ;",
        "int left , right = 0 , right = len ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        35,
        26,
        21
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "ans = left ;",
        "int left , right = 0 , right = len ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        35,
        26,
        0
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "ans = left ;",
        "int left , right = 0 , right = len ;",
        "const int Max = 20 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        35,
        21
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "ans = left ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        35,
        21,
        0
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "ans = left ;",
        "int len = strlen ( s1 ) ;",
        "const int Max = 20 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        35,
        0
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "ans = left ;",
        "const int Max = 20 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        26
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "int left , right = 0 , right = len ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        26,
        21
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "int left , right = 0 , right = len ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        26,
        21,
        0
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "int left , right = 0 , right = len ;",
        "int len = strlen ( s1 ) ;",
        "const int Max = 20 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        26,
        0
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "int left , right = 0 , right = len ;",
        "const int Max = 20 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        21
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        21,
        0
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "int len = strlen ( s1 ) ;",
        "const int Max = 20 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "int p1 = 0 , p2 = 0 , len1 = 0 , len1 = temp . length ( ) , len2 = s2 . length ( ) ;",
        "const int Max = 20 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int len1’"
    },
    {
      "mod_line": [
        17,
        35
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "ans = left ;"
      ],
      "err_line": 35,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        35,
        26
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "ans = left ;",
        "int left , right = 0 , right = len ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        17,
        35,
        26,
        21
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "ans = left ;",
        "int left , right = 0 , right = len ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        17,
        35,
        26,
        0
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "ans = left ;",
        "int left , right = 0 , right = len ;",
        "const int Max = 20 ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        17,
        35,
        21
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "ans = left ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        17,
        35,
        21,
        0
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "ans = left ;",
        "int len = strlen ( s1 ) ;",
        "const int Max = 20 ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        17,
        35,
        0
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "ans = left ;",
        "const int Max = 20 ;"
      ],
      "err_line": 35,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        26
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "int left , right = 0 , right = len ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        17,
        26,
        21
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "int left , right = 0 , right = len ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        17,
        26,
        21,
        0
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "int left , right = 0 , right = len ;",
        "int len = strlen ( s1 ) ;",
        "const int Max = 20 ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        17,
        26,
        0
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "int left , right = 0 , right = len ;",
        "const int Max = 20 ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        17,
        21
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        17,
        21,
        0
      ],
      "mod_code": [
        "return 2 == len2 ;",
        "int len = strlen ( s1 ) ;",
        "const int Max = 20 ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        35,
        26
      ],
      "mod_code": [
        "ans = left ;",
        "int left , right = 0 , right = len ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        35,
        26,
        21
      ],
      "mod_code": [
        "ans = left ;",
        "int left , right = 0 , right = len ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        35,
        26,
        21,
        0
      ],
      "mod_code": [
        "ans = left ;",
        "int left , right = 0 , right = len ;",
        "int len = strlen ( s1 ) ;",
        "const int Max = 20 ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        35,
        26,
        0
      ],
      "mod_code": [
        "ans = left ;",
        "int left , right = 0 , right = len ;",
        "const int Max = 20 ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        35,
        21
      ],
      "mod_code": [
        "ans = left ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        35,
        21,
        0
      ],
      "mod_code": [
        "ans = left ;",
        "int len = strlen ( s1 ) ;",
        "const int Max = 20 ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        35,
        0
      ],
      "mod_code": [
        "ans = left ;",
        "const int Max = 20 ;"
      ],
      "err_line": 35,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        21
      ],
      "mod_code": [
        "int left , right = 0 , right = len ;",
        "int len = strlen ( s1 ) ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        26,
        21,
        0
      ],
      "mod_code": [
        "int left , right = 0 , right = len ;",
        "int len = strlen ( s1 ) ;",
        "const int Max = 20 ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        26,
        0
      ],
      "mod_code": [
        "int left , right = 0 , right = len ;",
        "const int Max = 20 ;"
      ],
      "err_line": 26,
      "err_msg": "redeclaration of ‘int right’"
    },
    {
      "mod_line": [
        21,
        0
      ],
      "mod_code": [
        "int len = strlen ( s1 ) ;",
        "const int Max = 20 ;"
      ],
      "err_line": 21,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    }
  ]
}