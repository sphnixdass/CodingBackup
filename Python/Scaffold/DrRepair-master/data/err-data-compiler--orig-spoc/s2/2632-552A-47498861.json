{
  "meta": {
    "index": 2632,
    "hitid": "39KV3A5D181JUPJAL5J5GD38O9G7SA",
    "workerid": "AIWEXPJAU66D9",
    "probid": "552A",
    "subid": "47498861"
  },
  "lines": [
    {
      "line": 0,
      "text": "cell is a new 2d array of integers with size 101 by 101",
      "code": "int cell [ 101 ] [ 101 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare ints n , x1 , y1 , x2 and y2",
      "code": "int n , x1 , y1 , x2 , y2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read from the input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "loop , decrementing n , while it is not 0",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read input to x1 , y1 , x2 and y2",
      "code": "cin >> x1 >> y1 >> x2 >> y2 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i from min of x1 and x2 to max of x1 and x2 inclusive incrementing i",
      "code": "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 , x2 ) ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "start for loop from j = min of y1 and y2 to max of y1 and y2 inclusive , incrementing cell [ i ] [ j ] by one on each loop iteration",
      "code": "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j ++ ) { cell [ i ] [ j ] ++ ; }",
      "indent": 3
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "create integer variable sum with value 0",
      "code": "int sum = 0 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "in a for loop , change i from 0 to 100 inclusive incrementing i",
      "code": "for ( int i = 0 ; i <= 100 ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "change j from 0 to 100 inclusive in a loop , increasing sum by cell [ i ] [ j ] on each iteration",
      "code": "for ( int j = 0 ; j <= 100 ; j ++ ) { sum += cell [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print sum and \" \\ n \" to the standard output",
      "code": "cout << sum << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int s [ 101 ] [ 101 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘cell’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "sum = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "puts ( sum , \" \\n \" ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "n = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        3,
        6
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "n = getchar ( ) ;",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        7,
        3,
        6,
        5
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "n = getchar ( ) ;",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "cin >> x1 , y1 >> x2 >> y2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        7,
        3,
        6,
        10
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "n = getchar ( ) ;",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        7,
        3,
        6,
        2
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "n = getchar ( ) ;",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        3,
        5
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "n = getchar ( ) ;",
        "cin >> x1 , y1 >> x2 >> y2 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        3,
        5,
        10
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "n = getchar ( ) ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "sum = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        3,
        5,
        2
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "n = getchar ( ) ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        3,
        10
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "n = getchar ( ) ;",
        "sum = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        3,
        10,
        2
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "n = getchar ( ) ;",
        "sum = 0 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        3,
        2
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "n = getchar ( ) ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        7,
        6,
        5
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "cin >> x1 , y1 >> x2 >> y2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        7,
        6,
        5,
        10
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        7,
        6,
        5,
        2
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        6,
        10
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        7,
        6,
        10,
        2
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "sum = 0 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        6,
        2
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "cin >> x1 , y1 >> x2 >> y2 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        5,
        10
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "sum = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        5,
        10,
        2
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "sum = 0 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        5,
        2
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "sum = 0 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7,
        10,
        2
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "sum = 0 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "for ( int j = min ( y1 , y2 ) ; j <= max ( y1 , y2 ) ; j [ i ] ++ ) { cell [ i ] [ j ] ++ ; }",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        3,
        6,
        5
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "cin >> x1 , y1 >> x2 >> y2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        3,
        6,
        5,
        10
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        3,
        6,
        5,
        2
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        6,
        10
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        3,
        6,
        10,
        2
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "sum = 0 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        5,
        10
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "sum = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        10,
        2
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "sum = 0 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        5,
        2
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "sum = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "sum = 0 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "cin >> x1 , y1 >> x2 >> y2 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        6,
        5,
        10
      ],
      "mod_code": [
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        6,
        5,
        10,
        2
      ],
      "mod_code": [
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "sum = 0 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "sum = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘)’ before ‘x1’"
    },
    {
      "mod_line": [
        6,
        10,
        2
      ],
      "mod_code": [
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "sum = 0 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "for ( int i = min ( x1 , x2 ) ; i <= max ( x1 x1 , x2 ) ; i ++ )",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        10
      ],
      "mod_code": [
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "sum = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘sum’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        2
      ],
      "mod_code": [
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "sum = 0 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cin >> x1 , y1 >> x2 >> y2 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "sum = 0 ;",
        "int n , x1 , y1 , x2 >> y2 ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘>>’ token"
    }
  ]
}