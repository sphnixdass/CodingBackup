{
  "meta": {
    "index": 119,
    "hitid": "3CMIQF80GNKOD9QSARP8FZOBBAD6QN",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "411A",
    "subid": "48785504"
  },
  "lines": [
    {
      "line": 0,
      "text": "a , b , c , len , flag , flag1 , flag2 , flag3 = integer",
      "code": "int a , b , c , len , flag , flag1 , flag2 , flag3 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "str = character array of size 110",
      "code": "char str [ 110 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "while str is read as a valid string",
      "code": "while ( cin >> str )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "flag = flag2 = flag 3 = 0 , len = length of str",
      "code": "flag = flag2 = flag3 = 0 , len = strlen ( str ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if len > = 5",
      "code": "if ( len >= 5 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to len exclusive",
      "code": "for ( int i = 0 ; i < len ; i ++ )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if str [ i ] is an integer",
      "code": "if ( isdigit ( str [ i ] ) )",
      "indent": 4
    },
    {
      "line": 8,
      "text": "flag = 1",
      "code": "flag = 1 ;",
      "indent": 5
    },
    {
      "line": 9,
      "text": "else if str [ i ] contains a lowercase letter",
      "code": "else if ( islower ( str [ i ] ) )",
      "indent": 4
    },
    {
      "line": 10,
      "text": "flag2 = 1",
      "code": "flag2 = 1 ;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "else if str [ i ] contains an uppercase letter",
      "code": "else if ( isupper ( str [ i ] ) )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "flag3 = 1",
      "code": "flag3 = 1 ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "if flag and flag2 and flag 3 all are 1",
      "code": "if ( flag && flag2 && flag3 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "print Correct",
      "code": "puts ( \" Correct \" ) ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 16,
      "text": "print Too weak",
      "code": "puts ( \" Too weak \" ) ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "print Too weak",
      "code": "puts ( \" Too weak \" ) ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "cout << Correct << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "cout << Too << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "flag = flag2 , 3 = 0 , len = str . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < len ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if ( str [ i ] . size ( ) )"
      ],
      "err_line": 11,
      "err_msg": "request for member ‘size’ in ‘str[i]’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "cout << Too << ' \\n ' ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "cout << Too << ' \\n ' ;"
      ],
      "err_line": 18,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        9
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        11
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        14
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        16
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        9,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        11
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        14
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        16
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        11,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        14
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        14,
        16
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        14,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        16
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        16,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        7,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "if ( str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        9,
        11
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        14
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        16
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        9,
        14
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        16
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        9,
        14,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        9,
        16
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        9,
        16,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        9,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        11,
        14
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        16
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        11,
        16
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        11,
        16,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        11,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "cout << Correct << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        14,
        16
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        14,
        16,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "cout << Correct << endl ;",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        14,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        16
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        16,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "flag = flag2 = 0 , len = str . length ( ) ;",
        "cout << Too << endl ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘str’, which is of non-class type ‘char [110]’"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        14
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        16
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        11,
        18
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        14
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        14,
        16
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        14,
        18
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        16
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        16,
        18
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        18
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        14
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        16
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        14,
        18
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        16
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        16,
        18
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        18
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        16
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        16,
        18
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        18
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        16
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        16,
        18
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        18
      ],
      "mod_code": [
        "if ( str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        14
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        16
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        18
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        16
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        16,
        18
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11,
        18
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        16
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        16,
        18
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        14,
        18
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        16,
        18
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        16
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        16,
        18
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        18
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        16,
        18
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "else if ( ! str [ i ] )",
        "cout << Too << endl ;"
      ],
      "err_line": 18,
      "err_msg": "‘Too’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        16,
        18
      ],
      "mod_code": [
        "cout << Correct << endl ;",
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18
      ],
      "mod_code": [
        "cout << Correct << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 14,
      "err_msg": "‘Correct’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "cout << Too << endl ;",
        "cout << Too << endl ;"
      ],
      "err_line": 16,
      "err_msg": "‘Too’ was not declared in this scope"
    }
  ]
}