{
  "meta": {
    "index": 344,
    "hitid": "32PT7WK7DM9VRHZ5M3LQ8X5SI4I3D5",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "814A",
    "subid": "45441283"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function solve that returns nothing",
      "code": "void solve ( )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , k = integers",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a = integer vector of size n , b = integer vector of size k",
      "code": "vector < int > a ( n ) , b ( k ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , then read a [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive , then read b [ i ]",
      "code": "for ( int i = 0 ; i < k ; i ++ ) { cin >> b [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort b in descending order",
      "code": "sort ( b . rbegin ( ) , b . rend ( ) ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "pos = integer = 0",
      "code": "int pos = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "a [ i ] is 0",
      "code": "if ( a [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "a [ i ] is b [ pos ]",
      "code": "a [ i ] = b [ pos ] ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "increase pos by 1",
      "code": "pos ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if a [ i ] < = a [ i - 1 ]",
      "code": "if ( a [ i ] <= a [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print Yes",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "exit the loop",
      "code": "return ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print No",
      "code": "cout << \" No \" << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 23,
      "text": "call solve",
      "code": "solve ( ) ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sort ( b , b + b ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "solve solve ) ;"
      ],
      "err_line": 23,
      "err_msg": "expected ‘;’ before ‘solve’"
    },
    {
      "mod_line": [
        6,
        9,
        17,
        3
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "a [ i ] = 0 ;",
        "break ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "a [ i ] = 0 ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        17,
        9,
        3
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break ;",
        "a [ i ] = ' 0 ' ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        17,
        3
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "break ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        9,
        3
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "a [ i ] = ' 0 ' ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "sort ( b . begin ( ) , b . end ( ) ) ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        17,
        6
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "break ;",
        "sort ( b , b + b ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        17,
        6,
        3
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "break ;",
        "sort ( b , b + b ) ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        17,
        3
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "break ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "sort ( b , b + b ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        6,
        3
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "sort ( b , b + b ) ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "a [ i ] = 0 ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        9,
        6
      ],
      "mod_code": [
        "break ;",
        "a [ i ] = ' 0 ' ;",
        "sort ( b , b + b ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        9,
        6,
        3
      ],
      "mod_code": [
        "break ;",
        "a [ i ] = ' 0 ' ;",
        "sort ( b , b + b ) ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        9,
        3
      ],
      "mod_code": [
        "break ;",
        "a [ i ] = ' 0 ' ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        6
      ],
      "mod_code": [
        "break ;",
        "sort ( b , b + b ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        6,
        3
      ],
      "mod_code": [
        "break ;",
        "sort ( b , b + b ) ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "break ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "a [ i ] = ' 0 ' ;",
        "sort ( b , b + b ) ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::vector<int>’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        6,
        3
      ],
      "mod_code": [
        "a [ i ] = ' 0 ' ;",
        "sort ( b , b + b ) ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "a [ i ] = ' 0 ' ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "sort ( b , b + b ) ;",
        "vector < int > a [ n ] , b [ k ] ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    }
  ]
}