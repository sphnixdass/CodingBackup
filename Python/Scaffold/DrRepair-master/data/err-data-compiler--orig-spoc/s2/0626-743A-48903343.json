{
  "meta": {
    "index": 626,
    "hitid": "3X7837UUADS7RMMFF15ZIYCPXFH6JS",
    "workerid": "AIWEXPJAU66D9",
    "probid": "743A",
    "subid": "48903343"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare ints n , a and b",
      "code": "int n , a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , a and b",
      "code": "cin >> n >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer variables i and val",
      "code": "int i , val ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare vector of integers called v with size n + 1",
      "code": "vector < int > v ( n + 1 ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare string variable s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read input to s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i from 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if s [ i ] is equal to ' 1 '",
      "code": "if ( s [ i ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set v [ i + 1 ] to 1",
      "code": "v [ i + 1 ] = 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "assign 0 to v [ i + 1 ]",
      "code": "v [ i + 1 ] = 0 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "declare int variable aa = min of a and b",
      "code": "int aa = min ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "declare int variable bb = max of a and b",
      "code": "int bb = max ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "declare int j",
      "code": "int j ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "create int count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "loop i from aa while i < = bb",
      "code": "for ( i = aa ; i <= bb ; )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if v [ i ] = 0",
      "code": "if ( v [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "declare integer variable index = i",
      "code": "int index = i ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "for j = i to bb inclusive",
      "code": "for ( j = i ; j <= bb ; j ++ )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "if v [ j ] = 0 , set index to j",
      "code": "if ( v [ j ] == 0 ) index = j ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if index = bb , break the loop",
      "code": "if ( index == bb ) break ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if index ! = bb",
      "code": "if ( index != bb )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "change i to index + 1",
      "code": "i = index + 1 ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "increment count by one",
      "code": "count ++ ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 29,
      "text": "create integer index = i",
      "code": "int index = i ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "for j from i to bb inclusive",
      "code": "for ( j = i ; j <= bb ; j ++ )",
      "indent": 3
    },
    {
      "line": 31,
      "text": "if v [ j ] is equal to 1 , assign j to index",
      "code": "if ( v [ j ] == 1 ) index = j ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 33,
      "text": "if index is equal to bb , break",
      "code": "if ( index == bb ) break ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "if index ! = bb",
      "code": "if ( index != bb )",
      "indent": 3
    },
    {
      "line": 35,
      "text": "set i to index + 1",
      "code": "i = index + 1 ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "increment count by one",
      "code": "count ++ ;",
      "indent": 4
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 40,
      "text": "print count",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int i i , val ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘i’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "vector < int > v [ n + 1 ] ;"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator=’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "index = i ;"
      ],
      "err_line": 19,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "index = i ;"
      ],
      "err_line": 29,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int n , a + b ;",
        "v [ i ] = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        11,
        35
      ],
      "mod_code": [
        "int n , a + b ;",
        "v [ i ] = 0 ;",
        "i += 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        11,
        35,
        28
      ],
      "mod_code": [
        "int n , a + b ;",
        "v [ i ] = 0 ;",
        "i += 1 ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        11,
        35,
        9
      ],
      "mod_code": [
        "int n , a + b ;",
        "v [ i ] = 0 ;",
        "i += 1 ;",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        11,
        35,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "v [ i ] = 0 ;",
        "i += 1 ;",
        "bool s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        11,
        28
      ],
      "mod_code": [
        "int n , a + b ;",
        "v [ i ] = 0 ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        11,
        28,
        9
      ],
      "mod_code": [
        "int n , a + b ;",
        "v [ i ] = 0 ;",
        "n",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        11,
        28,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "v [ i ] = 0 ;",
        "n",
        "bool s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        11,
        9
      ],
      "mod_code": [
        "int n , a + b ;",
        "v [ i ] = 0 ;",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        11,
        9,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "v [ i ] = 0 ;",
        "C [ i + 1 ] = 1 ;",
        "bool s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        11,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "v [ i ] = 0 ;",
        "bool s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        35
      ],
      "mod_code": [
        "int n , a + b ;",
        "i += 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        35,
        28
      ],
      "mod_code": [
        "int n , a + b ;",
        "i += 1 ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        35,
        28,
        9
      ],
      "mod_code": [
        "int n , a + b ;",
        "i += 1 ;",
        "n",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        35,
        28,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "i += 1 ;",
        "n",
        "bool s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        35,
        9
      ],
      "mod_code": [
        "int n , a + b ;",
        "i += 1 ;",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        35,
        9,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "i += 1 ;",
        "C [ i + 1 ] = 1 ;",
        "bool s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        35,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "i += 1 ;",
        "bool s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        28
      ],
      "mod_code": [
        "int n , a + b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        28,
        9
      ],
      "mod_code": [
        "int n , a + b ;",
        "n",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        28,
        9,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "n",
        "C [ i + 1 ] = 1 ;",
        "bool s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        28,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "n",
        "bool s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , a + b ;",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        9,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "C [ i + 1 ] = 1 ;",
        "bool s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , a + b ;",
        "bool s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        11,
        35,
        28
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "i += 1 ;",
        "n"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        35,
        28,
        9
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "i += 1 ;",
        "n",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        35,
        28,
        5
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "i += 1 ;",
        "n",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        35,
        9
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "i += 1 ;",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        35,
        9,
        5
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "i += 1 ;",
        "C [ i + 1 ] = 1 ;",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        35,
        5
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "i += 1 ;",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        28
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "n"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        28,
        9
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "n",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        28,
        9,
        5
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "n",
        "C [ i + 1 ] = 1 ;",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        28,
        5
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "n",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        9,
        5
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "C [ i + 1 ] = 1 ;",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "v [ i ] = 0 ;",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        35,
        28
      ],
      "mod_code": [
        "i += 1 ;",
        "n"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        35,
        28,
        9
      ],
      "mod_code": [
        "i += 1 ;",
        "n",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        28,
        9,
        5
      ],
      "mod_code": [
        "i += 1 ;",
        "n",
        "C [ i + 1 ] = 1 ;",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        35,
        28,
        5
      ],
      "mod_code": [
        "i += 1 ;",
        "n",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        35,
        9
      ],
      "mod_code": [
        "i += 1 ;",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        35,
        9,
        5
      ],
      "mod_code": [
        "i += 1 ;",
        "C [ i + 1 ] = 1 ;",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        35,
        5
      ],
      "mod_code": [
        "i += 1 ;",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        28,
        9
      ],
      "mod_code": [
        "n",
        "C [ i + 1 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘C’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        9,
        5
      ],
      "mod_code": [
        "n",
        "C [ i + 1 ] = 1 ;",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        28,
        5
      ],
      "mod_code": [
        "n",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "C [ i + 1 ] = 1 ;",
        "bool s ;"
      ],
      "err_line": 8,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    }
  ]
}