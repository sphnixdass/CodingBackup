{
  "meta": {
    "index": 2196,
    "hitid": "3V7ICJJAZAANUGKP8LZ3NC9YTJ84BQ",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "102A",
    "subid": "46813476"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make ints n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer array a of size n + 10",
      "code": "int a [ n + 10 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "make integer array ma of size n + 1 with array of size n + 1",
      "code": "int ma [ n + 1 ] [ n + 1 ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set all contents of ma to 0",
      "code": "memset ( ma , 0 , sizeof ( ma ) ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "make integer vector v [ n + 1 ]",
      "code": "vector < int > v [ n + 1 ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to n , read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "make ints uu and vv",
      "code": "int uu , vv ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to m",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read uu and vv",
      "code": "cin >> uu >> vv ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set ma [ uu ] [ vv ] to 1",
      "code": "ma [ uu ] [ vv ] = 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set ma [ vv ] [ uu ] to 1",
      "code": "ma [ vv ] [ uu ] = 1 ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "create integer ans = INT_MAX",
      "code": "int ans = INT_MAX ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for j = 1 to n",
      "code": "for ( int j = 1 ; j <= n ; j ++ )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for t = 1 to n",
      "code": "for ( int t = 1 ; t <= n ; t ++ )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "if i is not j , i is not t , j is not t , ma [ i ] [ j ] is truthy , ma [ i ] [ t ] is truthy , and ma [ j ] [ t ] is truthy , set ans to min ( ans , a [ i ] + a [ j ] + a [ t ] )",
      "code": "if ( i != j && i != t && j != t && ma [ i ] [ j ] && ma [ i ] [ t ] && ma [ j ] [ t ] ) { ans = min ( ans , a [ i ] + a [ j ] + a [ t ] ) ; }",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if ans is not INT_MAX",
      "code": "if ( ans != INT_MAX )",
      "indent": 1
    },
    {
      "line": 23,
      "text": "show ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "else do",
      "code": "else",
      "indent": 1
    },
    {
      "line": 25,
      "text": "display - 1",
      "code": "cout << - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 7,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int ma [ n + 1 ] + { } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int uu = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘vv’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "ma [ uu ] [ vv ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "ma [ vv ] [ uu ] ] = 1 ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "ans = INT_MAX ;"
      ],
      "err_line": 14,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( t = 1 ; t <= n ; t ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "puts ( ans ) ;"
      ],
      "err_line": 23,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 26,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        18,
        17
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        17,
        11
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )",
        "ma [ uu ] [ vv ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        18,
        17,
        11,
        4
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "int ma [ n + 1 ] + { } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        17,
        11,
        9
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        18,
        17,
        4
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )",
        "int ma [ n + 1 ] + { } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        17,
        4,
        9
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )",
        "int ma [ n + 1 ] + { } ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        17,
        9
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "ma [ uu ] [ vv ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        18,
        11,
        4
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "int ma [ n + 1 ] + { } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        11,
        4,
        9
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "int ma [ n + 1 ] + { } ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        11,
        9
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        18,
        4
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "int ma [ n + 1 ] + { } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        4,
        9
      ],
      "mod_code": [
        "if ( i != j ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "int ma [ n + 1 ] + { } ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        17
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        17,
        11
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )",
        "ma [ uu ] [ vv ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        18,
        17,
        11,
        4
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "int ma [ n + 1 ] + { } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        17,
        11,
        9
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        18,
        17,
        4
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )",
        "int ma [ n + 1 ] + { } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        17,
        4,
        9
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )",
        "int ma [ n + 1 ] + { } ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        17,
        9
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "for ( t = 1 ; t <= n ; t ++ )",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "ma [ uu ] [ vv ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        18,
        11,
        4
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "int ma [ n + 1 ] + { } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        11,
        4,
        9
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "int ma [ n + 1 ] + { } ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        11,
        9
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        18,
        4
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "int ma [ n + 1 ] + { } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        18,
        4,
        9
      ],
      "mod_code": [
        "if ( i != j , i ) ans = min ( ans , a [ i ] + a [ j ] + a [ j ] + a [ j ] + a [ t ] + a [ t ] + a [ t ] + a [ t ] ) ;",
        "int ma [ n + 1 ] + { } ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "for ( t = 1 ; t <= n ; t ++ )",
        "ma [ uu ] [ vv ] ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        17,
        11,
        4
      ],
      "mod_code": [
        "for ( t = 1 ; t <= n ; t ++ )",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "int ma [ n + 1 ] + { } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        17,
        11,
        4,
        9
      ],
      "mod_code": [
        "for ( t = 1 ; t <= n ; t ++ )",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "int ma [ n + 1 ] + { } ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        17,
        11,
        9
      ],
      "mod_code": [
        "for ( t = 1 ; t <= n ; t ++ )",
        "ma [ uu ] [ vv ] ] = 1 ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        17,
        4
      ],
      "mod_code": [
        "for ( t = 1 ; t <= n ; t ++ )",
        "int ma [ n + 1 ] + { } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        17,
        4,
        9
      ],
      "mod_code": [
        "for ( t = 1 ; t <= n ; t ++ )",
        "int ma [ n + 1 ] + { } ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        17,
        9
      ],
      "mod_code": [
        "for ( t = 1 ; t <= n ; t ++ )",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "ma [ uu ] [ vv ] ] = 1 ;",
        "int ma [ n + 1 ] + { } ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        11,
        4,
        9
      ],
      "mod_code": [
        "ma [ uu ] [ vv ] ] = 1 ;",
        "int ma [ n + 1 ] + { } ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "ma [ uu ] [ vv ] ] = 1 ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "int ma [ n + 1 ] + { } ;",
        "for ( int i = 1 ; i < m ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘+’ token"
    }
  ]
}