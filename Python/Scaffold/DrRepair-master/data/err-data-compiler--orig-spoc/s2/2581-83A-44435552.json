{
  "meta": {
    "index": 2581,
    "hitid": "31KSVEGZ34MMJPKYEORCIJXTVYBWRI",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "83A",
    "subid": "44435552"
  },
  "lines": [
    {
      "line": 0,
      "text": "make const long long int INF = ( 1ll < < 62 ) - 1",
      "code": "const long long INF = ( 1ll << 62 ) - 1 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create const int M = 1e5 + 5",
      "code": "const int M = 1e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create long long int array ar of size 100005",
      "code": "long long ar [ 100005 ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "make long long ints cnt = 1 , tot , and res",
      "code": "long long cnt = 1 , tot , res ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "make integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n exclusive , read ar [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> ar [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to n exclusive",
      "code": "for ( int i = 1 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if ar [ i ] is equal to ar [ i - 1 ]",
      "code": "if ( ar [ i ] == ar [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else do",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set tot to ( cnt * ( cnt + 1 ) ) / 2",
      "code": "tot = ( cnt * ( cnt + 1 ) ) / 2 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "set res to res + tot",
      "code": "res += tot ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "set cnt to 1",
      "code": "cnt = 1 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "add ( cnt * ( cnt + 1 ) ) / 2 to res",
      "code": "res += ( cnt * ( cnt + 1 ) ) / 2 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "show res",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "else do",
        "long long cnt = ( 1 , tot , res ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        14
      ],
      "mod_code": [
        "else do",
        "long long cnt = ( 1 , tot , res ) ;",
        "int cnt = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        14,
        6
      ],
      "mod_code": [
        "else do",
        "long long cnt = ( 1 , tot , res ) ;",
        "int cnt = 1 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        14,
        8
      ],
      "mod_code": [
        "else do",
        "long long cnt = ( 1 , tot , res ) ;",
        "int cnt = 1 ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        14,
        17
      ],
      "mod_code": [
        "else do",
        "long long cnt = ( 1 , tot , res ) ;",
        "int cnt = 1 ;",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        6
      ],
      "mod_code": [
        "else do",
        "long long cnt = ( 1 , tot , res ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        6,
        8
      ],
      "mod_code": [
        "else do",
        "long long cnt = ( 1 , tot , res ) ;",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        6,
        17
      ],
      "mod_code": [
        "else do",
        "long long cnt = ( 1 , tot , res ) ;",
        "n = getchar ( ) ;",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        8
      ],
      "mod_code": [
        "else do",
        "long long cnt = ( 1 , tot , res ) ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        8,
        17
      ],
      "mod_code": [
        "else do",
        "long long cnt = ( 1 , tot , res ) ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        3,
        17
      ],
      "mod_code": [
        "else do",
        "long long cnt = ( 1 , tot , res ) ;",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "else do",
        "int cnt = 1 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        14,
        6
      ],
      "mod_code": [
        "else do",
        "int cnt = 1 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        14,
        6,
        8
      ],
      "mod_code": [
        "else do",
        "int cnt = 1 ;",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        14,
        6,
        17
      ],
      "mod_code": [
        "else do",
        "int cnt = 1 ;",
        "n = getchar ( ) ;",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        14,
        8
      ],
      "mod_code": [
        "else do",
        "int cnt = 1 ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        14,
        8,
        17
      ],
      "mod_code": [
        "else do",
        "int cnt = 1 ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        14,
        17
      ],
      "mod_code": [
        "else do",
        "int cnt = 1 ;",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        6,
        8
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        6,
        8,
        17
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        6,
        17
      ],
      "mod_code": [
        "else do",
        "n = getchar ( ) ;",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "else do",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        8,
        17
      ],
      "mod_code": [
        "else do",
        "for ( i = 1 ; i < n ; i ++ )",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "else do",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "int cnt = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        6
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "int cnt = 1 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        6,
        8
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "int cnt = 1 ;",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        6,
        17
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "int cnt = 1 ;",
        "n = getchar ( ) ;",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        8
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "int cnt = 1 ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        8,
        17
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "int cnt = 1 ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        17
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "int cnt = 1 ;",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        8
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        8,
        17
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        17
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "n = getchar ( ) ;",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        17
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        17
      ],
      "mod_code": [
        "long long cnt = ( 1 , tot , res ) ;",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 3,
      "err_msg": "‘tot’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        6,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        6,
        8,
        17
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "n = getchar ( ) ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        8,
        17
      ],
      "mod_code": [
        "int cnt = 1 ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        17
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = 1 ; i < n ; i ++ )",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "for ( i = 1 ; i < n ; i ++ )",
        "res -= ( cnt * ( cnt + 1 ) ) / 2 ;"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}