{
  "meta": {
    "index": 1030,
    "hitid": "3WGZLY9VCHGHSE5BYKGMZED3YQHD8E",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "760A",
    "subid": "46644214"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "integer as n , m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if n is 2 then do the following",
      "code": "if ( n == 2 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if m is 1 then do the following",
      "code": "if ( m == 1 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "output 4",
      "code": "cout << 4 << endl ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "output 5",
      "code": "cout << 5 << endl ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if n is 4 or n then do the following",
      "code": "else if ( n == 4 || n == 6 || n == 9 || n == 11 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if m > = 1 and m is less than or equal to 6 then do the following",
      "code": "if ( m >= 1 && m <= 6 )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "output 5",
      "code": "cout << 5 << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "output 6",
      "code": "cout << 6 << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if m is between 1 and 5 then do the following",
      "code": "if ( m >= 1 && m <= 5 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "output 5",
      "code": "cout << 5 << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "output 6",
      "code": "cout << 6 << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "while ( m == 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        9
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "while ( m >= 1 && m <= 6 )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        14,
        9,
        11
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "while ( m >= 1 && m <= 6 )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        9,
        11,
        4
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "while ( m >= 1 && m <= 6 )",
        "n",
        "while ( m == 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        14,
        9,
        11,
        3
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "while ( m >= 1 && m <= 6 )",
        "n",
        "if ( ! n )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        9,
        4
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "while ( m >= 1 && m <= 6 )",
        "while ( m == 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        14,
        9,
        4,
        3
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "while ( m >= 1 && m <= 6 )",
        "while ( m == 1 )",
        "if ( ! n )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        14,
        9,
        3
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "while ( m >= 1 && m <= 6 )",
        "if ( ! n )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        11,
        4
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "n",
        "while ( m == 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        14,
        11,
        4,
        3
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "n",
        "while ( m == 1 )",
        "if ( ! n )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        14,
        11,
        3
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "n",
        "if ( ! n )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "while ( m == 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        14,
        4,
        3
      ],
      "mod_code": [
        "if ( m > 1 && m > 5 )",
        "while ( m == 1 )",
        "if ( ! n )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        14
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "n",
        "if ( m > 1 && m < 5 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        4
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "n",
        "if ( m > 1 && m < 5 )",
        "while ( m == 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        9,
        11,
        14,
        3
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "n",
        "if ( m > 1 && m < 5 )",
        "if ( ! n )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        11,
        4
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "n",
        "while ( m == 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        9,
        11,
        4,
        3
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "n",
        "while ( m == 1 )",
        "if ( ! n )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        9,
        11,
        3
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "n",
        "if ( ! n )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "if ( m > 1 && m < 5 )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        9,
        14,
        4
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "if ( m > 1 && m < 5 )",
        "while ( m == 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        9,
        14,
        4,
        3
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "if ( m > 1 && m < 5 )",
        "while ( m == 1 )",
        "if ( ! n )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        9,
        14,
        3
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "if ( m > 1 && m < 5 )",
        "if ( ! n )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "while ( m == 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        9,
        4,
        3
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "while ( m == 1 )",
        "if ( ! n )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "while ( m >= 1 && m <= 6 )",
        "if ( ! n )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "n",
        "if ( m > 1 && m < 5 )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        14,
        4
      ],
      "mod_code": [
        "n",
        "if ( m > 1 && m < 5 )",
        "while ( m == 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        14,
        4,
        3
      ],
      "mod_code": [
        "n",
        "if ( m > 1 && m < 5 )",
        "while ( m == 1 )",
        "if ( ! n )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        14,
        3
      ],
      "mod_code": [
        "n",
        "if ( m > 1 && m < 5 )",
        "if ( ! n )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "n",
        "while ( m == 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        4,
        3
      ],
      "mod_code": [
        "n",
        "while ( m == 1 )",
        "if ( ! n )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "n",
        "if ( ! n )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "if ( m > 1 && m < 5 )",
        "while ( m == 1 )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        14,
        4,
        3
      ],
      "mod_code": [
        "if ( m > 1 && m < 5 )",
        "while ( m == 1 )",
        "if ( ! n )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "while ( m == 1 )",
        "if ( ! n )"
      ],
      "err_line": 6,
      "err_msg": "expected ‘}’ before ‘else’"
    }
  ]
}