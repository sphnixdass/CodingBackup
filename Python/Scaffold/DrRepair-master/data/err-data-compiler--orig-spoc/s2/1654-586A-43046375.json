{
  "meta": {
    "index": 1654,
    "hitid": "3X4Q1O9UBHG4WXRHEO2WW8T7RKIO7Z",
    "workerid": "A1APYLD4DUK33J",
    "probid": "586A",
    "subid": "43046375"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers n , count = 0",
      "code": "int n , count = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integer vector ai initialized with n",
      "code": "vector < int > ai ( n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive , read ai [ i ]",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> ai [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( static int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if ai [ i ] is 1",
      "code": "if ( ai [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if ai [ i ] is 0 and ai [ i + 1 ] is 1 and i is not 0 and ai [ i - 1 ] is not 0",
      "code": "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 1 && i != 0 && ai [ i - 1 ] != 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment count",
      "code": "count ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if ai [ i ] is 0 and ai [ i + 1 ] is 0",
      "code": "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print count , ' \\ n '",
      "code": "cout << count << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < int > ai ai n ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        13,
        3
      ],
      "mod_code": [
        "if ( ai [ i ] == ' 1 ' )",
        "cout << count , ' \\n ' ;",
        "vector < int > ai ai n ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        6,
        13,
        3,
        5
      ],
      "mod_code": [
        "if ( ai [ i ] == ' 1 ' )",
        "cout << count , ' \\n ' ;",
        "vector < int > ai ai n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        6,
        13,
        3,
        8
      ],
      "mod_code": [
        "if ( ai [ i ] == ' 1 ' )",
        "cout << count , ' \\n ' ;",
        "vector < int > ai ai n ;",
        "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 0 && ai [ i - 1 ] != 0 && ai [ i - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        6,
        13,
        5
      ],
      "mod_code": [
        "if ( ai [ i ] == ' 1 ' )",
        "cout << count , ' \\n ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        13,
        5,
        8
      ],
      "mod_code": [
        "if ( ai [ i ] == ' 1 ' )",
        "cout << count , ' \\n ' ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 0 && ai [ i - 1 ] != 0 && ai [ i - 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "if ( ai [ i ] == ' 1 ' )",
        "vector < int > ai ai n ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        6,
        3,
        5
      ],
      "mod_code": [
        "if ( ai [ i ] == ' 1 ' )",
        "vector < int > ai ai n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        6,
        3,
        5,
        8
      ],
      "mod_code": [
        "if ( ai [ i ] == ' 1 ' )",
        "vector < int > ai ai n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 0 && ai [ i - 1 ] != 0 && ai [ i - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        6,
        3,
        8
      ],
      "mod_code": [
        "if ( ai [ i ] == ' 1 ' )",
        "vector < int > ai ai n ;",
        "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 0 && ai [ i - 1 ] != 0 && ai [ i - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "if ( ai [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        5,
        8
      ],
      "mod_code": [
        "if ( ai [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 0 && ai [ i - 1 ] != 0 && ai [ i - 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "cout << count , ' \\n ' ;",
        "vector < int > ai ai n ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        13,
        3,
        5
      ],
      "mod_code": [
        "cout << count , ' \\n ' ;",
        "vector < int > ai ai n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        13,
        3,
        5,
        8
      ],
      "mod_code": [
        "cout << count , ' \\n ' ;",
        "vector < int > ai ai n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 0 && ai [ i - 1 ] != 0 && ai [ i - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        13,
        3,
        8
      ],
      "mod_code": [
        "cout << count , ' \\n ' ;",
        "vector < int > ai ai n ;",
        "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 0 && ai [ i - 1 ] != 0 && ai [ i - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        13,
        5
      ],
      "mod_code": [
        "cout << count , ' \\n ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        5,
        8
      ],
      "mod_code": [
        "cout << count , ' \\n ' ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 0 && ai [ i - 1 ] != 0 && ai [ i - 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "vector < int > ai ai n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        3,
        5,
        8
      ],
      "mod_code": [
        "vector < int > ai ai n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 0 && ai [ i - 1 ] != 0 && ai [ i - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "vector < int > ai ai n ;",
        "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 0 && ai [ i - 1 ] != 0 && ai [ i - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘ai’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( ai [ i ] == 0 && ai [ i + 1 ] == 0 && ai [ i - 1 ] != 0 && ai [ i - 1 ] )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}