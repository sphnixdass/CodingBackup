{
  "meta": {
    "index": 1125,
    "hitid": "3EAWOID6MTRL460UU131CLDSFZ5V04",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "844A",
    "subid": "46650997"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "str = string",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "k = long long integer",
      "code": "long long int k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "freq = long long integer array of size 27 , freq [ 0 ] = 0",
      "code": "long long int freq [ 27 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if k > size of str",
      "code": "if ( k > str . size ( ) )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print impossible",
      "code": "cout << \" impossible \" ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to size of str exclusive , then increase by 1 freq [ str [ i ] - a + 1 ]",
      "code": "for ( long long int i = 0 ; i < str . size ( ) ; i ++ ) { freq [ str [ i ] - ' a ' + 1 ] ++ ; }",
      "indent": 2
    },
    {
      "line": 10,
      "text": "count = long long integer = 0",
      "code": "long long int count = 0 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for i = 1 to 26 inclusive",
      "code": "for ( long long int i = 1 ; i <= 26 ; i ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if freq [ i ] is not 0 , then increase count by 1",
      "code": "if ( freq [ i ] != 0 ) count ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if count > = k",
      "code": "if ( count >= k )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print 0",
      "code": "cout << \" 0 \" ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print k - count",
      "code": "cout << ( k - count ) ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print endline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "cout << impossible << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "long long int 27 [ 27 ] = { 0 } , freq [ 0 ] ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= 26 ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << impossible << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        7,
        15
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << impossible << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        7,
        15,
        17
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << impossible << endl ;",
        "cout << 0 << endl ;",
        "cout << k - count << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        7,
        15,
        4
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << impossible << endl ;",
        "cout << 0 << endl ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        7,
        15,
        6
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << impossible << endl ;",
        "cout << 0 << endl ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        7,
        17
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << impossible << endl ;",
        "cout << k - count << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        7,
        17,
        4
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << impossible << endl ;",
        "cout << k - count << endl ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        7,
        17,
        6
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << impossible << endl ;",
        "cout << k - count << endl ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << impossible << endl ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        7,
        4,
        6
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << impossible << endl ;",
        "k = getchar ( ) ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << impossible << endl ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        15,
        17
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << 0 << endl ;",
        "cout << k - count << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        15,
        17,
        4
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << 0 << endl ;",
        "cout << k - count << endl ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        15,
        17,
        6
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << 0 << endl ;",
        "cout << k - count << endl ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        15,
        4
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << 0 << endl ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        15,
        4,
        6
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << 0 << endl ;",
        "k = getchar ( ) ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        15,
        6
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << 0 << endl ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << k - count << endl ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        17,
        4
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << k - count << endl ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        17,
        4,
        6
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << k - count << endl ;",
        "k = getchar ( ) ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        17,
        6
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "cout << k - count << endl ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        4,
        6
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "k = getchar ( ) ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "long long int 27 [ 27 ] , freq [ 0 ] ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before numeric constant"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "cout << 0 << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        17
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "cout << 0 << endl ;",
        "cout << k - count << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        17,
        4
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "cout << 0 << endl ;",
        "cout << k - count << endl ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        17,
        6
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "cout << 0 << endl ;",
        "cout << k - count << endl ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        4
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "cout << 0 << endl ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        4,
        6
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "cout << 0 << endl ;",
        "k = getchar ( ) ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15,
        6
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "cout << 0 << endl ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "cout << k - count << endl ;"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17,
        4
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "cout << k - count << endl ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17,
        4,
        6
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "cout << k - count << endl ;",
        "k = getchar ( ) ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        17,
        6
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "cout << k - count << endl ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        4,
        6
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "k = getchar ( ) ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "cout << impossible << endl ;",
        "if ( k == str . size ( ) )"
      ],
      "err_line": 7,
      "err_msg": "‘impossible’ was not declared in this scope"
    }
  ]
}