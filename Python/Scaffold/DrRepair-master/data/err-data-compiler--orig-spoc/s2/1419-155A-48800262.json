{
  "meta": {
    "index": 1419,
    "hitid": "3VEI3XUCZRRWZGNX22DHQPPX216RPG",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "155A",
    "subid": "48800262"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integers n , k , and ans and int array a of size 1001",
      "code": "int n , k , a [ 1001 ] , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read k",
      "code": "cin >> k ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set a [ i ] to k",
      "code": "a [ i ] = k ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "sort a using a + i + 1",
      "code": "sort ( a , a + i + 1 ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a [ 0 ] is equal to k and a [ 1 ] is not equal to k or if a [ i ] is equal to k and a [ i - 1 ] is not equal to k and i is not equal to 0 , increment ans",
      "code": "if ( ( ( a [ 0 ] == k && a [ 1 ] != k ) || ( a [ i ] == k && a [ i - 1 ] != k ) ) && i != 0 ) ans ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 9,
      "text": "show ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int a [ i ] = k ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "puts ( ans ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) { ans ++ ; }",
        "puts ( ans ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9,
        4
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) { ans ++ ; }",
        "puts ( ans ) ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9,
        4,
        5
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) { ans ++ ; }",
        "puts ( ans ) ;",
        "k = getchar ( ) ;",
        "int a [ i ] = k ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        9,
        4,
        6
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) { ans ++ ; }",
        "puts ( ans ) ;",
        "k = getchar ( ) ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        9,
        5
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) { ans ++ ; }",
        "puts ( ans ) ;",
        "int a [ i ] = k ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        9,
        5,
        6
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) { ans ++ ; }",
        "puts ( ans ) ;",
        "int a [ i ] = k ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        9,
        6
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) { ans ++ ; }",
        "puts ( ans ) ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4,
        5
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) { ans ++ ; }",
        "k = getchar ( ) ;",
        "int a [ i ] = k ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        4,
        5,
        6
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) { ans ++ ; }",
        "k = getchar ( ) ;",
        "int a [ i ] = k ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) { ans ++ ; }",
        "int a [ i ] = k ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        5,
        6
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) { ans ++ ; }",
        "int a [ i ] = k ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) ans ++ ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        7,
        4
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) ans ++ ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        7,
        4,
        5
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) ans ++ ;",
        "k = getchar ( ) ;",
        "int a [ i ] = k ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        7,
        4,
        6
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) ans ++ ;",
        "k = getchar ( ) ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        7,
        5
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) ans ++ ;",
        "int a [ i ] = k ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        7,
        5,
        6
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) ans ++ ;",
        "int a [ i ] = k ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        7,
        6
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) ans ++ ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "k = getchar ( ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4,
        5
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "k = getchar ( ) ;",
        "int a [ i ] = k ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        4,
        5,
        6
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "k = getchar ( ) ;",
        "int a [ i ] = k ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        4,
        6
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "k = getchar ( ) ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "int a [ i ] = k ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        5,
        6
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "int a [ i ] = k ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        9,
        6
      ],
      "mod_code": [
        "puts ( ans ) ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        4,
        5
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) ans ++ ;",
        "k = getchar ( ) ;",
        "int a [ i ] = k ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        4,
        5,
        6
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) ans ++ ;",
        "k = getchar ( ) ;",
        "int a [ i ] = k ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) ans ++ ;",
        "int a [ i ] = k ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        7,
        5,
        6
      ],
      "mod_code": [
        "if ( a [ 0 ] == k && a [ 1 ] != k && a [ i - 1 ] != k && a [ i - 1 ] != 0 && i != 0 ) ans ++ ;",
        "int a [ i ] = k ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "k = getchar ( ) ;",
        "int a [ i ] = k ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "k = getchar ( ) ;",
        "int a [ i ] = k ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "int a [ i ] = k ;",
        "sort ( a + i , a + i + 1 ) ;"
      ],
      "err_line": 5,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    }
  ]
}