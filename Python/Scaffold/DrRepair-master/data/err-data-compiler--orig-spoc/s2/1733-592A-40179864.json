{
  "meta": {
    "index": 1733,
    "hitid": "3DW3BNF1GHC3MV5XP5GG50JAYXJ8V6",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "592A",
    "subid": "40179864"
  },
  "lines": [
    {
      "line": 0,
      "text": "Au , Ad , Bu , Bd = int array of size 9 each",
      "code": "int Au [ 9 ] , Ad [ 9 ] , Bu [ 9 ] , Bd [ 9 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "for i = 0 to 8",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for j = 0 to 8",
      "code": "for ( int j = 0 ; j < 8 ; j ++ )",
      "indent": 2
    },
    {
      "line": 4,
      "text": "c = char",
      "code": "char c ;",
      "indent": 3
    },
    {
      "line": 5,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "if c is ' B '",
      "code": "if ( c == ' B ' )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if not Bu [ j ] set Bu [ j ] to i + 1",
      "code": "if ( ! Bu [ j ] ) { Bu [ j ] = i + 1 ; }",
      "indent": 4
    },
    {
      "line": 8,
      "text": "set Bd [ j ] to i + 1",
      "code": "Bd [ j ] = i + 1 ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else if c is ' W '",
      "code": "else if ( c == ' W ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if not Au [ j ] set Au [ j ] to i + 1",
      "code": "if ( ! Au [ j ] ) { Au [ j ] = i + 1 ; }",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set Ad [ j ] to i + 1",
      "code": "Ad [ j ] = i + 1 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "ansA , ansB = int with ansA = INT_MAX and ansB = INT_MAX",
      "code": "int ansA = INT_MAX , ansB = INT_MAX ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for i j = 0 to 8",
      "code": "for ( int j = 0 ; j < 8 ; j ++ )",
      "indent": 1
    },
    {
      "line": 17,
      "text": "if Bd [ j ]",
      "code": "if ( Bd [ j ] )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if Bd [ j ] > Ad [ j ] set ansB to min of ansB , 9 - Bd [ j ] - 1",
      "code": "if ( Bd [ j ] > Ad [ j ] ) { ansB = min ( ansB , 9 - Bd [ j ] - 1 ) ; }",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if Au [ j ]",
      "code": "if ( Au [ j ] )",
      "indent": 2
    },
    {
      "line": 21,
      "text": "if Au [ j ] < Bu [ j ] or not Bu [ j ] set ansA to min of ansA , Au [ j ] - 1",
      "code": "if ( Au [ j ] < Bu [ j ] || ! Bu [ j ] ) { ansA = min ( ansA , Au [ j ] - 1 ) ; }",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" A \" if ansA < = ansB else print \" B \"",
      "code": "cout << ( ansA <= ansB ? \" A \" : \" B \" ) << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int Au , Ad [ 9 ] , Ad [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Ad [9]’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( Au [ j ] < Bu [ j ] || ! min ) ansA = min ( ansA , Au [ j ] - 1 ) ;"
      ],
      "err_line": 21,
      "err_msg": "cannot resolve overloaded function ‘min’ based on conversion to type ‘bool’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int Au , Ad , Bu [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else if ( c == ' B ' )"
      ],
      "err_line": 6,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int ansA , ansB = INT_MAX , ansB = INT_MAX ;"
      ],
      "err_line": 15,
      "err_msg": "redeclaration of ‘int ansB’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 ; i ++ )"
      ],
      "err_line": 16,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( Bd [ j ] > Ad [ j ] ) ansB to min ( ansB , 9 - Bd [ j ] - 1 ) ;"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘to’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "if ( Au [ j ] < Bu [ j ] or ansA [ j ] = min ( ansA , Au [ j ] - 1 ) ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "int Au , Ad [ 9 ] , Ad [ 9 ] , Bd [ 9 ] ;",
        "if ( Au [ j ] < Bu [ j ] || ! min ) ansA = min ( ansA , Au [ j ] - 1 ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Ad [9]’"
    },
    {
      "mod_line": [
        0,
        21,
        24
      ],
      "mod_code": [
        "int Au , Ad [ 9 ] , Ad [ 9 ] , Bd [ 9 ] ;",
        "if ( Au [ j ] < Bu [ j ] || ! min ) ansA = min ( ansA , Au [ j ] - 1 ) ;",
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Ad [9]’"
    },
    {
      "mod_line": [
        0,
        21,
        24,
        3
      ],
      "mod_code": [
        "int Au , Ad [ 9 ] , Ad [ 9 ] , Bd [ 9 ] ;",
        "if ( Au [ j ] < Bu [ j ] || ! min ) ansA = min ( ansA , Au [ j ] - 1 ) ;",
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Ad [9]’"
    },
    {
      "mod_line": [
        0,
        21,
        3
      ],
      "mod_code": [
        "int Au , Ad [ 9 ] , Ad [ 9 ] , Bd [ 9 ] ;",
        "if ( Au [ j ] < Bu [ j ] || ! min ) ansA = min ( ansA , Au [ j ] - 1 ) ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Ad [9]’"
    },
    {
      "mod_line": [
        0,
        24
      ],
      "mod_code": [
        "int Au , Ad [ 9 ] , Ad [ 9 ] , Bd [ 9 ] ;",
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Ad [9]’"
    },
    {
      "mod_line": [
        0,
        24,
        3
      ],
      "mod_code": [
        "int Au , Ad [ 9 ] , Ad [ 9 ] , Bd [ 9 ] ;",
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Ad [9]’"
    },
    {
      "mod_line": [
        0,
        24,
        3,
        21
      ],
      "mod_code": [
        "int Au , Ad [ 9 ] , Ad [ 9 ] , Bd [ 9 ] ;",
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( Au [ j ] < Bu [ j ] or ansA [ j ] = min ( ansA , Au [ j ] - 1 ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Ad [9]’"
    },
    {
      "mod_line": [
        0,
        24,
        21
      ],
      "mod_code": [
        "int Au , Ad [ 9 ] , Ad [ 9 ] , Bd [ 9 ] ;",
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "if ( Au [ j ] < Bu [ j ] or ansA [ j ] = min ( ansA , Au [ j ] - 1 ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Ad [9]’"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int Au , Ad [ 9 ] , Ad [ 9 ] , Bd [ 9 ] ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Ad [9]’"
    },
    {
      "mod_line": [
        0,
        3,
        21
      ],
      "mod_code": [
        "int Au , Ad [ 9 ] , Ad [ 9 ] , Bd [ 9 ] ;",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( Au [ j ] < Bu [ j ] or ansA [ j ] = min ( ansA , Au [ j ] - 1 ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Ad [9]’"
    },
    {
      "mod_line": [
        0,
        21
      ],
      "mod_code": [
        "int Au , Ad [ 9 ] , Ad [ 9 ] , Bd [ 9 ] ;",
        "if ( Au [ j ] < Bu [ j ] or ansA [ j ] = min ( ansA , Au [ j ] - 1 ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int Ad [9]’"
    },
    {
      "mod_line": [
        21,
        24
      ],
      "mod_code": [
        "if ( Au [ j ] < Bu [ j ] || ! min ) ansA = min ( ansA , Au [ j ] - 1 ) ;",
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;"
      ],
      "err_line": 21,
      "err_msg": "cannot resolve overloaded function ‘min’ based on conversion to type ‘bool’"
    },
    {
      "mod_line": [
        21,
        24,
        3
      ],
      "mod_code": [
        "if ( Au [ j ] < Bu [ j ] || ! min ) ansA = min ( ansA , Au [ j ] - 1 ) ;",
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        24,
        3,
        0
      ],
      "mod_code": [
        "if ( Au [ j ] < Bu [ j ] || ! min ) ansA = min ( ansA , Au [ j ] - 1 ) ;",
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "int Au , Ad , Bu [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        24,
        0
      ],
      "mod_code": [
        "if ( Au [ j ] < Bu [ j ] || ! min ) ansA = min ( ansA , Au [ j ] - 1 ) ;",
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "int Au , Ad , Bu [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        21,
        3
      ],
      "mod_code": [
        "if ( Au [ j ] < Bu [ j ] || ! min ) ansA = min ( ansA , Au [ j ] - 1 ) ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        3,
        0
      ],
      "mod_code": [
        "if ( Au [ j ] < Bu [ j ] || ! min ) ansA = min ( ansA , Au [ j ] - 1 ) ;",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "int Au , Ad , Bu [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        0
      ],
      "mod_code": [
        "if ( Au [ j ] < Bu [ j ] || ! min ) ansA = min ( ansA , Au [ j ] - 1 ) ;",
        "int Au , Ad , Bu [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        3
      ],
      "mod_code": [
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        3,
        21
      ],
      "mod_code": [
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( Au [ j ] < Bu [ j ] or ansA [ j ] = min ( ansA , Au [ j ] - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        3,
        21,
        0
      ],
      "mod_code": [
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( Au [ j ] < Bu [ j ] or ansA [ j ] = min ( ansA , Au [ j ] - 1 ) ;",
        "int Au , Ad , Bu [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        3,
        0
      ],
      "mod_code": [
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "int Au , Ad , Bu [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        21
      ],
      "mod_code": [
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "if ( Au [ j ] < Bu [ j ] or ansA [ j ] = min ( ansA , Au [ j ] - 1 ) ;"
      ],
      "err_line": 21,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        21,
        0
      ],
      "mod_code": [
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "if ( Au [ j ] < Bu [ j ] or ansA [ j ] = min ( ansA , Au [ j ] - 1 ) ;",
        "int Au , Ad , Bu [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        24,
        0
      ],
      "mod_code": [
        "cout << ( ansA <= ansB ? \" A \" : \" B \" ) ;",
        "int Au , Ad , Bu [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        21
      ],
      "mod_code": [
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( Au [ j ] < Bu [ j ] or ansA [ j ] = min ( ansA , Au [ j ] - 1 ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        21,
        0
      ],
      "mod_code": [
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( Au [ j ] < Bu [ j ] or ansA [ j ] = min ( ansA , Au [ j ] - 1 ) ;",
        "int Au , Ad , Bu [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "for ( j = 0 ; j < 8 ; j ++ )",
        "int Au , Ad , Bu [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        0
      ],
      "mod_code": [
        "if ( Au [ j ] < Bu [ j ] or ansA [ j ] = min ( ansA , Au [ j ] - 1 ) ;",
        "int Au , Ad , Bu [ 9 ] , Bd [ 9 ] ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    }
  ]
}