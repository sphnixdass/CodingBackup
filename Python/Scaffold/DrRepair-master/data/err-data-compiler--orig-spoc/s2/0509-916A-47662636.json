{
  "meta": {
    "index": 509,
    "hitid": "33W1NHWFYHF3TZ2VT0GEH2ST0L7TZD",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "916A",
    "subid": "47662636"
  },
  "lines": [
    {
      "line": 0,
      "text": "x1 , x0 = char , t = array of 4 char",
      "code": "char x1 , x0 , t [ 4 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "function check ( no args , return bool )",
      "code": "bool check ( )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "for i = 0 to 4 exclusive",
      "code": "for ( int i = 0 ; i < 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if t [ i ] is ' 7 ' return true",
      "code": "if ( t [ i ] == ' 7 ' ) return 1 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "x = int , cnt = 0",
      "code": "int x , cnt = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read x , t [ 3 ] , t [ 2 ] , t [ 1 ] , t [ 0 ]",
      "code": "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] >> t [ 0 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "x0 = x modulo 10 , x1 = x / 10",
      "code": "x0 = x % 10 , x1 = x / 10 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "while not check ( )",
      "code": "while ( ! check ( ) )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "subtract x1 from t [ 1 ] , subtract x0 from t [ 0 ]",
      "code": "t [ 1 ] -= x1 , t [ 0 ] -= x0 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if t [ 0 ] < ' 0 ' add 10 to t [ 0 ] and decrement t [ 1 ]",
      "code": "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 , t [ 1 ] -- ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if t [ 1 ] < ' 0 ' add 6 to t [ 1 ] and decrement t [ 2 ]",
      "code": "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 , t [ 2 ] -- ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if t [ 2 ] < ' 0 ' add 10 to t [ 2 ] and decrement t [ 3 ]",
      "code": "if ( t [ 2 ] < ' 0 ' ) t [ 2 ] += 10 , t [ 3 ] -- ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if t [ 3 ] < ' 0 ' t [ 3 ] = ' 3 ' , t [ 2 ] = ' 3 '",
      "code": "if ( t [ 3 ] < ' 0 ' ) t [ 3 ] = ' 2 ' , t [ 2 ] = ' 3 ' ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "increment cnt",
      "code": "cnt ++ ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print cnt",
      "code": "cout << cnt << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , t [ 4 ] ;"
      ],
      "err_line": 9,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘char [4]’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void check ( )"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int x = 0 ;"
      ],
      "err_line": 16,
      "err_msg": "‘cnt’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "t [ 1 ] [ t ] -= x0 [ 0 ] ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 [ 1 ] ;"
      ],
      "err_line": 12,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "t [ 1 ] [ t ] -= x0 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        11,
        12
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "t [ 1 ] [ t ] -= x0 ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        11,
        12,
        13
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "t [ 1 ] [ t ] -= x0 ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        11,
        12,
        2
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "t [ 1 ] [ t ] -= x0 ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        11,
        12,
        8
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "t [ 1 ] [ t ] -= x0 ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        11,
        13
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "t [ 1 ] [ t ] -= x0 ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        11,
        13,
        2
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "t [ 1 ] [ t ] -= x0 ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        11,
        13,
        8
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "t [ 1 ] [ t ] -= x0 ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        11,
        2
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "t [ 1 ] [ t ] -= x0 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        11,
        2,
        8
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "t [ 1 ] [ t ] -= x0 ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        11,
        8
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "t [ 1 ] [ t ] -= x0 ;",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        12,
        13
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        12,
        13,
        2
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        12,
        13,
        8
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        12,
        2
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        12,
        2,
        8
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        12,
        8
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        13,
        2
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        13,
        2,
        8
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        13,
        8
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        2,
        8
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "char x1 , x0 [ 4 ] , x0 [ 4 ] ;",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘char x0 [4]’"
    },
    {
      "mod_line": [
        11,
        12,
        13,
        2
      ],
      "mod_code": [
        "t [ 1 ] [ t ] -= x0 ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        2
      ],
      "mod_code": [
        "t [ 1 ] [ t ] -= x0 ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        12,
        2,
        8
      ],
      "mod_code": [
        "t [ 1 ] [ t ] -= x0 ;",
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        2
      ],
      "mod_code": [
        "t [ 1 ] [ t ] -= x0 ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        2,
        8
      ],
      "mod_code": [
        "t [ 1 ] [ t ] -= x0 ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "t [ 1 ] [ t ] -= x0 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        2,
        8
      ],
      "mod_code": [
        "t [ 1 ] [ t ] -= x0 ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        2
      ],
      "mod_code": [
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        2,
        8
      ],
      "mod_code": [
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        8
      ],
      "mod_code": [
        "if ( t [ 0 ] < ' 0 ' ) t [ 0 ] += 10 ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "for ( i = 0 ; i < 4 ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        2,
        8
      ],
      "mod_code": [
        "if ( t [ 1 ] < ' 0 ' ) t [ 1 ] += 6 ;",
        "for ( i = 0 ; i < 4 ; i ++ )",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < 4 ; i ++ )",
        "cin >> x >> t [ 3 ] >> t [ 2 ] >> t [ 1 ] , t [ 0 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}