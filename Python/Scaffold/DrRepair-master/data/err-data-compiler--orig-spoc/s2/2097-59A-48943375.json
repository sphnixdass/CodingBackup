{
  "meta": {
    "index": 2097,
    "hitid": "3ZURAPD288HWFYZMQ52X84TGWXMF12",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "59A",
    "subid": "48943375"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function to_lower with argument pointer string str that returns nothing",
      "code": "void to_lower ( string & str ) ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function to_upper with argument pointer string str that returns nothing",
      "code": "void to_upper ( string & str ) ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "input = string",
      "code": "string input ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read string",
      "code": "cin >> input ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "upper = integer = 0",
      "code": "int upper = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "lower = integer = 0",
      "code": "int lower = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to size of input exclusive",
      "code": "for ( int i = 0 ; i < input . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if input [ i ] < a , then increase upper by 1",
      "code": "if ( input [ i ] < ' a ' ) upper ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "lower = size of input - upper",
      "code": "lower = input . size ( ) - upper ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if upper > lower",
      "code": "if ( upper > lower )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "call to_upper with argument input",
      "code": "to_upper ( input ) ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "call to_lower with argument input",
      "code": "to_lower ( input ) ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print input",
      "code": "cout << input << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 17,
      "text": "in function to_upper with argument pointer string str that returns nothing",
      "code": "void to_upper ( string & str )",
      "indent": 0
    },
    {
      "line": 18,
      "text": "for i = 0 to size of str exclusive",
      "code": "for ( int i = 0 ; i < str . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "if str [ i ] > = a and str [ i ] < = z , then str [ i ] = str [ i ] - 32",
      "code": "if ( str [ i ] >= ' a ' && str [ i ] <= ' z ' ) str [ i ] -= 32 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 22,
      "text": "in function to_lower with argument pointer string str that returns nothing",
      "code": "void to_lower ( string & str )",
      "indent": 0
    },
    {
      "line": 23,
      "text": "for i = 0 to size of str exclusive",
      "code": "for ( int i = 0 ; i < str . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if str [ i ] > = A and str [ i ] < = Z , then str [ i ] = str [ i ] + 32",
      "code": "if ( str [ i ] >= ' A ' && str [ i ] <= ' Z ' ) str [ i ] += 32 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "to_upper = input ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "to_lower = input ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 19,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "void to_lower ( string * str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "void to_upper ( string * str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string ans ;"
      ],
      "err_line": 4,
      "err_msg": "‘input’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "cin >> a ;"
      ],
      "err_line": 4,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int * lower = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "invalid conversion from ‘std::__cxx11::basic_string<char>::size_type {aka long unsigned int}’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < input . size ( ) ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper += 1 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "string lower = input . size ( ) - upper ;"
      ],
      "err_line": 9,
      "err_msg": "conflicting declaration ‘std::__cxx11::string lower’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "to_upper = input + 1 ;"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "to_lower = input + 1 ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator+’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "void to_upper ( string * str )"
      ],
      "err_line": 18,
      "err_msg": "request for member ‘size’ in ‘str’, which is of pointer type ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( i = 0 ; i < str . size ( ) ; i ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( str [ i ] >= a && str [ i ] <= z ) str [ i ] = str [ i ] - 32 ;"
      ],
      "err_line": 19,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "void to_lower ( string * str )"
      ],
      "err_line": 23,
      "err_msg": "request for member ‘size’ in ‘str’, which is of pointer type ‘std::__cxx11::string* {aka std::__cxx11::basic_string<char>*}’ (maybe you meant to use ‘->’ ?)"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( i = 0 ; i < str . size ( ) ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        4
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        4,
        8
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        4,
        9
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        4,
        11
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "to_upper = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        4,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        4,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        4,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        4,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        8
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        9
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        11
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        8,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        9
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        9,
        11
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        9,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        9,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        9,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        9,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        11
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "to_upper = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        13,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        13,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        13,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        17,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        17,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        19,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        1,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        8
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        8,
        9
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        8,
        11
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        8,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        8,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        8,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        8,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        9
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        11
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        11
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "to_upper = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        11,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        11,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        11,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        11,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        13,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        13,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        13,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        17,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        17,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        19,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        4,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "getchar ( ) ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        9
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        9,
        11
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        9,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        9,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        9,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        9,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        11
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        11,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        13,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        13,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        13,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        17,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        17,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        19,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        8,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        11
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        11,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        13,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        13,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        13,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        17,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        17,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        19,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        9,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "int lower = input . size ( ) - upper ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_upper = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        11,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        11,
        13,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        11,
        13,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_upper = input ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        11,
        13,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        11,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        11,
        17,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_upper = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        11,
        17,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_upper = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        11,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        11,
        19,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        11,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_lower = input ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        13,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        13,
        17,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_lower = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        13,
        17,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_lower = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        13,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        13,
        19,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        13,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        17
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        17,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        17,
        19,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        17,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        19,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        0,
        22
      ],
      "mod_code": [
        "void to_lower ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘void’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        8
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        9
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        11
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        13
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        9
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        9,
        11
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        9,
        13
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        9,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        9,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        9,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        11
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "to_upper = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        11,
        13
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        11,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        11,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        11,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        13
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "to_lower = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        13,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        13,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        13,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        17,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        17,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        19,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        4,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "getchar ( ) ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        11
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        13
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        11
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        13
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        11,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        13
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        13,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        13,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        13,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        17,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        17,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        19,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        8,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        11
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        13
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        11,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        13
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        13,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        17,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        19,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        9,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "int lower = input . size ( ) - upper ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_upper = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        11,
        13
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        11,
        13,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        11,
        13,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_upper = input ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        11,
        13,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        11,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        11,
        17,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_upper = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        11,
        17,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_upper = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        11,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        11,
        19,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        11,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_lower = input ;"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        13,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        13,
        17,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_lower = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        13,
        17,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_lower = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        13,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        13,
        19,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        13,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        17
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "void to_upper ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        17,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        17,
        19,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        17,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        19,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 2,
      "err_msg": "expected initializer before ‘int’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        11
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        13
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        17
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        9,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        11
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        13
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        17
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        11,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        13
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        17
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        13,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        17
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        17,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        17,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        19,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        11
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        13
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        17
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        11,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        13
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        17
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        13,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        17
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        17,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        19,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        9,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "int lower = input . size ( ) - upper ;",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_upper = input ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        11,
        13
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        17
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_upper = input ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        11,
        13,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        11,
        17
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_upper = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        11,
        17,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_upper = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        11,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        11,
        19,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        11,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_lower = input ;"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        13,
        17
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_lower = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        13,
        17,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_lower = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        13,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        13,
        19,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        13,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        4,
        17,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 19,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        17,
        19,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 19,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 19,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        19,
        22
      ],
      "mod_code": [
        "getchar ( ) ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 19,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        11
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        13
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        17
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        19
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        11,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        13
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        17
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        19
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        13,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        17
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        19
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        17,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        19
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        19,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "int lower = input . size ( ) - upper ;",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        13
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        17
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        19
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        13,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        17
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        19
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        17,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        19
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        19,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        11,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        17
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        19
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        17,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        19
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        19,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        13,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        19
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        19,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        17,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        19,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        22
      ],
      "mod_code": [
        "if ( input [ i ] < a ) { upper ++ ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 8,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        11,
        13
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        17
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        19
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        22
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        11,
        17
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        19
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        11,
        17,
        22
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        11,
        19
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        22
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        11,
        22
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        13,
        17
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        19
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        13,
        17,
        22
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        13,
        19
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        22
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        13,
        22
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        17
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        17,
        19
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        17,
        19,
        22
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        17,
        22
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        19,
        22
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        9,
        22
      ],
      "mod_code": [
        "int lower = input . size ( ) - upper ;",
        "void to_lower ( string str )"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int lower’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "to_upper = input ;",
        "to_lower = input ;"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        13,
        17
      ],
      "mod_code": [
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        19
      ],
      "mod_code": [
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        13,
        17,
        22
      ],
      "mod_code": [
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        13,
        19
      ],
      "mod_code": [
        "to_upper = input ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        22
      ],
      "mod_code": [
        "to_upper = input ;",
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        13,
        22
      ],
      "mod_code": [
        "to_upper = input ;",
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "to_upper = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        17,
        19
      ],
      "mod_code": [
        "to_upper = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        17,
        19,
        22
      ],
      "mod_code": [
        "to_upper = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        17,
        22
      ],
      "mod_code": [
        "to_upper = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        19,
        22
      ],
      "mod_code": [
        "to_upper = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "to_upper = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 11,
      "err_msg": "assignment of function ‘void to_upper(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        17
      ],
      "mod_code": [
        "to_lower = input ;",
        "void to_upper ( string str )"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        17,
        19
      ],
      "mod_code": [
        "to_lower = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        17,
        19,
        22
      ],
      "mod_code": [
        "to_lower = input ;",
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        17,
        22
      ],
      "mod_code": [
        "to_lower = input ;",
        "void to_upper ( string str )",
        "void to_lower ( string str )"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        19,
        22
      ],
      "mod_code": [
        "to_lower = input ;",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13,
        22
      ],
      "mod_code": [
        "to_lower = input ;",
        "void to_lower ( string str )"
      ],
      "err_line": 13,
      "err_msg": "assignment of function ‘void to_lower(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        17,
        19
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }"
      ],
      "err_line": 19,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        19,
        22
      ],
      "mod_code": [
        "void to_upper ( string str )",
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 19,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        22
      ],
      "mod_code": [
        "if ( str [ i ] >= a && str [ i ] <= z ) { str [ i ] = str [ i ] - 32 ; }",
        "void to_lower ( string str )"
      ],
      "err_line": 19,
      "err_msg": "‘a’ was not declared in this scope"
    }
  ]
}