{
  "meta": {
    "index": 2069,
    "hitid": "363A7XIFV4GH5JYCM30U1RP5OLGAV9",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "59A",
    "subid": "48652947"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "texto = string",
      "code": "string texto ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "caso1 , caso2 = long long with caso1 = 0 and caso2 = 0",
      "code": "long long caso1 = 0 , caso2 = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read texto",
      "code": "cin >> texto ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "n = int with n = size of texto",
      "code": "int n = texto . size ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "verif = char",
      "code": "char verif ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "cambio = char",
      "code": "char cambio ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set verif to texto [ i ]",
      "code": "verif = texto [ i ] ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if isupper of verif",
      "code": "if ( isupper ( verif ) )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment caso2",
      "code": "caso2 += 1 ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if islower of verif",
      "code": "else if ( islower ( verif ) )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "increment caso1",
      "code": "caso1 += 1 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if caso1 > cas2 or caso1 is caso2",
      "code": "if ( caso1 > caso2 || caso1 == caso2 )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "set cambio to tolower of texto [ i ]",
      "code": "cambio = tolower ( texto [ i ] ) ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "set text [ i ] to cambio",
      "code": "texto [ i ] = cambio ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "else if caso1 < caso2",
      "code": "else if ( caso1 < caso2 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "set cambio to toupper of texto [ i ]",
      "code": "cambio = toupper ( texto [ i ] ) ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "set texto [ i ] to cambio",
      "code": "texto [ i ] = cambio ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print texto",
      "code": "cout << texto << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )"
      ],
      "err_line": 16,
      "err_msg": "‘cas2’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "text [ i ] = cambio ;"
      ],
      "err_line": 18,
      "err_msg": "‘text’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 3,
      "err_msg": "‘texto’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "long long caso1 , caso2 = 0 , caso2 ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘long long int caso2’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "texto >> texto ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int n = strlen ( texto ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘const char*’ for argument ‘1’ to ‘size_t strlen(const char*)’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 15,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "if ( caso1 > cas2 or caso1 == caso2 )"
      ],
      "err_line": 16,
      "err_msg": "‘cas2’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "cambio %= texto ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator%=’ (operand types are ‘char’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "int text [ i ] = cambio ;"
      ],
      "err_line": 18,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "int texto [ i ] = cambio ;"
      ],
      "err_line": 21,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        16,
        18
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "text [ i ] = cambio ;"
      ],
      "err_line": 16,
      "err_msg": "‘cas2’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        21
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "text [ i ] = cambio ;",
        "int texto [ i ] = cambio ;"
      ],
      "err_line": 16,
      "err_msg": "‘cas2’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        21,
        17
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "text [ i ] = cambio ;",
        "int texto [ i ] = cambio ;",
        "cambio %= texto ;"
      ],
      "err_line": 16,
      "err_msg": "‘cas2’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        21,
        11
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "text [ i ] = cambio ;",
        "int texto [ i ] = cambio ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        16,
        18,
        21,
        9
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "text [ i ] = cambio ;",
        "int texto [ i ] = cambio ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        16,
        18,
        17
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "text [ i ] = cambio ;",
        "cambio %= texto ;"
      ],
      "err_line": 16,
      "err_msg": "‘cas2’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        18,
        17,
        11
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "text [ i ] = cambio ;",
        "cambio %= texto ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        16,
        18,
        17,
        9
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "text [ i ] = cambio ;",
        "cambio %= texto ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        16,
        18,
        11
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "text [ i ] = cambio ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        16,
        18,
        11,
        9
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "text [ i ] = cambio ;",
        "else if ( verif ( verif ) )",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        16,
        18,
        9
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "text [ i ] = cambio ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        16,
        21
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "int texto [ i ] = cambio ;"
      ],
      "err_line": 16,
      "err_msg": "‘cas2’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        21,
        17
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "int texto [ i ] = cambio ;",
        "cambio %= texto ;"
      ],
      "err_line": 16,
      "err_msg": "‘cas2’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        21,
        17,
        11
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "int texto [ i ] = cambio ;",
        "cambio %= texto ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        16,
        21,
        17,
        9
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "int texto [ i ] = cambio ;",
        "cambio %= texto ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        16,
        21,
        11
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "int texto [ i ] = cambio ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        16,
        21,
        11,
        9
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "int texto [ i ] = cambio ;",
        "else if ( verif ( verif ) )",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        16,
        21,
        9
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "int texto [ i ] = cambio ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        16,
        17
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "cambio %= texto ;"
      ],
      "err_line": 16,
      "err_msg": "‘cas2’ was not declared in this scope"
    },
    {
      "mod_line": [
        16,
        17,
        11
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "cambio %= texto ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        16,
        17,
        11,
        9
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "cambio %= texto ;",
        "else if ( verif ( verif ) )",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        16,
        17,
        9
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "cambio %= texto ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        16,
        11
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        16,
        11,
        9
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "else if ( verif ( verif ) )",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "if ( caso1 > cas2 || caso1 == caso2 )",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        18,
        21
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "int texto [ i ] = cambio ;"
      ],
      "err_line": 18,
      "err_msg": "‘text’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        21,
        17
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "int texto [ i ] = cambio ;",
        "cambio %= texto ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator%=’ (operand types are ‘char’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18,
        21,
        17,
        11
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "int texto [ i ] = cambio ;",
        "cambio %= texto ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        18,
        21,
        17,
        9
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "int texto [ i ] = cambio ;",
        "cambio %= texto ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        18,
        21,
        11
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "int texto [ i ] = cambio ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        18,
        21,
        11,
        9
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "int texto [ i ] = cambio ;",
        "else if ( verif ( verif ) )",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        18,
        21,
        9
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "int texto [ i ] = cambio ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        18,
        17
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "cambio %= texto ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator%=’ (operand types are ‘char’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        18,
        17,
        11
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "cambio %= texto ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        18,
        17,
        11,
        9
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "cambio %= texto ;",
        "else if ( verif ( verif ) )",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        18,
        17,
        9
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "cambio %= texto ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        18,
        11
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        18,
        11,
        9
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "else if ( verif ( verif ) )",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        18,
        9
      ],
      "mod_code": [
        "text [ i ] = cambio ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        21,
        17
      ],
      "mod_code": [
        "int texto [ i ] = cambio ;",
        "cambio %= texto ;"
      ],
      "err_line": 17,
      "err_msg": "no match for ‘operator%=’ (operand types are ‘char’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        21,
        17,
        11
      ],
      "mod_code": [
        "int texto [ i ] = cambio ;",
        "cambio %= texto ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        21,
        17,
        11,
        9
      ],
      "mod_code": [
        "int texto [ i ] = cambio ;",
        "cambio %= texto ;",
        "else if ( verif ( verif ) )",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        21,
        17,
        9
      ],
      "mod_code": [
        "int texto [ i ] = cambio ;",
        "cambio %= texto ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        21,
        11
      ],
      "mod_code": [
        "int texto [ i ] = cambio ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        21,
        11,
        9
      ],
      "mod_code": [
        "int texto [ i ] = cambio ;",
        "else if ( verif ( verif ) )",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        21,
        9
      ],
      "mod_code": [
        "int texto [ i ] = cambio ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        17,
        11
      ],
      "mod_code": [
        "cambio %= texto ;",
        "else if ( verif ( verif ) )"
      ],
      "err_line": 11,
      "err_msg": "‘verif’ cannot be used as a function"
    },
    {
      "mod_line": [
        17,
        11,
        9
      ],
      "mod_code": [
        "cambio %= texto ;",
        "else if ( verif ( verif ) )",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        17,
        9
      ],
      "mod_code": [
        "cambio %= texto ;",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "else if ( verif ( verif ) )",
        "if ( isupper ( verif verif ) )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘)’ before ‘verif’"
    }
  ]
}