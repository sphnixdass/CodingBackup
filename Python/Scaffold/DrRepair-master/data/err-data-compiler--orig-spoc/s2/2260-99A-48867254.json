{
  "meta": {
    "index": 2260,
    "hitid": "3B0MCRZMBROBN37IPA9SLUPI1JHPPL",
    "workerid": "AIWEXPJAU66D9",
    "probid": "99A",
    "subid": "48867254"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s is a new string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read user input to s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare new integer pos",
      "code": "int pos ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "in a for loop , change i from 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ i ] = ' . '",
      "code": "if ( s [ i ] == ' . ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "change the value of pos to i",
      "code": "pos = i ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if s [ i - 1 ] is equal to ' 9 '",
      "code": "if ( s [ i - 1 ] == ' 9 ' )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "print \" GOTO Vasilisa . \" to stdout",
      "code": "puts ( \" GOTO Vasilisa. \" ) ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 11,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if s [ pos + 1 ] > = ' 5 ' , increment s [ pos - 1 ] by one",
      "code": "if ( s [ pos + 1 ] >= ' 5 ' ) s [ pos - 1 ] ++ ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "assign substring of s fromthe position 0 with length pos to s",
      "code": "s = s . substr ( 0 , pos ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 6,
      "err_msg": "‘pos’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "* pos = i ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘size’ in ‘pos’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "s = s . substr ( 0 , pos . size ( ) ) ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘size’ in ‘pos’, which is of non-class type ‘int’"
    },
    {
      "mod_line": [
        5,
        15,
        3
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "int n ;"
      ],
      "err_line": 6,
      "err_msg": "‘pos’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        3,
        6
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "int n ;",
        "* pos = i ;"
      ],
      "err_line": 6,
      "err_msg": "‘pos’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        3,
        1
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "int n ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        15,
        3,
        2
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "int n ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        15,
        6
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "* pos = i ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        15,
        6,
        1
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "* pos = i ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        15,
        6,
        2
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "* pos = i ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        15,
        1
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        15,
        1,
        2
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "string s << endl ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        15,
        2
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "int n ;"
      ],
      "err_line": 6,
      "err_msg": "‘pos’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "int n ;",
        "* pos = i ;"
      ],
      "err_line": 6,
      "err_msg": "‘pos’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        3,
        6,
        1
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "int n ;",
        "* pos = i ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        3,
        6,
        2
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "int n ;",
        "* pos = i ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        3,
        1
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "int n ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        3,
        1,
        2
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "int n ;",
        "string s << endl ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        3,
        2
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "int n ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "* pos = i ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        6,
        1
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "* pos = i ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        1,
        2
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "* pos = i ;",
        "string s << endl ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        6,
        2
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "* pos = i ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "string s << endl ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "if ( s [ i ] = ' . ' )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "int n ;"
      ],
      "err_line": 6,
      "err_msg": "‘pos’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        3,
        6
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "int n ;",
        "* pos = i ;"
      ],
      "err_line": 6,
      "err_msg": "‘pos’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        3,
        6,
        1
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "int n ;",
        "* pos = i ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        3,
        6,
        2
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "int n ;",
        "* pos = i ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15,
        3,
        1
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "int n ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        3,
        1,
        2
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "int n ;",
        "string s << endl ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        3,
        2
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "int n ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15,
        6
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "* pos = i ;"
      ],
      "err_line": 6,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        6,
        1
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "* pos = i ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        6,
        1,
        2
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "* pos = i ;",
        "string s << endl ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        6,
        2
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "* pos = i ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        15,
        1
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        1,
        2
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "string s << endl ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        15,
        2
      ],
      "mod_code": [
        "s = s . substr ( 0 , pos . size ( ) ) ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "int n ;",
        "* pos = i ;"
      ],
      "err_line": 6,
      "err_msg": "‘pos’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        1
      ],
      "mod_code": [
        "int n ;",
        "* pos = i ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        6,
        1,
        2
      ],
      "mod_code": [
        "int n ;",
        "* pos = i ;",
        "string s << endl ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        6,
        2
      ],
      "mod_code": [
        "int n ;",
        "* pos = i ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "int n ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        1,
        2
      ],
      "mod_code": [
        "int n ;",
        "string s << endl ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int n ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "* pos = i ;",
        "string s << endl ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        1,
        2
      ],
      "mod_code": [
        "* pos = i ;",
        "string s << endl ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "* pos = i ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "string s << endl ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘<<’ token"
    }
  ]
}