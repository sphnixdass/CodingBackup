{
  "meta": {
    "index": 2665,
    "hitid": "33TGB4G0LPBEO42GSISTKHCISL5XTG",
    "workerid": "A1C5H6OY3HGO4U",
    "probid": "165A",
    "subid": "48950029"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x , k , l , p , q , r , s = integers with k , l , p , q , r and s all having value of 0",
      "code": "int x , k = 0 , l = 0 , p = 0 , q = 0 , r = 0 , s = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a , b = integer arrays of length x",
      "code": "int a [ x ] , b [ x ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to x exclusive read a [ i ] and b [ i ]",
      "code": "for ( int i = 0 ; i < x ; i ++ ) cin >> a [ i ] >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to x exclusive",
      "code": "for ( int i = 0 ; i < x ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to x exclusive",
      "code": "for ( int j = 0 ; j < x ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if i equals j continue",
      "code": "if ( i == j ) continue ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if a [ i ] is greater than a [ j ] and b [ i ] is equal to b [ j ] then add 1 to p",
      "code": "if ( ( a [ i ] > a [ j ] ) && ( b [ i ] == b [ j ] ) ) p ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if a [ i ] is less than a [ j ] and b [ i ] is equal to b [ j ] then add 1 to q",
      "code": "if ( ( a [ i ] < a [ j ] ) && ( b [ i ] == b [ j ] ) ) q ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if a [ i ] equals a [ j ] and b [ i ] is greater than b [ j ] then add 1 to r",
      "code": "if ( ( a [ i ] == a [ j ] ) && ( b [ i ] > b [ j ] ) ) r ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if a [ i ] equals a [ j ] and b [ i ] is less than b [ j ] then add 1 to s",
      "code": "if ( ( a [ i ] == a [ j ] ) && ( b [ i ] < b [ j ] ) ) s ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if p , q , r and s all greater than or equal 1 then add 1 to l",
      "code": "if ( p >= 1 && q >= 1 && r >= 1 && s >= 1 ) l ++ ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set p , q , r and s all to 0",
      "code": "p = 0 , q = 0 , r = 0 , s = 0 ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set k to 0",
      "code": "k = 0 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print l",
      "code": "cout << l << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q , r , s , s ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a [ x ] , a [ x ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [x]’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < x ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < x ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        13
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        14
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int p = 0 , q = 0 , r = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        3
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int p = 0 , q = 0 , r = 0 ;",
        "int a [ x ] , a [ x ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        14,
        2
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int p = 0 , q = 0 , r = 0 ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        3
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int a [ x ] , a [ x ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        3,
        2
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int a [ x ] , a [ x ] ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        3,
        14
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int a [ x ] , a [ x ] ;",
        "int p = 0 , q = 0 , s = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        2
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        2,
        14
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "x = getchar ( ) ;",
        "int p = 0 , q = 0 , s = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        13,
        14
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int p = 0 , q = 0 , s = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "int p = 0 , q = 0 , r = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        14,
        3
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "int p = 0 , q = 0 , r = 0 ;",
        "int a [ x ] , a [ x ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        14,
        3,
        2
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "int p = 0 , q = 0 , r = 0 ;",
        "int a [ x ] , a [ x ] ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        14,
        2
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "int p = 0 , q = 0 , r = 0 ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "int a [ x ] , a [ x ] ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        3,
        2
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "int a [ x ] , a [ x ] ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        3,
        2,
        14
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "int a [ x ] , a [ x ] ;",
        "x = getchar ( ) ;",
        "int p = 0 , q = 0 , s = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        3,
        14
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "int a [ x ] , a [ x ] ;",
        "int p = 0 , q = 0 , s = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        2,
        14
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "x = getchar ( ) ;",
        "int p = 0 , q = 0 , s = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int x , k , l , p = 0 , p = 0 , q = 0 , q = 0 , r , s ;",
        "int p = 0 , q = 0 , s = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        13,
        14,
        3
      ],
      "mod_code": [
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int p = 0 , q = 0 , r = 0 ;",
        "int a [ x ] , a [ x ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [x]’"
    },
    {
      "mod_line": [
        13,
        14,
        3,
        2
      ],
      "mod_code": [
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int p = 0 , q = 0 , r = 0 ;",
        "int a [ x ] , a [ x ] ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [x]’"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int a [ x ] , a [ x ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [x]’"
    },
    {
      "mod_line": [
        13,
        3,
        2
      ],
      "mod_code": [
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int a [ x ] , a [ x ] ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [x]’"
    },
    {
      "mod_line": [
        13,
        3,
        2,
        14
      ],
      "mod_code": [
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int a [ x ] , a [ x ] ;",
        "x = getchar ( ) ;",
        "int p = 0 , q = 0 , s = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [x]’"
    },
    {
      "mod_line": [
        13,
        3,
        14
      ],
      "mod_code": [
        "if ( ( p , q , r ) >= 1 && s >= 1 ) l ++ ;",
        "int a [ x ] , a [ x ] ;",
        "int p = 0 , q = 0 , s = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [x]’"
    },
    {
      "mod_line": [
        14,
        3
      ],
      "mod_code": [
        "int p = 0 , q = 0 , r = 0 ;",
        "int a [ x ] , a [ x ] ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [x]’"
    },
    {
      "mod_line": [
        14,
        3,
        2
      ],
      "mod_code": [
        "int p = 0 , q = 0 , r = 0 ;",
        "int a [ x ] , a [ x ] ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [x]’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "int a [ x ] , a [ x ] ;",
        "x = getchar ( ) ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [x]’"
    },
    {
      "mod_line": [
        3,
        2,
        14
      ],
      "mod_code": [
        "int a [ x ] , a [ x ] ;",
        "x = getchar ( ) ;",
        "int p = 0 , q = 0 , s = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [x]’"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "int a [ x ] , a [ x ] ;",
        "int p = 0 , q = 0 , s = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int a [x]’"
    }
  ]
}