{
  "meta": {
    "index": 69,
    "hitid": "3MQY1YVHS3EDR25247GFUXC09562BM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "412A",
    "subid": "20472314"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variables n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if n - k is less than k",
      "code": "if ( n - k < k )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare int variable cnt = k - 1",
      "code": "int cnt = k - 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "while cnt < length of str - 1",
      "code": "while ( cnt < str . size ( ) - 1 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print \" RIGHT \\ n \"",
      "code": "cout << \" RIGHT\\n \" ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "increment cnt by one",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "while cnt > = 0",
      "code": "while ( cnt >= 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print \" PRINT \" , str [ cnt ] and \" \\ n \"",
      "code": "cout << \" PRINT \" << str [ cnt ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if cnt ! = 0 , print \" LEFT \\ n \"",
      "code": "if ( cnt != 0 ) cout << \" LEFT\\n \" ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "decrement cnt by one",
      "code": "cnt -- ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 17,
      "text": "create integer cnt = k - 1",
      "code": "int cnt = k - 1 ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "while cnt > 0",
      "code": "while ( cnt > 0 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print \" LEFT \\ n \"",
      "code": "cout << \" LEFT\\n \" ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "decrement cnt",
      "code": "cnt -- ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "while cnt < length of str",
      "code": "while ( cnt < str . size ( ) )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print \" PRINT \" , str [ cnt ] and \" \\ n \"",
      "code": "cout << \" PRINT \" << str [ cnt ] << \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if cnt ! = length of str - 1 , print \" RIGHT \\ n \"",
      "code": "if ( cnt != str . size ( ) - 1 ) cout << \" RIGHT\\n \" ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "increment cnt by one",
      "code": "cnt ++ ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , x ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> k )"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string str << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << \" PRINT \" , str [ cnt ] << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "invalid operands of types ‘char’ and ‘const char [2]’ to binary ‘operator<<’"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "cout << \" PRINT \" , str [ cnt ] << \" \\n \" ;"
      ],
      "err_line": 23,
      "err_msg": "invalid operands of types ‘char’ and ‘const char [2]’ to binary ‘operator<<’"
    }
  ]
}