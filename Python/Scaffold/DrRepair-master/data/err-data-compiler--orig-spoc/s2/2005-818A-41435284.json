{
  "meta": {
    "index": 2005,
    "hitid": "3JUDR1D0D6L0V87RNPD5PM7ZV592Q0",
    "workerid": "A28TIENUWLMMIP",
    "probid": "818A",
    "subid": "41435284"
  },
  "lines": [
    {
      "line": 0,
      "text": "let N be a constant int and set it to 1e6 + 5",
      "code": "const int N = 1e6 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n and k be long long ints",
      "code": "long long n , k ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "define function valid which takes in long ling integers r as arguments",
      "code": "bool valid ( long long r )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "if r + r * k < = n / 2 then return true",
      "code": "if ( r + r * k <= n / 2 ) return 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "define function bs",
      "code": "long long bs ( )",
      "indent": 0
    },
    {
      "line": 7,
      "text": "let s , e , and mid be long long integers , set s to 0 and set e to 1e12 / k",
      "code": "long long s = 0 , e = 1e12 / k , mid ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while s is less than e",
      "code": "while ( s < e )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "set mid to ( s + e + 1 ) / 2",
      "code": "mid = ( s + e + 1 ) / 2 ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if valid ( mid ) is true",
      "code": "if ( valid ( mid ) )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set s to mid",
      "code": "s = mid ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set e to mid - 1",
      "code": "e = mid - 1 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "return s",
      "code": "return s ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 18,
      "text": "let ans be a long long int",
      "code": "long long ans ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "read in n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "set ans to bs ( )",
      "code": "ans = bs ( ) ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print ans and ans * k and n - ( ans + ans * k ) and a newline",
      "code": "cout << ans << \" \" << ans * k << \" \" << n - ( ans + ans * k ) << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "void valid ( long long r )"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "void bs ( )"
      ],
      "err_line": 15,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "void valid ( long long ling )"
      ],
      "err_line": 3,
      "err_msg": "‘r’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "void bs ( ) { }"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "int ans = bs ( ) ;"
      ],
      "err_line": 20,
      "err_msg": "conflicting declaration ‘int ans’"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "void valid ( long long r )",
        "void bs ( )"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        21
      ],
      "mod_code": [
        "void valid ( long long r )",
        "void bs ( )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        21,
        19
      ],
      "mod_code": [
        "void valid ( long long r )",
        "void bs ( )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "cin >> n >> n ;"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        21,
        10
      ],
      "mod_code": [
        "void valid ( long long r )",
        "void bs ( )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "if ( ! valid ( mid ) )"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        19
      ],
      "mod_code": [
        "void valid ( long long r )",
        "void bs ( )",
        "cin >> n >> n ;"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        19,
        10
      ],
      "mod_code": [
        "void valid ( long long r )",
        "void bs ( )",
        "cin >> n >> n ;",
        "if ( ! valid ( mid ) )"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6,
        10
      ],
      "mod_code": [
        "void valid ( long long r )",
        "void bs ( )",
        "if ( ! valid ( mid ) )"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21
      ],
      "mod_code": [
        "void valid ( long long r )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        19
      ],
      "mod_code": [
        "void valid ( long long r )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "cin >> n >> n ;"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        19,
        10
      ],
      "mod_code": [
        "void valid ( long long r )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "cin >> n >> n ;",
        "if ( ! valid ( mid ) )"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        19,
        6
      ],
      "mod_code": [
        "void valid ( long long r )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "cin >> n >> n ;",
        "void bs ( ) { }"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        10
      ],
      "mod_code": [
        "void valid ( long long r )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "if ( ! valid ( mid ) )"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        10,
        6
      ],
      "mod_code": [
        "void valid ( long long r )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "if ( ! valid ( mid ) )",
        "void bs ( ) { }"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        21,
        6
      ],
      "mod_code": [
        "void valid ( long long r )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "void bs ( ) { }"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "void valid ( long long r )",
        "cin >> n >> n ;"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        10
      ],
      "mod_code": [
        "void valid ( long long r )",
        "cin >> n >> n ;",
        "if ( ! valid ( mid ) )"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        10,
        6
      ],
      "mod_code": [
        "void valid ( long long r )",
        "cin >> n >> n ;",
        "if ( ! valid ( mid ) )",
        "void bs ( ) { }"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        6
      ],
      "mod_code": [
        "void valid ( long long r )",
        "cin >> n >> n ;",
        "void bs ( ) { }"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "void valid ( long long r )",
        "if ( ! valid ( mid ) )"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        6
      ],
      "mod_code": [
        "void valid ( long long r )",
        "if ( ! valid ( mid ) )",
        "void bs ( ) { }"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "void valid ( long long r )",
        "void bs ( ) { }"
      ],
      "err_line": 3,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        21
      ],
      "mod_code": [
        "void bs ( )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;"
      ],
      "err_line": 15,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        21,
        19
      ],
      "mod_code": [
        "void bs ( )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "cin >> n >> n ;"
      ],
      "err_line": 15,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        21,
        19,
        10
      ],
      "mod_code": [
        "void bs ( )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "cin >> n >> n ;",
        "if ( ! valid ( mid ) )"
      ],
      "err_line": 15,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        21,
        10
      ],
      "mod_code": [
        "void bs ( )",
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "if ( ! valid ( mid ) )"
      ],
      "err_line": 15,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        19
      ],
      "mod_code": [
        "void bs ( )",
        "cin >> n >> n ;"
      ],
      "err_line": 15,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        19,
        10
      ],
      "mod_code": [
        "void bs ( )",
        "cin >> n >> n ;",
        "if ( ! valid ( mid ) )"
      ],
      "err_line": 15,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "void bs ( )",
        "if ( ! valid ( mid ) )"
      ],
      "err_line": 15,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        21,
        19,
        10,
        6
      ],
      "mod_code": [
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "cin >> n >> n ;",
        "if ( ! valid ( mid ) )",
        "void bs ( ) { }"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        19,
        6
      ],
      "mod_code": [
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "cin >> n >> n ;",
        "void bs ( ) { }"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        10,
        6
      ],
      "mod_code": [
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "if ( ! valid ( mid ) )",
        "void bs ( ) { }"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        6
      ],
      "mod_code": [
        "cout << ans << \" \" << ans * ( ans + ans * k ) - ( ans + ans * k ) << endl ;",
        "void bs ( ) { }"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        10,
        6
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "if ( ! valid ( mid ) )",
        "void bs ( ) { }"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        6
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "void bs ( ) { }"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        6
      ],
      "mod_code": [
        "if ( ! valid ( mid ) )",
        "void bs ( ) { }"
      ],
      "err_line": 7,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}