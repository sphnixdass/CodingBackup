{
  "meta": {
    "index": 45,
    "hitid": "3YO4AH2FPDETZY4D829R6YEKY7L0QA",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "63A",
    "subid": "43649879"
  },
  "lines": [
    {
      "line": 0,
      "text": "constant long long integers N = 1e4 + 5 , M = 2e4 + 5 , OO = 0x3f3f3f3f",
      "code": "const long long N = 1e4 + 5 , M = 2e4 + 5 , OO = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "const double eps = 1e - 6",
      "code": "const double eps = 1e-6 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "integers = n",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "s1 , s2 = string",
      "code": "string s1 , s2 ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create string vector of captain , rat , child , man",
      "code": "vector < string > captain , rat , child , man ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to less than n do the following",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read s1 , s2",
      "code": "cin >> s1 >> s2 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "if s2 is rat then do the following",
      "code": "if ( s2 == \" rat \" )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "add new element s1 to end of vector rat",
      "code": "rat . push_back ( s1 ) ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if s2 is woman or s2 is child then do the following",
      "code": "else if ( s2 == \" woman \" || s2 == \" child \" )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "add new element s1 to end of vector child",
      "code": "child . push_back ( s1 ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else if s2 is man then do the following",
      "code": "else if ( s2 == \" man \" )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "add new element s1 to end of vector man",
      "code": "man . push_back ( s1 ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 16,
      "text": "add new element s1 to end of vector captain",
      "code": "captain . push_back ( s1 ) ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "for i = 0 to less than rat . size ( ) do the following",
      "code": "for ( int i = 0 ; i < rat . size ( ) ; ++ i ) cout << rat [ i ] << endl ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for j = 0 to less than child . size ( ) do the following",
      "code": "for ( int j = 0 ; j < child . size ( ) ; ++ j ) cout << child [ j ] << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "for m = 0 to less than man . size ( ) do the following",
      "code": "for ( int m = 0 ; m < man . size ( ) ; m ++ ) cout << man [ m ] << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "for k = 0 to less than captain . size ( ) do the following",
      "code": "for ( int k = 0 ; k < captain . size ( ) ; ++ k ) cout << captain [ k ] << endl ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( s2 == rat )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else if ( s2 == man )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string s1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘s2’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "vector < string > captain ( rat , rat , man ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘rat’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "rat . end ( s1 ) ;"
      ],
      "err_line": 10,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::end(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else if ( s2 == ' woman ' || s2 == ' child ' )"
      ],
      "err_line": 11,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘int’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "child . end ( s1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::end(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else if ( ( s2 == man ) )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "man . end ( s1 ) ;"
      ],
      "err_line": 14,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::end(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "captain . end ( s1 ) ;"
      ],
      "err_line": 16,
      "err_msg": "no matching function for call to ‘std::vector<std::__cxx11::basic_string<char> >::end(std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "for ( m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 20,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 21,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        13
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        18
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        19
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        20
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        13,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        18
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        19
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        20
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        18,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        19
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        20
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        19,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        20
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        20,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        11,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == woman || s2 == child )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == man )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        13,
        18
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        19
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        20
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        13,
        18,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        13,
        19
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == man )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        20
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == man )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        13,
        19,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == man )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        13,
        20
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == man )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        13,
        20,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == man )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        13,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "else if ( s2 == man )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        18,
        19
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        18,
        19,
        20
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        18,
        19,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        18,
        20
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        18,
        20,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        18,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        19
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        19,
        20
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        19,
        20,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        19,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        20
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        20,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "if ( s2 == rat )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        18
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        19
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        20
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        18,
        21
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        19
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        20
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        19,
        21
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        20
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        20,
        21
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        13,
        21
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "else if ( s2 == man )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        19
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        19,
        20
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        19,
        21
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        20
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        20,
        21
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        21
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        20
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        20,
        21
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        21
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        20,
        21
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        21
      ],
      "mod_code": [
        "else if ( s2 == woman || s2 == child )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘woman’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        18,
        19
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        20
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        18,
        19,
        21
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        18,
        20
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        18,
        20,
        21
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        18,
        21
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int i = 0 ; i < rat . size ( ) ; i ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        19
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        19,
        20
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        19,
        20,
        21
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        19,
        21
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int j = 0 ; j < child . size ( ) ; j ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        20,
        21
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int m = 0 ; m < man . size ( ) ; m ++ )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    },
    {
      "mod_line": [
        13,
        21
      ],
      "mod_code": [
        "else if ( s2 == man )",
        "for ( int k = 0 ; k < captain . size ( ) ; k ++ )"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator==’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::vector<std::__cxx11::basic_string<char> >’)"
    }
  ]
}