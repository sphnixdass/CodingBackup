{
  "meta": {
    "index": 629,
    "hitid": "33EEIIWHK719SZ5TBZXGRR4ARG3QVM",
    "workerid": "A1APYLD4DUK33J",
    "probid": "817A",
    "subid": "48403200"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers x1 , y1 , x2 , y2",
      "code": "int x1 , y1 , x2 , y2 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x1 read y1 read x2 read y2",
      "code": "cin >> x1 >> y1 >> x2 >> y2 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integers x , y , with x = absolute value of ( x2 - x1 ) , y = absolute value of ( y2 - y1 )",
      "code": "int x = abs ( x2 - x1 ) , y = abs ( y2 - y1 ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integers dx , dy",
      "code": "int dx , dy ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read dx read dy",
      "code": "cin >> dx >> dy ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if x % dx or y % dy or ( x / dx + y / dy ) % 2",
      "code": "if ( x % dx || y % dy || ( x / dx + y / dy ) % 2 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "print \" NO \" print newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print \" YES \" print newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [4]’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        8
      ],
      "mod_code": [
        "x1 >> x1 >> y1 >> x2 >> y2 ;",
        "int x = abs ( x2 - x1 ) , y = y % ( y2 - y1 ) ;",
        "dx >> dx >> dy ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        4
      ],
      "mod_code": [
        "x1 >> x1 >> y1 >> x2 >> y2 ;",
        "int x = abs ( x2 - x1 ) , y = y % ( y2 - y1 ) ;",
        "dx >> dx >> dy ;",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [4]’ and ‘int [4]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        3,
        8
      ],
      "mod_code": [
        "x1 >> x1 >> y1 >> x2 >> y2 ;",
        "int x = abs ( x2 - x1 ) , y = y % ( y2 - y1 ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3,
        8,
        4
      ],
      "mod_code": [
        "x1 >> x1 >> y1 >> x2 >> y2 ;",
        "int x = abs ( x2 - x1 ) , y = y % ( y2 - y1 ) ;",
        "n",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [4]’)"
    },
    {
      "mod_line": [
        2,
        3,
        4
      ],
      "mod_code": [
        "x1 >> x1 >> y1 >> x2 >> y2 ;",
        "int x = abs ( x2 - x1 ) , y = y % ( y2 - y1 ) ;",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [4]’)"
    },
    {
      "mod_line": [
        2,
        5,
        8
      ],
      "mod_code": [
        "x1 >> x1 >> y1 >> x2 >> y2 ;",
        "dx >> dx >> dy ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        8,
        4
      ],
      "mod_code": [
        "x1 >> x1 >> y1 >> x2 >> y2 ;",
        "dx >> dx >> dy ;",
        "n",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [4]’ and ‘int [4]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        5,
        4
      ],
      "mod_code": [
        "x1 >> x1 >> y1 >> x2 >> y2 ;",
        "dx >> dx >> dy ;",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [4]’ and ‘int [4]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "x1 >> x1 >> y1 >> x2 >> y2 ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8,
        4
      ],
      "mod_code": [
        "x1 >> x1 >> y1 >> x2 >> y2 ;",
        "n",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [4]’)"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "x1 >> x1 >> y1 >> x2 >> y2 ;",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [4]’)"
    },
    {
      "mod_line": [
        3,
        5,
        8
      ],
      "mod_code": [
        "int x = abs ( x2 - x1 ) , y = y % ( y2 - y1 ) ;",
        "dx >> dx >> dy ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        5,
        8,
        4
      ],
      "mod_code": [
        "int x = abs ( x2 - x1 ) , y = y % ( y2 - y1 ) ;",
        "dx >> dx >> dy ;",
        "n",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [4]’ and ‘int [4]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        5,
        4
      ],
      "mod_code": [
        "int x = abs ( x2 - x1 ) , y = y % ( y2 - y1 ) ;",
        "dx >> dx >> dy ;",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [4]’ and ‘int [4]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "int x = abs ( x2 - x1 ) , y = y % ( y2 - y1 ) ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8,
        4
      ],
      "mod_code": [
        "int x = abs ( x2 - x1 ) , y = y % ( y2 - y1 ) ;",
        "n",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [4]’)"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "int x = abs ( x2 - x1 ) , y = y % ( y2 - y1 ) ;",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [4]’)"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "dx >> dx >> dy ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        8,
        4
      ],
      "mod_code": [
        "dx >> dx >> dy ;",
        "n",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [4]’ and ‘int [4]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "dx >> dx >> dy ;",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [4]’ and ‘int [4]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "n",
        "int dx [ 4 ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int [4]’)"
    }
  ]
}