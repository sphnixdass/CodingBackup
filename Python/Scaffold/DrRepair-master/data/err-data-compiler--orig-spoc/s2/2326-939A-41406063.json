{
  "meta": {
    "index": 2326,
    "hitid": "307L9TDWJYM4DTQIBXZT42HMW8N3NQ",
    "workerid": "A1APYLD4DUK33J",
    "probid": "939A",
    "subid": "41406063"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integers num , a , b , c , ct , integer array ar size 10000",
      "code": "int num , ar [ 10000 ] , a , b , c , ct ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while read num is true",
      "code": "while ( cin >> num )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let ct be 0",
      "code": "ct = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "for i = 0 to num exclusive , read ar [ i ]",
      "code": "for ( int i = 0 ; i < num ; i ++ ) { cin >> ar [ i ] ; }",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 0 to num exclusive",
      "code": "for ( int i = 0 ; i < num ; i ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "let a be ar [ i ]",
      "code": "a = ar [ i ] ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "let b be ar [ a - 1 ]",
      "code": "b = ar [ a - 1 ] ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "let c be ar [ b - 1 ]",
      "code": "c = ar [ b - 1 ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if i is c - 1",
      "code": "if ( i == c - 1 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "let ct be 1",
      "code": "ct = 1 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "end loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if ct is 1",
      "code": "if ( ct == 1 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "print \" YES \" and newline",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print \" NO \" and newline",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < num ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "end ;"
      ],
      "err_line": 11,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 16,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "b = ar [ j - 1 ] ;"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        14
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "b = ar [ j - 1 ] ;",
        "if ( ! ct )"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        14,
        5
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "b = ar [ j - 1 ] ;",
        "if ( ! ct )",
        "for ( i = 0 ; i < num ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        14,
        11
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "b = ar [ j - 1 ] ;",
        "if ( ! ct )",
        "end ;"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        14,
        2
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "b = ar [ j - 1 ] ;",
        "if ( ! ct )",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        7,
        5
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "b = ar [ j - 1 ] ;",
        "for ( i = 0 ; i < num ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        5,
        11
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "b = ar [ j - 1 ] ;",
        "for ( i = 0 ; i < num ; i ++ )",
        "end ;"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        5,
        2
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "b = ar [ j - 1 ] ;",
        "for ( i = 0 ; i < num ; i ++ )",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        7,
        11
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "b = ar [ j - 1 ] ;",
        "end ;"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7,
        11,
        2
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "b = ar [ j - 1 ] ;",
        "end ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        7,
        2
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "b = ar [ j - 1 ] ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "if ( ! ct )"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        5
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "if ( ! ct )",
        "for ( i = 0 ; i < num ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        5,
        11
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "if ( ! ct )",
        "for ( i = 0 ; i < num ; i ++ )",
        "end ;"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        5,
        2
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "if ( ! ct )",
        "for ( i = 0 ; i < num ; i ++ )",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14,
        11
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "if ( ! ct )",
        "end ;"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        14,
        11,
        2
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "if ( ! ct )",
        "end ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14,
        2
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "if ( ! ct )",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "for ( i = 0 ; i < num ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        11
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "for ( i = 0 ; i < num ; i ++ )",
        "end ;"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        5,
        11,
        2
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "for ( i = 0 ; i < num ; i ++ )",
        "end ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        5,
        2
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "for ( i = 0 ; i < num ; i ++ )",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "end ;"
      ],
      "err_line": 3,
      "err_msg": "‘ct’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        11,
        2
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "end ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int num , a , b , c [ 10000 ] , ar [ 10000 ] ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "if ( ! ct )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        5
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "if ( ! ct )",
        "for ( i = 0 ; i < num ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        14,
        5,
        11
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "if ( ! ct )",
        "for ( i = 0 ; i < num ; i ++ )",
        "end ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        14,
        5,
        2
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "if ( ! ct )",
        "for ( i = 0 ; i < num ; i ++ )",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        14,
        11
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "if ( ! ct )",
        "end ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        14,
        11,
        2
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "if ( ! ct )",
        "end ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        14,
        2
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "if ( ! ct )",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "for ( i = 0 ; i < num ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5,
        11
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "for ( i = 0 ; i < num ; i ++ )",
        "end ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5,
        11,
        2
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "for ( i = 0 ; i < num ; i ++ )",
        "end ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5,
        2
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "for ( i = 0 ; i < num ; i ++ )",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "end ;"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        11,
        2
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "end ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "b = ar [ j - 1 ] ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        5
      ],
      "mod_code": [
        "if ( ! ct )",
        "for ( i = 0 ; i < num ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        5,
        11
      ],
      "mod_code": [
        "if ( ! ct )",
        "for ( i = 0 ; i < num ; i ++ )",
        "end ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        5,
        11,
        2
      ],
      "mod_code": [
        "if ( ! ct )",
        "for ( i = 0 ; i < num ; i ++ )",
        "end ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        5,
        2
      ],
      "mod_code": [
        "if ( ! ct )",
        "for ( i = 0 ; i < num ; i ++ )",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        11
      ],
      "mod_code": [
        "if ( ! ct )",
        "end ;"
      ],
      "err_line": 11,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        11,
        2
      ],
      "mod_code": [
        "if ( ! ct )",
        "end ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "if ( ! ct )",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "for ( i = 0 ; i < num ; i ++ )",
        "end ;"
      ],
      "err_line": 5,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        11,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < num ; i ++ )",
        "end ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < num ; i ++ )",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "end ;",
        "while ( gets ( num ) )"
      ],
      "err_line": 2,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    }
  ]
}