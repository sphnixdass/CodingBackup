{
  "meta": {
    "index": 480,
    "hitid": "37AQKJ12TXI77NTWN8RWVERCFPNTTZ",
    "workerid": "A1MJVTR0PCKBWW",
    "probid": "261A",
    "subid": "44051413"
  },
  "lines": [
    {
      "line": 0,
      "text": "integer as m , n , q size 200000 , a size 200000 , ans",
      "code": "int m , n , q [ 200000 ] , a [ 200000 ] , ans ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 0 to less than m input q array",
      "code": "for ( int i = 0 ; i < m ; i ++ ) cin >> q [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to less than n input a array",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "sort the values of a to a + n",
      "code": "sort ( a , a + n ) ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "sort the values of q to q + m",
      "code": "sort ( q , q + m ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "set ans to 0",
      "code": "ans = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "integer as total = 0",
      "code": "int total = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = n - 1 to greater than or equal to 0 do the following",
      "code": "for ( int i = n - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if total is less than q [ 0 ] then do the following",
      "code": "if ( total < q [ 0 ] )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "ans equals ans plus a [ i ]",
      "code": "ans += a [ i ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "add one to total",
      "code": "total ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 15,
      "text": "set total to 0",
      "code": "total = 0 ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "minus 1 from i",
      "code": "i -- ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "output ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "sort ( a + a + n ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "sort ( q + q + m ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "while ( total < q [ 0 ] )"
      ],
      "err_line": 14,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        15
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "int total = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        15,
        4
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "int total = 0 ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        15,
        4,
        7
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "int total = 0 ;",
        "n = getchar ( ) ;",
        "sort ( q + q + m ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        15,
        4,
        10
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "int total = 0 ;",
        "n = getchar ( ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        15,
        4,
        14
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "int total = 0 ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        15,
        7
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "int total = 0 ;",
        "sort ( q + q + m ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        15,
        7,
        10
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "int total = 0 ;",
        "sort ( q + q + m ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        15,
        7,
        14
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "int total = 0 ;",
        "sort ( q + q + m ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        15,
        10
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "int total = 0 ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        15,
        10,
        14
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "int total = 0 ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        15,
        14
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "int total = 0 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        4,
        7
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "n = getchar ( ) ;",
        "sort ( q + q + m ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        4,
        7,
        10
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "n = getchar ( ) ;",
        "sort ( q + q + m ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        4,
        7,
        14
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "n = getchar ( ) ;",
        "sort ( q + q + m ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        4,
        10
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "n = getchar ( ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        4,
        10,
        14
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "n = getchar ( ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        4,
        14
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "sort ( q + q + m ) ;"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        7,
        10
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "sort ( q + q + m ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        7,
        10,
        14
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "sort ( q + q + m ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        7,
        14
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "sort ( q + q + m ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        10,
        14
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "int m , n , q [ 200000 ] , a [ 200000 , ans ] ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "expected ‘]’ before ‘,’ token"
    },
    {
      "mod_line": [
        15,
        4,
        7
      ],
      "mod_code": [
        "int total = 0 ;",
        "n = getchar ( ) ;",
        "sort ( q + q + m ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        4,
        7,
        10
      ],
      "mod_code": [
        "int total = 0 ;",
        "n = getchar ( ) ;",
        "sort ( q + q + m ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        4,
        7,
        14
      ],
      "mod_code": [
        "int total = 0 ;",
        "n = getchar ( ) ;",
        "sort ( q + q + m ) ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        4,
        10
      ],
      "mod_code": [
        "int total = 0 ;",
        "n = getchar ( ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        4,
        10,
        14
      ],
      "mod_code": [
        "int total = 0 ;",
        "n = getchar ( ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        4,
        14
      ],
      "mod_code": [
        "int total = 0 ;",
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        7
      ],
      "mod_code": [
        "int total = 0 ;",
        "sort ( q + q + m ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        7,
        10
      ],
      "mod_code": [
        "int total = 0 ;",
        "sort ( q + q + m ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        7,
        10,
        14
      ],
      "mod_code": [
        "int total = 0 ;",
        "sort ( q + q + m ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )",
        "n"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        7,
        14
      ],
      "mod_code": [
        "int total = 0 ;",
        "sort ( q + q + m ) ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "int total = 0 ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        10,
        14
      ],
      "mod_code": [
        "int total = 0 ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "int total = 0 ;",
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "sort ( q + q + m ) ;"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        4,
        7,
        10
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "sort ( q + q + m ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        4,
        7,
        10,
        14
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "sort ( q + q + m ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )",
        "n"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        4,
        7,
        14
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "sort ( q + q + m ) ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        10,
        14
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        7,
        10
      ],
      "mod_code": [
        "sort ( q + q + m ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        10,
        14
      ],
      "mod_code": [
        "sort ( q + q + m ) ;",
        "for ( i = n - 1 ; i >= 0 ; i -- )",
        "n"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        7,
        14
      ],
      "mod_code": [
        "sort ( q + q + m ) ;",
        "n"
      ],
      "err_line": 7,
      "err_msg": "invalid operands of types ‘int [200000]’ and ‘int [200000]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        10,
        14
      ],
      "mod_code": [
        "for ( i = n - 1 ; i >= 0 ; i -- )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}