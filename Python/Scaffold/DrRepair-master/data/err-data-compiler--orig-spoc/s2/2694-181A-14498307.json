{
  "meta": {
    "index": 2694,
    "hitid": "3PA41K45VNYMHX3ITOFBL8YX02C7PM",
    "workerid": "AIWEXPJAU66D9",
    "probid": "181A",
    "subid": "14498307"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer array l with 105 elements",
      "code": "int l [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer array c with 105 elements",
      "code": "int c [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "declare integers n and m",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "create character tmp",
      "code": "char tmp ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "read tmp",
      "code": "cin >> tmp ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if tmp = ' * '",
      "code": "if ( tmp == ' * ' )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment l [ i ]",
      "code": "l [ i ] ++ ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "increment c [ j ]",
      "code": "c [ j ] ++ ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "declare integer variables resL and resC = 0",
      "code": "int resL = 0 , resC = 0 ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": ";",
      "indent": 1
    },
    {
      "line": 17,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if l [ i ] = 1",
      "code": "if ( l [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "assign value of i to resL",
      "code": "resL = i ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "for i = 0 to m exclusive",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 24,
      "text": "if c [ i ] = 1",
      "code": "if ( c [ i ] == 1 )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "set resC to i",
      "code": "resC = i ;",
      "indent": 3
    },
    {
      "line": 26,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print resL + 1 , \" \" and resC + 1",
      "code": "cout << resL + 1 << \" \" << resC + 1 << endl ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "l [ 105 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘l’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "c [ 105 ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int n m , m ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘m’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "tmp ;"
      ],
      "err_line": 7,
      "err_msg": "‘tmp’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 26,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        29
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << resL + 1 << \" \" << resC + 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        29,
        23
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        29,
        24
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        29,
        5
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        23
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        23,
        24
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        23,
        5
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        24
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        24,
        5
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( c [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "cout << resL + 1 << \" \" << resC + 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        23
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        23,
        24
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        23,
        5
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        24
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        24,
        5
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "if ( c [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        29,
        5
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        23
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        23,
        24
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        23,
        24,
        5
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( c [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        23,
        5
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        24
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        24,
        5
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "if ( c [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "c [ 105 ] ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ does not name a type"
    },
    {
      "mod_line": [
        6,
        29
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << resL + 1 << \" \" << resC + 1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29,
        23
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29,
        23,
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29,
        23,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29,
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29,
        24,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "if ( c [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        29,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        23
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        23,
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        23,
        24,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( c [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        23,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        24
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        24,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "if ( c [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        23
      ],
      "mod_code": [
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        23,
        24
      ],
      "mod_code": [
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        23,
        24,
        5
      ],
      "mod_code": [
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( c [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        23,
        5
      ],
      "mod_code": [
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        24,
        5
      ],
      "mod_code": [
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "if ( c [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        5
      ],
      "mod_code": [
        "cout << resL + 1 << \" \" << resC + 1 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        24
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( c [ i ] == ' 1 ' )"
      ],
      "err_line": 23,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23,
        24,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "if ( c [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        23,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        5
      ],
      "mod_code": [
        "if ( c [ i ] == ' 1 ' )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}