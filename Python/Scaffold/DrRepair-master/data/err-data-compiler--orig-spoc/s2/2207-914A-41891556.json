{
  "meta": {
    "index": 2207,
    "hitid": "3EPG8DX9LKK7UTPZ5V0ENOK1AJBP5U",
    "workerid": "A121O0X5UNK37S",
    "probid": "914A",
    "subid": "41891556"
  },
  "lines": [
    {
      "line": 0,
      "text": "let t be integer",
      "code": "int t ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a be integer array with length 1005",
      "code": "int a [ 1005 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "function cmp with integer argument a and b returns boolean",
      "code": "bool cmp ( int a , int b )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "return a greater than b",
      "code": "return a > b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 1 to t inclusive read i element of array a",
      "code": "for ( int i = 1 ; i <= t ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 8,
      "text": "call sort function on a + 1 , a + 1 + t , and cmp",
      "code": "sort ( a + 1 , a + 1 + t , cmp ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 1 to t inclusive",
      "code": "for ( int i = 1 ; i <= t ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) is not equal to i element of array a",
      "code": "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a [ i ] )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print i element of array a",
      "code": "cout << a [ i ] << endl ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘i’ in ‘a’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "t = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int * a [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(int, int*, bool (&)(int, int))’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i )"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘i’ in ‘a’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "sort ( + 1 , a + 1 + t , cmp ) ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(int, int*, bool (&)(int, int))’"
    },
    {
      "mod_line": [
        10,
        8,
        0
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "t = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        10,
        8,
        0,
        1
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "t = 0 ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        10,
        8,
        0,
        11
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "t = 0 ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        10,
        8,
        0,
        9
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "t = 0 ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        10,
        8,
        1
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        8,
        1,
        11
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "int * a [ 1005 ] ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        8,
        1,
        9
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "int * a [ 1005 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        8,
        11
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(int, int*, bool (&)(int, int))’"
    },
    {
      "mod_line": [
        10,
        8,
        11,
        9
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "cout << a [ i ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(int, int*, bool (&)(int, int))’"
    },
    {
      "mod_line": [
        10,
        8,
        9
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(int, int*, bool (&)(int, int))’"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "t = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0,
        1
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "t = 0 ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0,
        1,
        11
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "t = 0 ;",
        "int * a [ 1005 ] ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0,
        1,
        9
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "t = 0 ;",
        "int * a [ 1005 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0,
        11
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "t = 0 ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0,
        11,
        9
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "t = 0 ;",
        "cout << a [ i ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        10,
        0,
        9
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "t = 0 ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        10,
        1
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        1,
        11
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "int * a [ 1005 ] ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        1,
        11,
        9
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "int * a [ 1005 ] ;",
        "cout << a [ i ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        1,
        9
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "int * a [ 1005 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        11
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "request for member ‘i’ in ‘a’, which is of non-class type ‘int [1005]’"
    },
    {
      "mod_line": [
        10,
        11,
        9
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "cout << a [ i ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "if ( ( int ) sqrt ( a [ i ] ) * ( int ) sqrt ( a [ i ] ) != a . i ) ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "t = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        8,
        0,
        1
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "t = 0 ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        8,
        0,
        1,
        11
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "t = 0 ;",
        "int * a [ 1005 ] ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        8,
        0,
        1,
        9
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "t = 0 ;",
        "int * a [ 1005 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        8,
        0,
        11
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "t = 0 ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        8,
        0,
        11,
        9
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "t = 0 ;",
        "cout << a [ i ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        8,
        0,
        9
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "t = 0 ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        1,
        11
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "int * a [ 1005 ] ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        1,
        11,
        9
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "int * a [ 1005 ] ;",
        "cout << a [ i ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        1,
        9
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "int * a [ 1005 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(int, int*, bool (&)(int, int))’"
    },
    {
      "mod_line": [
        8,
        11,
        9
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "cout << a [ i ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(int, int*, bool (&)(int, int))’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "sort ( + 1 , a + 1 + t , cmp ) ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "no matching function for call to ‘sort(int, int*, bool (&)(int, int))’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "t = 0 ;",
        "int * a [ 1005 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        11
      ],
      "mod_code": [
        "t = 0 ;",
        "int * a [ 1005 ] ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        11,
        9
      ],
      "mod_code": [
        "t = 0 ;",
        "int * a [ 1005 ] ;",
        "cout << a [ i ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        9
      ],
      "mod_code": [
        "t = 0 ;",
        "int * a [ 1005 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "t = 0 ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        0,
        11,
        9
      ],
      "mod_code": [
        "t = 0 ;",
        "cout << a [ i ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "t = 0 ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘t’ does not name a type"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "int * a [ 1005 ] ;",
        "cout << a [ i ] ;"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        1,
        11,
        9
      ],
      "mod_code": [
        "int * a [ 1005 ] ;",
        "cout << a [ i ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int * a [ 1005 ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "cout << a [ i ] ;",
        "for ( i = 1 ; i <= t ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}