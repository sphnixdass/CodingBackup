{
  "meta": {
    "index": 975,
    "hitid": "3OJX0UFJ0Z13NLZ7P7CP9AC239S9UW",
    "workerid": "AIWEXPJAU66D9",
    "probid": "778A",
    "subid": "49098724"
  },
  "lines": [
    {
      "line": 0,
      "text": "create constant integers maxn with value 2e5 + 7 and maxm with value 2e6 + 10",
      "code": "const int maxn = 2e5 + 7 , maxm = 2e6 + 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create constant integer INF with value 0x3f3f3f3f",
      "code": "const int INF = 0x3f3f3f3f ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create constant integer mod with value 1e9 + 7",
      "code": "const int mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create constant integer PI with value acos ( - 1 . 0 )",
      "code": "const double PI = acos ( - 1.0 ) ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "declare integers casn , n , m and k",
      "code": "int casn , n , m , k ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare integer array x with size maxn",
      "code": "int x [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "declare strings a and b",
      "code": "string a , b ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare integer array vis with size maxn",
      "code": "int vis [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 8,
      "text": "function check with integer argument mid that returns integer",
      "code": "int check ( int mid )",
      "indent": 0
    },
    {
      "line": 9,
      "text": "call memset with arguments vis , 0 and sizeof vis",
      "code": "memset ( vis , 0 , sizeof vis ) ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "for i = 0 to mid - 1 inclusive set vis [ x [ i ] ] to 1",
      "code": "for ( int i = 0 ; i <= mid - 1 ; ++ i ) vis [ x [ i ] ] = 1 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "declare integer pos = 0",
      "code": "int pos = 0 ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for integer i = 0 to n - 1 inclusive",
      "code": "for ( int i = 0 ; i <= n - 1 ; ++ i )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if vis [ i ] , continue",
      "code": "if ( vis [ i ] ) continue ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if a [ i ] = b [ pos ] , increment pos",
      "code": "if ( a [ i ] == b [ pos ] ) pos ++ ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if pos = m return 1",
      "code": "if ( pos == m ) return 1 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 20,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "n = size of a , m = size of b",
      "code": "n = a . size ( ) , m = b . size ( ) ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for i = 0 to n - 1 inclusive , read x [ i ] , decrement x [ i ]",
      "code": "for ( int i = 0 ; i <= n - 1 ; ++ i ) cin >> x [ i ] , x [ i ] -- ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "integer variables l = 0 and r = n",
      "code": "int l = 0 , r = n ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "create integer ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "while l is less than r",
      "code": "while ( l < r )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "create integer mid = ( l + r ) > > 1",
      "code": "int mid = ( l + r ) >> 1 ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "if check ( mid )",
      "code": "if ( check ( mid ) )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "set ans = mid , l = mid + 1",
      "code": "ans = mid , l = mid + 1 ;",
      "indent": 3
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 30,
      "text": "set r to mid",
      "code": "r = mid ;",
      "indent": 3
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 32,
      "text": "print ans and ' \\ n '",
      "code": "cout << ans << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int maxn = 2e5 + 7 + maxm = 2e6 + 10 ;"
      ],
      "err_line": 0,
      "err_msg": "‘maxm’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "const int PI = acos ( - constant ) ;"
      ],
      "err_line": 3,
      "err_msg": "‘constant’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int s [ maxn ] ;"
      ],
      "err_line": 10,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int a [ maxn ] ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int a [200007]’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int check ( int mid ) ;"
      ],
      "err_line": 9,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "pos = 0 ;"
      ],
      "err_line": 11,
      "err_msg": "‘pos’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 24,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 30,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        28,
        23,
        6
      ],
      "mod_code": [
        "int n = a . size ( ) , m = b . size ( ) ;",
        "int ans = mid , l = mid + 1 ;",
        "int l = 0 , r = 0 ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        21,
        28,
        13,
        6
      ],
      "mod_code": [
        "int n = a . size ( ) , m = b . size ( ) ;",
        "int ans = mid , l = mid + 1 ;",
        "if ( ! vis [ i ] ) continue ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        21,
        28,
        20,
        6
      ],
      "mod_code": [
        "int n = a . size ( ) , m = b . size ( ) ;",
        "int ans = mid , l = mid + 1 ;",
        "cin >> n >> b ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        21,
        28,
        6
      ],
      "mod_code": [
        "int n = a . size ( ) , m = b . size ( ) ;",
        "int ans = mid , l = mid + 1 ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        21,
        23,
        13,
        6
      ],
      "mod_code": [
        "int n = a . size ( ) , m = b . size ( ) ;",
        "int l = 0 , r = 0 ;",
        "if ( ! vis [ i ] ) continue ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        21,
        23,
        20,
        6
      ],
      "mod_code": [
        "int n = a . size ( ) , m = b . size ( ) ;",
        "int l = 0 , r = 0 ;",
        "cin >> n >> b ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        21,
        23,
        6
      ],
      "mod_code": [
        "int n = a . size ( ) , m = b . size ( ) ;",
        "int l = 0 , r = 0 ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        21,
        13,
        20,
        6
      ],
      "mod_code": [
        "int n = a . size ( ) , m = b . size ( ) ;",
        "if ( ! vis [ i ] ) continue ;",
        "cin >> n >> b ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        21,
        13,
        6
      ],
      "mod_code": [
        "int n = a . size ( ) , m = b . size ( ) ;",
        "if ( ! vis [ i ] ) continue ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        21,
        20,
        6
      ],
      "mod_code": [
        "int n = a . size ( ) , m = b . size ( ) ;",
        "cin >> n >> b ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        21,
        6
      ],
      "mod_code": [
        "int n = a . size ( ) , m = b . size ( ) ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        28,
        23,
        13,
        6
      ],
      "mod_code": [
        "int ans = mid , l = mid + 1 ;",
        "int l = 0 , r = 0 ;",
        "if ( ! vis [ i ] ) continue ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        28,
        23,
        20,
        6
      ],
      "mod_code": [
        "int ans = mid , l = mid + 1 ;",
        "int l = 0 , r = 0 ;",
        "cin >> n >> b ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        28,
        23,
        6
      ],
      "mod_code": [
        "int ans = mid , l = mid + 1 ;",
        "int l = 0 , r = 0 ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        28,
        13,
        20,
        6
      ],
      "mod_code": [
        "int ans = mid , l = mid + 1 ;",
        "if ( ! vis [ i ] ) continue ;",
        "cin >> n >> b ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        28,
        13,
        6
      ],
      "mod_code": [
        "int ans = mid , l = mid + 1 ;",
        "if ( ! vis [ i ] ) continue ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        28,
        20,
        6
      ],
      "mod_code": [
        "int ans = mid , l = mid + 1 ;",
        "cin >> n >> b ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        28,
        6
      ],
      "mod_code": [
        "int ans = mid , l = mid + 1 ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        23,
        13,
        20,
        6
      ],
      "mod_code": [
        "int l = 0 , r = 0 ;",
        "if ( ! vis [ i ] ) continue ;",
        "cin >> n >> b ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        23,
        13,
        6
      ],
      "mod_code": [
        "int l = 0 , r = 0 ;",
        "if ( ! vis [ i ] ) continue ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        23,
        20,
        6
      ],
      "mod_code": [
        "int l = 0 , r = 0 ;",
        "cin >> n >> b ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        23,
        6
      ],
      "mod_code": [
        "int l = 0 , r = 0 ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        13,
        20,
        6
      ],
      "mod_code": [
        "if ( ! vis [ i ] ) continue ;",
        "cin >> n >> b ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        13,
        6
      ],
      "mod_code": [
        "if ( ! vis [ i ] ) continue ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    },
    {
      "mod_line": [
        20,
        6
      ],
      "mod_code": [
        "cin >> n >> b ;",
        "string a declare b ;"
      ],
      "err_line": 6,
      "err_msg": "expected initializer before ‘declare’"
    }
  ]
}