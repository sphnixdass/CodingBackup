{
  "meta": {
    "index": 2086,
    "hitid": "3RIHDBQ1NESDPJCHEH9VVHTWANUHMA",
    "workerid": "A28Q0RBWI7B0V1",
    "probid": "59A",
    "subid": "48728173"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read line from cin into s",
      "code": "getline ( cin , s ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "a = integer",
      "code": "int a ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set a = length of s",
      "code": "a = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer i , c1 , c2 where c1 = 0 and c2 = 0",
      "code": "int i , c1 = 0 , c2 = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to a - 1",
      "code": "for ( i = 0 ; i != a ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if character in s at i > = 97",
      "code": "if ( s . at ( i ) >= 97 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment c2",
      "code": "c2 ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment c1",
      "code": "c1 ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to a exclusive",
      "code": "for ( i = 0 ; i != a ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if c1 > c2",
      "code": "if ( c1 > c2 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if character in s at i > = 97 decrement character in s at i by 32",
      "code": "if ( s . at ( i ) >= 97 ) { s . at ( i ) = s . at ( i ) - 32 ; }",
      "indent": 3
    },
    {
      "line": 16,
      "text": "otherwise",
      "code": "else",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if character in s at i < 97 increment character in s at i by 32",
      "code": "if ( s . at ( i ) < 97 ) { s . at ( i ) = s . at ( i ) + 32 ; }",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print s",
      "code": "cout << s << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int a = s . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "getline ( s , s ) ;"
      ],
      "err_line": 2,
      "err_msg": "no matching function for call to ‘getline(std::__cxx11::string&, std::__cxx11::string&)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 9,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "otherwise"
      ],
      "err_line": 16,
      "err_msg": "‘otherwise’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "int i = 0 , c1 = 0 , c2 ;"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "int i = 0 , c1 = 0 , c2 ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        15
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "int i = 0 , c1 = 0 , c2 ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "int i = 0 , c1 = 0 , c2 ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "int i = 0 , c1 = 0 , c2 ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        5,
        15
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "int i = 0 , c1 = 0 , c2 ;",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "int i = 0 , c1 = 0 , c2 ;",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        5,
        15,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "int i = 0 , c1 = 0 , c2 ;",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        5,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "int i = 0 , c1 = 0 , c2 ;",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        5,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "int i = 0 , c1 = 0 , c2 ;",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        6,
        15
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        6,
        15,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        6,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        6,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        15,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        15,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        4,
        17
      ],
      "mod_code": [
        "int a = s . length ( ) ;",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 4,
      "err_msg": "redeclaration of ‘int a’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        17
      ],
      "mod_code": [
        "int i = 0 , c1 = 0 , c2 ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        6,
        15,
        17
      ],
      "mod_code": [
        "int i = 0 , c1 = 0 , c2 ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        6,
        17
      ],
      "mod_code": [
        "int i = 0 , c1 = 0 , c2 ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        6,
        17
      ],
      "mod_code": [
        "int i = 0 , c1 = 0 , c2 ;",
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        15,
        17
      ],
      "mod_code": [
        "int i = 0 , c1 = 0 , c2 ;",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        15,
        17
      ],
      "mod_code": [
        "int i = 0 , c1 = 0 , c2 ;",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "int i = 0 , c1 = 0 , c2 ;",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        5,
        17
      ],
      "mod_code": [
        "int i = 0 , c1 = 0 , c2 ;",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        15,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        15,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 17,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        6,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < a - 1 ; i ++ )",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 17,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "else if ( s [ i ] < s [ i ] . at ( i ) ) { s ++ ; }"
      ],
      "err_line": 18,
      "err_msg": "‘else’ without a previous ‘if’"
    },
    {
      "mod_line": [
        15,
        17
      ],
      "mod_code": [
        "if ( s [ i ] >= 97 && s [ i ] >= 97 )",
        "if ( s [ i ] < 97 ) { s < s [ i ] [ 32 ] ; }"
      ],
      "err_line": 18,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}