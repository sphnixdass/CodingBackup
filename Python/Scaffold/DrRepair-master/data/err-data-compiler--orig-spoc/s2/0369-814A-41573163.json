{
  "meta": {
    "index": 369,
    "hitid": "3XUSYT70ITVZAP083G376Z7LFSY0D7",
    "workerid": "A2O34N3Y3RJLJ6",
    "probid": "814A",
    "subid": "41573163"
  },
  "lines": [
    {
      "line": 0,
      "text": "define int constant maxn to be 1 , 000",
      "code": "const int maxn = 1000 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "define maxn - size integer arrays a , b , and c",
      "code": "int a [ maxn ] , b [ maxn ] , c [ maxn ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "define bool function cmp , taking ints a , b",
      "code": "bool cmp ( int a , int b )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "return a > b",
      "code": "return a > b ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 6,
      "text": "define ints n , k , and j , setting j to 1",
      "code": "int n , k , j = 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "read into n and then k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for int i by 1 from 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "read into a [ i ]",
      "code": "cin >> a [ i ] ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if a [ i ] isn ' t 0 , then assign a [ i ] to c [ j , postincremented ]",
      "code": "if ( a [ i ] != 0 ) c [ j ++ ] = a [ i ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for integer i from 2 to j ( exclusive ) by 1",
      "code": "for ( int i = 2 ; i < j ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if c [ i ] is less than c [ i - 1 ]",
      "code": "if ( c [ i ] < c [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print \" Yes \"",
      "code": "puts ( \" Yes \" ) ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for int i from 1 to k by 1 , read b [ i ]",
      "code": "for ( int i = 1 ; i <= k ; i ++ ) cin >> b [ i ] ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "sort ( b + 1 , b + 1 + k , cmp )",
      "code": "sort ( b + 1 , b + 1 + k , cmp ) ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "for int i from 1 to n by 1 , define int j , set to 1",
      "code": "for ( int i = 1 , j = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if a [ i ] is = 0 , set a [ i ] to b [ j + + ]",
      "code": "if ( a [ i ] == 0 ) a [ i ] = b [ j ++ ] ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "for integer i from 2 to n by 1",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "if a [ i ] < a [ i - 1 ]",
      "code": "if ( a [ i ] < a [ i - 1 ] )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print \" Yes \"",
      "code": "puts ( \" Yes \" ) ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "print to stdout \" No \"",
      "code": "puts ( \" No \" ) ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [1000]’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a [ ] , b [ maxn ] , b [ c ] ;"
      ],
      "err_line": 1,
      "err_msg": "storage size of ‘a’ isn’t known"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "int n , k , j = 1 , j ;"
      ],
      "err_line": 6,
      "err_msg": "redeclaration of ‘int j’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "getline ( cin , a [ i ] ) ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "if ( c [ i ] [ c [ i - 1 ] )"
      ],
      "err_line": 13,
      "err_msg": "expected ‘]’ before ‘)’ token"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "sort ( ( b + 1 , b + 1 + k , cmp ) ) ;"
      ],
      "err_line": 18,
      "err_msg": "no matching function for call to ‘sort(bool (&)(int, int))’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { j , j = 1 ; }"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        2
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "bool cmp ( bool a , int b )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        10
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "bool cmp ( bool a , int b )",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        2,
        19
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "bool cmp ( bool a , int b )",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        10
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        10,
        19
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1,
        19
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        10
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "bool cmp ( bool a , int b )",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [1]’"
    },
    {
      "mod_line": [
        0,
        2,
        10,
        19
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "bool cmp ( bool a , int b )",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [1]’"
    },
    {
      "mod_line": [
        0,
        2,
        19
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "bool cmp ( bool a , int b )",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [1]’"
    },
    {
      "mod_line": [
        0,
        10,
        19
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [1]’"
    },
    {
      "mod_line": [
        0,
        19
      ],
      "mod_code": [
        "const int maxn = 1 ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "bool cmp ( bool a , int b )"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        10
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "bool cmp ( bool a , int b )",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        19
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "bool cmp ( bool a , int b )",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        0
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "bool cmp ( bool a , int b )",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        1,
        2,
        19
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "bool cmp ( bool a , int b )",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        2,
        19,
        0
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "bool cmp ( bool a , int b )",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        1,
        2,
        0
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "bool cmp ( bool a , int b )",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        19
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        10,
        19,
        0
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        1,
        10,
        0
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        1,
        19
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 1,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        19,
        0
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        1,
        0
      ],
      "mod_code": [
        "int a [ maxn ] , b [ maxn ] , b [ c ] ;",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "bool cmp ( bool a , int b )",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [1000]’"
    },
    {
      "mod_line": [
        2,
        10,
        19
      ],
      "mod_code": [
        "bool cmp ( bool a , int b )",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [1000]’"
    },
    {
      "mod_line": [
        2,
        10,
        19,
        0
      ],
      "mod_code": [
        "bool cmp ( bool a , int b )",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        2,
        10,
        0
      ],
      "mod_code": [
        "bool cmp ( bool a , int b )",
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        2,
        19
      ],
      "mod_code": [
        "bool cmp ( bool a , int b )",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 20,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        19,
        0
      ],
      "mod_code": [
        "bool cmp ( bool a , int b )",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        2,
        0
      ],
      "mod_code": [
        "bool cmp ( bool a , int b )",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }"
      ],
      "err_line": 10,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [1000]’"
    },
    {
      "mod_line": [
        10,
        19,
        0
      ],
      "mod_code": [
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "if ( a [ i ] ) c = a [ i ] = a [ i ] ;",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    },
    {
      "mod_line": [
        19,
        0
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= n ; i ++ ) { j = 1 ; }",
        "const int maxn = 1 , maxn = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘const int maxn’"
    }
  ]
}