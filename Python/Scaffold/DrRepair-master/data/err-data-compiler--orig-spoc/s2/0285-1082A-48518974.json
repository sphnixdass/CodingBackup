{
  "meta": {
    "index": 285,
    "hitid": "3H4IKZHALBCBHXJSTGJ8DGFS1PCNNO",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1082A",
    "subid": "48518974"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer t",
      "code": "int t ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrement t is true",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare n , x , y , d as long long",
      "code": "long long n , x , y , d ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read n , x , y , d",
      "code": "cin >> n >> x >> y >> d ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "declare val = absolute value of ( x - y ) as long long",
      "code": "long long val = abs ( x - y ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "declare long long rem = val % d",
      "code": "long long rem = val % d ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if rem is 0",
      "code": "if ( rem == 0 )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "print val / d , newline",
      "code": "cout << val / d << endl ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 11,
      "text": "declare long long start = 1",
      "code": "long long start = 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "declare long long diff1 = y - start",
      "code": "long long diff1 = y - start ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "declare long long temp1 = x - 1",
      "code": "long long temp1 = x - 1 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "declare long long count1 = temp1 / d",
      "code": "long long count1 = temp1 / d ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if temp1 % d , increment count1",
      "code": "if ( temp1 % d ) count1 ++ ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "declare long long end = n",
      "code": "long long end = n ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "declare long long diff2 = end - y",
      "code": "long long diff2 = end - y ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "declare long long temp2 = end - x",
      "code": "long long temp2 = end - x ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "declare long long count2 = temp2 / d",
      "code": "long long count2 = temp2 / d ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if temp2 % d , increment count2",
      "code": "if ( temp2 % d ) count2 ++ ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "if diff1 % d is 0 and diff2 % d is 0",
      "code": "if ( diff1 % d == 0 && diff2 % d == 0 )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "increment count1 by diff1 / d",
      "code": "count1 += diff1 / d ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "increment count2 by diff2 / d",
      "code": "count2 += diff2 / d ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "print minimum of ( count2 , count1 ) , newline",
      "code": "cout << min ( count2 , count1 ) << endl ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "else if diff1 % d is 0",
      "code": "else if ( diff1 % d == 0 )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "increment count1 by diff1 / d",
      "code": "count1 += diff1 / d ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "print count1 , newline",
      "code": "cout << count1 << endl ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "else if diff2 % d is 0",
      "code": "else if ( diff2 % d == 0 )",
      "indent": 3
    },
    {
      "line": 29,
      "text": "increment count2 by diff2 / d",
      "code": "count2 += diff2 / d ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "print count2 , newline",
      "code": "cout << count2 << endl ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 32,
      "text": "print \" - 1 \" , newline",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "val = abs ( x - y ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "long long diff1 -= start ;"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        31
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 32,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "long long diff1 -= start ;"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        2,
        12,
        6
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "long long diff1 -= start ;",
        "val = abs ( x - y ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        6,
        10
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "long long diff1 -= start ;",
        "val = abs ( x - y ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        6,
        3
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "long long diff1 -= start ;",
        "val = abs ( x - y ) ;",
        "while ( -- t )"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        6,
        31
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "long long diff1 -= start ;",
        "val = abs ( x - y ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        10
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "long long diff1 -= start ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12,
        10,
        3
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "long long diff1 -= start ;",
        "n",
        "while ( -- t )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12,
        10,
        31
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "long long diff1 -= start ;",
        "n",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12,
        3
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "long long diff1 -= start ;",
        "while ( -- t )"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        2,
        12,
        3,
        31
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "long long diff1 -= start ;",
        "while ( -- t )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        2,
        12,
        31
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "long long diff1 -= start ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "val = abs ( x - y ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        10
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "val = abs ( x - y ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        10,
        3
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "val = abs ( x - y ) ;",
        "n",
        "while ( -- t )"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        10,
        31
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "val = abs ( x - y ) ;",
        "n",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        3
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "val = abs ( x - y ) ;",
        "while ( -- t )"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        3,
        31
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "val = abs ( x - y ) ;",
        "while ( -- t )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        31
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "val = abs ( x - y ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        3
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "n",
        "while ( -- t )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        3,
        31
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "n",
        "while ( -- t )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10,
        31
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "n",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        31
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "while ( -- t )",
        "n"
      ],
      "err_line": 32,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        31
      ],
      "mod_code": [
        "t = getchar ( ) ;",
        "n"
      ],
      "err_line": 32,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "val = abs ( x - y ) ;"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        10
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "val = abs ( x - y ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        10,
        3
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "val = abs ( x - y ) ;",
        "n",
        "while ( -- t )"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        10,
        31
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "val = abs ( x - y ) ;",
        "n",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        3
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "val = abs ( x - y ) ;",
        "while ( -- t )"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        3,
        31
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "val = abs ( x - y ) ;",
        "while ( -- t )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        31
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "val = abs ( x - y ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        10
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        3
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "n",
        "while ( -- t )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        3,
        31
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "n",
        "while ( -- t )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        10,
        31
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "n",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "while ( -- t )"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        12,
        3,
        31
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "while ( -- t )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        12,
        31
      ],
      "mod_code": [
        "long long diff1 -= start ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected initializer before ‘-=’ token"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "val = abs ( x - y ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        3
      ],
      "mod_code": [
        "val = abs ( x - y ) ;",
        "n",
        "while ( -- t )"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        3,
        31
      ],
      "mod_code": [
        "val = abs ( x - y ) ;",
        "n",
        "while ( -- t )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        10,
        31
      ],
      "mod_code": [
        "val = abs ( x - y ) ;",
        "n",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "val = abs ( x - y ) ;",
        "while ( -- t )"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3,
        31
      ],
      "mod_code": [
        "val = abs ( x - y ) ;",
        "while ( -- t )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        31
      ],
      "mod_code": [
        "val = abs ( x - y ) ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "‘val’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "n",
        "while ( -- t )"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        3,
        31
      ],
      "mod_code": [
        "n",
        "while ( -- t )",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        31
      ],
      "mod_code": [
        "n",
        "n"
      ],
      "err_line": 11,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        31
      ],
      "mod_code": [
        "while ( -- t )",
        "n"
      ],
      "err_line": 32,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}