{
  "meta": {
    "index": 134,
    "hitid": "30Y6N4AHYPQNAJK7XTMMQV88NV2RDQ",
    "workerid": "A1APYLD4DUK33J",
    "probid": "954A",
    "subid": "37882319"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create character array s with size 101",
      "code": "char s [ 101 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create integer count with count = 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if ( s [ i ] is ' R ' and s [ i + 1 ] is ' U ' ) or ( s [ i ] is ' U ' and s [ i + 1 ] is ' R ' ) , increment i",
      "code": "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i ] == ' U ' && s [ i + 1 ] == ' R ' ) ) i ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print count",
      "code": "count ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print count print newline",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "char a [ 101 ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [101]’ and ‘char [101]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "count = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        1
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "cout << count << endl ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        1,
        6
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "cout << count << endl ;",
        "n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        1,
        4
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "cout << count << endl ;",
        "n ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "cout << count << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        6,
        4
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "cout << count << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [101]’ and ‘char [101]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        8,
        4
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "cout << count << endl ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [101]’ and ‘char [101]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        1
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        8
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "n ;",
        "cout << ' count ' ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        8,
        6
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "n ;",
        "cout << ' count ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        8,
        4
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "n ;",
        "cout << ' count ' ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        6
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        6,
        4
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        1,
        4
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "n ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "cout << ' count ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        6,
        4
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "cout << ' count ' ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [101]’ and ‘char [101]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        8,
        4
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "cout << ' count ' ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [101]’ and ‘char [101]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        4
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [101]’ and ‘char [101]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( ( s [ i ] == ' R ' && s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' U ' ) || ( s [ i + 1 ] == ' R ' ) ) i ++ ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [101]’ and ‘char [101]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "cout << count << endl ;",
        "n ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1,
        6
      ],
      "mod_code": [
        "cout << count << endl ;",
        "n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1,
        6,
        4
      ],
      "mod_code": [
        "cout << count << endl ;",
        "n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        1,
        4
      ],
      "mod_code": [
        "cout << count << endl ;",
        "n ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "cout << count << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        4
      ],
      "mod_code": [
        "cout << count << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [101]’ and ‘char [101]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "cout << count << endl ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [101]’ and ‘char [101]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "n ;",
        "cout << ' count ' ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        6
      ],
      "mod_code": [
        "n ;",
        "cout << ' count ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        6,
        4
      ],
      "mod_code": [
        "n ;",
        "cout << ' count ' ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        4
      ],
      "mod_code": [
        "n ;",
        "cout << ' count ' ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        6,
        4
      ],
      "mod_code": [
        "n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "n ;",
        "s >> s ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        4
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [101]’ and ‘char [101]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [101]’ and ‘char [101]’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "invalid operands of types ‘char [101]’ and ‘char [101]’ to binary ‘operator>>’"
    }
  ]
}