{
  "meta": {
    "index": 563,
    "hitid": "3M47JKRKCXVI75QWOX88T83BGHT683",
    "workerid": "AIWEXPJAU66D9",
    "probid": "475A",
    "subid": "37652978"
  },
  "lines": [
    {
      "line": 0,
      "text": "let a be integer array with size 15",
      "code": "int a [ 15 ] = { 0 } ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer variables n , m , i , j , k , l and p with j = 1",
      "code": "int n , m , i , j = 1 , k , l , p ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "assign value of n to l",
      "code": "l = n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "k = n / 3",
      "code": "k = n / 3 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if n < = 4",
      "code": "if ( n <= 4 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "assign value of n to a [ 0 ]",
      "code": "a [ 0 ] = n ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "decrease n by n",
      "code": "n -= n ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "a [ 0 ] = 4",
      "code": "a [ 0 ] = 4 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "decrease n by 4",
      "code": "n -= 4 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "in the infinite loop",
      "code": "while ( 1 )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if 3 is greater than n",
      "code": "if ( 3 > n )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "assign value of n to a [ j ]",
      "code": "a [ j ] = n ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "if n ! = 0",
      "code": "if ( n != 0 ) j ++ ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "a [ j ] = 3",
      "code": "a [ j ] = 3 ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "decrease n by 3",
      "code": "n -= 3 ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "increase j by one",
      "code": "j ++ ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "set value of p to j",
      "code": "p = j ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "print \" + - - - - - - - - - - - - - - - - - - - - - - - - + \"",
      "code": "cout << \" +------------------------+ \" << endl ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "for i = 0 to 4 exclusive",
      "code": "for ( i = 0 ; i < 4 ; i ++ )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print \" | \"",
      "code": "cout << \" | \" ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "for j = 0 to 11 exclusive",
      "code": "for ( j = 0 ; j < 11 ; j ++ )",
      "indent": 2
    },
    {
      "line": 28,
      "text": "if i = 2 and l is < 3",
      "code": "if ( i == 2 && l < 3 )",
      "indent": 3
    },
    {
      "line": 29,
      "text": "print \" # \"",
      "code": "cout << \" # \" ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 32,
      "text": "if i = 2 and l > 2",
      "code": "if ( i == 2 && l > 2 )",
      "indent": 3
    },
    {
      "line": 33,
      "text": "decrease a [ j ] by one",
      "code": "a [ j ] -- ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "print \" O \"",
      "code": "cout << \" O \" ;",
      "indent": 4
    },
    {
      "line": 35,
      "text": "break the loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 37,
      "text": "if a [ j ] ! = 0 and j < p",
      "code": "if ( a [ j ] != 0 && j < p )",
      "indent": 3
    },
    {
      "line": 38,
      "text": "print \" O . \"",
      "code": "cout << \" O. \" ;",
      "indent": 4
    },
    {
      "line": 39,
      "text": "decrease a [ j ]",
      "code": "a [ j ] -- ;",
      "indent": 4
    },
    {
      "line": 40,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 41,
      "text": "print \" # . \"",
      "code": "cout << \" #. \" ;",
      "indent": 4
    },
    {
      "line": 42,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 44,
      "text": "if i = 0 print \" | D | ) \"",
      "code": "if ( i == 0 ) cout << \" |D|) \" << endl ;",
      "indent": 2
    },
    {
      "line": 45,
      "text": "if i = 1 print \" | . | \"",
      "code": "if ( i == 1 ) cout << \" |.| \" << endl ;",
      "indent": 2
    },
    {
      "line": 46,
      "text": "if i = 2 print \" . . . . . . . . . . . . . . . . . . . . . . . | \"",
      "code": "if ( i == 2 ) cout << \" .......................| \" << endl ;",
      "indent": 2
    },
    {
      "line": 47,
      "text": "if i = 3 print \" | . | ) \"",
      "code": "if ( i == 3 ) cout << \" |.|) \" << endl ;",
      "indent": 2
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 49,
      "text": "print \" + - - - - - - - - - - - - - - - - - - - - - - - - + \"",
      "code": "cout << \" +------------------------+ \" << endl ;",
      "indent": 1
    },
    {
      "line": 50,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int * a [ 15 ] ;"
      ],
      "err_line": 7,
      "err_msg": "invalid conversion from ‘int’ to ‘int*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , m , i , j , k , l , p , p ;"
      ],
      "err_line": 2,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "a [ j ] [ j ] = n ;"
      ],
      "err_line": 15,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "* p = j ;"
      ],
      "err_line": 23,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "a [ -- ] -- ;"
      ],
      "err_line": 33,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "break the ;"
      ],
      "err_line": 35,
      "err_msg": "expected ‘;’ before ‘the’"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 41,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}