{
  "meta": {
    "index": 2122,
    "hitid": "3FK4G712NXU5DN3298HGB4Z4BNQSSF",
    "workerid": "A1APYLD4DUK33J",
    "probid": "615A",
    "subid": "40402827"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , m , x , z",
      "code": "int n , m , x , z ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "ccreate map go from integer to integer",
      "code": "map < int , int > go ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for j = 0 to x exclusive",
      "code": "for ( int j = 0 ; j < x ; j ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read z",
      "code": "cin >> z ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "increment go [ z ]",
      "code": "go [ z ] ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for i = 1 to m inclusive",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if go [ i ] is 0",
      "code": "if ( go [ i ] == 0 )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" NO \"",
      "code": "puts ( \" NO \" ) ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" YES \"",
      "code": "puts ( \" YES \" ) ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < int , int > ccreate ;"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , x , z , z ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int z’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> m )"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "inline int go = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( j = 0 ; j < x ; j ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "if ( go [ i ] == ' 0 ' )"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        7
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "if ( go [ i ] == ' 0 ' )",
        "z >> z ;"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        7,
        11
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "if ( go [ i ] == ' 0 ' )",
        "z >> z ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        7,
        8
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "if ( go [ i ] == ' 0 ' )",
        "z >> z ;",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        11
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "if ( go [ i ] == ' 0 ' )",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        11,
        8
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "if ( go [ i ] == ' 0 ' )",
        "for ( i = 1 ; i <= m ; i ++ )",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        8
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "if ( go [ i ] == ' 0 ' )",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "z >> z ;"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        11
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "z >> z ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        11,
        8
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "z >> z ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        7,
        8
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "z >> z ;",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        8
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "map < int , int > ccreate ;",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "‘go’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        7,
        3
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "z >> z ;",
        "inline int go = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        12,
        7,
        3,
        11
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "z >> z ;",
        "inline int go = 0 ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        12,
        7,
        3,
        8
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "z >> z ;",
        "inline int go = 0 ;",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        12,
        7,
        11
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "z >> z ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        7,
        11,
        8
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "z >> z ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        7,
        8
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "z >> z ;",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        3
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "inline int go = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        12,
        3,
        11
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "inline int go = 0 ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        12,
        3,
        11,
        8
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "inline int go = 0 ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        12,
        3,
        8
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "inline int go = 0 ;",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        11,
        8
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "for ( i = 1 ; i <= m ; i ++ )",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "if ( go [ i ] == ' 0 ' )",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "z >> z ;",
        "inline int go = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        7,
        3,
        11
      ],
      "mod_code": [
        "z >> z ;",
        "inline int go = 0 ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        7,
        3,
        11,
        8
      ],
      "mod_code": [
        "z >> z ;",
        "inline int go = 0 ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        7,
        3,
        8
      ],
      "mod_code": [
        "z >> z ;",
        "inline int go = 0 ;",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        7,
        11
      ],
      "mod_code": [
        "z >> z ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        11,
        8
      ],
      "mod_code": [
        "z >> z ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "z >> z ;",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "inline int go = 0 ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        3,
        11,
        8
      ],
      "mod_code": [
        "inline int go = 0 ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "inline int go = 0 ;",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 3,
      "err_msg": "‘go’ declared as an ‘inline’ variable"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "go [ ++ ] ++ ;"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘]’ token"
    }
  ]
}