{
  "meta": {
    "index": 1379,
    "hitid": "3OKP4QVBP2RYNM8HX8181QMV16VAGN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "54A",
    "subid": "40692407"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "define integers i , j , k , n , previous , c , val and sum",
      "code": "int i , j , k , n , previous , c , val , sum ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "create new vector of strings name",
      "code": "vector < string > name ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string tem",
      "code": "string tem ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read from the input to n , k and c",
      "code": "cin >> n >> k >> c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 , previous = 0 and sum = 0 while i < c , increment i in a loop",
      "code": "for ( i = 0 , previous = 0 , sum = 0 ; i < c ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read val from the input",
      "code": "cin >> val ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "change sum to sum + ( val - previous - 1 ) / k",
      "code": "sum = sum + ( val - previous - 1 ) / k ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "assign the new value = val to previous",
      "code": "previous = val ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if k is equal to 1",
      "code": "if ( k == 1 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print n",
      "code": "cout << n << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "set sum to sum + ( n - previous ) / k",
      "code": "sum = sum + ( n - previous ) / k ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print sum + c",
      "code": "cout << sum + c << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int i , j , k , n , previous , val , val , sum ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int val’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "vector < string name ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "* previous = val ;"
      ],
      "err_line": 8,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 , sum = 0 ; i < c ; i ++ )",
        "vector < string name ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2,
        11
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 , sum = 0 ; i < c ; i ++ )",
        "vector < string name ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2,
        11,
        4
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 , sum = 0 ; i < c ; i ++ )",
        "vector < string name ;",
        "cin >> n ;",
        "cin >> n , k >> c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2,
        11,
        15
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 , sum = 0 ; i < c ; i ++ )",
        "vector < string name ;",
        "cin >> n ;",
        "cout << sum + c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2,
        4
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 , sum = 0 ; i < c ; i ++ )",
        "vector < string name ;",
        "cin >> n , k >> c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2,
        4,
        15
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 , sum = 0 ; i < c ; i ++ )",
        "vector < string name ;",
        "cin >> n , k >> c ;",
        "cout << sum + c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2,
        15
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 , sum = 0 ; i < c ; i ++ )",
        "vector < string name ;",
        "cout << sum + c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "vector < string name ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2,
        11
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "vector < string name ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2,
        11,
        4
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "vector < string name ;",
        "cin >> n ;",
        "cin >> n , k >> c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2,
        11,
        15
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "vector < string name ;",
        "cin >> n ;",
        "cout << sum + c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2,
        4
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "vector < string name ;",
        "cin >> n , k >> c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2,
        4,
        15
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "vector < string name ;",
        "cin >> n , k >> c ;",
        "cout << sum + c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        2,
        15
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "vector < string name ;",
        "cout << sum + c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        5,
        11
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "cin >> n ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        11,
        4
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "cin >> n ;",
        "cin >> n , k >> c ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        11,
        4,
        15
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "cin >> n ;",
        "cin >> n , k >> c ;",
        "cout << sum + c ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        11,
        15
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "cin >> n ;",
        "cout << sum + c ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "cin >> n , k >> c ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        4,
        15
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "cin >> n , k >> c ;",
        "cout << sum + c ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "for ( int i = 0 , previous = 0 && sum = 0 ; i < c ; i ++ )",
        "cout << sum + c ;"
      ],
      "err_line": 5,
      "err_msg": "lvalue required as left operand of assignment"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "vector < string name ;",
        "cin >> n ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        2,
        11,
        4
      ],
      "mod_code": [
        "vector < string name ;",
        "cin >> n ;",
        "cin >> n , k >> c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        2,
        11,
        4,
        15
      ],
      "mod_code": [
        "vector < string name ;",
        "cin >> n ;",
        "cin >> n , k >> c ;",
        "cout << sum + c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        2,
        11,
        15
      ],
      "mod_code": [
        "vector < string name ;",
        "cin >> n ;",
        "cout << sum + c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "vector < string name ;",
        "cin >> n , k >> c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        2,
        4,
        15
      ],
      "mod_code": [
        "vector < string name ;",
        "cin >> n , k >> c ;",
        "cout << sum + c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "vector < string name ;",
        "cout << sum + c ;"
      ],
      "err_line": 2,
      "err_msg": "template argument 1 is invalid"
    }
  ]
}