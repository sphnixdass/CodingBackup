{
  "meta": {
    "index": 1417,
    "hitid": "3UDTAB6HH6TN7ZNRR0Y5K3OVO7P905",
    "workerid": "AIWEXPJAU66D9",
    "probid": "155A",
    "subid": "45328663"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create new integer variable n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "define new integer called a",
      "code": "int a ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read user input to n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer variable min = 100005",
      "code": "int min = 100005 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create new integer variable max = 0",
      "code": "int max = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer count = - 1",
      "code": "int count = - 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "change i from 0 to n exclusive , incrementing it by 1 in a loop",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integer variable with name flag and value 0",
      "code": "int flag = 0 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "read a from the input",
      "code": "cin >> a ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if a is greater than max",
      "code": "if ( a > max )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "assign the new value = a to max",
      "code": "max = a ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "assign 1 to flag",
      "code": "flag = 1 ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "if a is less than min",
      "code": "if ( a < min )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "change min to a",
      "code": "min = a ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "assign 1 to flag",
      "code": "flag = 1 ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if flag is true , increment count by one",
      "code": "if ( flag ) count ++ ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print count",
      "code": "cout << count << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "const int min = 100005 ;"
      ],
      "err_line": 15,
      "err_msg": "assignment of read-only variable ‘min’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "count = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        12,
        16,
        6
      ],
      "mod_code": [
        "int flag = 1 ;",
        "int flag = 1 ;",
        "count = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        12,
        16,
        6,
        9
      ],
      "mod_code": [
        "int flag = 1 ;",
        "int flag = 1 ;",
        "count = - 1 ;",
        "a >> a ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        12,
        16,
        6,
        20
      ],
      "mod_code": [
        "int flag = 1 ;",
        "int flag = 1 ;",
        "count = - 1 ;",
        "cout << ' count ' ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        12,
        16,
        6,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "int flag = 1 ;",
        "count = - 1 ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        12,
        16,
        9,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "int flag = 1 ;",
        "a >> a ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        12,
        16,
        20,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "int flag = 1 ;",
        "cout << ' count ' ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        12,
        16,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "int flag = 1 ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        12,
        6,
        9
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;",
        "a >> a ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        12,
        6,
        9,
        20
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;",
        "a >> a ;",
        "cout << ' count ' ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        12,
        6,
        9,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;",
        "a >> a ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        12,
        6,
        20
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;",
        "cout << ' count ' ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        12,
        6,
        20,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;",
        "cout << ' count ' ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        12,
        6,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        12,
        9,
        20,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "a >> a ;",
        "cout << ' count ' ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        12,
        9,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "a >> a ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        12,
        20,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "cout << ' count ' ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        16,
        6
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        16,
        6,
        9
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;",
        "a >> a ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        16,
        6,
        9,
        20
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;",
        "a >> a ;",
        "cout << ' count ' ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        16,
        6,
        9,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;",
        "a >> a ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        16,
        6,
        20
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;",
        "cout << ' count ' ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        16,
        6,
        20,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;",
        "cout << ' count ' ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        16,
        6,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "count = - 1 ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        16,
        9,
        20,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "a >> a ;",
        "cout << ' count ' ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        16,
        9,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "a >> a ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        16,
        20,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "cout << ' count ' ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        16,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "count = - 1 ;",
        "a >> a ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        9,
        20
      ],
      "mod_code": [
        "count = - 1 ;",
        "a >> a ;",
        "cout << ' count ' ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        9,
        20,
        8
      ],
      "mod_code": [
        "count = - 1 ;",
        "a >> a ;",
        "cout << ' count ' ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        9,
        8
      ],
      "mod_code": [
        "count = - 1 ;",
        "a >> a ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        20
      ],
      "mod_code": [
        "count = - 1 ;",
        "cout << ' count ' ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        20,
        8
      ],
      "mod_code": [
        "count = - 1 ;",
        "cout << ' count ' ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "count = - 1 ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        9,
        20,
        8
      ],
      "mod_code": [
        "a >> a ;",
        "cout << ' count ' ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "a >> a ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    },
    {
      "mod_line": [
        20,
        8
      ],
      "mod_code": [
        "cout << ' count ' ;",
        "int flag , flag = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int flag’"
    }
  ]
}