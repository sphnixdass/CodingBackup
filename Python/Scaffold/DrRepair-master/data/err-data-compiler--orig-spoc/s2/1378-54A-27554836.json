{
  "meta": {
    "index": 1378,
    "hitid": "3OEWW2KGQJ5KD6SR515IW033DVJDOF",
    "workerid": "AIWEXPJAU66D9",
    "probid": "54A",
    "subid": "27554836"
  },
  "lines": [
    {
      "line": 0,
      "text": "new constant integer M = 1000 + 5",
      "code": "const int M = 1000 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare new array of integers ihash with size M",
      "code": "int ihash [ M ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "create new integers n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n and k from the input",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "c is a new integer",
      "code": "int c ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read input to c",
      "code": "cin >> c ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "assign 1 to ihash [ 0 ]",
      "code": "ihash [ 0 ] = 1 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "in a for loop , change i from 0 to c exclusive",
      "code": "for ( int i = 0 ; i < c ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "create integer variable x",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "read x from the user input",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "change the value of ihash [ x ] to 1",
      "code": "ihash [ x ] = 1 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "ans is a new integer with value 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "new integer variable start = 0",
      "code": "int start = 0 ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "while start < = n",
      "code": "while ( start <= n )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if start + k < = n",
      "code": "if ( start + k <= n )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "define integer variable index with value - 1",
      "code": "int index = - 1 ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "create integer ians = 0",
      "code": "int ians = 0 ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "iterate through i from start + 1 to start + k inclusive , incrementing by 1",
      "code": "for ( int i = start + 1 ; i <= start + k ; i ++ )",
      "indent": 3
    },
    {
      "line": 20,
      "text": "if ihash [ i ] is equal to 1",
      "code": "if ( ihash [ i ] == 1 )",
      "indent": 4
    },
    {
      "line": 21,
      "text": "assign the new value = i to index",
      "code": "index = i ;",
      "indent": 5
    },
    {
      "line": 22,
      "text": "increment ians",
      "code": "ians ++ ;",
      "indent": 5
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 25,
      "text": "if ians = 0",
      "code": "if ( ians == 0 )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "increment ans by one",
      "code": "ans ++ ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "assign start + k to start",
      "code": "start = start + k ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 29,
      "text": "set ans to ans + ians",
      "code": "ans = ans + ians ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "set start to index",
      "code": "start = index ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 32,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 33,
      "text": "in a for loop , change i from start + 1 to n inclusive , addint ihash [ i ] to ans on each iteration",
      "code": "for ( int i = start + 1 ; i <= n ; i ++ ) { ans = ans + ihash [ i ] ; }",
      "indent": 3
    },
    {
      "line": 34,
      "text": "assign n + 1 to start",
      "code": "start = n + 1 ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "n , k ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "ihash [ 0 ] [ 1 ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 0 ; i < c ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "ians = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "‘ians’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "start = index ( ) ;"
      ],
      "err_line": 30,
      "err_msg": "‘index’ cannot be used as a function"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 33,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        33,
        13
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "ans = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        13,
        28
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "ans = 0 ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        13,
        28,
        20
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "ans = 0 ;",
        "n",
        "if ( ihash [ i ] == ' 1 ' )"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        13,
        28,
        1
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "ans = 0 ;",
        "n",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        33,
        13,
        20
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "ans = 0 ;",
        "if ( ihash [ i ] == ' 1 ' )"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        33,
        13,
        20,
        1
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "ans = 0 ;",
        "if ( ihash [ i ] == ' 1 ' )",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        33,
        13,
        1
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "ans = 0 ;",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        33,
        28
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "n"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        33,
        28,
        20
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "n",
        "if ( ihash [ i ] == ' 1 ' )"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        33,
        28,
        20,
        1
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "n",
        "if ( ihash [ i ] == ' 1 ' )",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        33,
        28,
        1
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "n",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        33,
        20
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "if ( ihash [ i ] == ' 1 ' )"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        33,
        20,
        1
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "if ( ihash [ i ] == ' 1 ' )",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        33,
        1
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) { ihash [ i ] [ i ] = ans ; }",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        13,
        28
      ],
      "mod_code": [
        "ans = 0 ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        20
      ],
      "mod_code": [
        "ans = 0 ;",
        "n",
        "if ( ihash [ i ] == ' 1 ' )"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        20,
        33
      ],
      "mod_code": [
        "ans = 0 ;",
        "n",
        "if ( ihash [ i ] == ' 1 ' )",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        20,
        1
      ],
      "mod_code": [
        "ans = 0 ;",
        "n",
        "if ( ihash [ i ] == ' 1 ' )",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        13,
        28,
        33
      ],
      "mod_code": [
        "ans = 0 ;",
        "n",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        28,
        33,
        1
      ],
      "mod_code": [
        "ans = 0 ;",
        "n",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        13,
        28,
        1
      ],
      "mod_code": [
        "ans = 0 ;",
        "n",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        13,
        20
      ],
      "mod_code": [
        "ans = 0 ;",
        "if ( ihash [ i ] == ' 1 ' )"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        33
      ],
      "mod_code": [
        "ans = 0 ;",
        "if ( ihash [ i ] == ' 1 ' )",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        20,
        33,
        1
      ],
      "mod_code": [
        "ans = 0 ;",
        "if ( ihash [ i ] == ' 1 ' )",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        13,
        20,
        1
      ],
      "mod_code": [
        "ans = 0 ;",
        "if ( ihash [ i ] == ' 1 ' )",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        13,
        33
      ],
      "mod_code": [
        "ans = 0 ;",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;"
      ],
      "err_line": 13,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        33,
        1
      ],
      "mod_code": [
        "ans = 0 ;",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "ans = 0 ;",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        28,
        20
      ],
      "mod_code": [
        "n",
        "if ( ihash [ i ] == ' 1 ' )"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        20,
        33
      ],
      "mod_code": [
        "n",
        "if ( ihash [ i ] == ' 1 ' )",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        20,
        33,
        1
      ],
      "mod_code": [
        "n",
        "if ( ihash [ i ] == ' 1 ' )",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        28,
        20,
        1
      ],
      "mod_code": [
        "n",
        "if ( ihash [ i ] == ' 1 ' )",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        28,
        33
      ],
      "mod_code": [
        "n",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;"
      ],
      "err_line": 29,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        33,
        1
      ],
      "mod_code": [
        "n",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        28,
        1
      ],
      "mod_code": [
        "n",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        20,
        33
      ],
      "mod_code": [
        "if ( ihash [ i ] == ' 1 ' )",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;"
      ],
      "err_line": 33,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        20,
        33,
        1
      ],
      "mod_code": [
        "if ( ihash [ i ] == ' 1 ' )",
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        20,
        1
      ],
      "mod_code": [
        "if ( ihash [ i ] == ' 1 ' )",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    },
    {
      "mod_line": [
        33,
        1
      ],
      "mod_code": [
        "for ( int i = start + 1 ; i <= n ; i ++ ) ans [ i ] [ i ] = ans ;",
        "ihash [ M ] ;"
      ],
      "err_line": 1,
      "err_msg": "‘ihash’ does not name a type"
    }
  ]
}