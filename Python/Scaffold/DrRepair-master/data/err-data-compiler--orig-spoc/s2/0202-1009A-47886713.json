{
  "meta": {
    "index": 202,
    "hitid": "35U0MRQMUJ167NSDWM5C2M9AD2NVOW",
    "workerid": "A1APYLD4DUK33J",
    "probid": "1009A",
    "subid": "47886713"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare long longs n , m , res , long long arrays a size 1010 , c size 1010",
      "code": "long long n , m , a [ 1010 ] , c [ 1010 ] , res ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "read n , m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n inclusive , read c [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) cin >> c [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to m inclusive , read a [ i ]",
      "code": "for ( int i = 1 ; i <= m ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "declare long long neo = 1",
      "code": "long long neo = 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 1 to m inclusive",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "while neo is less than n and a [ i ] is less than c [ neo ] , increment neo",
      "code": "while ( neo < n && a [ i ] < c [ neo ] ) neo ++ ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if c [ neo ] is less than or equal to a [ i ]",
      "code": "if ( c [ neo ] <= a [ i ] )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment res",
      "code": "res ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment neo",
      "code": "neo ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "end loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if neo is greater than n , end loop",
      "code": "if ( neo > n ) break ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print res and newline",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "end ;"
      ],
      "err_line": 12,
      "err_msg": "‘end’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        6,
        8
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "if ( c [ neo ] >= a [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        6,
        8,
        2
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "if ( c [ neo ] >= a [ i ] )",
        "cin >> n , m ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        6,
        8,
        11
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "if ( c [ neo ] >= a [ i ] )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        6,
        2
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "cin >> n , m ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        6,
        2,
        11
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        6,
        11
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "for ( i = 1 ; i <= m ; i ++ )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "if ( c [ neo ] >= a [ i ] )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        8,
        2
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "if ( c [ neo ] >= a [ i ] )",
        "cin >> n , m ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        8,
        2,
        11
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "if ( c [ neo ] >= a [ i ] )",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        8,
        11
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "if ( c [ neo ] >= a [ i ] )",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "cin >> n , m ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        2,
        11
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , c [ 1010 ] ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘long long int c [1010]’"
    },
    {
      "mod_line": [
        6,
        0
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "if ( c [ neo ] >= a [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0,
        8,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "if ( c [ neo ] >= a [ i ] )",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0,
        8,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "if ( c [ neo ] >= a [ i ] )",
        "n"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0,
        2,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        0,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "if ( c [ neo ] >= a [ i ] )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "if ( c [ neo ] >= a [ i ] )",
        "cin >> n , m ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        2,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "if ( c [ neo ] >= a [ i ] )",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        8,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "if ( c [ neo ] >= a [ i ] )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "cin >> n , m ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        2,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        6,
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i <= m ; i ++ )",
        "n"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "if ( c [ neo ] >= a [ i ] )"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        2
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "if ( c [ neo ] >= a [ i ] )",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        2,
        11
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "if ( c [ neo ] >= a [ i ] )",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        8,
        11
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "if ( c [ neo ] >= a [ i ] )",
        "n"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "cin >> n , m ;"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        11
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        11
      ],
      "mod_code": [
        "long long n , a [ 1010 ] , c [ 1010 ] , res [ 1010 ] ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "‘m’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        2,
        11
      ],
      "mod_code": [
        "if ( c [ neo ] >= a [ i ] )",
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "if ( c [ neo ] >= a [ i ] )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        11
      ],
      "mod_code": [
        "cin >> n , m ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}