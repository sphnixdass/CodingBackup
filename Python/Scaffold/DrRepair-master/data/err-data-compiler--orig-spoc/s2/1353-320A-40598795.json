{
  "meta": {
    "index": 1353,
    "hitid": "3VW0145YLY69GP772HCG7U9BNF2JML",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "320A",
    "subid": "40598795"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "check = bool with check = true",
      "code": "bool check = true ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to length of s",
      "code": "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if s [ i ] is ' 1 ' and s [ i + 1 ] is ' 4 ' and s [ i + 2 ] is ' 4 '",
      "code": "if ( s [ i ] == ' 1 ' && s [ i + 1 ] == ' 4 ' && s [ i + 2 ] == ' 4 ' )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment i by 2",
      "code": "i += 2 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if s [ i ] is ' 1 ' and s [ i + 1 ] is ' 4 '",
      "code": "else if ( s [ i ] == ' 1 ' && s [ i + 1 ] == ' 4 ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "increment i",
      "code": "i += 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else if s [ i ] is ' 1 '",
      "code": "else if ( s [ i ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set check to false",
      "code": "check = false ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "break",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if check",
      "code": "if ( check )",
      "indent": 1
    },
    {
      "line": 19,
      "text": "print \" YES \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 21,
      "text": "print \" NO \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 13,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 20,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        19
      ],
      "mod_code": [
        "continue continue ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        12,
        19,
        2
      ],
      "mod_code": [
        "continue continue ;",
        "cout << \" YES \" ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        19,
        2,
        13
      ],
      "mod_code": [
        "continue continue ;",
        "cout << \" YES \" ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        19,
        2,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "cout << \" YES \" ;",
        "s >> s ;",
        "if ( ! check )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        19,
        2,
        1
      ],
      "mod_code": [
        "continue continue ;",
        "cout << \" YES \" ;",
        "s >> s ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        19,
        13
      ],
      "mod_code": [
        "continue continue ;",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        12,
        19,
        13,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "cout << \" YES \" ;",
        "n",
        "if ( ! check )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        12,
        19,
        13,
        1
      ],
      "mod_code": [
        "continue continue ;",
        "cout << \" YES \" ;",
        "n",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        19,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "cout << \" YES \" ;",
        "if ( ! check )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        12,
        19,
        18,
        1
      ],
      "mod_code": [
        "continue continue ;",
        "cout << \" YES \" ;",
        "if ( ! check )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        19,
        1
      ],
      "mod_code": [
        "continue continue ;",
        "cout << \" YES \" ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "continue continue ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        2,
        13
      ],
      "mod_code": [
        "continue continue ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        2,
        13,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "s >> s ;",
        "n",
        "if ( ! check )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        2,
        13,
        1
      ],
      "mod_code": [
        "continue continue ;",
        "s >> s ;",
        "n",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "s >> s ;",
        "if ( ! check )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        2,
        18,
        1
      ],
      "mod_code": [
        "continue continue ;",
        "s >> s ;",
        "if ( ! check )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2,
        1
      ],
      "mod_code": [
        "continue continue ;",
        "s >> s ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13
      ],
      "mod_code": [
        "continue continue ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        12,
        13,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "n",
        "if ( ! check )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        12,
        13,
        18,
        1
      ],
      "mod_code": [
        "continue continue ;",
        "n",
        "if ( ! check )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        13,
        1
      ],
      "mod_code": [
        "continue continue ;",
        "n",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "if ( ! check )"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        12,
        18,
        1
      ],
      "mod_code": [
        "continue continue ;",
        "if ( ! check )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "continue continue ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        2
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        19,
        2,
        13
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        19,
        2,
        13,
        18
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "s >> s ;",
        "n",
        "if ( ! check )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        19,
        2,
        13,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "s >> s ;",
        "n",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        2,
        18
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "s >> s ;",
        "if ( ! check )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        19,
        2,
        18,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "s >> s ;",
        "if ( ! check )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        2,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "s >> s ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        13
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        13,
        18
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "n",
        "if ( ! check )"
      ],
      "err_line": 13,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        13,
        18,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "n",
        "if ( ! check )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        13,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "n",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        18,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "if ( ! check )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        19,
        1
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13
      ],
      "mod_code": [
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        13,
        18
      ],
      "mod_code": [
        "s >> s ;",
        "n",
        "if ( ! check )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        13,
        18,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "n",
        "if ( ! check )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        13,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "n",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        18
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! check )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        18,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "if ( ! check )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "s >> s ;",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "n",
        "if ( ! check )"
      ],
      "err_line": 13,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        18,
        1
      ],
      "mod_code": [
        "n",
        "if ( ! check )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        1
      ],
      "mod_code": [
        "n",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        1
      ],
      "mod_code": [
        "if ( ! check )",
        "string S ;"
      ],
      "err_line": 2,
      "err_msg": "‘s’ was not declared in this scope"
    }
  ]
}