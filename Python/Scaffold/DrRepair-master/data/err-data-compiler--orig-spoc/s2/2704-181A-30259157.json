{
  "meta": {
    "index": 2704,
    "hitid": "3WGCNLZJKF2ZHELQZZ77K4QVJX9D1H",
    "workerid": "A1APYLD4DUK33J",
    "probid": "181A",
    "subid": "30259157"
  },
  "lines": [
    {
      "line": 0,
      "text": "create 2d character array ar with size 101 by 101",
      "code": "char ar [ 101 ] [ 101 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers n , m , row , col , one",
      "code": "int n , m , row , col , one ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integers a , b with a = 0 , b = 0",
      "code": "int a = 0 , b = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n read m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer c with c = 0",
      "code": "int c = 0 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "read ar [ i ] [ j ]",
      "code": "cin >> ar [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if ar [ i ] [ j ] is ' * ' , increment c",
      "code": "if ( ar [ i ] [ j ] == ' * ' ) c ++ ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if c is 1",
      "code": "if ( c == 1 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set row to i",
      "code": "row = i ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if ar [ i ] [ j ] is ' * ' , set one to j",
      "code": "if ( ar [ i ] [ j ] == ' * ' ) one = j ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if c is 2",
      "code": "if ( c == 2 )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "for j = 1 to m inclusive",
      "code": "for ( int j = 1 ; j <= m ; j ++ )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if ar [ i ] [ j ] is ' * '",
      "code": "if ( ar [ i ] [ j ] == ' * ' )",
      "indent": 4
    },
    {
      "line": 20,
      "text": "if a is 0",
      "code": "if ( a == 0 )",
      "indent": 5
    },
    {
      "line": 21,
      "text": "set a to j",
      "code": "a = j ;",
      "indent": 6
    },
    {
      "line": 22,
      "text": "else if b is 0",
      "code": "else if ( b == 0 )",
      "indent": 5
    },
    {
      "line": 23,
      "text": "set b to j",
      "code": "b = j ;",
      "indent": 6
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 28,
      "text": "if a is one",
      "code": "if ( a == one )",
      "indent": 1
    },
    {
      "line": 29,
      "text": "set col to b",
      "code": "col = b ;",
      "indent": 2
    },
    {
      "line": 30,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 31,
      "text": "set col to a",
      "code": "col = a ;",
      "indent": 2
    },
    {
      "line": 32,
      "text": "print row print \" \" print col print newline",
      "code": "cout << row << \" \" << col << endl ;",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char s [ 101 ] [ 101 ] ;"
      ],
      "err_line": 8,
      "err_msg": "‘ar’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int n , m , row , col ;"
      ],
      "err_line": 14,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "c = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( c == l )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 13,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( j = 1 ; j <= m ; j ++ )"
      ],
      "err_line": 18,
      "err_msg": "name lookup of ‘j’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "if ( ar [ i ] [ j ] [ j ] == ' * ' )"
      ],
      "err_line": 19,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 31,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "cout << row \" << \" \" << col << endl ;"
      ],
      "err_line": 32,
      "err_msg": "missing terminating \" character"
    },
    {
      "mod_line": [
        28,
        11
      ],
      "mod_code": [
        "if ( a )",
        "if ( c == l )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        11,
        23
      ],
      "mod_code": [
        "if ( a )",
        "if ( c == l )",
        "int b = j ;"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        11,
        23,
        17
      ],
      "mod_code": [
        "if ( a )",
        "if ( c == l )",
        "int b = j ;",
        "if ( ! c )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        11,
        23,
        3
      ],
      "mod_code": [
        "if ( a )",
        "if ( c == l )",
        "int b = j ;",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        28,
        11,
        17
      ],
      "mod_code": [
        "if ( a )",
        "if ( c == l )",
        "if ( ! c )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        28,
        11,
        17,
        3
      ],
      "mod_code": [
        "if ( a )",
        "if ( c == l )",
        "if ( ! c )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        28,
        11,
        3
      ],
      "mod_code": [
        "if ( a )",
        "if ( c == l )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        28,
        23,
        17,
        3
      ],
      "mod_code": [
        "if ( a )",
        "int b = j ;",
        "if ( ! c )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        28,
        23,
        3
      ],
      "mod_code": [
        "if ( a )",
        "int b = j ;",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        28,
        17,
        3
      ],
      "mod_code": [
        "if ( a )",
        "if ( ! c )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        28,
        3
      ],
      "mod_code": [
        "if ( a )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        11,
        23
      ],
      "mod_code": [
        "if ( c == l )",
        "int b = j ;"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        17
      ],
      "mod_code": [
        "if ( c == l )",
        "int b = j ;",
        "if ( ! c )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        17,
        28
      ],
      "mod_code": [
        "if ( c == l )",
        "int b = j ;",
        "if ( ! c )",
        "if ( a == 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        17,
        3
      ],
      "mod_code": [
        "if ( c == l )",
        "int b = j ;",
        "if ( ! c )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        11,
        23,
        28
      ],
      "mod_code": [
        "if ( c == l )",
        "int b = j ;",
        "if ( a == 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        23,
        28,
        3
      ],
      "mod_code": [
        "if ( c == l )",
        "int b = j ;",
        "if ( a == 0 )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        11,
        23,
        3
      ],
      "mod_code": [
        "if ( c == l )",
        "int b = j ;",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        11,
        17
      ],
      "mod_code": [
        "if ( c == l )",
        "if ( ! c )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17,
        28
      ],
      "mod_code": [
        "if ( c == l )",
        "if ( ! c )",
        "if ( a == 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        17,
        28,
        3
      ],
      "mod_code": [
        "if ( c == l )",
        "if ( ! c )",
        "if ( a == 0 )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        11,
        17,
        3
      ],
      "mod_code": [
        "if ( c == l )",
        "if ( ! c )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        11,
        28
      ],
      "mod_code": [
        "if ( c == l )",
        "if ( a == 0 )"
      ],
      "err_line": 11,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        28,
        3
      ],
      "mod_code": [
        "if ( c == l )",
        "if ( a == 0 )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "if ( c == l )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        23,
        17,
        28,
        3
      ],
      "mod_code": [
        "int b = j ;",
        "if ( ! c )",
        "if ( a == 0 )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        23,
        17,
        3
      ],
      "mod_code": [
        "int b = j ;",
        "if ( ! c )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        23,
        28,
        3
      ],
      "mod_code": [
        "int b = j ;",
        "if ( a == 0 )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        23,
        3
      ],
      "mod_code": [
        "int b = j ;",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        17,
        28,
        3
      ],
      "mod_code": [
        "if ( ! c )",
        "if ( a == 0 )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        17,
        3
      ],
      "mod_code": [
        "if ( ! c )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        28,
        3
      ],
      "mod_code": [
        "if ( a == 0 )",
        "int a , b = 0 , b = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "redeclaration of ‘int b’"
    }
  ]
}