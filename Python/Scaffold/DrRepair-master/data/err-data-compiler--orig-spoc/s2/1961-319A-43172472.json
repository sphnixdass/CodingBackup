{
  "meta": {
    "index": 1961,
    "hitid": "3WPCIUYH1A20QYXZ1IRHQA9QBG2DTS",
    "workerid": "AIWEXPJAU66D9",
    "probid": "319A",
    "subid": "43172472"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare long long variable MOD = 1e9 + 7",
      "code": "long long MOD = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "Power is a long long function with integer argument x",
      "code": "long long Power ( int x )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare long long res = 1",
      "code": "long long res = 1 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "decrement x and loop further , while x > 0 , setting res to ( res * 2 ) % MOD on each iteration",
      "code": "while ( x -- ) res = ( res * 2 ) % MOD ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return res",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 7,
      "text": "declare string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create integers i , n and p",
      "code": "int i , n , p ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "declare long long res = 0",
      "code": "long long res = 0 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "n = length of str",
      "code": "n = str . length ( ) ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "p = ( n - 1 ) * 2",
      "code": "p = ( n - 1 ) * 2 ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "res = ( res + ( Power ( p ) * ( str [ i ] - ' 0 ' ) ) ) % MOD",
      "code": "res = ( res + ( Power ( p ) * ( str [ i ] - ' 0 ' ) ) ) % MOD ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "decrease p by one",
      "code": "p -- ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print res",
      "code": "cout << res << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int n = str . length ( ) ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘long long int(int)’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long Power = ( int ) x ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "int i , n , n ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "int p = ( n - 1 ) * 2 ;"
      ],
      "err_line": 12,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) % MOD ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘long long int(int)’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        14,
        1
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "long long Power = ( int ) x ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        1,
        4
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "long long Power = ( int ) x ;",
        "exit ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        1,
        8
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "long long Power = ( int ) x ;",
        "int i , n , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        1,
        7
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "long long Power = ( int ) x ;",
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        4
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "exit ( res ) ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        14,
        4,
        8
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "exit ( res ) ;",
        "int i , n , n ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        14,
        4,
        7
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "exit ( res ) ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        14,
        8
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "int i , n , n ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        14,
        8,
        7
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "int i , n , n ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        14,
        7
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "long long Power = ( int ) x ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1,
        4
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "long long Power = ( int ) x ;",
        "exit ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1,
        4,
        8
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "long long Power = ( int ) x ;",
        "exit ( res ) ;",
        "int i , n , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1,
        4,
        7
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "long long Power = ( int ) x ;",
        "exit ( res ) ;",
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1,
        8
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "long long Power = ( int ) x ;",
        "int i , n , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1,
        8,
        7
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "long long Power = ( int ) x ;",
        "int i , n , n ;",
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        1,
        7
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "long long Power = ( int ) x ;",
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "exit ( res ) ;"
      ],
      "err_line": 11,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        4,
        8
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "exit ( res ) ;",
        "int i , n , n ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        4,
        8,
        7
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "exit ( res ) ;",
        "int i , n , n ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        4,
        7
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "exit ( res ) ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "int i , n , n ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        11,
        8,
        7
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "int i , n , n ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        7
      ],
      "mod_code": [
        "int n = str . length ( ) ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        1
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "long long Power = ( int ) x ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        4
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "long long Power = ( int ) x ;",
        "exit ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        4,
        8
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "long long Power = ( int ) x ;",
        "exit ( res ) ;",
        "int i , n , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        4,
        7
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "long long Power = ( int ) x ;",
        "exit ( res ) ;",
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        8
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "long long Power = ( int ) x ;",
        "int i , n , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        8,
        7
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "long long Power = ( int ) x ;",
        "int i , n , n ;",
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        1,
        7
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "long long Power = ( int ) x ;",
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "exit ( res ) ;"
      ],
      "err_line": 14,
      "err_msg": "invalid operands of types ‘long long int(int)’ and ‘int’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        14,
        4,
        8
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "exit ( res ) ;",
        "int i , n , n ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        14,
        4,
        8,
        7
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "exit ( res ) ;",
        "int i , n , n ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        4,
        7
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "exit ( res ) ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        8
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "int i , n , n ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        14,
        8,
        7
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "int i , n , n ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "res = ( res + ( Power ) * ( p ) * ( str [ i ] - ' 0 ' ) ) % MOD ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "long long Power = ( int ) x ;",
        "exit ( res ) ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        8
      ],
      "mod_code": [
        "long long Power = ( int ) x ;",
        "exit ( res ) ;",
        "int i , n , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        8,
        7
      ],
      "mod_code": [
        "long long Power = ( int ) x ;",
        "exit ( res ) ;",
        "int i , n , n ;",
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        4,
        7
      ],
      "mod_code": [
        "long long Power = ( int ) x ;",
        "exit ( res ) ;",
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "long long Power = ( int ) x ;",
        "int i , n , n ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        8,
        7
      ],
      "mod_code": [
        "long long Power = ( int ) x ;",
        "int i , n , n ;",
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "long long Power = ( int ) x ;",
        "string str << endl ;"
      ],
      "err_line": 1,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "exit ( res ) ;",
        "int i , n , n ;"
      ],
      "err_line": 8,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        4,
        8,
        7
      ],
      "mod_code": [
        "exit ( res ) ;",
        "int i , n , n ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "exit ( res ) ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "int i , n , n ;",
        "string str << endl ;"
      ],
      "err_line": 7,
      "err_msg": "expected initializer before ‘<<’ token"
    }
  ]
}