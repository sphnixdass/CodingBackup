{
  "meta": {
    "index": 1254,
    "hitid": "3T2EL38U0ME1WOAOBEYYFC1V8EBXQ7",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "291A",
    "subid": "48968568"
  },
  "lines": [
    {
      "line": 0,
      "text": "N = 1003 = const int",
      "code": "const int N = 1003 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let a be an integer array of length N",
      "code": "int a [ N ] ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "m = map from int to int",
      "code": "map < int , int > mp ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n + 1 elements of a from 1",
      "code": "for ( int i = 1 ; i <= n ; ++ i ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "ans = 0 = int",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; ++ i )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if a at i is 0 go to next iteration",
      "code": "if ( a [ i ] == 0 ) continue ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment mp at a [ i ]",
      "code": "mp [ a [ i ] ] ++ ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if mp at a [ i ] > 2",
      "code": "if ( mp [ a [ i ] ] > 2 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print - 1",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else if mp at a [ i ] = 2",
      "code": "else if ( mp [ a [ i ] ] == 2 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment ans",
      "code": "++ ans ;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < int , int > m ;"
      ],
      "err_line": 10,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "map < int to , int > m ;"
      ],
      "err_line": 3,
      "err_msg": "wrong number of template arguments (1, should be at least 2)"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "map < int , int > m ;",
        "mp [ i ] ++ ;"
      ],
      "err_line": 10,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        11
      ],
      "mod_code": [
        "map < int , int > m ;",
        "mp [ i ] ++ ;",
        "if ( mp [ i ] == 2 )"
      ],
      "err_line": 10,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        14
      ],
      "mod_code": [
        "map < int , int > m ;",
        "mp [ i ] ++ ;",
        "if ( mp [ i ] == 2 )",
        "else if ( mp [ i ] == 2 )"
      ],
      "err_line": 10,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        14
      ],
      "mod_code": [
        "map < int , int > m ;",
        "mp [ i ] ++ ;",
        "if ( mp [ i ] == 2 )",
        "else if ( mp [ i ] == ' 2 ' )"
      ],
      "err_line": 10,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        11,
        2
      ],
      "mod_code": [
        "map < int , int > m ;",
        "mp [ i ] ++ ;",
        "if ( mp [ i ] == 2 )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        10,
        14
      ],
      "mod_code": [
        "map < int , int > m ;",
        "mp [ i ] ++ ;",
        "else if ( mp [ i ] == 2 )"
      ],
      "err_line": 10,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        14,
        2
      ],
      "mod_code": [
        "map < int , int > m ;",
        "mp [ i ] ++ ;",
        "else if ( mp [ i ] == 2 )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        10,
        14
      ],
      "mod_code": [
        "map < int , int > m ;",
        "mp [ i ] ++ ;",
        "else if ( mp [ i ] == ' 2 ' )"
      ],
      "err_line": 10,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        10,
        14,
        2
      ],
      "mod_code": [
        "map < int , int > m ;",
        "mp [ i ] ++ ;",
        "else if ( mp [ i ] == ' 2 ' )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "map < int , int > m ;",
        "mp [ i ] ++ ;",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        11
      ],
      "mod_code": [
        "map < int , int > m ;",
        "if ( mp [ i ] == 2 )"
      ],
      "err_line": 10,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        14
      ],
      "mod_code": [
        "map < int , int > m ;",
        "if ( mp [ i ] == 2 )",
        "else if ( mp [ i ] == 2 )"
      ],
      "err_line": 10,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        14,
        2
      ],
      "mod_code": [
        "map < int , int > m ;",
        "if ( mp [ i ] == 2 )",
        "else if ( mp [ i ] == 2 )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        11,
        14
      ],
      "mod_code": [
        "map < int , int > m ;",
        "if ( mp [ i ] == 2 )",
        "else if ( mp [ i ] == ' 2 ' )"
      ],
      "err_line": 10,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        11,
        14,
        2
      ],
      "mod_code": [
        "map < int , int > m ;",
        "if ( mp [ i ] == 2 )",
        "else if ( mp [ i ] == ' 2 ' )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        11,
        2
      ],
      "mod_code": [
        "map < int , int > m ;",
        "if ( mp [ i ] == 2 )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "map < int , int > m ;",
        "else if ( mp [ i ] == 2 )"
      ],
      "err_line": 10,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        2
      ],
      "mod_code": [
        "map < int , int > m ;",
        "else if ( mp [ i ] == 2 )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "map < int , int > m ;",
        "else if ( mp [ i ] == ' 2 ' )"
      ],
      "err_line": 10,
      "err_msg": "‘mp’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        14,
        2
      ],
      "mod_code": [
        "map < int , int > m ;",
        "else if ( mp [ i ] == ' 2 ' )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "map < int , int > m ;",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        2
      ],
      "mod_code": [
        "mp [ i ] ++ ;",
        "if ( mp [ i ] == 2 )",
        "else if ( mp [ i ] == 2 )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        11,
        14,
        2
      ],
      "mod_code": [
        "mp [ i ] ++ ;",
        "if ( mp [ i ] == 2 )",
        "else if ( mp [ i ] == ' 2 ' )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        11,
        2
      ],
      "mod_code": [
        "mp [ i ] ++ ;",
        "if ( mp [ i ] == 2 )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        14,
        2
      ],
      "mod_code": [
        "mp [ i ] ++ ;",
        "else if ( mp [ i ] == 2 )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        14,
        2
      ],
      "mod_code": [
        "mp [ i ] ++ ;",
        "else if ( mp [ i ] == ' 2 ' )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "mp [ i ] ++ ;",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        11,
        14,
        2
      ],
      "mod_code": [
        "if ( mp [ i ] == 2 )",
        "else if ( mp [ i ] == 2 )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        11,
        14,
        2
      ],
      "mod_code": [
        "if ( mp [ i ] == 2 )",
        "else if ( mp [ i ] == ' 2 ' )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "if ( mp [ i ] == 2 )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "else if ( mp [ i ] == 2 )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    },
    {
      "mod_line": [
        14,
        2
      ],
      "mod_code": [
        "else if ( mp [ i ] == ' 2 ' )",
        "int * a [ N ] ;"
      ],
      "err_line": 6,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘int*’)"
    }
  ]
}