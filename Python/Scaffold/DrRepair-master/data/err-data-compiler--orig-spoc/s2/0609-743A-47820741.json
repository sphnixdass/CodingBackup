{
  "meta": {
    "index": 609,
    "hitid": "36FQTHX3Z3L2CK1L87UKD7HSFJ6B36",
    "workerid": "AIWEXPJAU66D9",
    "probid": "743A",
    "subid": "47820741"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , a and b",
      "code": "int n , a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , a and b",
      "code": "cin >> n >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare an array of chars arr with size n + 2",
      "code": "char arr [ n + 2 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read n elements into arr",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> arr [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if arr [ a - 1 ] = arr [ b - 1 ]",
      "code": "if ( arr [ a - 1 ] == arr [ b - 1 ] )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print 0",
      "code": "cout << 0 << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print 1",
      "code": "cout << 1 << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "n [ n + 2 ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n [ n + 2 ] ;"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        5
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n [ n + 2 ] ;",
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n [ n + 2 ] ;",
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        7
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n [ n + 2 ] ;",
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        3,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n [ n + 2 ] ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        3,
        1,
        7
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n [ n + 2 ] ;",
        "int n , a + b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n [ n + 2 ] ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2,
        5,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        5,
        1,
        7
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )",
        "int n , a + b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        5,
        7
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        1,
        7
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "int n , a + b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cin >> n , a >> b ;",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "n [ n + 2 ] ;",
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        5,
        1
      ],
      "mod_code": [
        "n [ n + 2 ] ;",
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3,
        5,
        1,
        7
      ],
      "mod_code": [
        "n [ n + 2 ] ;",
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )",
        "int n , a + b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "n [ n + 2 ] ;",
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "n [ n + 2 ] ;",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3,
        1,
        7
      ],
      "mod_code": [
        "n [ n + 2 ] ;",
        "int n , a + b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "n [ n + 2 ] ;",
        "n"
      ],
      "err_line": 3,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )",
        "int n , a + b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        1,
        7
      ],
      "mod_code": [
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )",
        "int n , a + b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "if ( arr [ a - 1 ] = arr [ b - 1 ] )",
        "n"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , a + b ;",
        "n"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘+’ token"
    }
  ]
}