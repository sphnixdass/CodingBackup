{
  "meta": {
    "index": 2787,
    "hitid": "3WGCNLZJKF2ZHELQZZ77K4QVKK9D1S",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "900A",
    "subid": "48874766"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , x , y , x1 = 0 , x_1 = 0 be ints",
      "code": "int n , x , y , x1 = 0 , x_1 = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while decrementing n",
      "code": "while ( n -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read x and y",
      "code": "cin >> x >> y ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if x is non zero positive",
      "code": "if ( x > 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment x1",
      "code": "x1 ++ ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else if x is non zero negative",
      "code": "else if ( x < 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment x_1",
      "code": "x_1 ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if x1 and x_1 are both > = 2",
      "code": "if ( x1 >= 2 && x_1 >= 2 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print No",
      "code": "cout << \" No \" << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print Yes",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( strcmp ( x1 , x_1 ) >= 2 )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        13,
        3,
        10
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cout << \" YES\\n \" ;",
        "while ( n )",
        "if ( strcmp ( x1 , x_1 ) >= 2 )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        3,
        12
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cout << \" YES\\n \" ;",
        "while ( n )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        13,
        10
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cout << \" YES\\n \" ;",
        "if ( strcmp ( x1 , x_1 ) >= 2 )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        10,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cout << \" YES\\n \" ;",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "cin >> n >> y ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        10,
        12
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cout << \" YES\\n \" ;",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        13,
        4,
        12
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cout << \" YES\\n \" ;",
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        13,
        12
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cout << \" YES\\n \" ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        10
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "while ( n )",
        "if ( strcmp ( x1 , x_1 ) >= 2 )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        10,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "while ( n )",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "cin >> n >> y ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        10,
        12
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "while ( n )",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        3,
        4,
        12
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "while ( n )",
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        3,
        12
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "while ( n )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( strcmp ( x1 , x_1 ) >= 2 )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "cin >> n >> y ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        4,
        12
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        10,
        12
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        4,
        12
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        3,
        10
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "while ( n )",
        "if ( strcmp ( x1 , x_1 ) >= 2 )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        3,
        10,
        4
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "while ( n )",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "cin >> n >> y ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        3,
        10,
        12
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "while ( n )",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        3,
        4,
        12
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "while ( n )",
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        3,
        12
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "while ( n )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        10
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "if ( strcmp ( x1 , x_1 ) >= 2 )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        10,
        4
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "cin >> n >> y ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        10,
        4,
        12
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        10,
        12
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        4,
        12
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "cout << \" YES\\n \" ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "while ( n )",
        "if ( strcmp ( x1 , x_1 ) >= 2 )"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        4
      ],
      "mod_code": [
        "while ( n )",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "cin >> n >> y ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        4,
        12
      ],
      "mod_code": [
        "while ( n )",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        10,
        12
      ],
      "mod_code": [
        "while ( n )",
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        4,
        12
      ],
      "mod_code": [
        "while ( n )",
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "while ( n )",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        4
      ],
      "mod_code": [
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "cin >> n >> y ;"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        4,
        12
      ],
      "mod_code": [
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "if ( strcmp ( x1 , x_1 ) >= 2 )",
        "n"
      ],
      "err_line": 10,
      "err_msg": "invalid conversion from ‘int’ to ‘const char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "cin >> n >> y ;",
        "n"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}