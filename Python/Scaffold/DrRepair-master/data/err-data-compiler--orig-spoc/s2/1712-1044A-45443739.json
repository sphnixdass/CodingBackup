{
  "meta": {
    "index": 1712,
    "hitid": "3AQN9REUTFAW7KWTBOEGYR15R5GYD9",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "1044A",
    "subid": "45443739"
  },
  "lines": [
    {
      "line": 0,
      "text": "create const integer inf = 2147483647",
      "code": "const int inf = 2147483647 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "make constant int MAX = 1e5 + 10",
      "code": "const int MAX = 1e5 + 10 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let const int mod = 1e9 + 7",
      "code": "const int mod = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let ints n , m , and ans",
      "code": "int n , m , ans ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "make int arrays h of size MAX and book of size MAX",
      "code": "int h [ MAX ] , book [ MAX ] ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "declare Init",
      "code": "void Init ( )",
      "indent": 0
    },
    {
      "line": 6,
      "text": "set ans to 0",
      "code": "ans = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "set all contents of 0 to book",
      "code": "memset ( book , 0 , sizeof ( book ) ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "call Init ( )",
      "code": "Init ( ) ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 1 to n , read h [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> h [ i ] ; }",
      "indent": 1
    },
    {
      "line": 13,
      "text": "sort h + 1 using h + n + 1",
      "code": "sort ( h + 1 , h + n + 1 ) ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "make ints a , b , and c",
      "code": "int a , b , c ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = 1 to m",
      "code": "for ( int i = 1 ; i <= m ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "read a , b , and c",
      "code": "cin >> a >> b >> c ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if a is greater than 1 , continue loop",
      "code": "if ( a > 1 ) continue ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if b is equal to 1e9",
      "code": "if ( b == 1e9 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "increment ans",
      "code": "ans ++ ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "continue loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "create int temp = upper_bound ( h + 1 , h + n + 1 , b ) - h - 1",
      "code": "int temp = upper_bound ( h + 1 , h + n + 1 , b ) - h - 1 ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "while book [ temp ] is truthy , decrease temp by 1",
      "code": "while ( book [ temp ] ) temp -- ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "if temp is greater than or equal to 0 , set book [ temp ] to 1",
      "code": "if ( temp >= 0 ) book [ temp ] = 1 ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 27,
      "text": "if book [ i ] is truthy , increment ans",
      "code": "if ( book [ i ] ) ans ++ ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "display ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int Init ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const inf = 2147483647 ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int h [ MAX ] [ MAX ] ;"
      ],
      "err_line": 7,
      "err_msg": "‘book’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "void Init ;"
      ],
      "err_line": 5,
      "err_msg": "variable or field ‘Init’ declared void"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "Init ( ) ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "sort ( h + 1 + h + n + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [100010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "int temp = upper_bound ( h + 1 , h ) + n + 1 , b ) - h - 1 ;"
      ],
      "err_line": 22,
      "err_msg": "no matching function for call to ‘upper_bound(int*, int [100010])’"
    },
    {
      "mod_line": [
        5,
        20
      ],
      "mod_code": [
        "int Init ;",
        "continue continue ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        20,
        0
      ],
      "mod_code": [
        "int Init ;",
        "continue continue ;",
        "const inf = 2147483647 ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        5,
        20,
        0,
        13
      ],
      "mod_code": [
        "int Init ;",
        "continue continue ;",
        "const inf = 2147483647 ;",
        "sort ( h + 1 + h + n + 1 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        5,
        20,
        0,
        26
      ],
      "mod_code": [
        "int Init ;",
        "continue continue ;",
        "const inf = 2147483647 ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        5,
        20,
        0,
        18
      ],
      "mod_code": [
        "int Init ;",
        "continue continue ;",
        "const inf = 2147483647 ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        5,
        20,
        13
      ],
      "mod_code": [
        "int Init ;",
        "continue continue ;",
        "sort ( h + 1 + h + n + 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        20,
        13,
        26
      ],
      "mod_code": [
        "int Init ;",
        "continue continue ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        20,
        13,
        18
      ],
      "mod_code": [
        "int Init ;",
        "continue continue ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        20,
        26
      ],
      "mod_code": [
        "int Init ;",
        "continue continue ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        20,
        26,
        18
      ],
      "mod_code": [
        "int Init ;",
        "continue continue ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        20,
        18
      ],
      "mod_code": [
        "int Init ;",
        "continue continue ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "int Init ;",
        "const inf = 2147483647 ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        5,
        0,
        13
      ],
      "mod_code": [
        "int Init ;",
        "const inf = 2147483647 ;",
        "sort ( h + 1 + h + n + 1 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        5,
        0,
        13,
        26
      ],
      "mod_code": [
        "int Init ;",
        "const inf = 2147483647 ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        5,
        0,
        13,
        18
      ],
      "mod_code": [
        "int Init ;",
        "const inf = 2147483647 ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        5,
        0,
        26
      ],
      "mod_code": [
        "int Init ;",
        "const inf = 2147483647 ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        5,
        0,
        26,
        18
      ],
      "mod_code": [
        "int Init ;",
        "const inf = 2147483647 ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        5,
        0,
        18
      ],
      "mod_code": [
        "int Init ;",
        "const inf = 2147483647 ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "int Init ;",
        "sort ( h + 1 + h + n + 1 ) ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        13,
        26
      ],
      "mod_code": [
        "int Init ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        13,
        26,
        18
      ],
      "mod_code": [
        "int Init ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        13,
        18
      ],
      "mod_code": [
        "int Init ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        26
      ],
      "mod_code": [
        "int Init ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        26,
        18
      ],
      "mod_code": [
        "int Init ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "int Init ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 6,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20,
        0
      ],
      "mod_code": [
        "continue continue ;",
        "const inf = 2147483647 ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        0,
        13
      ],
      "mod_code": [
        "continue continue ;",
        "const inf = 2147483647 ;",
        "sort ( h + 1 + h + n + 1 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        0,
        13,
        26
      ],
      "mod_code": [
        "continue continue ;",
        "const inf = 2147483647 ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        0,
        13,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "const inf = 2147483647 ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        0,
        26
      ],
      "mod_code": [
        "continue continue ;",
        "const inf = 2147483647 ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        0,
        26,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "const inf = 2147483647 ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        0,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "const inf = 2147483647 ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        20,
        13
      ],
      "mod_code": [
        "continue continue ;",
        "sort ( h + 1 + h + n + 1 ) ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [100010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        20,
        13,
        26
      ],
      "mod_code": [
        "continue continue ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [100010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        20,
        13,
        26,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [100010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        20,
        13,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [100010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        20,
        26
      ],
      "mod_code": [
        "continue continue ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        20,
        26,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        20,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 20,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        0,
        13
      ],
      "mod_code": [
        "const inf = 2147483647 ;",
        "sort ( h + 1 + h + n + 1 ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        26
      ],
      "mod_code": [
        "const inf = 2147483647 ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        26,
        18
      ],
      "mod_code": [
        "const inf = 2147483647 ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        13,
        18
      ],
      "mod_code": [
        "const inf = 2147483647 ;",
        "sort ( h + 1 + h + n + 1 ) ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        26
      ],
      "mod_code": [
        "const inf = 2147483647 ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        26,
        18
      ],
      "mod_code": [
        "const inf = 2147483647 ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        0,
        18
      ],
      "mod_code": [
        "const inf = 2147483647 ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 0,
      "err_msg": "‘inf’ does not name a type"
    },
    {
      "mod_line": [
        13,
        26
      ],
      "mod_code": [
        "sort ( h + 1 + h + n + 1 ) ;",
        "for ( int i = 1 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [100010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        13,
        26,
        18
      ],
      "mod_code": [
        "sort ( h + 1 + h + n + 1 ) ;",
        "for ( int i = 1 ; i < n ; i ++ )",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [100010]’ to binary ‘operator+’"
    },
    {
      "mod_line": [
        13,
        18
      ],
      "mod_code": [
        "sort ( h + 1 + h + n + 1 ) ;",
        "if ( b == 1e9 ) break ;"
      ],
      "err_line": 13,
      "err_msg": "invalid operands of types ‘int*’ and ‘int [100010]’ to binary ‘operator+’"
    }
  ]
}