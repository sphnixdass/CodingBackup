{
  "meta": {
    "index": 517,
    "hitid": "3H1C3QRA01DOWN9OBR7B7IR7OTZECA",
    "workerid": "A28TIENUWLMMIP",
    "probid": "916A",
    "subid": "48516152"
  },
  "lines": [
    {
      "line": 0,
      "text": "define function del which takes in integers h , m and x as arguments",
      "code": "void del ( int & h , int & m , int x )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "subtract x from m",
      "code": "m -= x ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "if m is less than 0",
      "code": "if ( m < 0 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "add 60 to m",
      "code": "m += 60 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "decrement h",
      "code": "h -- ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if h is less than 0 , add 24 to h",
      "code": "if ( h < 0 ) { h += 24 ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 8,
      "text": "define function check which takes in integers h and m as arguments",
      "code": "bool check ( int h , int m )",
      "indent": 0
    },
    {
      "line": 9,
      "text": "while h is true",
      "code": "while ( h )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if h % 10 is equal to 7 , return true",
      "code": "if ( h % 10 == 7 ) return true ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "divide h by 10",
      "code": "h /= 10 ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 13,
      "text": "while m is true",
      "code": "while ( m )",
      "indent": 1
    },
    {
      "line": 14,
      "text": "if m % 10 is equal to 7 , return true",
      "code": "if ( m % 10 == 7 ) return true ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "divide m by 10",
      "code": "m /= 10 ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "return false",
      "code": "return false ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 20,
      "text": "let x be an integer",
      "code": "int x ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "let h and m be integers",
      "code": "int h , m ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "read in x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "read in h and m",
      "code": "cin >> h >> m ;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "let but be an integer , set but to 0",
      "code": "int but = 0 ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "while check is false",
      "code": "while ( ! check ( h , m ) )",
      "indent": 1
    },
    {
      "line": 26,
      "text": "run function del and take in parameters h , m , and x",
      "code": "del ( h , m , x ) ;",
      "indent": 2
    },
    {
      "line": 27,
      "text": "increment but",
      "code": "but ++ ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "print but",
      "code": "cout << but << endl ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "void check ( int h , int m )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "del ( h , m , x , x ) ;"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘void del(int&, int&, int)’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int del ( int h , int x , int x )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int x’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "x ;"
      ],
      "err_line": 20,
      "err_msg": "‘x’ was not declared in this scope"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "getline ( cin , x ) ;"
      ],
      "err_line": 22,
      "err_msg": "no matching function for call to ‘getline(std::istream&, int&)’"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "cin >> n >> m ;"
      ],
      "err_line": 23,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "del . in ( h , m , x ) ;"
      ],
      "err_line": 26,
      "err_msg": "request for member ‘in’ in ‘del’, which is of non-class type ‘void(int&, int&, int)’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "cout << * max_element ( 0 ) << endl ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max_element(int)’"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "void check ( int h , int m )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        25
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "void check ( int h , int m )",
        "while ( ! check )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        25,
        26
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "void check ( int h , int m )",
        "while ( ! check )",
        "del ( h , m , x , x ) ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        25,
        29
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "void check ( int h , int m )",
        "while ( ! check )",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        25,
        13
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "void check ( int h , int m )",
        "while ( ! check )",
        "while ( m == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        26
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "void check ( int h , int m )",
        "del ( h , m , x , x ) ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        26,
        29
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "void check ( int h , int m )",
        "del ( h , m , x , x ) ;",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        26,
        13
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "void check ( int h , int m )",
        "del ( h , m , x , x ) ;",
        "while ( m == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        29
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "void check ( int h , int m )",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        29,
        13
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "void check ( int h , int m )",
        "cout << max ( 0 ) << endl ;",
        "while ( m == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8,
        13
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "void check ( int h , int m )",
        "while ( m == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        25,
        26
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "while ( ! check )",
        "del ( h , m , x , x ) ;"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘int del(int, int, int)’"
    },
    {
      "mod_line": [
        0,
        25,
        26,
        29
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "while ( ! check )",
        "del ( h , m , x , x ) ;",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘int del(int, int, int)’"
    },
    {
      "mod_line": [
        0,
        25,
        26,
        13
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "while ( ! check )",
        "del ( h , m , x , x ) ;",
        "while ( m == true )"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘int del(int, int, int)’"
    },
    {
      "mod_line": [
        0,
        25,
        29
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "while ( ! check )",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        0,
        25,
        29,
        13
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "while ( ! check )",
        "cout << max ( 0 ) << endl ;",
        "while ( m == true )"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        0,
        26
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "del ( h , m , x , x ) ;"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘int del(int, int, int)’"
    },
    {
      "mod_line": [
        0,
        26,
        29
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "del ( h , m , x , x ) ;",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘int del(int, int, int)’"
    },
    {
      "mod_line": [
        0,
        26,
        29,
        13
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "del ( h , m , x , x ) ;",
        "cout << max ( 0 ) << endl ;",
        "while ( m == true )"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘int del(int, int, int)’"
    },
    {
      "mod_line": [
        0,
        26,
        13
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "del ( h , m , x , x ) ;",
        "while ( m == true )"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘int del(int, int, int)’"
    },
    {
      "mod_line": [
        0,
        29
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        0,
        29,
        13
      ],
      "mod_code": [
        "int del ( int h , int m , int x )",
        "cout << max ( 0 ) << endl ;",
        "while ( m == true )"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        8,
        25
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "while ( ! check )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        25,
        26
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "while ( ! check )",
        "del ( h , m , x , x ) ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        25,
        26,
        29
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "while ( ! check )",
        "del ( h , m , x , x ) ;",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        25,
        26,
        13
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "while ( ! check )",
        "del ( h , m , x , x ) ;",
        "while ( m == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        25,
        29
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "while ( ! check )",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        25,
        29,
        13
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "while ( ! check )",
        "cout << max ( 0 ) << endl ;",
        "while ( m == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        25,
        13
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "while ( ! check )",
        "while ( m == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        26
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "del ( h , m , x , x ) ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        26,
        29
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "del ( h , m , x , x ) ;",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        26,
        29,
        13
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "del ( h , m , x , x ) ;",
        "cout << max ( 0 ) << endl ;",
        "while ( m == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        26,
        13
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "del ( h , m , x , x ) ;",
        "while ( m == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        29
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        29,
        13
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "cout << max ( 0 ) << endl ;",
        "while ( m == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "void check ( int h , int m )",
        "while ( m == true )"
      ],
      "err_line": 10,
      "err_msg": "return-statement with a value, in function returning 'void' [-fpermissive]"
    },
    {
      "mod_line": [
        25,
        26
      ],
      "mod_code": [
        "while ( ! check )",
        "del ( h , m , x , x ) ;"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘void del(int&, int&, int)’"
    },
    {
      "mod_line": [
        25,
        26,
        29
      ],
      "mod_code": [
        "while ( ! check )",
        "del ( h , m , x , x ) ;",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘void del(int&, int&, int)’"
    },
    {
      "mod_line": [
        25,
        26,
        29,
        13
      ],
      "mod_code": [
        "while ( ! check )",
        "del ( h , m , x , x ) ;",
        "cout << max ( 0 ) << endl ;",
        "while ( m == true )"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘void del(int&, int&, int)’"
    },
    {
      "mod_line": [
        25,
        26,
        13
      ],
      "mod_code": [
        "while ( ! check )",
        "del ( h , m , x , x ) ;",
        "while ( m == true )"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘void del(int&, int&, int)’"
    },
    {
      "mod_line": [
        25,
        29
      ],
      "mod_code": [
        "while ( ! check )",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        25,
        29,
        13
      ],
      "mod_code": [
        "while ( ! check )",
        "cout << max ( 0 ) << endl ;",
        "while ( m == true )"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int)’"
    },
    {
      "mod_line": [
        26,
        29
      ],
      "mod_code": [
        "del ( h , m , x , x ) ;",
        "cout << max ( 0 ) << endl ;"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘void del(int&, int&, int)’"
    },
    {
      "mod_line": [
        26,
        29,
        13
      ],
      "mod_code": [
        "del ( h , m , x , x ) ;",
        "cout << max ( 0 ) << endl ;",
        "while ( m == true )"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘void del(int&, int&, int)’"
    },
    {
      "mod_line": [
        26,
        13
      ],
      "mod_code": [
        "del ( h , m , x , x ) ;",
        "while ( m == true )"
      ],
      "err_line": 26,
      "err_msg": "too many arguments to function ‘void del(int&, int&, int)’"
    },
    {
      "mod_line": [
        29,
        13
      ],
      "mod_code": [
        "cout << max ( 0 ) << endl ;",
        "while ( m == true )"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘max(int)’"
    }
  ]
}