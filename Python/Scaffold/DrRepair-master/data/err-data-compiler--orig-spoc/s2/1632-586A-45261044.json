{
  "meta": {
    "index": 1632,
    "hitid": "371DNNCG44WO9318KAG14IVP1C5T8D",
    "workerid": "A2QLFQ2ZYR6B7M",
    "probid": "586A",
    "subid": "45261044"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = attay of 105 int",
      "code": "int a [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while read n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "st = 1",
      "code": "int st = 1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "for i = 1 to n inclusive read a [ i ]",
      "code": "for ( int i = 1 ; i <= n ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = n down to 1 inclusive",
      "code": "for ( int i = n ; i >= 1 ; i -- )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if a [ i ] is 0",
      "code": "if ( a [ i ] == 0 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "decrement n",
      "code": "n -- ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 10,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 12,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "if a [ i ] is 1",
      "code": "if ( a [ i ] == 1 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "st = i",
      "code": "st = i ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "break",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "ans = n - st + 1 , len = 0",
      "code": "int ans = n - st + 1 , len = 0 ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "for i = st to n inclusive",
      "code": "for ( int i = st ; i <= n ; i ++ )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "if a [ i ] is 1",
      "code": "if ( a [ i ] == 1 )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "if len > = 2 subtract len from ans",
      "code": "if ( len >= 2 ) { ans -= len ; }",
      "indent": 4
    },
    {
      "line": 22,
      "text": "len = 0",
      "code": "len = 0 ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 24,
      "text": "increment len",
      "code": "len ++ ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 27,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "a = attay . attay ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "st = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "a = 105 . attay ( ) ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool n ;"
      ],
      "err_line": 8,
      "err_msg": "invalid use of Boolean expression as operand to ‘operator--’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = n ; i >= 1 ; i -- )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "ans = n - st + 1 , len = 0 ;"
      ],
      "err_line": 18,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "for ( i = st ; i <= n ; i ++ )"
      ],
      "err_line": 19,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 24,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "st = 1 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        22
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "st = 1 ;",
        "int len = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        22,
        9
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "st = 1 ;",
        "int len = 0 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        22,
        12
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "st = 1 ;",
        "int len = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        22,
        14
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "st = 1 ;",
        "int len = 0 ;",
        "int st = i ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        9
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "st = 1 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        12
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "st = 1 ;",
        "n",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        9,
        14
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "st = 1 ;",
        "n",
        "int st = i ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        12
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "st = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        12,
        14
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "st = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int st = i ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        14
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "st = 1 ;",
        "int st = i ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        22
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "int len = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        22,
        9
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "int len = 0 ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        22,
        9,
        12
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "int len = 0 ;",
        "n",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        22,
        9,
        14
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "int len = 0 ;",
        "n",
        "int st = i ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        22,
        12
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "int len = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        22,
        12,
        14
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "int len = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int st = i ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        22,
        14
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "int len = 0 ;",
        "int st = i ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "n"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9,
        12
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "n",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9,
        12,
        14
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "n",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int st = i ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        9,
        14
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "n",
        "int st = i ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12,
        14
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int st = i ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "a = attay . attay ( ) ;",
        "int st = i ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4,
        22
      ],
      "mod_code": [
        "st = 1 ;",
        "int len = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        9
      ],
      "mod_code": [
        "st = 1 ;",
        "int len = 0 ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        9,
        12
      ],
      "mod_code": [
        "st = 1 ;",
        "int len = 0 ;",
        "n",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        9,
        14
      ],
      "mod_code": [
        "st = 1 ;",
        "int len = 0 ;",
        "n",
        "int st = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        12
      ],
      "mod_code": [
        "st = 1 ;",
        "int len = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        12,
        14
      ],
      "mod_code": [
        "st = 1 ;",
        "int len = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int st = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        22,
        14
      ],
      "mod_code": [
        "st = 1 ;",
        "int len = 0 ;",
        "int st = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "st = 1 ;",
        "n"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        12
      ],
      "mod_code": [
        "st = 1 ;",
        "n",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        12,
        14
      ],
      "mod_code": [
        "st = 1 ;",
        "n",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int st = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        9,
        14
      ],
      "mod_code": [
        "st = 1 ;",
        "n",
        "int st = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "st = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12,
        14
      ],
      "mod_code": [
        "st = 1 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int st = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "st = 1 ;",
        "int st = i ;"
      ],
      "err_line": 4,
      "err_msg": "‘st’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        9
      ],
      "mod_code": [
        "int len = 0 ;",
        "n"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        9,
        12
      ],
      "mod_code": [
        "int len = 0 ;",
        "n",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        9,
        12,
        14
      ],
      "mod_code": [
        "int len = 0 ;",
        "n",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int st = i ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        9,
        14
      ],
      "mod_code": [
        "int len = 0 ;",
        "n",
        "int st = i ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        22,
        12
      ],
      "mod_code": [
        "int len = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        12,
        14
      ],
      "mod_code": [
        "int len = 0 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int st = i ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "n",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        12,
        14
      ],
      "mod_code": [
        "n",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int st = i ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "n",
        "int st = i ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int st = i ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    }
  ]
}