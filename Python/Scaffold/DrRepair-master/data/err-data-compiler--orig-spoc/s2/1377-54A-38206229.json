{
  "meta": {
    "index": 1377,
    "hitid": "3OCZWXS7ZO1H38A1D37767BH59GL5Y",
    "workerid": "ACI8PUCF5OPDC",
    "probid": "54A",
    "subid": "38206229"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer array a with size 400",
      "code": "int a [ 400 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , k , c , x",
      "code": "int n , k , c , x ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n , k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read c",
      "code": "cin >> c ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to c - 1 with increment i do read a [ i ]",
      "code": "for ( int i = 0 ; i < c ; i ++ ) { cin >> a [ i ] ; }",
      "indent": 1
    },
    {
      "line": 6,
      "text": "create integer ans with ans = 0",
      "code": "int ans = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "create integers d , t with value 0 each",
      "code": "int d = 0 , t = 0 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "while d less than or equal to n do",
      "code": "while ( d <= n )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if d + k less than a [ t ] or t greater than or equal to c then",
      "code": "if ( d + k < a [ t ] || t >= c )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "add k to d",
      "code": "d += k ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "if d less than or equal to n then increment ans",
      "code": "if ( d <= n ) ans ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set d to a [ t ] and increment t",
      "code": "d = a [ t ++ ] ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if d less than or equal to n then increment ans",
      "code": "if ( d <= n ) ans ++ ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "a [ 400 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "n , k , c , x ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        3,
        0
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "cin >> n , k ;",
        "a [ 400 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4,
        3,
        0,
        1
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "cin >> n , k ;",
        "a [ 400 ] ;",
        "n , k , c , x ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4,
        3,
        0,
        6
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "cin >> n , k ;",
        "a [ 400 ] ;",
        "ans = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4,
        3,
        0,
        12
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "cin >> n , k ;",
        "a [ 400 ] ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4,
        3,
        1
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "cin >> n , k ;",
        "n , k , c , x ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        6
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "cin >> n , k ;",
        "n , k , c , x ;",
        "ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        4,
        3,
        1,
        12
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "cin >> n , k ;",
        "n , k , c , x ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "cin >> n , k ;",
        "ans = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        6,
        12
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "cin >> n , k ;",
        "ans = 0 ;",
        "else do"
      ],
      "err_line": 6,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3,
        12
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "cin >> n , k ;",
        "else do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "a [ 400 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4,
        0,
        1
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "a [ 400 ] ;",
        "n , k , c , x ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4,
        0,
        1,
        6
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "a [ 400 ] ;",
        "n , k , c , x ;",
        "ans = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4,
        0,
        1,
        12
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "a [ 400 ] ;",
        "n , k , c , x ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4,
        0,
        6
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "a [ 400 ] ;",
        "ans = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4,
        0,
        6,
        12
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "a [ 400 ] ;",
        "ans = 0 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4,
        0,
        12
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "a [ 400 ] ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "n , k , c , x ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1,
        6
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "n , k , c , x ;",
        "ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1,
        6,
        12
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "n , k , c , x ;",
        "ans = 0 ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        4,
        1,
        12
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "n , k , c , x ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "ans = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        12
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "ans = 0 ;",
        "else do"
      ],
      "err_line": 6,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        12
      ],
      "mod_code": [
        "c = getchar ( ) ;",
        "else do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "cin >> n , k ;",
        "a [ 400 ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        1
      ],
      "mod_code": [
        "cin >> n , k ;",
        "a [ 400 ] ;",
        "n , k , c , x ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        1,
        6
      ],
      "mod_code": [
        "cin >> n , k ;",
        "a [ 400 ] ;",
        "n , k , c , x ;",
        "ans = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        1,
        12
      ],
      "mod_code": [
        "cin >> n , k ;",
        "a [ 400 ] ;",
        "n , k , c , x ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        6
      ],
      "mod_code": [
        "cin >> n , k ;",
        "a [ 400 ] ;",
        "ans = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        6,
        12
      ],
      "mod_code": [
        "cin >> n , k ;",
        "a [ 400 ] ;",
        "ans = 0 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        3,
        0,
        12
      ],
      "mod_code": [
        "cin >> n , k ;",
        "a [ 400 ] ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        3,
        1
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n , k , c , x ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        3,
        1,
        6
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n , k , c , x ;",
        "ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        3,
        1,
        6,
        12
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n , k , c , x ;",
        "ans = 0 ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        3,
        1,
        12
      ],
      "mod_code": [
        "cin >> n , k ;",
        "n , k , c , x ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "cin >> n , k ;",
        "ans = 0 ;"
      ],
      "err_line": 6,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        6,
        12
      ],
      "mod_code": [
        "cin >> n , k ;",
        "ans = 0 ;",
        "else do"
      ],
      "err_line": 6,
      "err_msg": "‘ans’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "cin >> n , k ;",
        "else do"
      ],
      "err_line": 16,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "a [ 400 ] ;",
        "n , k , c , x ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        6
      ],
      "mod_code": [
        "a [ 400 ] ;",
        "n , k , c , x ;",
        "ans = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        6,
        12
      ],
      "mod_code": [
        "a [ 400 ] ;",
        "n , k , c , x ;",
        "ans = 0 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1,
        12
      ],
      "mod_code": [
        "a [ 400 ] ;",
        "n , k , c , x ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "a [ 400 ] ;",
        "ans = 0 ;"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        12
      ],
      "mod_code": [
        "a [ 400 ] ;",
        "ans = 0 ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "a [ 400 ] ;",
        "else do"
      ],
      "err_line": 0,
      "err_msg": "‘a’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "n , k , c , x ;",
        "ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        1,
        6,
        12
      ],
      "mod_code": [
        "n , k , c , x ;",
        "ans = 0 ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        1,
        12
      ],
      "mod_code": [
        "n , k , c , x ;",
        "else do"
      ],
      "err_line": 1,
      "err_msg": "‘n’ does not name a type"
    },
    {
      "mod_line": [
        6,
        12
      ],
      "mod_code": [
        "ans = 0 ;",
        "else do"
      ],
      "err_line": 6,
      "err_msg": "‘ans’ was not declared in this scope"
    }
  ]
}