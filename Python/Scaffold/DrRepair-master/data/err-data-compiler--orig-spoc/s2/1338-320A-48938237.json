{
  "meta": {
    "index": 1338,
    "hitid": "3AXFSPQOYQS3AFFQGU83C4P2QEQJFE",
    "workerid": "AIWEXPJAU66D9",
    "probid": "320A",
    "subid": "48938237"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "define string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read user input to s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "define integer variable ans",
      "code": "int ans ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "define new boolean called yay = true",
      "code": "bool yay = true ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 0 to length of s exclusive",
      "code": "for ( int i = 0 ; i < s . size ( ) ; )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if s [ i ] is equal to ' 1 ' , and s [ i + 1 ] and s [ i + 2 ] are equal to ' 4 '",
      "code": "if ( s [ i ] == ' 1 ' && s [ i + 1 ] == ' 4 ' && s [ i + 2 ] == ' 4 ' )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "change the value of i to i + 3",
      "code": "i = i + 3 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if s [ i ] is equal to ' 1 ' and s [ i + 1 ] is equal to ' 4 '",
      "code": "else if ( s [ i ] == ' 1 ' && s [ i + 1 ] == ' 4 ' )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "change the value of i to i + 2",
      "code": "i = i + 2 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if s [ i ] = ' 1 '",
      "code": "else if ( s [ i ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment i by one",
      "code": "i ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char s ;"
      ],
      "err_line": 5,
      "err_msg": "request for member ‘size’ in ‘s’, which is of non-class type ‘char’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        17
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "s >> s ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        17,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "s >> s ;",
        "cout << \" YES \" ;",
        "else if ( s [ i ] = ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        17,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "s >> s ;",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        10
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "s >> s ;",
        "else if ( s [ i ] = ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        10,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "s >> s ;",
        "else if ( s [ i ] = ' 1 ' )",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        2,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        17,
        10,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << \" YES \" ;",
        "else if ( s [ i ] = ' 1 ' )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "else if ( s [ i ] = ' 1 ' )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . length ( ) ; i ++ )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "s >> s ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        5,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "cout << \" YES \" ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        5,
        17,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "cout << \" YES \" ;",
        "else if ( s [ i ] = ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        5,
        17,
        12
      ],
      "mod_code": [
        "s >> s ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        5,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "else if ( s [ i ] = ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        5,
        10,
        12
      ],
      "mod_code": [
        "s >> s ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "else if ( s [ i ] = ' 1 ' )",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        5,
        12
      ],
      "mod_code": [
        "s >> s ;",
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        17
      ],
      "mod_code": [
        "s >> s ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        17,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "cout << \" YES \" ;",
        "else if ( s [ i ] = ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        17,
        10,
        12
      ],
      "mod_code": [
        "s >> s ;",
        "cout << \" YES \" ;",
        "else if ( s [ i ] = ' 1 ' )",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        17,
        12
      ],
      "mod_code": [
        "s >> s ;",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "s >> s ;",
        "else if ( s [ i ] = ' 1 ' )"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        10,
        12
      ],
      "mod_code": [
        "s >> s ;",
        "else if ( s [ i ] = ' 1 ' )",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "s >> s ;",
        "n"
      ],
      "err_line": 2,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        5,
        17,
        10,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "cout << \" YES \" ;",
        "else if ( s [ i ] = ' 1 ' )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        17,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        10,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "else if ( s [ i ] = ' 1 ' )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "for ( int i = 0 ; i < s . size ( ) ; i ++ )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        10,
        12
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "else if ( s [ i ] = ' 1 ' )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        17,
        12
      ],
      "mod_code": [
        "cout << \" YES \" ;",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        12
      ],
      "mod_code": [
        "else if ( s [ i ] = ' 1 ' )",
        "n"
      ],
      "err_line": 12,
      "err_msg": "‘n’ was not declared in this scope"
    }
  ]
}