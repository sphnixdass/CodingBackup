{
  "meta": {
    "index": 286,
    "hitid": "3JMNNNO3B1Y5F53DZYCBHBPLJ6Q2W4",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "1082A",
    "subid": "48368073"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "t , n , d , x , y , s , s1 , s2 , num , num1 , num2 , flag = int",
      "code": "int t , n , d , x , y , s , s1 , s2 , num , num1 , num2 , flag ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read t",
      "code": "cin >> t ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "loop t times",
      "code": "while ( t -- )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set flag to 0",
      "code": "flag = 0 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "read n then x then y then d",
      "code": "cin >> n >> x >> y >> d ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set s to absolute of x - y",
      "code": "s = abs ( x - y ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if s is a multiple of d",
      "code": "if ( s % d == 0 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "print s / d",
      "code": "cout << s / d << endl ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "continue",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if ( n - x ) mod d is 0",
      "code": "if ( ( n - x ) % d == 0 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set s1 to ( n - x ) / d",
      "code": "s1 = ( n - x ) / d ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 14,
      "text": "set s1 to ( n - x ) / d + 1",
      "code": "s1 = ( n - x ) / d + 1 ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if ( x - 1 ) mod d is 0",
      "code": "if ( ( x - 1 ) % d == 0 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "set s2 to ( x - 1 ) / d",
      "code": "s2 = ( x - 1 ) / d ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 18,
      "text": "set s2 to ( x - 1 ) / d + 1",
      "code": "s2 = ( x - 1 ) / d + 1 ;",
      "indent": 3
    },
    {
      "line": 19,
      "text": "if ( n - y ) mod d is 0",
      "code": "if ( ( n - y ) % d == 0 )",
      "indent": 2
    },
    {
      "line": 20,
      "text": "set num1 to ( n - y ) / d + s1",
      "code": "num1 = ( n - y ) / d + s1 ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "set num1 to 0x3f3f3f3f",
      "code": "num1 = 0x3f3f3f3f ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "if ( y - 1 ) mod d is 0",
      "code": "if ( ( y - 1 ) % d == 0 )",
      "indent": 2
    },
    {
      "line": 24,
      "text": "set num2 to ( y - 1 ) / d + s2",
      "code": "num2 = ( y - 1 ) / d + s2 ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 26,
      "text": "set num2 to 0x3f3f3f3f",
      "code": "num2 = 0x3f3f3f3f ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "set num to min of num1 , num2",
      "code": "num = min ( num1 , num2 ) ;",
      "indent": 2
    },
    {
      "line": 28,
      "text": "if num is 0x3f3f3f3f",
      "code": "if ( num == 0x3f3f3f3f )",
      "indent": 2
    },
    {
      "line": 29,
      "text": "print \" - 1 \"",
      "code": "cout << \" -1 \" << endl ;",
      "indent": 3
    },
    {
      "line": 30,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 31,
      "text": "print num",
      "code": "cout << num << endl ;",
      "indent": 3
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int t , n , d , x , y , s , s1 , s2 , num , num2 , num2 , flag ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int num2’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "continue continue ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 14,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 26,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 31,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "continue continue ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        9,
        21
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "continue continue ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        9,
        21,
        18
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "continue continue ;",
        "n",
        "int s2 = ( x - 1 ) / d + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        9,
        21,
        22
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "continue continue ;",
        "n",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        9,
        21,
        28
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "continue continue ;",
        "n",
        "if ( ! num )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        9,
        18
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "continue continue ;",
        "int s2 = ( x - 1 ) / d + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        9,
        18,
        22
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "continue continue ;",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        9,
        18,
        28
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "continue continue ;",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "if ( ! num )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        9,
        22
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "continue continue ;",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        9,
        22,
        28
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "continue continue ;",
        "int num1 = 0x3f3f3f3f ;",
        "if ( ! num )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        9,
        28
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "continue continue ;",
        "if ( ! num )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        21
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "n"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        21,
        18
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "n",
        "int s2 = ( x - 1 ) / d + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        21,
        18,
        22
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "n",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        21,
        18,
        28
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "n",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "if ( ! num )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        21,
        22
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "n",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        21,
        22,
        28
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "n",
        "int num1 = 0x3f3f3f3f ;",
        "if ( ! num )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        21,
        28
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "n",
        "if ( ! num )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        18
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "int s2 = ( x - 1 ) / d + 1 ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        18,
        22
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        18,
        22,
        28
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "int num1 = 0x3f3f3f3f ;",
        "if ( ! num )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        18,
        28
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "if ( ! num )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        22
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        22,
        28
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "int num1 = 0x3f3f3f3f ;",
        "if ( ! num )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        5,
        28
      ],
      "mod_code": [
        "cin >> n >> x >> y then d ;",
        "if ( ! num )"
      ],
      "err_line": 5,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        9,
        21
      ],
      "mod_code": [
        "continue continue ;",
        "n"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        21,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "n",
        "int s2 = ( x - 1 ) / d + 1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        21,
        18,
        22
      ],
      "mod_code": [
        "continue continue ;",
        "n",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        21,
        18,
        28
      ],
      "mod_code": [
        "continue continue ;",
        "n",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "if ( ! num )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        21,
        22
      ],
      "mod_code": [
        "continue continue ;",
        "n",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        21,
        22,
        28
      ],
      "mod_code": [
        "continue continue ;",
        "n",
        "int num1 = 0x3f3f3f3f ;",
        "if ( ! num )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        21,
        28
      ],
      "mod_code": [
        "continue continue ;",
        "n",
        "if ( ! num )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        18
      ],
      "mod_code": [
        "continue continue ;",
        "int s2 = ( x - 1 ) / d + 1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        18,
        22
      ],
      "mod_code": [
        "continue continue ;",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        18,
        22,
        28
      ],
      "mod_code": [
        "continue continue ;",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "int num1 = 0x3f3f3f3f ;",
        "if ( ! num )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        18,
        28
      ],
      "mod_code": [
        "continue continue ;",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "if ( ! num )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        22
      ],
      "mod_code": [
        "continue continue ;",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        22,
        28
      ],
      "mod_code": [
        "continue continue ;",
        "int num1 = 0x3f3f3f3f ;",
        "if ( ! num )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        9,
        28
      ],
      "mod_code": [
        "continue continue ;",
        "if ( ! num )"
      ],
      "err_line": 9,
      "err_msg": "expected ‘;’ before ‘continue’"
    },
    {
      "mod_line": [
        21,
        18
      ],
      "mod_code": [
        "n",
        "int s2 = ( x - 1 ) / d + 1 ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        18,
        22
      ],
      "mod_code": [
        "n",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        18,
        22,
        28
      ],
      "mod_code": [
        "n",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "int num1 = 0x3f3f3f3f ;",
        "if ( ! num )"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        18,
        28
      ],
      "mod_code": [
        "n",
        "int s2 = ( x - 1 ) / d + 1 ;",
        "if ( ! num )"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        22
      ],
      "mod_code": [
        "n",
        "int num1 = 0x3f3f3f3f ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        22,
        28
      ],
      "mod_code": [
        "n",
        "int num1 = 0x3f3f3f3f ;",
        "if ( ! num )"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        21,
        28
      ],
      "mod_code": [
        "n",
        "if ( ! num )"
      ],
      "err_line": 22,
      "err_msg": "expected ‘;’ before ‘{’ token"
    }
  ]
}