{
  "meta": {
    "index": 1661,
    "hitid": "3DZKABX2ZIZ5YYVA6HWL7MFTN13VCN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1076A",
    "subid": "48975787"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long long n",
      "code": "long long n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string s",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create long long check = n - 1",
      "code": "long long check = n - 1 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for long long i = 0 to n - 1 exclusive",
      "code": "for ( long long i = 0 ; i < n - 1 ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s [ i ] is greater than s [ i + 1 ]",
      "code": "if ( s [ i ] > s [ i + 1 ] )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "assign value of i to check",
      "code": "check = i ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "stop the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "for i = 0 to n exclusive",
      "code": "for ( long long i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if check ! = i , print s [ i ]",
      "code": "if ( check != i ) cout << s [ i ] ;",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string S ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        3
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "string S ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        3,
        12
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "string S ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        3,
        12,
        2
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "string S ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        3,
        12,
        4
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "string S ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        3,
        2
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "string S ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        3,
        2,
        4
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "string S ;",
        "n = getchar ( ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        3,
        4
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "string S ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        13,
        12
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        12,
        2
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        13,
        12,
        2,
        4
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        12,
        4
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        2,
        4
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "n = getchar ( ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        13,
        4
      ],
      "mod_code": [
        "if ( check != i ) cout << s [ i ] << endl ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "string S ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        2
      ],
      "mod_code": [
        "string S ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        2,
        4
      ],
      "mod_code": [
        "string S ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        12,
        4
      ],
      "mod_code": [
        "string S ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "string S ;",
        "n = getchar ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        2,
        4
      ],
      "mod_code": [
        "string S ;",
        "n = getchar ( ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        3,
        4
      ],
      "mod_code": [
        "string S ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        2
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        2,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "n = getchar ( ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "n = getchar ( ) ;",
        "s >> s ;"
      ],
      "err_line": 4,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ and ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’)"
    }
  ]
}