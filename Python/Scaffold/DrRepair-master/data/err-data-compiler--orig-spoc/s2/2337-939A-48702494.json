{
  "meta": {
    "index": 2337,
    "hitid": "3APP19WN718X0KWE7VKWLLK95N36GR",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "939A",
    "subid": "48702494"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function checkTriangle taking const int index , const int vector f and returning bool",
      "code": "bool checkTriangle ( const int index , const vector < int > f )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "tmp = int with tmp = index",
      "code": "int tmp = index ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "i = int with i = 0",
      "code": "int i = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "loop while i < 3",
      "code": "while ( i < 3 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set tmp to f [ tmp ] - 1",
      "code": "tmp = f [ tmp ] - 1 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 7,
      "text": "return tmp equals index",
      "code": "return tmp == index ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 10,
      "text": "n = int",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "f = int vector of size n",
      "code": "vector < int > f ( n ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "read n values into f",
      "code": "for ( int i = 0 ; i < n ; i ++ ) { cin >> f [ i ] ; }",
      "indent": 1
    },
    {
      "line": 14,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if checkTriangle of i , f",
      "code": "if ( checkTriangle ( i , f ) )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "bool checkTriangle ( const int index , vector < int f f )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int * i = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "vector < int > f [ n ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘checkTriangle’ in ‘checkTriangle’, which is of non-class type ‘bool(int, std::vector<int>)’"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "if ( checkTriangle . checkTriangle ( ) , f )"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘checkTriangle’ in ‘checkTriangle’, which is of non-class type ‘bool(int, std::vector<int>)’"
    },
    {
      "mod_line": [
        3,
        15,
        0
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "bool checkTriangle ( const int index , vector < int f f )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        15,
        0,
        14
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "bool checkTriangle ( const int index , vector < int f f )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        15,
        0,
        12
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "bool checkTriangle ( const int index , vector < int f f )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        15,
        0,
        16
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "bool checkTriangle ( const int index , vector < int f f )",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        15,
        14
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        15,
        14,
        12
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        14,
        16
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        15,
        12
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        12,
        16
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "vector < int > f [ n ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        15,
        16
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "cout << \" YES \" ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘checkTriangle’ in ‘checkTriangle’, which is of non-class type ‘bool(int, std::vector<int>)’"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "bool checkTriangle ( const int index , vector < int f f )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        0,
        14
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "bool checkTriangle ( const int index , vector < int f f )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        0,
        14,
        12
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "bool checkTriangle ( const int index , vector < int f f )",
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        0,
        14,
        16
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "bool checkTriangle ( const int index , vector < int f f )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        0,
        12
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "bool checkTriangle ( const int index , vector < int f f )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        0,
        12,
        16
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "bool checkTriangle ( const int index , vector < int f f )",
        "vector < int > f [ n ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        0,
        16
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "bool checkTriangle ( const int index , vector < int f f )",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        3,
        14
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        14,
        12
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        14,
        12,
        16
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < int > f [ n ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        14,
        16
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        3,
        12,
        16
      ],
      "mod_code": [
        "while ( i < 3 ) ;",
        "vector < int > f [ n ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "bool checkTriangle ( const int index , vector < int f f )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        15,
        0,
        14
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "bool checkTriangle ( const int index , vector < int f f )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        15,
        0,
        14,
        12
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "bool checkTriangle ( const int index , vector < int f f )",
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        15,
        0,
        14,
        16
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "bool checkTriangle ( const int index , vector < int f f )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        15,
        0,
        12
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "bool checkTriangle ( const int index , vector < int f f )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        15,
        0,
        12,
        16
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "bool checkTriangle ( const int index , vector < int f f )",
        "vector < int > f [ n ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        15,
        0,
        16
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "bool checkTriangle ( const int index , vector < int f f )",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        15,
        14
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        14,
        12
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        14,
        12,
        16
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < int > f [ n ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        14,
        16
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        15,
        12
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        12,
        16
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "vector < int > f [ n ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        15,
        16
      ],
      "mod_code": [
        "if ( checkTriangle . checkTriangle ( ) , f )",
        "cout << \" YES \" ;"
      ],
      "err_line": 15,
      "err_msg": "request for member ‘checkTriangle’ in ‘checkTriangle’, which is of non-class type ‘bool(int, std::vector<int>)’"
    },
    {
      "mod_line": [
        0,
        14
      ],
      "mod_code": [
        "bool checkTriangle ( const int index , vector < int f f )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        14,
        12
      ],
      "mod_code": [
        "bool checkTriangle ( const int index , vector < int f f )",
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        14,
        12,
        16
      ],
      "mod_code": [
        "bool checkTriangle ( const int index , vector < int f f )",
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < int > f [ n ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        14,
        16
      ],
      "mod_code": [
        "bool checkTriangle ( const int index , vector < int f f )",
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        12
      ],
      "mod_code": [
        "bool checkTriangle ( const int index , vector < int f f )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        12,
        16
      ],
      "mod_code": [
        "bool checkTriangle ( const int index , vector < int f f )",
        "vector < int > f [ n ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        0,
        16
      ],
      "mod_code": [
        "bool checkTriangle ( const int index , vector < int f f )",
        "cout << \" YES \" ;"
      ],
      "err_line": 0,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        14,
        12
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < int > f [ n ] ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        14,
        12,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < int > f [ n ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    },
    {
      "mod_line": [
        14,
        16
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "cout << \" YES \" ;"
      ],
      "err_line": 14,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "vector < int > f [ n ] ;",
        "cout << \" YES \" ;"
      ],
      "err_line": 13,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘std::vector<int>’)"
    }
  ]
}