{
  "meta": {
    "index": 302,
    "hitid": "32ZCLEW0BZEF1S4KUX48OY36SKDPJN",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "735A",
    "subid": "48781513"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int n and k",
      "code": "int n , k ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create string str",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "create int s and t",
      "code": "int s , t ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if str [ i ] = G",
      "code": "if ( str [ i ] == ' G ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "s = i",
      "code": "s = i ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if str [ i ] = T",
      "code": "else if ( str [ i ] == ' T ' )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "t = i",
      "code": "t = i ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if t > s",
      "code": "if ( t > s )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "if ( t - s ) % k different from 0",
      "code": "if ( ( t - s ) % k != 0 )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for i = s to t exclusive , with increment i = i + k",
      "code": "for ( int i = s ; i < t ; i += k )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if str [ i ] = #",
      "code": "if ( str [ i ] == ' # ' )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 25,
      "text": "if ( s - t ) % k different from 0",
      "code": "if ( ( s - t ) % k != 0 )",
      "indent": 2
    },
    {
      "line": 26,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 3
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 29,
      "text": "for i = s to t exclusive , with decrement of i = i - k",
      "code": "for ( int i = s ; i > t ; i -= k )",
      "indent": 2
    },
    {
      "line": 30,
      "text": "if str [ i ] = #",
      "code": "if ( str [ i ] == ' # ' )",
      "indent": 3
    },
    {
      "line": 31,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int n’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( cin >> n >> k )"
      ],
      "err_line": 4,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "string str << endl ;"
      ],
      "err_line": 3,
      "err_msg": "expected initializer before ‘<<’ token"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int s create t ;"
      ],
      "err_line": 5,
      "err_msg": "expected initializer before ‘create’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "if ( str [ i ] == G )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else if ( str [ i ] == T )"
      ],
      "err_line": 9,
      "err_msg": "‘T’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 25,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        29,
        6
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        30
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == ' ' )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        30,
        7
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == ' ' )",
        "if ( str [ i ] == G )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        30,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == ' ' )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == G )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == G )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        30,
        7
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "if ( str [ i ] == ' ' )",
        "if ( str [ i ] == G )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        30,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "if ( str [ i ] == ' ' )",
        "if ( str [ i ] == G )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        30,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "if ( str [ i ] == ' ' )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 9,
      "err_msg": "‘T’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        7
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "if ( str [ i ] == G )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "if ( str [ i ] == G )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i = i - k )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 9,
      "err_msg": "‘T’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        30
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == ' ' )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        30,
        7
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == ' ' )",
        "if ( str [ i ] == G )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        30,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == ' ' )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        7
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == G )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == G )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        6,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        30,
        7
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "if ( str [ i ] == ' ' )",
        "if ( str [ i ] == G )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        30,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "if ( str [ i ] == ' ' )",
        "if ( str [ i ] == G )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        30,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "if ( str [ i ] == ' ' )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 9,
      "err_msg": "‘T’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        7
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "if ( str [ i ] == G )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        7,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "if ( str [ i ] == G )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        29,
        9
      ],
      "mod_code": [
        "for ( int i = s ; i < t ; i += k )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 9,
      "err_msg": "‘T’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        30
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == ' ' )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        30,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == ' ' )",
        "if ( str [ i ] == G )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        30,
        7,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == ' ' )",
        "if ( str [ i ] == G )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        30,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == ' ' )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == G )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "if ( str [ i ] == G )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        7
      ],
      "mod_code": [
        "if ( str [ i ] == ' ' )",
        "if ( str [ i ] == G )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        7,
        9
      ],
      "mod_code": [
        "if ( str [ i ] == ' ' )",
        "if ( str [ i ] == G )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    },
    {
      "mod_line": [
        30,
        9
      ],
      "mod_code": [
        "if ( str [ i ] == ' ' )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 9,
      "err_msg": "‘T’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( str [ i ] == G )",
        "else if ( str [ i ] == T )"
      ],
      "err_line": 7,
      "err_msg": "‘G’ was not declared in this scope"
    }
  ]
}