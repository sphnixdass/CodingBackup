{
  "meta": {
    "index": 2779,
    "hitid": "3IKDQS3DQEU0CSBA7AX2SXPZGM8ICP",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "900A",
    "subid": "47840203"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "left = integer with 0",
      "code": "int left = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "right = integer with 0",
      "code": "int right = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "x = integer",
      "code": "int x ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "Read x",
      "code": "cin >> x ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "y = integer",
      "code": "int y ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "Read y",
      "code": "cin >> y ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "if x is less than 0",
      "code": "if ( x < 0 )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment left",
      "code": "left ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment right",
      "code": "right ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if left is less than or equal to 1",
      "code": "if ( left <= 1 )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print Yes and a new line",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else do the following",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "if right is less than or equal to 1",
      "code": "if ( right <= 1 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print Yes and a new line",
      "code": "cout << \" Yes \" << endl ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "print No and a new line",
      "code": "cout << \" No \" << endl ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> t ;"
      ],
      "err_line": 2,
      "err_msg": "‘t’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "left = 0 ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "right = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "assignment of function ‘std::ios_base& std::right(std::ios_base&)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 23,
      "err_msg": "expected ‘while’ before numeric constant"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else do"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "left = 0 ;",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        20,
        12
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        20,
        12,
        15
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "else do",
        "if ( left >= 1 )"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        20,
        12,
        18
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "else do",
        "if ( right >= 1 )"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        20,
        12,
        16
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "else do",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        20,
        15
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "if ( left >= 1 )"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        20,
        15,
        18
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "if ( left >= 1 )",
        "if ( right >= 1 )"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        20,
        15,
        16
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "if ( left >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        20,
        18
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "if ( right >= 1 )"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        20,
        18,
        16
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "if ( right >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        20,
        16
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        12
      ],
      "mod_code": [
        "left = 0 ;",
        "else do"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        12,
        15
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "if ( left >= 1 )"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        12,
        15,
        18
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "if ( left >= 1 )",
        "if ( right >= 1 )"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        12,
        15,
        16
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "if ( left >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        12,
        18
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "if ( right >= 1 )"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        12,
        18,
        16
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "if ( right >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        12,
        16
      ],
      "mod_code": [
        "left = 0 ;",
        "else do",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "left = 0 ;",
        "if ( left >= 1 )"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        15,
        18
      ],
      "mod_code": [
        "left = 0 ;",
        "if ( left >= 1 )",
        "if ( right >= 1 )"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        15,
        18,
        16
      ],
      "mod_code": [
        "left = 0 ;",
        "if ( left >= 1 )",
        "if ( right >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        15,
        16
      ],
      "mod_code": [
        "left = 0 ;",
        "if ( left >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        18
      ],
      "mod_code": [
        "left = 0 ;",
        "if ( right >= 1 )"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        18,
        16
      ],
      "mod_code": [
        "left = 0 ;",
        "if ( right >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        3,
        16
      ],
      "mod_code": [
        "left = 0 ;",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 3,
      "err_msg": "assignment of function ‘std::ios_base& std::left(std::ios_base&)’"
    },
    {
      "mod_line": [
        20,
        12
      ],
      "mod_code": [
        "else do",
        "else do"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        12,
        15
      ],
      "mod_code": [
        "else do",
        "else do",
        "if ( left >= 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        12,
        15,
        18
      ],
      "mod_code": [
        "else do",
        "else do",
        "if ( left >= 1 )",
        "if ( right >= 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        12,
        15,
        16
      ],
      "mod_code": [
        "else do",
        "else do",
        "if ( left >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        12,
        18
      ],
      "mod_code": [
        "else do",
        "else do",
        "if ( right >= 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        12,
        18,
        16
      ],
      "mod_code": [
        "else do",
        "else do",
        "if ( right >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        12,
        16
      ],
      "mod_code": [
        "else do",
        "else do",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        15
      ],
      "mod_code": [
        "else do",
        "if ( left >= 1 )"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        15,
        18
      ],
      "mod_code": [
        "else do",
        "if ( left >= 1 )",
        "if ( right >= 1 )"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        15,
        18,
        16
      ],
      "mod_code": [
        "else do",
        "if ( left >= 1 )",
        "if ( right >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        15,
        16
      ],
      "mod_code": [
        "else do",
        "if ( left >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        18
      ],
      "mod_code": [
        "else do",
        "if ( right >= 1 )"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        18,
        16
      ],
      "mod_code": [
        "else do",
        "if ( right >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        20,
        16
      ],
      "mod_code": [
        "else do",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 22,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "else do",
        "if ( left >= 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        15,
        18
      ],
      "mod_code": [
        "else do",
        "if ( left >= 1 )",
        "if ( right >= 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        15,
        18,
        16
      ],
      "mod_code": [
        "else do",
        "if ( left >= 1 )",
        "if ( right >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        15,
        16
      ],
      "mod_code": [
        "else do",
        "if ( left >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        18
      ],
      "mod_code": [
        "else do",
        "if ( right >= 1 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        18,
        16
      ],
      "mod_code": [
        "else do",
        "if ( right >= 1 )",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    },
    {
      "mod_line": [
        12,
        16
      ],
      "mod_code": [
        "else do",
        "cout << \" YES\\n \" ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘while’ before ‘}’ token"
    }
  ]
}