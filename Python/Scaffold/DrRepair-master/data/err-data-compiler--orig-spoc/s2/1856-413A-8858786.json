{
  "meta": {
    "index": 1856,
    "hitid": "3TRB893CSJ4G4KAJQ5PORZK50YQG73",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "413A",
    "subid": "8858786"
  },
  "lines": [
    {
      "line": 0,
      "text": "s = string",
      "code": "string s ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m , mx , mn = int and a = int array of size 100001 and b = int array of size 3",
      "code": "int n , m , mx , mn , a [ 100001 ] , b [ 3 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n then m then mn then mx",
      "code": "cin >> n >> m >> mn >> mx ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read m values into a",
      "code": "for ( int i = 0 ; i < m ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "f = bool with f = false",
      "code": "bool f = false ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "c = int with c = 0",
      "code": "int c = 0 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to m",
      "code": "for ( int i = 0 ; i < m ; i ++ )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if a8i ] is mn",
      "code": "if ( a [ i ] == mn )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set b [ 0 ] to 1",
      "code": "b [ 0 ] = 1 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "else if a [ i ] is mx",
      "code": "else if ( a [ i ] == mx )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "set b [ 1 ] to 1",
      "code": "b [ 1 ] = 1 ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else if a [ i ] > mx or a [ i ] < mn",
      "code": "else if ( a [ i ] > mx || a [ i ] < mn )",
      "indent": 2
    },
    {
      "line": 13,
      "text": "set b [ 2 ] to 1",
      "code": "b [ 2 ] = 1 ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "if b [ 2 ] or ( n - m is 1 and ( not b [ 0 ] and not b [ 1 ] ) )",
      "code": "if ( b [ 2 ] || ( n - m == 1 && ( ! b [ 0 ] && ! b [ 1 ] ) ) )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print \" Incorrect \"",
      "code": "cout << \" Incorrect \" << endl ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 18,
      "text": "print \" Correct \"",
      "code": "cout << \" Correct \" << endl ;",
      "indent": 2
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( a8i ] == mn )"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , m , a [ 100001 ] , mx [ 100001 ] , mx , mn ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int mx’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( i = 0 ; i < m ; i ++ )"
      ],
      "err_line": 7,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "if ( ( a8i ] == mn )"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "int b [ 1 ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "n"
      ],
      "err_line": 18,
      "err_msg": "expected ‘;’ before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        16
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        18
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Incorrect \" ;",
        "cout << \" Correct \" ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        3
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Incorrect \" ;",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        15,
        16,
        9
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Incorrect \" ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        18
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Correct \" ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        3
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Correct \" ;",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        15,
        18,
        9
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Correct \" ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15,
        3
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        15,
        3,
        9
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cin >> n >> m then mn >> mx ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        15,
        9
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cout << \" Incorrect \" ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        18
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cout << \" Incorrect \" ;",
        "cout << \" Correct \" ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        3
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cout << \" Incorrect \" ;",
        "cout << \" Correct \" ;",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        16,
        18,
        9
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cout << \" Incorrect \" ;",
        "cout << \" Correct \" ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        16,
        3
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cout << \" Incorrect \" ;",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        16,
        3,
        9
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cout << \" Incorrect \" ;",
        "cin >> n >> m then mn >> mx ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        16,
        9
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cout << \" Incorrect \" ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        18
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cout << \" Correct \" ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        18,
        3
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cout << \" Correct \" ;",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        18,
        3,
        9
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cout << \" Correct \" ;",
        "cin >> n >> m then mn >> mx ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        18,
        9
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cout << \" Correct \" ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        3
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        3,
        9
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "cin >> n >> m then mn >> mx ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "if ( a8i ] == mn )",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘a8i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        3
      ],
      "mod_code": [
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Incorrect \" ;",
        "cout << \" Correct \" ;",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        15,
        16,
        18,
        9
      ],
      "mod_code": [
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Incorrect \" ;",
        "cout << \" Correct \" ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15,
        16,
        3
      ],
      "mod_code": [
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Incorrect \" ;",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        15,
        16,
        3,
        9
      ],
      "mod_code": [
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Incorrect \" ;",
        "cin >> n >> m then mn >> mx ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        15,
        16,
        9
      ],
      "mod_code": [
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Incorrect \" ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15,
        18,
        3
      ],
      "mod_code": [
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Correct \" ;",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        15,
        18,
        3,
        9
      ],
      "mod_code": [
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Correct \" ;",
        "cin >> n >> m then mn >> mx ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        15,
        18,
        9
      ],
      "mod_code": [
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cout << \" Correct \" ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        15,
        3,
        9
      ],
      "mod_code": [
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "cin >> n >> m then mn >> mx ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "if ( b [ 2 ] || ( n - m == 1 && ( b [ 0 ] && ! b [ 1 ] ) ) )",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        16,
        18,
        3
      ],
      "mod_code": [
        "cout << \" Incorrect \" ;",
        "cout << \" Correct \" ;",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        16,
        18,
        3,
        9
      ],
      "mod_code": [
        "cout << \" Incorrect \" ;",
        "cout << \" Correct \" ;",
        "cin >> n >> m then mn >> mx ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        16,
        18,
        9
      ],
      "mod_code": [
        "cout << \" Incorrect \" ;",
        "cout << \" Correct \" ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        16,
        3
      ],
      "mod_code": [
        "cout << \" Incorrect \" ;",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        16,
        3,
        9
      ],
      "mod_code": [
        "cout << \" Incorrect \" ;",
        "cin >> n >> m then mn >> mx ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        16,
        9
      ],
      "mod_code": [
        "cout << \" Incorrect \" ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        18,
        3
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cin >> n >> m then mn >> mx ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        18,
        3,
        9
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "cin >> n >> m then mn >> mx ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    },
    {
      "mod_line": [
        18,
        9
      ],
      "mod_code": [
        "cout << \" Correct \" ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "array must be initialized with a brace-enclosed initializer"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "cin >> n >> m then mn >> mx ;",
        "int b [ 0 ] = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "expected ‘;’ before ‘then’"
    }
  ]
}