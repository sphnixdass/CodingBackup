{
  "meta": {
    "index": 2510,
    "hitid": "35A1YQPVFEAFD72VS0AUERJPN35I5V",
    "workerid": "AIWEXPJAU66D9",
    "probid": "7A",
    "subid": "39085976"
  },
  "lines": [
    {
      "line": 0,
      "text": "let Chess be an 2d array of characters with size 100 by 100",
      "code": "char Chess [ 100 ] [ 100 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "create integers sum , X and Y",
      "code": "int sum , X , Y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while can read value , save it to Chess [ 0 ]",
      "code": "while ( cin >> Chess [ 0 ] )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for integer i = 1 to 8 exclusive read value to Chess [ i ]",
      "code": "for ( int i = 1 ; i < 8 ; i ++ ) cin >> Chess [ i ] ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "set sum to 0",
      "code": "sum = 0 ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "for i = 0 to 8 exclusive",
      "code": "for ( int i = 0 ; i < 8 ; i ++ )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set value of X to Y to 0",
      "code": "X = Y = 0 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "for j = 0 to 8 exclusive",
      "code": "for ( int j = 0 ; j < 8 ; j ++ )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "if Chess [ i ] [ j ] is not equal to \" B \" set X to 1",
      "code": "if ( Chess [ i ] [ j ] != ' B ' ) X = 1 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "if Chess [ j ] [ i ] is not equal to \" B \" set Y to 1",
      "code": "if ( Chess [ j ] [ i ] != ' B ' ) Y = 1 ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 12,
      "text": "if X is zero increase sum",
      "code": "if ( ! X ) sum ++ ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if Y is zero increase sum",
      "code": "if ( ! Y ) sum ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if sum is equal to 16",
      "code": "if ( sum == 16 )",
      "indent": 2
    },
    {
      "line": 16,
      "text": "print \" 8 \" and a new line",
      "code": "cout << \" 8 \" << endl ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "continue the loop",
      "code": "continue ;",
      "indent": 3
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 19,
      "text": "print sum and a new line",
      "code": "cout << sum << endl ;",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "char * Chess [ 100 ] [ 100 ] ;"
      ],
      "err_line": 3,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::istream {aka std::basic_istream<char>}’ and ‘char* [100]’)"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "int sum , X ;"
      ],
      "err_line": 7,
      "err_msg": "‘Y’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( Chess [ j ] [ i ] != \" B \" ) { Y = 1 ; }"
      ],
      "err_line": 10,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        9,
        10
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        2
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "int sum , X ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        9,
        10,
        8
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "int sum , X ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        9,
        2,
        8
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "int sum , X ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        9,
        8
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        10,
        9
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        10,
        9,
        2
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }",
        "int sum , X ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        10,
        9,
        8
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        10,
        2
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "int sum , X ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        10,
        2,
        8
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "int sum , X ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        10,
        8
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        9,
        2
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }",
        "int sum , X ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        9,
        2,
        8
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }",
        "int sum , X ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        9,
        8
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        2
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "int sum , X ;"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        2,
        8
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "int sum , X ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        3,
        8
      ],
      "mod_code": [
        "while ( getline ( cin , Chess [ 0 ] ) )",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "no matching function for call to ‘getline(std::istream&, char [100])’"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        10,
        2
      ],
      "mod_code": [
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "int sum , X ;"
      ],
      "err_line": 7,
      "err_msg": "‘Y’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        2,
        8
      ],
      "mod_code": [
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "int sum , X ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘Y’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        8
      ],
      "mod_code": [
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "int sum , X ;"
      ],
      "err_line": 7,
      "err_msg": "‘Y’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        8
      ],
      "mod_code": [
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "int sum , X ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘Y’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "if ( Chess [ i ] [ j ] != \" B \" ) X = 1 ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }"
      ],
      "err_line": 9,
      "err_msg": "ISO C++ forbids comparison between pointer and integer [-fpermissive]"
    },
    {
      "mod_line": [
        10,
        9,
        2
      ],
      "mod_code": [
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }",
        "int sum , X ;"
      ],
      "err_line": 7,
      "err_msg": "‘Y’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        2,
        8
      ],
      "mod_code": [
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }",
        "int sum , X ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘Y’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        9,
        8
      ],
      "mod_code": [
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2
      ],
      "mod_code": [
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "int sum , X ;"
      ],
      "err_line": 7,
      "err_msg": "‘Y’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        2,
        8
      ],
      "mod_code": [
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "int sum , X ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘Y’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        8
      ],
      "mod_code": [
        "if ( Chess [ j ] [ i ] != \" B \" ) Y = 1 ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }",
        "int sum , X ;"
      ],
      "err_line": 7,
      "err_msg": "‘Y’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        2,
        8
      ],
      "mod_code": [
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }",
        "int sum , X ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘Y’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "if ( Chess [ i ] [ j ] != \" B \" ) { X = 1 ; }",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "int sum , X ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘Y’ was not declared in this scope"
    }
  ]
}