{
  "meta": {
    "index": 1104,
    "hitid": "356ZPKYPUHB5WHZJGX5BYLIU41KPY4",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1085A",
    "subid": "48779661"
  },
  "lines": [
    {
      "line": 0,
      "text": "create character arrays s1 and s2 with 105 elements",
      "code": "char s1 [ 105 ] , s2 [ 105 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "reading s1 in a loop",
      "code": "while ( cin >> s1 )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare integers ans = 0 and flag = 1",
      "code": "int flag = 1 , ans = 0 ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "declare integer len = length of s1",
      "code": "int len = strlen ( s1 ) ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if len % 2 = 1",
      "code": "if ( len % 2 == 1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "ans = len / 2",
      "code": "ans = len / 2 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 8,
      "text": "ans = len / 2 - 1",
      "code": "ans = len / 2 - 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "assign value of s1 [ ans ] to s2 [ 0 ]",
      "code": "s2 [ 0 ] = s1 [ ans ] ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for i = 1 to len exclusive",
      "code": "for ( int i = 1 ; i < len ; i ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if flag is 1",
      "code": "if ( flag == 1 )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increase ans by i",
      "code": "ans += i ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "s2 [ i ] = s1 [ ans ]",
      "code": "s2 [ i ] = s1 [ ans ] ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "set value of flag to - 1",
      "code": "flag = - 1 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "else if flag = - 1",
      "code": "else if ( flag == - 1 )",
      "indent": 3
    },
    {
      "line": 17,
      "text": "decrease ans by i",
      "code": "ans -= i ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "set value of s2 [ i ] to s1 [ ans ]",
      "code": "s2 [ i ] = s1 [ ans ] ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "set value of flag to 1",
      "code": "flag = 1 ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 22,
      "text": "print s2",
      "code": "cout << s2 << endl ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "a >> s1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int len = s1 . size ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘size’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "* flag = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "* flag = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        4,
        11
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "for ( i = 1 ; i < len ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        14
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "for ( i = 1 ; i < len ; i ++ )",
        "s2 [ ' i ' ] = s1 [ ans ] ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        18
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "for ( i = 1 ; i < len ; i ++ )",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "s1 [ i ] = s1 [ ans ] ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        19
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "for ( i = 1 ; i < len ; i ++ )",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "* flag = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        14,
        15
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "for ( i = 1 ; i < len ; i ++ )",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "* flag = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        18
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "for ( i = 1 ; i < len ; i ++ )",
        "s1 [ i ] = s1 [ ans ] ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        19
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "for ( i = 1 ; i < len ; i ++ )",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        18,
        15
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "for ( i = 1 ; i < len ; i ++ )",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        19
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "for ( i = 1 ; i < len ; i ++ )",
        "* flag = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        19,
        15
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "for ( i = 1 ; i < len ; i ++ )",
        "* flag = 1 ;",
        "* flag = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        11,
        15
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "for ( i = 1 ; i < len ; i ++ )",
        "* flag = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        14
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "s2 [ ' i ' ] = s1 [ ans ] ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        14,
        18
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "s1 [ i ] = s1 [ ans ] ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        14,
        18,
        19
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        14,
        18,
        15
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        14,
        19
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "* flag = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        14,
        19,
        15
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "* flag = 1 ;",
        "* flag = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        14,
        15
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "* flag = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        18
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "s1 [ i ] = s1 [ ans ] ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        18,
        19
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        18,
        19,
        15
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = 1 ;",
        "* flag = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        18,
        15
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "* flag = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        19,
        15
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "* flag = 1 ;",
        "* flag = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "int len = s1 . length ( ) ;",
        "* flag = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "request for member ‘length’ in ‘s1’, which is of non-class type ‘char [105]’"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "s2 [ ' i ' ] = s1 [ ans ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        18
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "s1 [ i ] = s1 [ ans ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        18,
        19
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        18,
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = - 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        19
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "* flag = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        19,
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "* flag = 1 ;",
        "* flag = - 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        14,
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "* flag = - 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "s1 [ i ] = s1 [ ans ] ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        19
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        19,
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = 1 ;",
        "* flag = - 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        18,
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = - 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "* flag = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        19,
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "* flag = 1 ;",
        "* flag = - 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "for ( i = 1 ; i < len ; i ++ )",
        "* flag = - 1 ;"
      ],
      "err_line": 11,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        14,
        18,
        19
      ],
      "mod_code": [
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        14,
        18,
        19,
        15
      ],
      "mod_code": [
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = 1 ;",
        "* flag = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        14,
        18,
        15
      ],
      "mod_code": [
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        14,
        19
      ],
      "mod_code": [
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "* flag = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        14,
        19,
        15
      ],
      "mod_code": [
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "* flag = 1 ;",
        "* flag = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        14,
        15
      ],
      "mod_code": [
        "s2 [ ' i ' ] = s1 [ ans ] ;",
        "* flag = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        18,
        19
      ],
      "mod_code": [
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = 1 ;"
      ],
      "err_line": 19,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        18,
        19,
        15
      ],
      "mod_code": [
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = 1 ;",
        "* flag = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        18,
        15
      ],
      "mod_code": [
        "s1 [ i ] = s1 [ ans ] ;",
        "* flag = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        19,
        15
      ],
      "mod_code": [
        "* flag = 1 ;",
        "* flag = - 1 ;"
      ],
      "err_line": 15,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    }
  ]
}