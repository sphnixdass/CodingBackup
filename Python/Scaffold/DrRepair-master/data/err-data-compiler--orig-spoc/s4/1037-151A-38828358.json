{
  "meta": {
    "index": 1037,
    "hitid": "33N1S8XHHMF2KFQMRHW4BW9Y82DZ17",
    "workerid": "A1APYLD4DUK33J",
    "probid": "151A",
    "subid": "38828358"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare n , k , l , c , d , p , nl , np , kl , cd , nnl , nslice , nnp as long long",
      "code": "long long n , k , l , c , d , p , nl , np , kl , cd , nnl , nslice , nnp ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , k , l , , c , d , p , nl , np",
      "code": "cin >> n >> k >> l >> c >> d >> p >> nl >> np ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let kl be k * l",
      "code": "kl = k * l ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let cd be c * d",
      "code": "cd = c * d ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let nnl be kl / ( nl * n )",
      "code": "nnl = kl / ( nl * n ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let nslice be cd / n",
      "code": "nslice = cd / n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let nnp be p / ( np * n )",
      "code": "nnp = p / ( np * n ) ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if nnl is less than 0 , let nnl be 2000000",
      "code": "if ( nnl < 0 ) nnl = 2000000 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if nnp is less than 0 , let nnp be 2000000",
      "code": "if ( nnp < 0 ) nnp = 2000000 ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if nslice is less than 0 , let nslice be 2000000",
      "code": "if ( nslice < 0 ) nslice = 2000000 ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print minimum of ( nnl and minimum of ( nslice and nnp ) ) , newline",
      "code": "cout << min ( nnl , min ( nslice , nnp ) ) << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "end statement",
      "code": ";",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , cd , cd , nslice , nnp ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int cd’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int nnl’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "int nnp = p / ( np * n ) ;"
      ],
      "err_line": 7,
      "err_msg": "conflicting declaration ‘int nnp’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        2,
        4
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> nl ;",
        "cd *= d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        2,
        4,
        6
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> nl ;",
        "cd *= d ;",
        "nslice /= n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        2,
        4,
        5
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> nl ;",
        "cd *= d ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        2,
        6
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> nl ;",
        "nslice /= n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        2,
        6,
        5
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> nl ;",
        "nslice /= n ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> nl ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cd *= d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        4,
        6
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cd *= d ;",
        "nslice /= n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        4,
        6,
        5
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cd *= d ;",
        "nslice /= n ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        4,
        6,
        2
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cd *= d ;",
        "nslice /= n ;",
        "cin >> n >> k >> l >> c >> d >> d >> p >> nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        4,
        5
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cd *= d ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        4,
        5,
        2
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cd *= d ;",
        "int nnl = kl / ( nl * n ) ;",
        "cin >> n >> k >> l >> c >> d >> d >> p >> nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        4,
        2
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cd *= d ;",
        "cin >> n >> k >> l >> c >> d >> d >> p >> nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        6
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "nslice /= n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        6,
        5
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "nslice /= n ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        6,
        5,
        2
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "nslice /= n ;",
        "int nnl = kl / ( nl * n ) ;",
        "cin >> n >> k >> l >> c >> d >> d >> p >> nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        6,
        2
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "nslice /= n ;",
        "cin >> n >> k >> l >> c >> d >> d >> p >> nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        5,
        2
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "int nnl = kl / ( nl * n ) ;",
        "cin >> n >> k >> l >> c >> d >> d >> p >> nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "long long n , k , l , c , d , p , nl , np , kl , kl , cd , nslice , nnp ;",
        "cin >> n >> k >> l >> c >> d >> d >> p >> nl ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘long long int kl’"
    },
    {
      "mod_line": [
        2,
        4,
        6,
        5
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> nl ;",
        "cd *= d ;",
        "nslice /= n ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int nnl’"
    },
    {
      "mod_line": [
        2,
        4,
        5
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> nl ;",
        "cd *= d ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int nnl’"
    },
    {
      "mod_line": [
        2,
        6,
        5
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> nl ;",
        "nslice /= n ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int nnl’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> nl ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int nnl’"
    },
    {
      "mod_line": [
        4,
        6,
        5
      ],
      "mod_code": [
        "cd *= d ;",
        "nslice /= n ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int nnl’"
    },
    {
      "mod_line": [
        4,
        6,
        5,
        2
      ],
      "mod_code": [
        "cd *= d ;",
        "nslice /= n ;",
        "int nnl = kl / ( nl * n ) ;",
        "cin >> n >> k >> l >> c >> d >> d >> p >> nl ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int nnl’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "cd *= d ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int nnl’"
    },
    {
      "mod_line": [
        4,
        5,
        2
      ],
      "mod_code": [
        "cd *= d ;",
        "int nnl = kl / ( nl * n ) ;",
        "cin >> n >> k >> l >> c >> d >> d >> p >> nl ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int nnl’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "nslice /= n ;",
        "int nnl = kl / ( nl * n ) ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int nnl’"
    },
    {
      "mod_line": [
        6,
        5,
        2
      ],
      "mod_code": [
        "nslice /= n ;",
        "int nnl = kl / ( nl * n ) ;",
        "cin >> n >> k >> l >> c >> d >> d >> p >> nl ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int nnl’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "int nnl = kl / ( nl * n ) ;",
        "cin >> n >> k >> l >> c >> d >> d >> p >> nl ;"
      ],
      "err_line": 5,
      "err_msg": "conflicting declaration ‘int nnl’"
    }
  ]
}