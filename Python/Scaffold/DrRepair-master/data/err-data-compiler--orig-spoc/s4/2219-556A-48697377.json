{
  "meta": {
    "index": 2219,
    "hitid": "3Q7TKIAPOT4C7LPUS9PQ4JZ9IQ8LD0",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "556A",
    "subid": "48697377"
  },
  "lines": [
    {
      "line": 0,
      "text": "in function mini taking two ints a and b and returning an int",
      "code": "int mini ( int a , int b )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if a is less than b return a",
      "code": "if ( a < b ) return a ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return b",
      "code": "return b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 5,
      "text": "n , z , o = int with z = 0 and o = 0",
      "code": "int n , z = 0 , o = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "str = string",
      "code": "string str ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "read str",
      "code": "cin >> str ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n",
      "code": "for ( int i = 0 ; i < n ; ++ i )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if str [ i ] is ' 1 '",
      "code": "if ( str [ i ] == ' 1 ' )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "increment o",
      "code": "o ++ ;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 13,
      "text": "increment z",
      "code": "z ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "ans = int with ans = n - 2 * mini of o and z",
      "code": "int ans = n - ( 2 * mini ( o , z ) ) ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "while ( cin >> n )"
      ],
      "err_line": 8,
      "err_msg": "‘str’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "gets ( str ) ;"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "int ans = n - 2 * mini * o ;"
      ],
      "err_line": 15,
      "err_msg": "invalid operands of types ‘int’ and ‘int(int, int)’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        5,
        12
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "else else"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        12,
        8
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "else else",
        "gets ( str ) ;"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        12,
        8,
        15
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "else else",
        "gets ( str ) ;",
        "int ans = n - 2 * mini * o ;"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        12,
        8,
        9
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "else else",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        12,
        8,
        0
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "else else",
        "gets ( str ) ;",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        12,
        15
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "else else",
        "int ans = n - 2 * mini * o ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        12,
        15,
        9
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "else else",
        "int ans = n - 2 * mini * o ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        15,
        0
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "else else",
        "int ans = n - 2 * mini * o ;",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        12,
        9
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        12,
        9,
        0
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "else else",
        "for ( i = 0 ; i < n ; i ++ )",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        12,
        0
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "else else",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "gets ( str ) ;"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        8,
        15
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "gets ( str ) ;",
        "int ans = n - 2 * mini * o ;"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        9
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "gets ( str ) ;",
        "int ans = n - 2 * mini * o ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        8,
        15,
        0
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "gets ( str ) ;",
        "int ans = n - 2 * mini * o ;",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        8,
        9
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        8,
        9,
        0
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        8,
        0
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "gets ( str ) ;",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "int ans = n - 2 * mini * o ;"
      ],
      "err_line": 15,
      "err_msg": "invalid operands of types ‘int’ and ‘int(int, int)’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        5,
        15,
        9
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "int ans = n - 2 * mini * o ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        9,
        0
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "int ans = n - 2 * mini * o ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        15,
        0
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "int ans = n - 2 * mini * o ;",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9,
        0
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        5,
        0
      ],
      "mod_code": [
        "int n , z , o = 0 ;",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "else else",
        "gets ( str ) ;"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        8,
        15
      ],
      "mod_code": [
        "else else",
        "gets ( str ) ;",
        "int ans = n - 2 * mini * o ;"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        8,
        15,
        9
      ],
      "mod_code": [
        "else else",
        "gets ( str ) ;",
        "int ans = n - 2 * mini * o ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        8,
        15,
        0
      ],
      "mod_code": [
        "else else",
        "gets ( str ) ;",
        "int ans = n - 2 * mini * o ;",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        8,
        9
      ],
      "mod_code": [
        "else else",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        12,
        8,
        9,
        0
      ],
      "mod_code": [
        "else else",
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        8,
        0
      ],
      "mod_code": [
        "else else",
        "gets ( str ) ;",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        15
      ],
      "mod_code": [
        "else else",
        "int ans = n - 2 * mini * o ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        15,
        9
      ],
      "mod_code": [
        "else else",
        "int ans = n - 2 * mini * o ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        15,
        9,
        0
      ],
      "mod_code": [
        "else else",
        "int ans = n - 2 * mini * o ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        15,
        0
      ],
      "mod_code": [
        "else else",
        "int ans = n - 2 * mini * o ;",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "else else",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9,
        0
      ],
      "mod_code": [
        "else else",
        "for ( i = 0 ; i < n ; i ++ )",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        12,
        0
      ],
      "mod_code": [
        "else else",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int ans = n - 2 * mini * o ;"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        15,
        9
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int ans = n - 2 * mini * o ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        15,
        9,
        0
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int ans = n - 2 * mini * o ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        15,
        0
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int ans = n - 2 * mini * o ;",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        9,
        0
      ],
      "mod_code": [
        "gets ( str ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8,
        0
      ],
      "mod_code": [
        "gets ( str ) ;",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "int ans = n - 2 * mini * o ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        9,
        0
      ],
      "mod_code": [
        "int ans = n - 2 * mini * o ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "int ans = n - 2 * mini * o ;",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        9,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int mini ( int a , int b ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}