{
  "meta": {
    "index": 2108,
    "hitid": "3L4YG5VW9NMT9912FSR2L6R48UEDD9",
    "workerid": "AIWEXPJAU66D9",
    "probid": "114A",
    "subid": "48923425"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare long longs k and l",
      "code": "long long k , l ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read k and l",
      "code": "cin >> k >> l ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "declare long long t = k",
      "code": "long long t = k ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "declare integers flag and n = 0",
      "code": "int flag = 0 , n = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "while t < = l",
      "code": "while ( t <= l )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if t = l , set flag to 1",
      "code": "if ( t == l ) flag = 1 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "multiply t by k",
      "code": "t = t * k ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment n",
      "code": "n ++ ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if flag = 1",
      "code": "if ( flag == 1 )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 12,
      "text": "print n - 1",
      "code": "cout << n - 1 << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        5,
        13
      ],
      "mod_code": [
        "t *= ' k ' ;",
        "while ( t <= l ) ;",
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        5,
        13,
        2
      ],
      "mod_code": [
        "t *= ' k ' ;",
        "while ( t <= l ) ;",
        "else else",
        "cin >> k >> k ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "t *= ' k ' ;",
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        13,
        2
      ],
      "mod_code": [
        "t *= ' k ' ;",
        "else else",
        "cin >> k >> k ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        13
      ],
      "mod_code": [
        "while ( t <= l ) ;",
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        13,
        2
      ],
      "mod_code": [
        "while ( t <= l ) ;",
        "else else",
        "cin >> k >> k ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        13,
        2
      ],
      "mod_code": [
        "else else",
        "cin >> k >> k ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}