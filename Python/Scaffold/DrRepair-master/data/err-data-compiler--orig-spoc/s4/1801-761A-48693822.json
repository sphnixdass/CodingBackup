{
  "meta": {
    "index": 1801,
    "hitid": "3I7SHAD35MQGWU6518NJ4442WK07M0",
    "workerid": "A2J7P30MA3S6OV",
    "probid": "761A",
    "subid": "48693822"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create int a and b",
      "code": "int a , b ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read a and b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if a and b = 0",
      "code": "if ( a == 0 && b == 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else if and of ( a - b ) < 2",
      "code": "else if ( abs ( a - b ) < 2 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print YES",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print NO",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )"
      ],
      "err_line": 5,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a , b b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "int a , b b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        5,
        1,
        2
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "int a , b b ;",
        "a >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        5,
        1,
        2,
        3
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "int a , b b ;",
        "a >> a >> b ;",
        "if ( a = 0 && b == 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        5,
        1,
        2,
        7
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "int a , b b ;",
        "a >> a >> b ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        5,
        1,
        3
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "int a , b b ;",
        "if ( a = 0 && b == 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        5,
        1,
        3,
        7
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "int a , b b ;",
        "if ( a = 0 && b == 0 )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        5,
        1,
        7
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "int a , b b ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "a >> a >> b ;"
      ],
      "err_line": 5,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        5,
        2,
        3
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "a >> a >> b ;",
        "if ( a = 0 && b == 0 )"
      ],
      "err_line": 5,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        5,
        2,
        3,
        7
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "a >> a >> b ;",
        "if ( a = 0 && b == 0 )",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        5,
        2,
        7
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "a >> a >> b ;",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "if ( a = 0 && b == 0 )"
      ],
      "err_line": 5,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        5,
        3,
        7
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "if ( a = 0 && b == 0 )",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "else if ( and ( a - b ) < 2 )",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "int a , b b ;",
        "a >> a >> b ;"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        2,
        3
      ],
      "mod_code": [
        "int a , b b ;",
        "a >> a >> b ;",
        "if ( a = 0 && b == 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        5
      ],
      "mod_code": [
        "int a , b b ;",
        "a >> a >> b ;",
        "if ( a = 0 && b == 0 )",
        "else if ( ( a - b ) < 2 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        2,
        3,
        7
      ],
      "mod_code": [
        "int a , b b ;",
        "a >> a >> b ;",
        "if ( a = 0 && b == 0 )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        2,
        5
      ],
      "mod_code": [
        "int a , b b ;",
        "a >> a >> b ;",
        "else if ( ( a - b ) < 2 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        2,
        5,
        7
      ],
      "mod_code": [
        "int a , b b ;",
        "a >> a >> b ;",
        "else if ( ( a - b ) < 2 )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        2,
        7
      ],
      "mod_code": [
        "int a , b b ;",
        "a >> a >> b ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int a , b b ;",
        "if ( a = 0 && b == 0 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int a , b b ;",
        "if ( a = 0 && b == 0 )",
        "else if ( ( a - b ) < 2 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        3,
        5,
        7
      ],
      "mod_code": [
        "int a , b b ;",
        "if ( a = 0 && b == 0 )",
        "else if ( ( a - b ) < 2 )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        3,
        7
      ],
      "mod_code": [
        "int a , b b ;",
        "if ( a = 0 && b == 0 )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int a , b b ;",
        "else if ( ( a - b ) < 2 )"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        5,
        7
      ],
      "mod_code": [
        "int a , b b ;",
        "else if ( ( a - b ) < 2 )",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int a , b b ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "expected initializer before ‘b’"
    },
    {
      "mod_line": [
        2,
        3,
        5,
        7
      ],
      "mod_code": [
        "a >> a >> b ;",
        "if ( a = 0 && b == 0 )",
        "else if ( ( a - b ) < 2 )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        3,
        7
      ],
      "mod_code": [
        "a >> a >> b ;",
        "if ( a = 0 && b == 0 )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        5,
        7
      ],
      "mod_code": [
        "a >> a >> b ;",
        "else if ( ( a - b ) < 2 )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "a >> a >> b ;",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        5,
        7
      ],
      "mod_code": [
        "if ( a = 0 && b == 0 )",
        "else if ( ( a - b ) < 2 )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        7
      ],
      "mod_code": [
        "if ( a = 0 && b == 0 )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "else if ( ( a - b ) < 2 )",
        "else else"
      ],
      "err_line": 7,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}