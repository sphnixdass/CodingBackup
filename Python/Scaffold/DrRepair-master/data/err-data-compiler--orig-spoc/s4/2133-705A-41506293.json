{
  "meta": {
    "index": 2133,
    "hitid": "3HRWUH63QUW7R8DMPGNMJZF6A4B5NF",
    "workerid": "A1R0Q9CUUBSM5F",
    "probid": "705A",
    "subid": "41506293"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let int n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for i = 1 to n",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if i is even",
      "code": "if ( i % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "print \" I love \"",
      "code": "cout << \" I love \" ;",
      "indent": 3
    },
    {
      "line": 6,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 7,
      "text": "print \" I hate \"",
      "code": "cout << \" I hate \" ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if i is not equal to n , print \" that \"",
      "code": "if ( i != n ) cout << \" that \" ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" it \"",
      "code": "cout << \" it \" << endl ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int a ;"
      ],
      "err_line": 2,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        7,
        8,
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "if ( i != n ) cout << \" that \" << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        7,
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        7,
        6,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "cout << \" I \" << endl ;",
        "else else",
        "cout << \" it \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        8,
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "if ( i != n ) cout << \" that \" << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        8,
        6,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "if ( i != n ) cout << \" that \" << endl ;",
        "else else",
        "cout << \" it \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        6,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "else else",
        "cout << \" it \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "if ( i != n ) cout << \" that \" << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        6,
        5
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "if ( i != n ) cout << \" that \" << endl ;",
        "else else",
        "cout << \" I \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        8,
        6,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "if ( i != n ) cout << \" that \" << endl ;",
        "else else",
        "cout << \" it \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6,
        5
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "else else",
        "cout << \" I \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6,
        5,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "else else",
        "cout << \" I \" ;",
        "cout << \" it \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        6,
        10
      ],
      "mod_code": [
        "cout << \" I \" << endl ;",
        "else else",
        "cout << \" it \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "if ( i != n ) cout << \" that \" << endl ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        6,
        5
      ],
      "mod_code": [
        "if ( i != n ) cout << \" that \" << endl ;",
        "else else",
        "cout << \" I \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        6,
        5,
        10
      ],
      "mod_code": [
        "if ( i != n ) cout << \" that \" << endl ;",
        "else else",
        "cout << \" I \" ;",
        "cout << \" it \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        6,
        10
      ],
      "mod_code": [
        "if ( i != n ) cout << \" that \" << endl ;",
        "else else",
        "cout << \" it \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "else else",
        "cout << \" I \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        5,
        10
      ],
      "mod_code": [
        "else else",
        "cout << \" I \" ;",
        "cout << \" it \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        10
      ],
      "mod_code": [
        "else else",
        "cout << \" it \" ;"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}