{
  "meta": {
    "index": 2262,
    "hitid": "3UQ1LLR26A2E9EMI8ZYOEIR3XNAALM",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "336A",
    "subid": "45795268"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "x , y = int",
      "code": "int x , y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read x , y",
      "code": "cin >> x >> y ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "if x > = 0 and y > = 0",
      "code": "if ( x >= 0 && y >= 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "print \" 0 \" and x + y and space and x + y and \" 0 \" and new line",
      "code": "cout << \" 0 \" << x + y << \" \" << x + y << \" 0\\n \" ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "else if x < = 0 and y > = 0",
      "code": "else if ( x <= 0 && y >= 0 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "print \" 0 \" and x - y and space and - x + y and \" 0 \" and new line",
      "code": "cout << x - y << \" 0 0 \" << - x + y << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "else if x > = 0 and y < = 0",
      "code": "else if ( x >= 0 && y <= 0 )",
      "indent": 1
    },
    {
      "line": 8,
      "text": "print \" 0 \" and - x + y and space and x - y and \" 0 \" and new line",
      "code": "cout << \" 0 \" << - x + y << \" \" << x - y << \" 0\\n \" ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print x + y and \" 00 \" and x + y and new line",
      "code": "cout << x + y << \" 0 0 \" << x + y << \" \\n \" ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int x , y , y ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        6,
        8,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl << x << \" \" << x + y << \" 0 \" << endl ;",
        "cout << \" 0 \" << x - y << \" \" << - x << \" 0 \" << \" \\n \" ;",
        "cout << \" 0 \" << - x << \" \" << x - y << \" 0 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl << x << \" \" << x + y << \" 0 \" << endl ;",
        "cout << \" 0 \" << x - y << \" \" << - x << \" 0 \" << \" \\n \" ;",
        "cout << x + y << \" 00 \" << x + y << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        6,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl << x << \" \" << x + y << \" 0 \" << endl ;",
        "cout << \" 0 \" << x - y << \" \" << - x << \" 0 \" << \" \\n \" ;",
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        6,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl << x << \" \" << x + y << \" 0 \" << endl ;",
        "cout << \" 0 \" << x - y << \" \" << - x << \" 0 \" << \" \\n \" ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl << x << \" \" << x + y << \" 0 \" << endl ;",
        "cout << \" 0 \" << - x << \" \" << x - y << \" 0 \" << endl ;",
        "cout << x + y << \" 00 \" << x + y << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        8,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl << x << \" \" << x + y << \" 0 \" << endl ;",
        "cout << \" 0 \" << - x << \" \" << x - y << \" 0 \" << endl ;",
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        8,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl << x << \" \" << x + y << \" 0 \" << endl ;",
        "cout << \" 0 \" << - x << \" \" << x - y << \" 0 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl << x << \" \" << x + y << \" 0 \" << endl ;",
        "cout << x + y << \" 00 \" << x + y << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl << x << \" \" << x + y << \" 0 \" << endl ;",
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << endl << x << \" \" << x + y << \" 0 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << x - y << \" \" << - x << \" 0 \" << \" \\n \" ;",
        "cout << \" 0 \" << - x << \" \" << x - y << \" 0 \" << endl ;",
        "cout << x + y << \" 00 \" << x + y << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << x - y << \" \" << - x << \" 0 \" << \" \\n \" ;",
        "cout << \" 0 \" << - x << \" \" << x - y << \" 0 \" << endl ;",
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        8,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << x - y << \" \" << - x << \" 0 \" << \" \\n \" ;",
        "cout << \" 0 \" << - x << \" \" << x - y << \" 0 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << x - y << \" \" << - x << \" 0 \" << \" \\n \" ;",
        "cout << x + y << \" 00 \" << x + y << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << x - y << \" \" << - x << \" 0 \" << \" \\n \" ;",
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << x - y << \" \" << - x << \" 0 \" << \" \\n \" ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << - x << \" \" << x - y << \" 0 \" << endl ;",
        "cout << x + y << \" 00 \" << x + y << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        10,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << - x << \" \" << x - y << \" 0 \" << endl ;",
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "cout << \" 0 \" << - x << \" \" << x - y << \" 0 \" << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "cout << x + y << \" 00 \" << x + y << endl ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        9
      ],
      "mod_code": [
        "cout << x + y << \" \" << x + y << \" \\n \" ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}