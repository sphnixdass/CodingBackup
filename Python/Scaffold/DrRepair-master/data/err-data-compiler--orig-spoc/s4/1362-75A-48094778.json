{
  "meta": {
    "index": 1362,
    "hitid": "3UL5XDRDNCDMO1QIJEY312PBKMI85P",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "75A",
    "subid": "48094778"
  },
  "lines": [
    {
      "line": 0,
      "text": "MOD = const int with MOD = 1e9 + 7",
      "code": "const int MOD = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "in function gcd takeing two doubles a and b and returning a double",
      "code": "double gcd ( double a , double b )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "return b if a is less than 0 . 01 else return gcd of b floating modulo a and a",
      "code": "return a < 0.01 ? b : gcd ( fmod ( b , a ) , a ) ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 4,
      "text": "in function max taking two long long ints a and b and returning a long long int",
      "code": "long long int max ( long long int a , long long int b )",
      "indent": 0
    },
    {
      "line": 5,
      "text": "if a is greater than b return a else return b",
      "code": "return ( a > b ) ? a : b ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "in function max taking three long long ints a , b and c and returning a long long int",
      "code": "long long int max ( long long int a , long long int b , long long int c )",
      "indent": 0
    },
    {
      "line": 8,
      "text": "return max of a and max of b and c",
      "code": "return max ( a , max ( b , c ) ) ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 10,
      "text": "in function min taking two long long ints a and b and returning a long long int",
      "code": "long long int min ( long long int a , long long int b )",
      "indent": 0
    },
    {
      "line": 11,
      "text": "if a is less than b return a else return b",
      "code": "return ( a < b ) ? a : b ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 13,
      "text": "in function min taking three long long ints a , b and c and returning a long long int",
      "code": "long long int min ( long long int a , long long int b , long long int c )",
      "indent": 0
    },
    {
      "line": 14,
      "text": "return min of a and min of b and c",
      "code": "return min ( a , min ( b , c ) ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "in function power taking two long long ints x and y and returning a long long int",
      "code": "long long int power ( long long int x , long long int y )",
      "indent": 0
    },
    {
      "line": 17,
      "text": "res = long long int with res = 1",
      "code": "long long int res = 1 ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "set x to x modulo MOD",
      "code": "x = x % MOD ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "loop while y is greater than 0",
      "code": "while ( y > 0 )",
      "indent": 1
    },
    {
      "line": 20,
      "text": "if y bit - wise and 1 equals true then set res = ( res * x ) modulo MOD",
      "code": "if ( y & 1 ) res = ( res * x ) % MOD ;",
      "indent": 2
    },
    {
      "line": 21,
      "text": "set y to y bitshift right by 1",
      "code": "y = y >> 1 ;",
      "indent": 2
    },
    {
      "line": 22,
      "text": "set x to ( x * x ) modulo MOD",
      "code": "x = ( x * x ) % MOD ;",
      "indent": 2
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 24,
      "text": "returnr es",
      "code": "return res ;",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 26,
      "text": "in function swap taking two pointers to char x and y",
      "code": "void swap ( char * x , char * y )",
      "indent": 0
    },
    {
      "line": 27,
      "text": "temp = char",
      "code": "char temp ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "set temp to value of y",
      "code": "temp = * y ;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "set value of y to value of x",
      "code": "* y = * x ;",
      "indent": 1
    },
    {
      "line": 30,
      "text": "set value of x to temp",
      "code": "* x = temp ;",
      "indent": 1
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 32,
      "text": "in function mod taking a long long int a and returning a long long int",
      "code": "long long int mod ( long long int a )",
      "indent": 0
    },
    {
      "line": 33,
      "text": "if a is greater than 0",
      "code": "if ( a > 0 )",
      "indent": 1
    },
    {
      "line": 34,
      "text": "return a",
      "code": "return a ;",
      "indent": 2
    },
    {
      "line": 35,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 36,
      "text": "return - a",
      "code": "return - a ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 39,
      "text": "t , a , b = int",
      "code": "int t , a , b ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "read a then b",
      "code": "cin >> a >> b ;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "c = long long int with c = a + b",
      "code": "long long int c = a + b ;",
      "indent": 1
    },
    {
      "line": 42,
      "text": "ad , cd , bg = int arrays of size 12 and all values set to 0 each",
      "code": "int ad [ 12 ] = { 0 } , cd [ 12 ] = { 0 } , bd [ 12 ] = { 0 } ;",
      "indent": 1
    },
    {
      "line": 43,
      "text": "set t to a",
      "code": "t = a ;",
      "indent": 1
    },
    {
      "line": 44,
      "text": "as , bs , cs , k = int with as = 0 and bs = 0 cs = 0 and k = 0",
      "code": "int as = 0 , bs = 0 , cs = 0 , k = 0 ;",
      "indent": 1
    },
    {
      "line": 45,
      "text": "loop while t is not 0",
      "code": "while ( t != 0 )",
      "indent": 1
    },
    {
      "line": 46,
      "text": "if t is not a multiplier of ten then set ad [ k ] to t modulo 10 and increment k",
      "code": "if ( t % 10 != 0 ) ad [ k ++ ] = t % 10 ;",
      "indent": 2
    },
    {
      "line": 47,
      "text": "set to to t / 10",
      "code": "t = t / 10 ;",
      "indent": 2
    },
    {
      "line": 48,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 49,
      "text": "set as to k",
      "code": "as = k ;",
      "indent": 1
    },
    {
      "line": 50,
      "text": "set t to b",
      "code": "t = b ;",
      "indent": 1
    },
    {
      "line": 51,
      "text": "set k to 0",
      "code": "k = 0 ;",
      "indent": 1
    },
    {
      "line": 52,
      "text": "loop while t is not 0",
      "code": "while ( t != 0 )",
      "indent": 1
    },
    {
      "line": 53,
      "text": "if t is not a multiplier of ten then set bd [ k ] to t modulo 10 and increment k",
      "code": "if ( t % 10 != 0 ) bd [ k ++ ] = t % 10 ;",
      "indent": 2
    },
    {
      "line": 54,
      "text": "set to to t / 10",
      "code": "t /= 10 ;",
      "indent": 2
    },
    {
      "line": 55,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 56,
      "text": "set t to c",
      "code": "t = c ;",
      "indent": 1
    },
    {
      "line": 57,
      "text": "set bs to k",
      "code": "bs = k ;",
      "indent": 1
    },
    {
      "line": 58,
      "text": "set k to 0",
      "code": "k = 0 ;",
      "indent": 1
    },
    {
      "line": 59,
      "text": "loop while t is not 0",
      "code": "while ( t != 0 )",
      "indent": 1
    },
    {
      "line": 60,
      "text": "if t is not a multiplier of ten then set cd [ k ] to t modulo 10 and increment k",
      "code": "if ( t % 10 != 0 ) cd [ k ++ ] = t % 10 ;",
      "indent": 2
    },
    {
      "line": 61,
      "text": "set to to t / 10",
      "code": "t /= 10 ;",
      "indent": 2
    },
    {
      "line": 62,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 63,
      "text": "set cs to k",
      "code": "cs = k ;",
      "indent": 1
    },
    {
      "line": 64,
      "text": "p , q , r = int with p = 0 and q = 0 and r = 0",
      "code": "int p = 0 , q = 0 , r = 0 ;",
      "indent": 1
    },
    {
      "line": 65,
      "text": "loop from i = as - 1 to 0 inclusive decrementing i",
      "code": "for ( int i = as - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 66,
      "text": "add ad [ i ] to p",
      "code": "p += ( ad [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 67,
      "text": "set p to p * 10",
      "code": "p *= 10 ;",
      "indent": 2
    },
    {
      "line": 68,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 69,
      "text": "loop from i = bs - 1 to 0 inclusive decrementing i",
      "code": "for ( int i = bs - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 70,
      "text": "add bd [ i ] to q",
      "code": "q += ( bd [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 71,
      "text": "set q to q * 10",
      "code": "q *= 10 ;",
      "indent": 2
    },
    {
      "line": 72,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 73,
      "text": "loop from i = cs - 1 to 0 inclusive decrementing i",
      "code": "for ( int i = cs - 1 ; i >= 0 ; i -- )",
      "indent": 1
    },
    {
      "line": 74,
      "text": "add cd [ i ] to r",
      "code": "r += ( cd [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 75,
      "text": "set r to r * 10",
      "code": "r *= 10 ;",
      "indent": 2
    },
    {
      "line": 76,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 77,
      "text": "if p + q equals r",
      "code": "if ( ( p + q ) == r )",
      "indent": 1
    },
    {
      "line": 78,
      "text": "print \" YES \"",
      "code": "cout << \" YES\\n \" ;",
      "indent": 2
    },
    {
      "line": 79,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 80,
      "text": "print \" NO \"",
      "code": "cout << \" NO\\n \" ;",
      "indent": 2
    },
    {
      "line": 81,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 82,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "returnr = es ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "temp = y ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "y = * x ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "x = temp ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        47
      ],
      "mod_code": [
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        53
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        54
      ],
      "mod_code": [
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        61
      ],
      "mod_code": [
        "to = t / 10 ;"
      ],
      "err_line": 61,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "double gcd ( double a , double b ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "long long int max ( long long int a , long long int b ) ;"
      ],
      "err_line": 5,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "long long int max ( long long int a , long long int b , long long int c ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "return max ( a , max ( b , c ) ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "long long int min ( long long int a , long long int b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "long long int min ( long long int a , long long int b , long long int c ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "return min ( a , min ( b , c ) ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘)’ before ‘;’ token"
    },
    {
      "mod_line": [
        16
      ],
      "mod_code": [
        "long long int power ( long long int x , long long int y ) ;"
      ],
      "err_line": 17,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "if ( y % wise == true ) res = ( res * x ) % MOD ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "returnr = returnr ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "void swap ( char * x , char y )"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘char’)"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "y = x * x ;"
      ],
      "err_line": 29,
      "err_msg": "invalid operands of types ‘char*’ and ‘char*’ to binary ‘operator*’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "long long int mod ( long long int a ) ;"
      ],
      "err_line": 33,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        35
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 35,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "int t , a , b , b ;"
      ],
      "err_line": 39,
      "err_msg": "redeclaration of ‘int b’"
    },
    {
      "mod_line": [
        40
      ],
      "mod_code": [
        "cin >> a >> k ;"
      ],
      "err_line": 40,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        42
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] , bg [ 12 ] ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        43
      ],
      "mod_code": [
        "int t = a ;"
      ],
      "err_line": 43,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        44
      ],
      "mod_code": [
        "int as = 0 , bs = 0 , cs = 0 ;"
      ],
      "err_line": 46,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        46
      ],
      "mod_code": [
        "if ( t % ten != 0 ) { ad [ k ++ ] = t % 10 ; }"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        47
      ],
      "mod_code": [
        "to /= 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        49
      ],
      "mod_code": [
        "int as = k ;"
      ],
      "err_line": 49,
      "err_msg": "redeclaration of ‘int as’"
    },
    {
      "mod_line": [
        50
      ],
      "mod_code": [
        "int t = b ;"
      ],
      "err_line": 50,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        51
      ],
      "mod_code": [
        "int k = 0 ;"
      ],
      "err_line": 51,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        53
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 , k ++ ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        54
      ],
      "mod_code": [
        "to /= 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        56
      ],
      "mod_code": [
        "int t = c ;"
      ],
      "err_line": 56,
      "err_msg": "redeclaration of ‘int t’"
    },
    {
      "mod_line": [
        58
      ],
      "mod_code": [
        "int k = 0 ;"
      ],
      "err_line": 58,
      "err_msg": "redeclaration of ‘int k’"
    },
    {
      "mod_line": [
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) { cd [ k ++ ] = t % 10 ; }"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        61
      ],
      "mod_code": [
        "to /= 10 ;"
      ],
      "err_line": 61,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        63
      ],
      "mod_code": [
        "int cs = k ;"
      ],
      "err_line": 63,
      "err_msg": "redeclaration of ‘int cs’"
    },
    {
      "mod_line": [
        64
      ],
      "mod_code": [
        "int p = 0 , q = 0 , q = 0 ;"
      ],
      "err_line": 64,
      "err_msg": "redeclaration of ‘int q’"
    },
    {
      "mod_line": [
        65
      ],
      "mod_code": [
        "for ( i = as - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 65,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        69
      ],
      "mod_code": [
        "for ( i = bs - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 69,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        73
      ],
      "mod_code": [
        "for ( i = cs - 1 ; i >= 0 ; i -- )"
      ],
      "err_line": 73,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        79
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 79,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        20
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        26
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        28
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        29
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        24,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        28
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        29
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        26,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        29
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        28,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        29
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        29,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        30,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        42,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        42,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        42,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        42,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        42,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        42,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        42,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        42,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        42,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        45,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        45,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        45,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        45,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        45,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        45,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        45,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        45,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        46,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        46,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        46,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        46,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        46,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        46,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        46,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        47,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        47,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        47,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        47,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        47,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        47,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        52,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        52,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        52,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        52,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        52,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        53,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        53,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        53,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        53,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        20,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        28
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        29
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        26,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        29
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        28,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        29
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "y = * x ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        29,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        30,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        42,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        42,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        42,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        42,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        42,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        42,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        42,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        42,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        42,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        45,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        45,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        45,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        45,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        45,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        45,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        45,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        45,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        46,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        46,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        46,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        46,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        46,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        46,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        46,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        47,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        47,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        47,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        47,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        47,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        47,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        52,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        52,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        52,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        52,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        52,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        53,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        53,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        53,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        53,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        24,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "returnr = es ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        29
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        28,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        29
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        29,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        30,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        42,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        42,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        42,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        42,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        42,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        42,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        42,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        42,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        42,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        45,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        45,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        45,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        45,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        45,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        45,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        45,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        45,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        46,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        46,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        46,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        46,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        46,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        46,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        46,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        47,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        47,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        47,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        47,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        47,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        47,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        52,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        52,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        52,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        52,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        52,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        53,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        53,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        53,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        53,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        26,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        29
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "y = * x ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        29,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        30,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        42,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        42,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        42,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        42,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        42,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        42,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        42,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        42,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        42,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        45,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        45,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        45,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        45,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        45,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        45,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        45,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        45,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        46,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        46,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        46,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        46,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        46,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        46,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        46,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        47,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        47,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        47,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        47,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        47,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        47,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        52,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        52,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        52,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        52,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        52,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        53,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        53,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        53,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        53,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        28,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        30,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        42,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        42,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        42,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        42,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        42,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        42,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        42,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        42,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        42,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        45,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        45,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        45,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        45,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        45,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        45,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        45,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        45,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        46,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        46,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        46,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        46,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        46,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        46,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        46,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        47,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        47,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        47,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        47,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        47,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        47,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        52,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        52,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        52,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        52,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        52,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        53,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        53,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        53,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        53,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        29,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        42,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        42,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        42,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        42,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        42,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        42,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        42,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        42,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        42,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        45,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        45,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        45,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        45,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        45,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        45,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        45,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        45,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        46,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        46,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        46,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        46,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        46,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        46,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        46,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        47,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        47,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        47,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        47,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        47,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        47,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        52,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        52,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        52,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        52,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        52,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        53,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        53,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        53,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        53,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        30,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        45,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        45,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        45,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        45,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        45,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        45,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        45,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        45,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        46,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        46,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        46,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        46,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        46,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        46,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        46,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        47,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        47,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        47,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        47,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        47,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        47,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        52,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        52,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        52,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        52,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        52,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        53,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        53,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        53,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        53,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        42,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        46,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        46,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        46,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        46,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        46,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        46,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        46,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        47,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        47,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        47,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        47,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        47,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        47,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        52,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        52,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        52,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        52,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        52,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        53,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        53,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        53,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        53,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        45,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        47,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        47,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        47,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        47,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        47,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        47,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        52,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        52,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        52,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        52,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        52,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        53,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        53,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        53,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        53,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        46,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        52,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        52,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        52,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        52,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        52,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        53,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        53,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        53,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        53,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        47,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        53,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        53,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        53,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        53,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        52,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        53
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        53,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        53,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        53,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        53,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        53,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        53,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        53,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        53,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        53,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        53,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        54
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        54,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        54,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        54,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        54,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        54,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        54,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        59
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        59,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        59,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        59,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        60
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        60,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        2,
        61
      ],
      "mod_code": [
        "return a < 0 ? b : gcd ( b floating return a , a ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 2,
      "err_msg": "expected ‘)’ before ‘floating’"
    },
    {
      "mod_line": [
        20,
        24
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        28
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        29
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        30
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        26,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        29
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        30
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        28,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        30
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        29,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "x = temp ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        30,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        42,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        42,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        42,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        42,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        42,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        42,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        42,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        42,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        42,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        45,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        45,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        45,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        45,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        45,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        45,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        45,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        45,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        46,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        46,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        46,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        46,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        46,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        46,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        46,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        47,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        47,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        47,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        47,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        47,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        47,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        52,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        52,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        52,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        52,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        52,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        53,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        53,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        53,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        53,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        54,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        54,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        54,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        24,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "returnr = es ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        29
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        30
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        28,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        30
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        29,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        30,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        42,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        42,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        42,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        42,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        42,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        42,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        42,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        42,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        42,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        45,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        45,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        45,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        45,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        45,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        45,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        45,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        45,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        46,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        46,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        46,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        46,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        46,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        46,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        46,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        47,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        47,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        47,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        47,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        47,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        47,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        52,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        52,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        52,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        52,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        52,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        53,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        53,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        53,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        53,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        54,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        54,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        54,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        26,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        30
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        29,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "x = temp ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        30,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        42,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        42,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        42,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        42,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        42,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        42,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        42,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        42,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        42,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        45,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        45,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        45,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        45,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        45,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        45,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        45,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        45,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        46,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        46,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        46,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        46,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        46,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        46,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        46,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        47,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        47,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        47,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        47,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        47,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        47,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        52,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        52,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        52,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        52,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        52,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        53,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        53,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        53,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        53,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        54,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        54,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        54,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        28,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        30,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        42,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        42,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        42,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        42,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        42,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        42,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        42,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        42,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        42,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        45,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        45,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        45,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        45,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        45,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        45,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        45,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        45,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        46,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        46,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        46,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        46,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        46,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        46,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        46,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        47,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        47,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        47,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        47,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        47,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        47,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        52,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        52,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        52,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        52,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        52,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        53,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        53,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        53,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        53,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        54,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        54,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        54,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        29,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        42,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        42,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        42,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        42,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        42,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        42,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        42,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        42,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        42,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        45,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        45,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        45,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        45,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        45,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        45,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        45,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        45,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        46,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        46,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        46,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        46,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        46,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        46,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        46,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        47,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        47,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        47,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        47,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        47,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        47,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        52,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        52,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        52,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        52,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        52,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        53,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        53,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        53,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        53,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        54,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        54,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        54,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        30,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        45,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        45,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        45,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        45,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        45,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        45,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        45,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        45,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        46,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        46,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        46,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        46,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        46,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        46,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        46,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        47,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        47,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        47,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        47,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        47,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        47,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        52,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        52,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        52,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        52,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        52,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        53,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        53,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        53,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        53,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        54,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        54,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        54,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        42,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        46,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        46,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        46,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        46,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        46,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        46,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        46,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        47,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        47,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        47,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        47,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        47,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        47,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        52,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        52,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        52,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        52,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        52,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        53,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        53,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        53,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        53,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        54,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        54,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        54,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        45,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        47,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        47,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        47,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        47,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        47,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        47,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        52,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        52,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        52,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        52,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        52,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        53,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        53,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        53,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        53,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        54,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        54,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        54,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        46,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        52,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        52,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        52,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        52,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        52,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        53,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        53,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        53,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        53,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        54,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        54,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        54,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        47,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        53,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        53,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        53,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        53,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        54,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        54,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        54,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        52,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        53
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        53,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        53,
        54,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        53,
        54,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        53,
        54,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        53,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        53,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        53,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        53,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        53,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        53,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        54
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        54,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        54,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        54,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        54,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        54,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        54,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        59
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        59,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        59,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        59,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        60
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        60,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        61
      ],
      "mod_code": [
        "if ( y & wise ) res = ( res * x ) % MOD ;",
        "to = t / 10 ;"
      ],
      "err_line": 20,
      "err_msg": "‘wise’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        29
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        30
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        42
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        28,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        30
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        42
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        29,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        30
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        42
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        30,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        42
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        42,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        42,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        42,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        42,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        42,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        42,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        42,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        42,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        42,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        45,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        45,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        45,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        45,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        45,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        45,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        45,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        45,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        46,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        46,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        46,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        46,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        46,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        46,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        46,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        47,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        47,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        47,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        47,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        47,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        47,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        52,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        52,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        52,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        52,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        52,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        53,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        53,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        53,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        53,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        54,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        54,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        54,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        59,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        59,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        26,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        30
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        42
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        29,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        30
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        42
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        30,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        42
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        42,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        42,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        42,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        42,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        42,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        42,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        42,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        42,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        42,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        45,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        45,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        45,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        45,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        45,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        45,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        45,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        45,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        46,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        46,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        46,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        46,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        46,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        46,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        46,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        47,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        47,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        47,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        47,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        47,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        47,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        52,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        52,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        52,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        52,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        52,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        53,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        53,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        53,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        53,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        54,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        54,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        54,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        59,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        59,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        28,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        30
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        42
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        30,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        42
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        42,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        42,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        42,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        42,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        42,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        42,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        42,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        42,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        42,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        45,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        45,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        45,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        45,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        45,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        45,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        45,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        45,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        46,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        46,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        46,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        46,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        46,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        46,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        46,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        47,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        47,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        47,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        47,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        47,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        47,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        52,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        52,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        52,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        52,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        52,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        53,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        53,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        53,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        53,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        54,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        54,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        54,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        59,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        59,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        29,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        42
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        42,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        42,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        42,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        42,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        42,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        42,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        42,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        42,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        42,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        45,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        45,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        45,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        45,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        45,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        45,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        45,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        45,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        46,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        46,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        46,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        46,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        46,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        46,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        46,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        47,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        47,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        47,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        47,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        47,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        47,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        52,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        52,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        52,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        52,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        52,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        53,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        53,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        53,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        53,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        54,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        54,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        54,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        59,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        59,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        30,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        45,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        45,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        45,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        45,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        45,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        45,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        45,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        45,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        46,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        46,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        46,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        46,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        46,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        46,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        46,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        47,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        47,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        47,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        47,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        47,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        47,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        52,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        52,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        52,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        52,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        52,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        53,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        53,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        53,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        53,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        54,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        54,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        54,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        59,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        59,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        42,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        46,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        46,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        46,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        46,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        46,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        46,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        46,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        47,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        47,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        47,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        47,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        47,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        47,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        52,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        52,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        52,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        52,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        52,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        53,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        53,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        53,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        53,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        54,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        54,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        54,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        59,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        59,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        45,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        47,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        47,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        47,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        47,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        47,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        47,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        52,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        52,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        52,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        52,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        52,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        53,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        53,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        53,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        53,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        54,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        54,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        54,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        59,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        59,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        46,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        52,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        52,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        52,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        52,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        52,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        53,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        53,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        53,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        53,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        54,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        54,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        54,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        59,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        59,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        47,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        53,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        53,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        53,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        53,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        54,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        54,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        54,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        59,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        59,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        52,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        53
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        53,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        53,
        54,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        53,
        54,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        53,
        54,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        53,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        53,
        59,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        53,
        59,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        53,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        53,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        53,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        54
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        54,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        54,
        59,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        54,
        59,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        54,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        54,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        54,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        59
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        59,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        59,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        59,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        60
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        60,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        24,
        61
      ],
      "mod_code": [
        "returnr = es ;",
        "to = t / 10 ;"
      ],
      "err_line": 24,
      "err_msg": "‘returnr’ was not declared in this scope"
    },
    {
      "mod_line": [
        26,
        28
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        29
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        30
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        42
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        45
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        29,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        30
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        42
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        45
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        30,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        42
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        42,
        45
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        42,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        42,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        42,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        42,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        42,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        42,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        42,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        42,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        45
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        45,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        45,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        45,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        45,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        45,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        45,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        45,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        45,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        46,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        46,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        46,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        46,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        46,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        46,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        46,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        47,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        47,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        47,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        47,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        47,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        47,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        52,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        52,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        52,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        52,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        52,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        53,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        53,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        53,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        53,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        54,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        54,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        54,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        59,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        59,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        60,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        28,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        30
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        42
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        45
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        30,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        42
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        42,
        45
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        42,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        42,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        42,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        42,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        42,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        42,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        42,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        42,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        45
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        45,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        45,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        45,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        45,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        45,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        45,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        45,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        45,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        46,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        46,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        46,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        46,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        46,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        46,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        46,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        47,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        47,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        47,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        47,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        47,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        47,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        52,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        52,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        52,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        52,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        52,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        53,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        53,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        53,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        53,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        54,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        54,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        54,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        59,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        59,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        60,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        29,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        42
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        42,
        45
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        42,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        42,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        42,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        42,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        42,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        42,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        42,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        42,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        45
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        45,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        45,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        45,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        45,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        45,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        45,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        45,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        45,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        46,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        46,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        46,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        46,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        46,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        46,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        46,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        47,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        47,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        47,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        47,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        47,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        47,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        52,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        52,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        52,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        52,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        52,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        53,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        53,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        53,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        53,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        54,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        54,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        54,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        59,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        59,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        60,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        30,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        45
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        45,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        45,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        45,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        45,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        45,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        45,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        45,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        45,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        46,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        46,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        46,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        46,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        46,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        46,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        46,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        47,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        47,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        47,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        47,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        47,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        47,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        52,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        52,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        52,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        52,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        52,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        53,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        53,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        53,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        53,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        54,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        54,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        54,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        59,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        59,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        60,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        42,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        46,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        46,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        46,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        46,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        46,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        46,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        46,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        47,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        47,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        47,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        47,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        47,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        47,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        52,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        52,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        52,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        52,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        52,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        53,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        53,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        53,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        53,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        54,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        54,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        54,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        59,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        59,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        60,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        45,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        47,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        47,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        47,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        47,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        47,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        47,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        52,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        52,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        52,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        52,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        52,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        53,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        53,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        53,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        53,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        54,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        54,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        54,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        59,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        59,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        60,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        46,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        52,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        52,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        52,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        52,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        52,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        53,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        53,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        53,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        53,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        54,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        54,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        54,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        59,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        59,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        60,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        47,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        53,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        53,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        53,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        53,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        54,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        54,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        54,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        59,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        59,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        60,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        52,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53,
        54,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53,
        54,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53,
        54,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53,
        59,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53,
        59,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53,
        60,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        53,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        54
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        54,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        54,
        59,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        54,
        59,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        54,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        54,
        60,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        54,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        59
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        59,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        59,
        60,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        59,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        60
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        60,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        26,
        61
      ],
      "mod_code": [
        "void swap ( char * x , char y ) ;",
        "to = t / 10 ;"
      ],
      "err_line": 27,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        28,
        29
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        30
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        42
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        45
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        46
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        30,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        42
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        42,
        45
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        42,
        46
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        42,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        42,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        42,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        42,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        42,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        42,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        42,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        45
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        45,
        46
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        45,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        45,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        45,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        45,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        45,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        45,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        45,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        46
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        46,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        46,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        46,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        46,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        46,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        46,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        46,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        47,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        47,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        47,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        47,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        47,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        47,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        52,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        52,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        52,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        52,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        52,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        53,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        53,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        53,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        53,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        54,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        54,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        54,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        59,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        59,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        60,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        29,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        42
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        42,
        45
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        42,
        46
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        42,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        42,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        42,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        42,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        42,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        42,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        42,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        45
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        45,
        46
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        45,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        45,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        45,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        45,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        45,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        45,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        45,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        46
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        46,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        46,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        46,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        46,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        46,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        46,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        46,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        47,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        47,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        47,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        47,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        47,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        47,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        52,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        52,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        52,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        52,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        52,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        53,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        53,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        53,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        53,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        54,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        54,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        54,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        59,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        59,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        60,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        30,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        45
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        45,
        46
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        45,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        45,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        45,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        45,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        45,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        45,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        45,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        46
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        46,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        46,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        46,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        46,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        46,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        46,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        46,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        47,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        47,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        47,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        47,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        47,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        47,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        52,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        52,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        52,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        52,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        52,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        53,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        53,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        53,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        53,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        54,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        54,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        54,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        59,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        59,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        60,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        42,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        46
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        46,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        46,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        46,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        46,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        46,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        46,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        46,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        47,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        47,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        47,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        47,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        47,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        47,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        52,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        52,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        52,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        52,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        52,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        53,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        53,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        53,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        53,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        54,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        54,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        54,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        59,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        59,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        60,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        45,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        47,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        47,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        47,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        47,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        47,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        47,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        52,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        52,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        52,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        52,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        52,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        53,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        53,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        53,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        53,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        54,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        54,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        54,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        59,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        59,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        60,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        46,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        52,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        52,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        52,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        52,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        52,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        53,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        53,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        53,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        53,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        54,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        54,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        54,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        59,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        59,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        60,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        47,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        53,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        53,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        53,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        53,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        54,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        54,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        54,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        59,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        59,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        60,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        52,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        53
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        53,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        53,
        54,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        53,
        54,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        53,
        54,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        53,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        53,
        59,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        53,
        59,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        53,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        53,
        60,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        53,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        54
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        54,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        54,
        59,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        54,
        59,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        54,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        54,
        60,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        54,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        59
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        59,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        59,
        60,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        59,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        60
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        60,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        28,
        61
      ],
      "mod_code": [
        "temp = y ;",
        "to = t / 10 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid conversion from ‘char*’ to ‘char’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        42
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        42,
        45
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        42,
        46
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        42,
        47
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        42,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        42,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        42,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        42,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        42,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        42,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        45
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        45,
        46
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        45,
        47
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        45,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        45,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        45,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        45,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        45,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        45,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        46
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        46,
        47
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        46,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        46,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        46,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        46,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        46,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        46,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        47
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        47,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        47,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        47,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        47,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        47,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        47,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        52,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        52,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        52,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        52,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        52,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        53,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        53,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        53,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        53,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        54,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        54,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        54,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        59,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        59,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        60,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        30,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        45
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        45,
        46
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        45,
        47
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        45,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        45,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        45,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        45,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        45,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        45,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        46
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        46,
        47
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        46,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        46,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        46,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        46,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        46,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        46,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        47
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        47,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        47,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        47,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        47,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        47,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        47,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        52,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        52,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        52,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        52,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        52,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        53,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        53,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        53,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        53,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        54,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        54,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        54,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        59,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        59,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        60,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        42,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        46
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        46,
        47
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        46,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        46,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        46,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        46,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        46,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        46,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        47
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        47,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        47,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        47,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        47,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        47,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        47,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        52,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        52,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        52,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        52,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        52,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        53,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        53,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        53,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        53,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        54,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        54,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        54,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        59,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        59,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        60,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        45,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        47
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        47,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        47,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        47,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        47,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        47,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        47,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        52,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        52,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        52,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        52,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        52,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        53,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        53,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        53,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        53,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        54,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        54,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        54,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        59,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        59,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        60,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        46,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        52,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        52,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        52,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        52,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        52,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        53,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        53,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        53,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        53,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        54,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        54,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        54,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        59,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        59,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        60,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        47,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        53,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        53,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        53,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        53,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        54,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        54,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        54,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        59,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        59,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        60,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        52,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        53
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        53,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        53,
        54,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        53,
        54,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        53,
        54,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        53,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        53,
        59,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        53,
        59,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        53,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        53,
        60,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        53,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        54
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        54,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        54,
        59,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        54,
        59,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        54,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        54,
        60,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        54,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        59
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        59,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        59,
        60,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        59,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        60
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        60,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        29,
        61
      ],
      "mod_code": [
        "y = * x ;",
        "to = t / 10 ;"
      ],
      "err_line": 29,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        45
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        45,
        46
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        45,
        47
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        45,
        52
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        45,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        45,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        45,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        45,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        45,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        46
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        46,
        47
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        46,
        52
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        46,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        46,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        46,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        46,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        46,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        47
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        47,
        52
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        47,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        47,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        47,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        47,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        47,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        52
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        52,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        52,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        52,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        52,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        52,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        53,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        53,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        53,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        53,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        54,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        54,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        54,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        59,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        59,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        60,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        42,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        46
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        46,
        47
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        46,
        52
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        46,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        46,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        46,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        46,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        46,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        47
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        47,
        52
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        47,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        47,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        47,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        47,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        47,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        52
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        52,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        52,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        52,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        52,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        52,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        53,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        53,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        53,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        53,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        54,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        54,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        54,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        59,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        59,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        60,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        45,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        47
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        47,
        52
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        47,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        47,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        47,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        47,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        47,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        52
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        52,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        52,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        52,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        52,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        52,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        53,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        53,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        53,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        53,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        54,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        54,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        54,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        59,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        59,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        60,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        46,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        52
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        52,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        52,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        52,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        52,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        52,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        53,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        53,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        53,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        53,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        54,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        54,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        54,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        59,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        59,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        60,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        47,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        53,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        53,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        53,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        53,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        54,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        54,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        54,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        59,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        59,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        60,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        52,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        53
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        53,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        53,
        54,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        53,
        54,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        53,
        54,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        53,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        53,
        59,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        53,
        59,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        53,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        53,
        60,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        53,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        54
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        54,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        54,
        59,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        54,
        59,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        54,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        54,
        60,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        54,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        59
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        59,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        59,
        60,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        59,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        60
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        60,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        61
      ],
      "mod_code": [
        "x = temp ;",
        "to = t / 10 ;"
      ],
      "err_line": 30,
      "err_msg": "invalid conversion from ‘char’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        42,
        45
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        46
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        46,
        47
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        46,
        52
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        46,
        53
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        46,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        46,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        46,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        46,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        47
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        47,
        52
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        47,
        53
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        47,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        47,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        47,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        47,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        52
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        52,
        53
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        52,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        52,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        52,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        52,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        53
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        53,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        53,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        53,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        53,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        54,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        54,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        54,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        59,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        59,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        60,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        45,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        47
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        47,
        52
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        47,
        53
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        47,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        47,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        47,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        47,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        52
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        52,
        53
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        52,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        52,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        52,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        52,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        53
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        53,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        53,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        53,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        53,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        54,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        54,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        54,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        59,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        59,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        60,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        46,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        52
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        52,
        53
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        52,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        52,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        52,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        52,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        53
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        53,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        53,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        53,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        53,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        54,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        54,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        54,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        59,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        59,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        60,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        47,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        53
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        53,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        53,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        53,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        53,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        54,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        54,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        54,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        59,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        59,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        60,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        52,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        53
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        53,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        53,
        54,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        53,
        54,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        53,
        54,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        53,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        53,
        59,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        53,
        59,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        53,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        53,
        60,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        53,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        54
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        54,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        54,
        59,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        54,
        59,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        54,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        54,
        60,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        54,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        59
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        59,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        59,
        60,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        59,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        60
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        60,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        42,
        61
      ],
      "mod_code": [
        "int ad [ 12 ] , cd [ 12 ] , cd [ 12 ] ;",
        "to = t / 10 ;"
      ],
      "err_line": 42,
      "err_msg": "redeclaration of ‘int cd [12]’"
    },
    {
      "mod_line": [
        45,
        46
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        47
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        47,
        52
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        47,
        53
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        47,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        47,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        47,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        47,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        52
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        52,
        53
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        52,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        52,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        52,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        52,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        53
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        53,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        53,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        53,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        53,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        54,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        54,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        54,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        59,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        59,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        60,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        46,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        52
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        52,
        53
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        52,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        52,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        52,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        52,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        53
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        53,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        53,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        53,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        53,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        54,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        54,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        54,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        59,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        59,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        60,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        47,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        53
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        53,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        53,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        53,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        53,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        54,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        54,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        54,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        59,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        59,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 61,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        60,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        52,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 61,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        53
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        53,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        53,
        54,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        53,
        54,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        53,
        54,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        53,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        53,
        59,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        53,
        59,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        53,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        53,
        60,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        53,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        54,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        54,
        59,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        54,
        59,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        54,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        54,
        60,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        54,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        59,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        59,
        60,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        59,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 61,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        60,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        45,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 61,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        52
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        52,
        53
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        52,
        54
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        52,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        52,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        52,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        53
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        53,
        54
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        53,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        53,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        53,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        54
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        54,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        54,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        54,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        59,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        59,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        60,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        47,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        53
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        53,
        54
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        53,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        53,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        53,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        54
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        54,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        54,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        54,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        59,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        59,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        60,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        52,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        53
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        53,
        54
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        53,
        54,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        53,
        54,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        53,
        54,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        53,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        53,
        59,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        53,
        59,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        53,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        53,
        60,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        53,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        54
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        54,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        54,
        59,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        54,
        59,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        54,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        54,
        60,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        54,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        59,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        59,
        60,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        59,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        60,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        46,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) ad [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 46,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        53
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        53,
        54
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        53,
        59
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        53,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        53,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        54
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        54,
        59
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        54,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        54,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        59
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        59,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        59,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        60,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        52,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        53
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        53,
        54
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        53,
        54,
        59
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        53,
        54,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        53,
        54,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        53,
        59
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        53,
        59,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        53,
        59,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        53,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        53,
        60,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        53,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        54
      ],
      "mod_code": [
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        54,
        59
      ],
      "mod_code": [
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        54,
        59,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        54,
        59,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        54,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        54,
        60,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        54,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        59
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        59,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        59,
        60,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        59,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        60,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        47,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 47,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        53
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        53,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        53,
        54,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        53,
        54,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        53,
        54,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        53,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        53,
        59,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        53,
        59,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        53,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        53,
        60,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        53,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        54
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        54,
        59
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        54,
        59,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        54,
        59,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        54,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        54,
        60,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        54,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        59,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        59,
        60,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        59,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 61,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        60,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        52,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 61,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        54
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        54,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        54,
        59,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        54,
        59,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        54,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        54,
        60,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        54,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        59
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        59,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        59,
        60,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        59,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        60
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        60,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        53,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) bd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 53,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        54,
        59
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        54,
        59,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        54,
        59,
        60,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        54,
        59,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        54,
        60
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        54,
        60,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        54,
        61
      ],
      "mod_code": [
        "to = t / 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 54,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        59,
        60
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        59,
        60,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    },
    {
      "mod_line": [
        59,
        61
      ],
      "mod_code": [
        "while ( t -- )",
        "to = t / 10 ;"
      ],
      "err_line": 61,
      "err_msg": "‘to’ was not declared in this scope"
    },
    {
      "mod_line": [
        60,
        61
      ],
      "mod_code": [
        "if ( t % ten != 0 ) cd [ k ++ ] = t % 10 ;",
        "to = t / 10 ;"
      ],
      "err_line": 60,
      "err_msg": "‘ten’ was not declared in this scope"
    }
  ]
}