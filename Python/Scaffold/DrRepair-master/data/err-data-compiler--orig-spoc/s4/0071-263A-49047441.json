{
  "meta": {
    "index": 71,
    "hitid": "3OWZNK3RYLJSN1E84YXAZN4OYQDU2V",
    "workerid": "AIWEXPJAU66D9",
    "probid": "263A",
    "subid": "49047441"
  },
  "lines": [
    {
      "line": 0,
      "text": "function mabs with int argument x that returns integer",
      "code": "int mabs ( int x )",
      "indent": 0
    },
    {
      "line": 1,
      "text": "if x > = 0",
      "code": "if ( x >= 0 )",
      "indent": 1
    },
    {
      "line": 2,
      "text": "return x",
      "code": "return x ;",
      "indent": 2
    },
    {
      "line": 3,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 4,
      "text": "return invert sign of x and return it",
      "code": "return - 1 * x ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 6,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 8,
      "text": "A is a new 2d array of integers with size 5 by 5",
      "code": "int A [ 5 ] [ 5 ] ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "declare ints a , b and moves",
      "code": "int a , b , moves ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "start for loop from i = 0 to 5 exclusive",
      "code": "for ( int i = 0 ; i < 5 ; ++ i )",
      "indent": 1
    },
    {
      "line": 11,
      "text": "for j = 0 to 5 exclusive incrementing j",
      "code": "for ( int j = 0 ; j < 5 ; j ++ )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "read A [ i ] [ j ]",
      "code": "cin >> A [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "if A [ i ] [ j ] = 1",
      "code": "if ( A [ i ] [ j ] == 1 )",
      "indent": 3
    },
    {
      "line": 14,
      "text": "assign i to a",
      "code": "a = i ;",
      "indent": 4
    },
    {
      "line": 15,
      "text": "assign j to b",
      "code": "b = j ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "declare new integer variable c = mabs ( a - 2 ) + mabs ( b - 2 )",
      "code": "int c = mabs ( a - 2 ) + mabs ( b - 2 ) ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "print c",
      "code": "cout << c << endl ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "return x = * x ;"
      ],
      "err_line": 4,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "int a , b , moves , moves ;"
      ],
      "err_line": 9,
      "err_msg": "redeclaration of ‘int moves’"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( j = 0 ; j < 5 ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        15
      ],
      "mod_code": [
        "return x = * x ;",
        "int b = j ;"
      ],
      "err_line": 4,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        4,
        15,
        10
      ],
      "mod_code": [
        "return x = * x ;",
        "int b = j ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        4,
        15,
        10,
        3
      ],
      "mod_code": [
        "return x = * x ;",
        "int b = j ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        15,
        10,
        19
      ],
      "mod_code": [
        "return x = * x ;",
        "int b = j ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        4,
        15,
        10,
        0
      ],
      "mod_code": [
        "return x = * x ;",
        "int b = j ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        15,
        3
      ],
      "mod_code": [
        "return x = * x ;",
        "int b = j ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        15,
        3,
        19
      ],
      "mod_code": [
        "return x = * x ;",
        "int b = j ;",
        "else else",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        15,
        3,
        0
      ],
      "mod_code": [
        "return x = * x ;",
        "int b = j ;",
        "else else",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        15,
        19
      ],
      "mod_code": [
        "return x = * x ;",
        "int b = j ;",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        4,
        15,
        19,
        0
      ],
      "mod_code": [
        "return x = * x ;",
        "int b = j ;",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        15,
        0
      ],
      "mod_code": [
        "return x = * x ;",
        "int b = j ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        10
      ],
      "mod_code": [
        "return x = * x ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        4,
        10,
        3
      ],
      "mod_code": [
        "return x = * x ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        10,
        3,
        19
      ],
      "mod_code": [
        "return x = * x ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else else",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        10,
        3,
        0
      ],
      "mod_code": [
        "return x = * x ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else else",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        10,
        19
      ],
      "mod_code": [
        "return x = * x ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        4,
        10,
        19,
        0
      ],
      "mod_code": [
        "return x = * x ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        10,
        0
      ],
      "mod_code": [
        "return x = * x ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "return x = * x ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        3,
        19
      ],
      "mod_code": [
        "return x = * x ;",
        "else else",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        3,
        19,
        0
      ],
      "mod_code": [
        "return x = * x ;",
        "else else",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        3,
        0
      ],
      "mod_code": [
        "return x = * x ;",
        "else else",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        19
      ],
      "mod_code": [
        "return x = * x ;",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 4,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        4,
        19,
        0
      ],
      "mod_code": [
        "return x = * x ;",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4,
        0
      ],
      "mod_code": [
        "return x = * x ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "int b = j ;",
        "for ( i = 0 ; i < 5 ; i ++ )"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        10,
        3
      ],
      "mod_code": [
        "int b = j ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        10,
        3,
        19
      ],
      "mod_code": [
        "int b = j ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else else",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        10,
        3,
        0
      ],
      "mod_code": [
        "int b = j ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else else",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        10,
        19
      ],
      "mod_code": [
        "int b = j ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        10,
        19,
        0
      ],
      "mod_code": [
        "int b = j ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        10,
        0
      ],
      "mod_code": [
        "int b = j ;",
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "int b = j ;",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        3,
        19
      ],
      "mod_code": [
        "int b = j ;",
        "else else",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        3,
        19,
        0
      ],
      "mod_code": [
        "int b = j ;",
        "else else",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        3,
        0
      ],
      "mod_code": [
        "int b = j ;",
        "else else",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        19
      ],
      "mod_code": [
        "int b = j ;",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 19,
      "err_msg": "‘c’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        19,
        0
      ],
      "mod_code": [
        "int b = j ;",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        15,
        0
      ],
      "mod_code": [
        "int b = j ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        3,
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else else",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        10,
        3,
        19,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else else",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        3,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "else else",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        19
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 10,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        19,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        10,
        0
      ],
      "mod_code": [
        "for ( i = 0 ; i < 5 ; i ++ )",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        19
      ],
      "mod_code": [
        "else else",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        3,
        19,
        0
      ],
      "mod_code": [
        "else else",
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3,
        0
      ],
      "mod_code": [
        "else else",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        19,
        0
      ],
      "mod_code": [
        "c = mabs ( a - 2 ) + mabs ( b - 2 ) ;",
        "int mabs ( int x ) ;"
      ],
      "err_line": 1,
      "err_msg": "expected unqualified-id before ‘{’ token"
    }
  ]
}