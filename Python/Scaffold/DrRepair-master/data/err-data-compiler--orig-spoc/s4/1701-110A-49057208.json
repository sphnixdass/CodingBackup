{
  "meta": {
    "index": 1701,
    "hitid": "3AJA9FLWSCS7F4VKYCN303A2DZSIFS",
    "workerid": "A1APYLD4DUK33J",
    "probid": "110A",
    "subid": "49057208"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create long longs n , rem , rev , c , with rem = 0 , rev = 0 , c = 0",
      "code": "long long n , rem = 0 , rev = 0 , c = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "while n is not 0",
      "code": "while ( n != 0 )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "set rem to n % 10",
      "code": "rem = n % 10 ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if rem is 7 or rem is 4 , increment c",
      "code": "if ( rem == 7 || rem == 4 ) { c ++ ; }",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set n to n / 10",
      "code": "n = n / 10 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if c is 7 or c is 4",
      "code": "if ( c == 7 || c == 4 )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print \" YES \"",
      "code": "cout << \" YES \"",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print \" \\ n \"",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" NO \"",
      "code": "cout << \" NO \"",
      "indent": 2
    },
    {
      "line": 13,
      "text": "print \" \\ n \"",
      "code": "<< \" \\n \" ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "puts ( \" YES \" ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "puts ( \" NO \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        12,
        8
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        12,
        8,
        11
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        12,
        8,
        13
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "cout << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        12,
        11
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        12,
        11,
        13
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "else else",
        "cout << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        12,
        13
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" NO \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        8
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        8,
        12
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "puts ( \" NO \" ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        8,
        12,
        11
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "puts ( \" NO \" ) ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        8,
        12,
        13
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "puts ( \" NO \" ) ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        8,
        11
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        8,
        11,
        13
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "else else",
        "cout << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        8,
        13
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "cout << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        12
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "puts ( \" NO \" ) ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        12,
        11
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "puts ( \" NO \" ) ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        12,
        11,
        13
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "puts ( \" NO \" ) ;",
        "else else",
        "cout << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        12,
        13
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "puts ( \" NO \" ) ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        11
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        11,
        13
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "else else",
        "cout << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        9,
        13
      ],
      "mod_code": [
        "cout << \" YES \" << endl ;",
        "cout << \" \\n \" ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12,
        8
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12,
        8,
        11
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        8,
        11,
        13
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "else else",
        "cout << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11,
        13
      ],
      "mod_code": [
        "cout << \" NO \" << endl ;",
        "else else",
        "cout << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        12
      ],
      "mod_code": [
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "puts ( \" NO \" ) ;"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        8,
        12,
        11
      ],
      "mod_code": [
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "puts ( \" NO \" ) ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        12,
        11,
        13
      ],
      "mod_code": [
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "puts ( \" NO \" ) ;",
        "else else",
        "cout << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        11
      ],
      "mod_code": [
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        11,
        13
      ],
      "mod_code": [
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "else else",
        "cout << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "if ( c == ' 7 ' || c == ' 4 ' )",
        "cout << \" \\n \" ;"
      ],
      "err_line": 13,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "puts ( \" NO \" ) ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11,
        13
      ],
      "mod_code": [
        "puts ( \" NO \" ) ;",
        "else else",
        "cout << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "else else",
        "cout << \" \\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}