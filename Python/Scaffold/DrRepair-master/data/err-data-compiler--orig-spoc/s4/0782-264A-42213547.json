{
  "meta": {
    "index": 782,
    "hitid": "3UEBBGULPFICOVQKSTCHJ6YD7UJUFG",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "264A",
    "subid": "42213547"
  },
  "lines": [
    {
      "line": 0,
      "text": "a = integer array of size 1000005",
      "code": "int a [ 1000005 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "l = length of s",
      "code": "int l = s . length ( ) ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "beg = integer = 1 , end = integer = 1",
      "code": "int beg = 1 , end = l ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to l exclusive , then if s [ i ] is l a [ decrease end by 1 at the end of the loop ] = i + 1 else a [ increase beg by 2 st the end of the loop ] = i + 1",
      "code": "for ( int i = 0 ; i < l ; i ++ ) s [ i ] == ' l ' ? a [ end -- ] = i + 1 : a [ beg ++ ] = i + 1 ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for i = 0 to l exclusive , then print a [ i + 1 ]",
      "code": "for ( int i = 0 ; i < l ; i ++ ) cout << a [ i + 1 ] << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "l = s . length ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int beg = 1 , end = 1 , end = 1 ;"
      ],
      "err_line": 5,
      "err_msg": "redeclaration of ‘int end’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "int beg = 1 , end = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "int beg = 1 , end = 1 ;",
        "for ( int i = 0 ; i < l ; i ++ ) { s [ i ] /= 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        7
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "int beg = 1 , end = 1 ;",
        "for ( int i = 0 ; i < l ; i ++ ) { s [ i ] /= 1 ; }",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        6,
        3
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "int beg = 1 , end = 1 ;",
        "for ( int i = 0 ; i < l ; i ++ ) { s [ i ] /= 1 ; }",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        7
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "int beg = 1 , end = 1 ;",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        3
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "int beg = 1 , end = 1 ;",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        7,
        6
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "int beg = 1 , end = 1 ;",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }",
        "for ( int i = 0 ; i < l ; i ++ ) { a [ i ] /= 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        3
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "int beg = 1 , end = 1 ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        3,
        6
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "int beg = 1 , end = 1 ;",
        "gets ( s ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { a [ i ] /= 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        5,
        6
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "int beg = 1 , end = 1 ;",
        "for ( int i = 0 ; i < l ; i ++ ) { a [ i ] /= 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { s [ i ] /= 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { s [ i ] /= 1 ; }",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        6,
        7,
        3
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { s [ i ] /= 1 ; }",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        6,
        3
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { s [ i ] /= 1 ; }",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        3
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        7,
        3,
        6
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }",
        "gets ( s ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { a [ i ] /= 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        7,
        6
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }",
        "for ( int i = 0 ; i < l ; i ++ ) { a [ i ] /= 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        3
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        3,
        6
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "gets ( s ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { a [ i ] /= 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        6
      ],
      "mod_code": [
        "l = s . length ( ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { a [ i ] /= 1 ; }"
      ],
      "err_line": 4,
      "err_msg": "‘l’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        3
      ],
      "mod_code": [
        "int beg = 1 , end = 1 ;",
        "for ( int i = 0 ; i < l ; i ++ ) { s [ i ] /= 1 ; }",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "int beg = 1 , end = 1 ;",
        "for ( int i = 0 ; i < l ; i ++ ) { s [ i ] /= 1 ; }",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        7,
        3
      ],
      "mod_code": [
        "int beg = 1 , end = 1 ;",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        7,
        3,
        6
      ],
      "mod_code": [
        "int beg = 1 , end = 1 ;",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }",
        "gets ( s ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { a [ i ] /= 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "int beg = 1 , end = 1 ;",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        3,
        6
      ],
      "mod_code": [
        "int beg = 1 , end = 1 ;",
        "gets ( s ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { a [ i ] /= 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < l ; i ++ ) { s [ i ] /= 1 ; }",
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < l ; i ++ ) { s [ i ] /= 1 ; }",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }",
        "gets ( s ) ;"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        7,
        3,
        6
      ],
      "mod_code": [
        "for ( int i = 0 ; i < l ; i ++ ) { cout << a [ i + 1 ] ; }",
        "gets ( s ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { a [ i ] /= 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        3,
        6
      ],
      "mod_code": [
        "gets ( s ) ;",
        "for ( int i = 0 ; i < l ; i ++ ) { a [ i ] /= 1 ; }"
      ],
      "err_line": 3,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}