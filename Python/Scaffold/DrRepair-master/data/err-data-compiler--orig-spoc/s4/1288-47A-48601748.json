{
  "meta": {
    "index": 1288,
    "hitid": "3ZZAYRN1I6LRUVOORR5X14LPFFQOTN",
    "workerid": "AIWEXPJAU66D9",
    "probid": "47A",
    "subid": "48601748"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer variable y",
      "code": "int y ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare doubles called n and x",
      "code": "double n , x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "x = 8 * n + 1",
      "code": "x = 8 * n + 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "set x to square root of x",
      "code": "x = sqrt ( x ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "decrease x by one",
      "code": "x -- ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "divide x by 2",
      "code": "x /= 2 ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "assign value of x casted to int to the y",
      "code": "y = ( int ) x ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if x is equal to y",
      "code": "if ( x == y )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "print \" YES \" and a new line",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" NO \" and a new line",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "const int n , x ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "x = sqrt ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sqrt()’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int x = 8 * n + 1 ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        9,
        4,
        2
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int x = 8 * n + 1 ;",
        "const int n , x ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4,
        2,
        5
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int x = 8 * n + 1 ;",
        "const int n , x ;",
        "x = sqrt ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4,
        2,
        1
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int x = 8 * n + 1 ;",
        "const int n , x ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const int n’"
    },
    {
      "mod_line": [
        9,
        4,
        2,
        8
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int x = 8 * n + 1 ;",
        "const int n , x ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        4,
        5
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int x = 8 * n + 1 ;",
        "x = sqrt ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        9,
        4,
        5,
        1
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int x = 8 * n + 1 ;",
        "x = sqrt ( ) ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        9,
        4,
        5,
        8
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int x = 8 * n + 1 ;",
        "x = sqrt ( ) ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        9,
        4,
        1
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int x = 8 * n + 1 ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        9,
        4,
        1,
        8
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int x = 8 * n + 1 ;",
        "int n ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        9,
        4,
        8
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int x = 8 * n + 1 ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        9,
        2
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "const int n , x ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2,
        5
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "const int n , x ;",
        "x = sqrt ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2,
        5,
        1
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "const int n , x ;",
        "x = sqrt ( ) ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const int n’"
    },
    {
      "mod_line": [
        9,
        2,
        5,
        8
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "const int n , x ;",
        "x = sqrt ( ) ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        2,
        1
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "const int n , x ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const int n’"
    },
    {
      "mod_line": [
        9,
        2,
        1,
        8
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "const int n , x ;",
        "int n ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const int n’"
    },
    {
      "mod_line": [
        9,
        2,
        8
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "const int n , x ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "x = sqrt ( ) ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sqrt()’"
    },
    {
      "mod_line": [
        9,
        5,
        1
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "x = sqrt ( ) ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        9,
        5,
        1,
        8
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "x = sqrt ( ) ;",
        "int n ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        9,
        5,
        8
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "x = sqrt ( ) ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sqrt()’"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        9,
        1,
        8
      ],
      "mod_code": [
        "if ( x == ' y ' )",
        "int n ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "const int n , x ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        5
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "const int n , x ;",
        "x = sqrt ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        5,
        1
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "const int n , x ;",
        "x = sqrt ( ) ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const int n’"
    },
    {
      "mod_line": [
        4,
        2,
        5,
        8
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "const int n , x ;",
        "x = sqrt ( ) ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        2,
        1
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "const int n , x ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const int n’"
    },
    {
      "mod_line": [
        4,
        2,
        1,
        8
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "const int n , x ;",
        "int n ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const int n’"
    },
    {
      "mod_line": [
        4,
        2,
        8
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "const int n , x ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "x = sqrt ( ) ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "x = sqrt ( ) ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        4,
        5,
        1,
        8
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "x = sqrt ( ) ;",
        "int n ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        4,
        5,
        8
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "x = sqrt ( ) ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        4,
        1,
        8
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "int n ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "int x = 8 * n + 1 ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 4,
      "err_msg": "conflicting declaration ‘int x’"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "const int n , x ;",
        "x = sqrt ( ) ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        5,
        1
      ],
      "mod_code": [
        "const int n , x ;",
        "x = sqrt ( ) ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const int n’"
    },
    {
      "mod_line": [
        2,
        5,
        1,
        8
      ],
      "mod_code": [
        "const int n , x ;",
        "x = sqrt ( ) ;",
        "int n ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const int n’"
    },
    {
      "mod_line": [
        2,
        5,
        8
      ],
      "mod_code": [
        "const int n , x ;",
        "x = sqrt ( ) ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "const int n , x ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const int n’"
    },
    {
      "mod_line": [
        2,
        1,
        8
      ],
      "mod_code": [
        "const int n , x ;",
        "int n ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘const int n’"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "const int n , x ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "uninitialized const ‘n’ [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "x = sqrt ( ) ;",
        "int n ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        5,
        1,
        8
      ],
      "mod_code": [
        "x = sqrt ( ) ;",
        "int n ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "x = sqrt ( ) ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 5,
      "err_msg": "no matching function for call to ‘sqrt()’"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "int n ;",
        "y = x * ( int ) x ;"
      ],
      "err_line": 2,
      "err_msg": "conflicting declaration ‘double n’"
    }
  ]
}