{
  "meta": {
    "index": 1874,
    "hitid": "363A7XIFV4GH5JYCM30U1RP5OLKVAY",
    "workerid": "A1NBHCFZKJGHKW",
    "probid": "514A",
    "subid": "49067741"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "i = unsigned long long int with i = 0",
      "code": "unsigned long long int i = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if s [ i ] is ' 9 '",
      "code": "if ( s [ i ] == ' 9 ' )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "print s [ i ]",
      "code": "cout << s [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment i",
      "code": "i ++ ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "continue iterating i while i < length of s print min of s [ i ] - ' 0 ' , 9 - ( s [ i ] - ' 0 ' )",
      "code": "for ( ; i < s . length ( ) ; i ++ ) { cout << min ( s [ i ] - ' 0 ' , 9 - ( s [ i ] - ' 0 ' ) ) ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "print newline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "continue ;"
      ],
      "err_line": 8,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "continue ; continue ;"
      ],
      "err_line": 8,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "continue ;"
      ],
      "err_line": 8,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        5,
        8,
        4
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "continue ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        5,
        8,
        4,
        2
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "continue ;",
        "if ( ! s [ i ] )",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        8,
        2
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "continue ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        4,
        8
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "if ( ! s [ i ] )",
        "continue ; continue ;"
      ],
      "err_line": 8,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        5,
        4,
        8,
        2
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "if ( ! s [ i ] )",
        "continue ; continue ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        4,
        2
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "if ( ! s [ i ] )",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        8
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "continue ; continue ;"
      ],
      "err_line": 8,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        5,
        8,
        2
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "continue ; continue ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "cout << s [ i ] << endl ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "continue ;",
        "if ( ! s [ i ] )"
      ],
      "err_line": 8,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        8,
        4,
        2
      ],
      "mod_code": [
        "continue ;",
        "if ( ! s [ i ] )",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "continue ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "if ( ! s [ i ] )",
        "continue ; continue ;"
      ],
      "err_line": 8,
      "err_msg": "continue statement not within a loop"
    },
    {
      "mod_line": [
        4,
        8,
        2
      ],
      "mod_code": [
        "if ( ! s [ i ] )",
        "continue ; continue ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4,
        2
      ],
      "mod_code": [
        "if ( ! s [ i ] )",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        8,
        2
      ],
      "mod_code": [
        "continue ; continue ;",
        "gets ( s ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    }
  ]
}