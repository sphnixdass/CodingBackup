{
  "meta": {
    "index": 1115,
    "hitid": "3JTPR5MTZS66J2SJS3V6R7Y2FMAK5I",
    "workerid": "AIWEXPJAU66D9",
    "probid": "1085A",
    "subid": "48592891"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare string variable temp",
      "code": "string temp ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "while reading temp",
      "code": "while ( cin >> temp )",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer s_size = length of temp",
      "code": "int s_size = temp . size ( ) ;",
      "indent": 2
    },
    {
      "line": 4,
      "text": "create string ans",
      "code": "string ans ;",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if s_size is even",
      "code": "if ( s_size % 2 == 0 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "declare integer variable pos = s_size / 2 - 1",
      "code": "int pos = s_size / 2 - 1 ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "declare integer variable times = 1",
      "code": "int times = 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "declare integer flag = 1",
      "code": "int flag = 1 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "while pos ! = - 1",
      "code": "while ( pos != - 1 )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increase ans by temp [ pos ]",
      "code": "ans += temp [ pos ] ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "if flag is not 0",
      "code": "if ( flag )",
      "indent": 4
    },
    {
      "line": 12,
      "text": "increase pos by times",
      "code": "pos += times ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "assign value of 0 to flag",
      "code": "flag = 0 ;",
      "indent": 5
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 15,
      "text": "decrease pos by times",
      "code": "pos -= times ;",
      "indent": 5
    },
    {
      "line": 16,
      "text": "flag = 1",
      "code": "flag = 1 ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 18,
      "text": "increase times by one",
      "code": "times ++ ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 21,
      "text": "declare integer variable pos = s_size / 2",
      "code": "int pos = s_size / 2 ;",
      "indent": 3
    },
    {
      "line": 22,
      "text": "declare integer variable times = 1",
      "code": "int times = 1 ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "declare integer flag = 1",
      "code": "int flag = 1 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "while pos ! = s_size",
      "code": "while ( pos != s_size )",
      "indent": 3
    },
    {
      "line": 25,
      "text": "increase ans by temp [ pos ]",
      "code": "ans += temp [ pos ] ;",
      "indent": 4
    },
    {
      "line": 26,
      "text": "if flag is not 0",
      "code": "if ( flag )",
      "indent": 4
    },
    {
      "line": 27,
      "text": "increase pos by times",
      "code": "pos += times ;",
      "indent": 5
    },
    {
      "line": 28,
      "text": "assign value of 0 to flag",
      "code": "flag = 0 ;",
      "indent": 5
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 30,
      "text": "decrease pos by times",
      "code": "pos -= times ;",
      "indent": 5
    },
    {
      "line": 31,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 5
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 33,
      "text": "increase times by one",
      "code": "times ++ ;",
      "indent": 4
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 2
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "string n ;"
      ],
      "err_line": 2,
      "err_msg": "‘temp’ was not declared in this scope"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "while ( temp -- )"
      ],
      "err_line": 2,
      "err_msg": "no ‘operator--(int)’ declared for postfix ‘--’ [-fpermissive]"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string ans ans ;"
      ],
      "err_line": 4,
      "err_msg": "expected initializer before ‘ans’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "times = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "‘times’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "flag = 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "* flag = 0 ;"
      ],
      "err_line": 13,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 20,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "int pos /= 2 ;"
      ],
      "err_line": 21,
      "err_msg": "expected initializer before ‘/=’ token"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "times = 1 ;"
      ],
      "err_line": 22,
      "err_msg": "‘times’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "flag = 1 ;"
      ],
      "err_line": 23,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        15,
        27,
        29
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "pos += 2 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        15,
        27,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "pos += 2 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        15,
        30,
        29
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "pos = pos - 1 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        15,
        30,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "pos = pos - 1 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        15,
        29
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        15,
        29,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "else else",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        15,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        27,
        30,
        29
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        27,
        30,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        27,
        29
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos += 2 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        27,
        29,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos += 2 ;",
        "else else",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        27,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos += 2 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        30,
        29
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        30,
        29,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "else else",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        30,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        29
      ],
      "mod_code": [
        "pos += 2 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        29,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "else else",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        27,
        30,
        29
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        27,
        30,
        28
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        27,
        29
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "pos += 2 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        27,
        29,
        28
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "pos += 2 ;",
        "else else",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        27,
        28
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "pos += 2 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        30,
        29
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "pos = pos - 1 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        30,
        29,
        28
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "pos = pos - 1 ;",
        "else else",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        30,
        28
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "pos = pos - 1 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        29
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15,
        29,
        28
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "else else",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        28
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        27,
        30,
        29
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        27,
        30,
        29,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "else else",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        27,
        30,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "pos = pos - 1 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        27,
        29
      ],
      "mod_code": [
        "pos += 2 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        27,
        29,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "else else",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        27,
        28
      ],
      "mod_code": [
        "pos += 2 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        30,
        29
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        30,
        29,
        28
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "else else",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        30,
        28
      ],
      "mod_code": [
        "pos = pos - 1 ;",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        29,
        28
      ],
      "mod_code": [
        "else else",
        "* flag = 0 ;"
      ],
      "err_line": 28,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    }
  ]
}