{
  "meta": {
    "index": 2272,
    "hitid": "37VE3DA4YUBH6S8KNSJMH1I2X1SHBC",
    "workerid": "AIWEXPJAU66D9",
    "probid": "201A",
    "subid": "36410587"
  },
  "lines": [
    {
      "line": 0,
      "text": "assign value 100 + 10 to constant integer M",
      "code": "const int M = 100 + 10 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 2,
      "text": "declare integer variable called x",
      "code": "int x ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "create integer n = - 1",
      "code": "int n = - 1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 1 to 100 inclusive while n = - 1 , incrementing i by 2",
      "code": "for ( int i = 1 ; i <= 100 && n == - 1 ; i += 2 )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "declare integer called m = ( i - 1 ) / 2",
      "code": "int m = ( i - 1 ) / 2 ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if m & 1",
      "code": "if ( m & 1 )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "for b = 0 to m - 1 inclusive",
      "code": "for ( int b = 0 ; b <= m - 1 ; b ++ )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "for a = 0 to ( m * m + 1 ) / 2 inclusive",
      "code": "for ( int a = 0 ; a <= ( m * m + 1 ) / 2 ; a ++ )",
      "indent": 4
    },
    {
      "line": 10,
      "text": "declare integer called num = 4 * a + 2 * b + 1",
      "code": "int num = 4 * a + 2 * b + 1 ;",
      "indent": 5
    },
    {
      "line": 11,
      "text": "if num = x , set n to i",
      "code": "if ( num == x ) { n = i ; }",
      "indent": 5
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "for integer b = 0 to m + 1 inclusive",
      "code": "for ( int b = 0 ; b <= m + 1 ; b ++ )",
      "indent": 3
    },
    {
      "line": 15,
      "text": "for integer a = 0 to ( m * m + 1 ) / 2 - 1 inclusive",
      "code": "for ( int a = 0 ; a <= ( m * m + 1 ) / 2 - 1 ; a ++ )",
      "indent": 4
    },
    {
      "line": 16,
      "text": "integer variable called num = 4 * a + 2 * b + 0",
      "code": "int num = 4 * a + 2 * b + 0 ;",
      "indent": 5
    },
    {
      "line": 17,
      "text": "if num = x , set n to i",
      "code": "if ( num == x ) { n = i ; }",
      "indent": 5
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 20,
      "text": "for integer b = 0 to m - 1 inclusive",
      "code": "for ( int b = 0 ; b <= m - 1 ; b ++ )",
      "indent": 3
    },
    {
      "line": 21,
      "text": "for integer a = ( m * m + 1 ) / 2 to ( m * m + 1 ) / 2 inclusive",
      "code": "for ( int a = ( m * m + 1 ) / 2 ; a <= ( m * m + 1 ) / 2 ; a ++ )",
      "indent": 4
    },
    {
      "line": 22,
      "text": "num is integer = 4 * a + 2 * b + 0",
      "code": "int num = 4 * a + 2 * b + 0 ;",
      "indent": 5
    },
    {
      "line": 23,
      "text": "if num = x , set n to i",
      "code": "if ( num == x ) { n = i ; }",
      "indent": 5
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 26,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 27,
      "text": "for a = 0 to m * m / 2 inclusive",
      "code": "for ( int a = 0 ; a <= m * m / 2 ; a ++ )",
      "indent": 3
    },
    {
      "line": 28,
      "text": "for b = 0 to m inclusive",
      "code": "for ( int b = 0 ; b <= m ; b ++ )",
      "indent": 4
    },
    {
      "line": 29,
      "text": "for integer c = 0 to 1 inclusive",
      "code": "for ( int c = 0 ; c <= 1 ; c ++ )",
      "indent": 5
    },
    {
      "line": 30,
      "text": "let num be integer = 4 * a + 2 * b + c",
      "code": "int num = 4 * a + 2 * b + c ;",
      "indent": 6
    },
    {
      "line": 31,
      "text": "if num = x , set num to i",
      "code": "if ( num == x ) { n = i ; }",
      "indent": 6
    },
    {
      "line": 32,
      "text": "DUMMY",
      "code": "}",
      "indent": 5
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 37,
      "text": "print n and a new line",
      "code": "cout << n << endl ;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 39,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n ;"
      ],
      "err_line": 3,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "n = - 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘n’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( b = 0 ; b <= m - 1 ; b ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( a = 0 ; a <= ( m * m + 1 ) / 2 ; a ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        26
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "for ( a = 0 ; a <= m * m / 2 ; a ++ )"
      ],
      "err_line": 27,
      "err_msg": "‘a’ was not declared in this scope"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "for ( b = 0 ; b <= m ; b ++ )"
      ],
      "err_line": 28,
      "err_msg": "‘b’ was not declared in this scope"
    },
    {
      "mod_line": [
        30
      ],
      "mod_code": [
        "num = 4 * a + 2 * b + c ;"
      ],
      "err_line": 30,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        31,
        7,
        30
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 )",
        "if ( num == x ) num = i ;",
        "if ( ! m & 1 )",
        "num = 4 * a + 2 * b + c ;"
      ],
      "err_line": 30,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        31,
        7,
        26
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 )",
        "if ( num == x ) num = i ;",
        "if ( ! m & 1 )",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        31,
        30
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 )",
        "if ( num == x ) num = i ;",
        "num = 4 * a + 2 * b + c ;"
      ],
      "err_line": 30,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        31,
        30,
        26
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 )",
        "if ( num == x ) num = i ;",
        "num = 4 * a + 2 * b + c ;",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        31,
        26
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 )",
        "if ( num == x ) num = i ;",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        7,
        30
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 )",
        "if ( ! m & 1 )",
        "num = 4 * a + 2 * b + c ;"
      ],
      "err_line": 30,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        30,
        26
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 )",
        "if ( ! m & 1 )",
        "num = 4 * a + 2 * b + c ;",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        7,
        26
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 )",
        "if ( ! m & 1 )",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        30
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 )",
        "num = 4 * a + 2 * b + c ;"
      ],
      "err_line": 30,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        30,
        26
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 )",
        "num = 4 * a + 2 * b + c ;",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        26
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 )",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        31,
        7,
        5
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "if ( ! m & 1 )",
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        7,
        5,
        30
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "if ( ! m & 1 )",
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }",
        "num = 4 * a + 2 * b + c ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        7,
        5,
        26
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "if ( ! m & 1 )",
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        7,
        30
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "if ( ! m & 1 )",
        "num = 4 * a + 2 * b + c ;"
      ],
      "err_line": 30,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        7,
        30,
        26
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "if ( ! m & 1 )",
        "num = 4 * a + 2 * b + c ;",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        31,
        7,
        26
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "if ( ! m & 1 )",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        31,
        5
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        5,
        30
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }",
        "num = 4 * a + 2 * b + c ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        5,
        30,
        26
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }",
        "num = 4 * a + 2 * b + c ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        5,
        26
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        31,
        30
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "num = 4 * a + 2 * b + c ;"
      ],
      "err_line": 30,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        31,
        30,
        26
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "num = 4 * a + 2 * b + c ;",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        31,
        26
      ],
      "mod_code": [
        "if ( num == x ) num = i ;",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        5
      ],
      "mod_code": [
        "if ( ! m & 1 )",
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5,
        30
      ],
      "mod_code": [
        "if ( ! m & 1 )",
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }",
        "num = 4 * a + 2 * b + c ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5,
        30,
        26
      ],
      "mod_code": [
        "if ( ! m & 1 )",
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }",
        "num = 4 * a + 2 * b + c ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        5,
        26
      ],
      "mod_code": [
        "if ( ! m & 1 )",
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7,
        30
      ],
      "mod_code": [
        "if ( ! m & 1 )",
        "num = 4 * a + 2 * b + c ;"
      ],
      "err_line": 30,
      "err_msg": "‘num’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        30,
        26
      ],
      "mod_code": [
        "if ( ! m & 1 )",
        "num = 4 * a + 2 * b + c ;",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        26
      ],
      "mod_code": [
        "if ( ! m & 1 )",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        30
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }",
        "num = 4 * a + 2 * b + c ;"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        30,
        26
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }",
        "num = 4 * a + 2 * b + c ;",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5,
        26
      ],
      "mod_code": [
        "for ( int i = 1 ; i <= 100 ; i += 2 ) { n += 2 ; }",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        30,
        26
      ],
      "mod_code": [
        "num = 4 * a + 2 * b + c ;",
        "else else"
      ],
      "err_line": 26,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}