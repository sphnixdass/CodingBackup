{
  "meta": {
    "index": 1875,
    "hitid": "3BVS8WK9Q0PH2NJ4TA17HDJHY19BIC",
    "workerid": "A1AYVATMT88U1W",
    "probid": "514A",
    "subid": "41730619"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let numero be a string",
      "code": "string numero ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read numero",
      "code": "cin >> numero ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let n be a integer with n is equal to length of numero",
      "code": "int n = numero . size ( ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n - 1 inclusive",
      "code": "for ( int i = 0 ; i <= n - 1 ; ++ i )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let x be a integer with x = numero [ i ] - 0",
      "code": "int x = numero [ i ] - ' 0 ' ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if i is equal to 0",
      "code": "if ( i == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "if 5 < = x and x < = 8 , numero [ i ] is equal to ( char ) ( 0 + 9 - x )",
      "code": "if ( 5 <= x and x <= 8 ) { numero [ i ] = ( char ) ( ' 0 ' + 9 - x ) ; }",
      "indent": 3
    },
    {
      "line": 8,
      "text": "else if 5 < = x",
      "code": "else if ( 5 <= x )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "numero [ i ] is equal to ( char ) ( 0 + 9 - x )",
      "code": "numero [ i ] = ( char ) ( ' 0 ' + 9 - x ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print numero and newline",
      "code": "cout << numero << endl ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "gets ( numero ) ;"
      ],
      "err_line": 2,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i <= n - 1 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    }
  ]
}