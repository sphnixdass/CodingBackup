{
  "meta": {
    "index": 1429,
    "hitid": "3MXX6RQ9EVZPYALZRQH4IWEN90NP4L",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "729A",
    "subid": "48442865"
  },
  "lines": [
    {
      "line": 0,
      "text": "N = const long long with N = 1e9 + 3",
      "code": "const long long N = 1e9 + 3 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "MN = const long long with MN = 1e9 + 7",
      "code": "const long long MN = 1e9 + 7 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "MX = const long long with MX = - 1e9 - 7",
      "code": "const long long MX = - 1e9 - 7 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "n , a , b , x , c1 , c2 , cnt = long long",
      "code": "long long n , a , b , x , c1 , c2 , cnt ;",
      "indent": 0
    },
    {
      "line": 4,
      "text": "s , s1 = strings",
      "code": "string s , s1 ;",
      "indent": 0
    },
    {
      "line": 5,
      "text": "bl = bool with bl = false",
      "code": "bool bl = false ;",
      "indent": 0
    },
    {
      "line": 6,
      "text": "c = long long",
      "code": "long long c ;",
      "indent": 0
    },
    {
      "line": 7,
      "text": "pr = pair of long long and long long",
      "code": "pair < long long , long long > pr ;",
      "indent": 0
    },
    {
      "line": 8,
      "text": "v = vector of long long",
      "code": "vector < long long > v ;",
      "indent": 0
    },
    {
      "line": 9,
      "text": "mp = map from long long to long long",
      "code": "map < long long , long long > mp ;",
      "indent": 0
    },
    {
      "line": 10,
      "text": "st = set of long long",
      "code": "set < long long > st ;",
      "indent": 0
    },
    {
      "line": 11,
      "text": "it = iterator set of long long",
      "code": "set < long long > :: iterator it ;",
      "indent": 0
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 13,
      "text": "read n and s",
      "code": "cin >> n >> s ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "c = size of s",
      "code": "c = s . size ( ) ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "while c",
      "code": "while ( c )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "if s [ 0 ] is ' o ' and s [ 1 ] is ' g ' and s [ 2 ] is ' o '",
      "code": "if ( s [ 0 ] == ' o ' and s [ 1 ] == ' g ' and s [ 2 ] == ' o ' )",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if bl is false",
      "code": "if ( bl == false )",
      "indent": 3
    },
    {
      "line": 18,
      "text": "print * * *",
      "code": "cout << \" *** \" ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "bl = true",
      "code": "bl = true ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 21,
      "text": "if s [ 3 ] is ' g ' and s [ 4 ] is ' o '",
      "code": "if ( s [ 3 ] == ' g ' and s [ 4 ] == ' o ' )",
      "indent": 3
    },
    {
      "line": 22,
      "text": "c = c - 2",
      "code": "c -= 2 ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "erase s from s . begin ( ) + 0",
      "code": "s . erase ( s . begin ( ) + 0 ) ;",
      "indent": 4
    },
    {
      "line": 24,
      "text": "erase s from s . begin ( ) + 0",
      "code": "s . erase ( s . begin ( ) + 0 ) ;",
      "indent": 4
    },
    {
      "line": 25,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 26,
      "text": "c = c - 3",
      "code": "c -= 3 ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "erase s from s . begin ( ) + 0",
      "code": "s . erase ( s . begin ( ) + 0 ) ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "erase s from s . begin ( ) + 0",
      "code": "s . erase ( s . begin ( ) + 0 ) ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "erase s from s . begin ( ) + 0",
      "code": "s . erase ( s . begin ( ) + 0 ) ;",
      "indent": 4
    },
    {
      "line": 30,
      "text": "bl = false",
      "code": "bl = false ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 32,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 33,
      "text": "bl = false",
      "code": "bl = false ;",
      "indent": 3
    },
    {
      "line": 34,
      "text": "print s [ 0 ]",
      "code": "cout << s [ 0 ] ;",
      "indent": 3
    },
    {
      "line": 35,
      "text": "decrement c",
      "code": "c -- ;",
      "indent": 3
    },
    {
      "line": 36,
      "text": "erase s from s . begin ( ) + 0",
      "code": "s . erase ( s . begin ( ) + 0 ) ;",
      "indent": 3
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "print new line",
      "code": "cout << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 40,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 41,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "set < long long > iterator it ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long n , a , b , x , c1 , c1 , cnt ;"
      ],
      "err_line": 3,
      "err_msg": "redefinition of ‘long long int c1’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "long long n ;"
      ],
      "err_line": 6,
      "err_msg": "redefinition of ‘long long int n’"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "pair long long long , long long > pr ;"
      ],
      "err_line": 7,
      "err_msg": "invalid use of template-name ‘std::pair’ without an argument list"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "vector < long long v ;"
      ],
      "err_line": 8,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "set < long long st ;"
      ],
      "err_line": 10,
      "err_msg": "template argument 1 is invalid"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "set < long long > :: it ;"
      ],
      "err_line": 11,
      "err_msg": "‘it’ in ‘class std::set<long long int>’ does not name a type"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 13,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 23,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 24,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        25
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 25,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 27,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        28
      ],
      "mod_code": [
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 29,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        32
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 32,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        36
      ],
      "mod_code": [
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 36,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        18,
        34
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << \" -1 \" << endl ;",
        "cout << s [ 0 ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        18,
        34,
        28
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << \" -1 \" << endl ;",
        "cout << s [ 0 ] << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        18,
        34,
        15
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << \" -1 \" << endl ;",
        "cout << s [ 0 ] << endl ;",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        18,
        28
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << \" -1 \" << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        18,
        28,
        15
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << \" -1 \" << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        18,
        15
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << \" -1 \" << endl ;",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        34
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << s [ 0 ] << endl ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        34,
        28
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << s [ 0 ] << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        34,
        28,
        18
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << s [ 0 ] << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "cout << \" -1\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        34,
        28,
        15
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << s [ 0 ] << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        34,
        18
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << s [ 0 ] << endl ;",
        "cout << \" -1\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        34,
        18,
        15
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << s [ 0 ] << endl ;",
        "cout << \" -1\\n \" ;",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        34,
        15
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << s [ 0 ] << endl ;",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        28
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        28,
        18
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "cout << \" -1\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        28,
        18,
        15
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "cout << \" -1\\n \" ;",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        28,
        15
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << \" -1\\n \" ;"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        18,
        15
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "cout << \" -1\\n \" ;",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "set < long long > iterator it ;",
        "while ( 1 )"
      ],
      "err_line": 11,
      "err_msg": "expected initializer before ‘it’"
    },
    {
      "mod_line": [
        18,
        34,
        28
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "cout << s [ 0 ] << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        18,
        34,
        28,
        15
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "cout << s [ 0 ] << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "while ( 1 )"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        18,
        28
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        18,
        28,
        15
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "while ( 1 )"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        34,
        28
      ],
      "mod_code": [
        "cout << s [ 0 ] << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        34,
        28,
        18
      ],
      "mod_code": [
        "cout << s [ 0 ] << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "cout << \" -1\\n \" ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        34,
        28,
        18,
        15
      ],
      "mod_code": [
        "cout << s [ 0 ] << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "cout << \" -1\\n \" ;",
        "while ( 1 )"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        34,
        28,
        15
      ],
      "mod_code": [
        "cout << s [ 0 ] << endl ;",
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "while ( 1 )"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        28,
        18
      ],
      "mod_code": [
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "cout << \" -1\\n \" ;"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        28,
        18,
        15
      ],
      "mod_code": [
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "cout << \" -1\\n \" ;",
        "while ( 1 )"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    },
    {
      "mod_line": [
        28,
        15
      ],
      "mod_code": [
        "s . erase ( s . begin ( ) + 0 , 0 ) ;",
        "while ( 1 )"
      ],
      "err_line": 28,
      "err_msg": "no matching function for call to ‘std::__cxx11::basic_string<char>::erase(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char> >, int)’"
    }
  ]
}