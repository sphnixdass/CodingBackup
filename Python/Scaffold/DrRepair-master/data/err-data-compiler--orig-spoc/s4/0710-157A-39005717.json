{
  "meta": {
    "index": 710,
    "hitid": "3D17ECOUOEP1ZMJT6A1V7V4JT7H31H",
    "workerid": "A3QHJOSOK95QWB",
    "probid": "157A",
    "subid": "39005717"
  },
  "lines": [
    {
      "line": 0,
      "text": "let a be a 35x35 int matrix",
      "code": "int a [ 35 ] [ 35 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n = int",
      "code": "int n ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "in bool function cheak that takes int a and int j",
      "code": "bool cheak ( int i , int j )",
      "indent": 0
    },
    {
      "line": 3,
      "text": "let sumx and sumy be ints both = 0",
      "code": "int sumx = 0 , sumy = 0 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for k = 0 to n exclusive",
      "code": "for ( int k = 0 ; k < n ; k ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "increment a by a [ i ] [ k ]",
      "code": "sumx += a [ i ] [ k ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment a by [ k ] [ i ]",
      "code": "sumy += a [ k ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "if sumx > sumy then return 1",
      "code": "if ( sumx < sumy ) { return 1 ; }",
      "indent": 1
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 12,
      "text": "while reading n",
      "code": "while ( cin >> n )",
      "indent": 1
    },
    {
      "line": 13,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 14,
      "text": "for j = 0 to n exclusive , read a [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < n ; j ++ ) { cin >> a [ i ] [ j ] ; }",
      "indent": 3
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 16,
      "text": "sum = 0 = int",
      "code": "int sum = 0 ;",
      "indent": 2
    },
    {
      "line": 17,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "for j = 0 to n exclusive",
      "code": "for ( int j = 0 ; j < n ; j ++ )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "let x be an int = cheak with i and j",
      "code": "int x = cheak ( i , j ) ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "if x isn ' t 0 then increment sum",
      "code": "if ( x ) { sum ++ ; }",
      "indent": 4
    },
    {
      "line": 21,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "print sum and new line",
      "code": "cout << sum << endl ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 100 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool cheak ( int a , int j )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "a += a [ i ] [ k ] ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [35][35]’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int a [ 101 ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "bool cheak ( int a , int j ) ;"
      ],
      "err_line": 3,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( k = 0 ; k < n ; k ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "a += ( a [ i ] [ k ] ) ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [35][35]’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "a += by [ k ] [ i ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘by’ was not declared in this scope"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 13,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        17
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 17,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "for ( j = 0 ; j < n ; j ++ )"
      ],
      "err_line": 18,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "int x = cheak ;"
      ],
      "err_line": 19,
      "err_msg": "invalid conversion from ‘bool (*)(int, int)’ to ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        2
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "bool cheak ( int a , int j )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        5
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "bool cheak ( int a , int j )",
        "a += a [ i ] [ k ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        6
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "bool cheak ( int a , int j )",
        "a += a [ i ] [ k ] ;",
        "a [ k ] [ i ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        1
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "bool cheak ( int a , int j )",
        "a += a [ i ] [ k ] ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        5,
        3
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "bool cheak ( int a , int j )",
        "a += a [ i ] [ k ] ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        6
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "bool cheak ( int a , int j )",
        "a [ k ] [ i ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        1
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "bool cheak ( int a , int j )",
        "a [ k ] [ i ] ++ ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        6,
        3
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "bool cheak ( int a , int j )",
        "a [ k ] [ i ] ++ ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        1
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "bool cheak ( int a , int j )",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        1,
        3
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "bool cheak ( int a , int j )",
        "char n ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        2,
        3
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "bool cheak ( int a , int j )",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "a += a [ i ] [ k ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        5,
        6
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "a += a [ i ] [ k ] ;",
        "a [ k ] [ i ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        1
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "a += a [ i ] [ k ] ;",
        "a [ k ] [ i ] ++ ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        5,
        6,
        3
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "a += a [ i ] [ k ] ;",
        "a [ k ] [ i ] ++ ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        5,
        1
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "a += a [ i ] [ k ] ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        5,
        1,
        3
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "a += a [ i ] [ k ] ;",
        "char n ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        5,
        3
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "a += a [ i ] [ k ] ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "a [ k ] [ i ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        6,
        1
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "a [ k ] [ i ] ++ ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        6,
        1,
        3
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "a [ k ] [ i ] ++ ;",
        "char n ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        6,
        3
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "a [ k ] [ i ] ++ ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "invalid types ‘int[int]’ for array subscript"
    },
    {
      "mod_line": [
        0,
        1,
        3
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "char n ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        0,
        3
      ],
      "mod_code": [
        "int a [ 100 ] ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "a += a [ i ] [ k ] ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        6
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "a += a [ i ] [ k ] ;",
        "a [ k ] [ i ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        1
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "a += a [ i ] [ k ] ;",
        "a [ k ] [ i ] ++ ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        6,
        3
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "a += a [ i ] [ k ] ;",
        "a [ k ] [ i ] ++ ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        1
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "a += a [ i ] [ k ] ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        1,
        3
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "a += a [ i ] [ k ] ;",
        "char n ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        5,
        3
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "a += a [ i ] [ k ] ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "a [ k ] [ i ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        1
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "a [ k ] [ i ] ++ ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        1,
        3
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "a [ k ] [ i ] ++ ;",
        "char n ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        3
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "a [ k ] [ i ] ++ ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1,
        3
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "char n ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        3
      ],
      "mod_code": [
        "bool cheak ( int a , int j )",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "a += a [ i ] [ k ] ;",
        "a [ k ] [ i ] ++ ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [35][35]’"
    },
    {
      "mod_line": [
        5,
        6,
        1
      ],
      "mod_code": [
        "a += a [ i ] [ k ] ;",
        "a [ k ] [ i ] ++ ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [35][35]’"
    },
    {
      "mod_line": [
        5,
        6,
        1,
        3
      ],
      "mod_code": [
        "a += a [ i ] [ k ] ;",
        "a [ k ] [ i ] ++ ;",
        "char n ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [35][35]’"
    },
    {
      "mod_line": [
        5,
        6,
        3
      ],
      "mod_code": [
        "a += a [ i ] [ k ] ;",
        "a [ k ] [ i ] ++ ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [35][35]’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "a += a [ i ] [ k ] ;",
        "char n ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [35][35]’"
    },
    {
      "mod_line": [
        5,
        1,
        3
      ],
      "mod_code": [
        "a += a [ i ] [ k ] ;",
        "char n ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [35][35]’"
    },
    {
      "mod_line": [
        5,
        3
      ],
      "mod_code": [
        "a += a [ i ] [ k ] ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "incompatible types in assignment of ‘int’ to ‘int [35][35]’"
    },
    {
      "mod_line": [
        6,
        1,
        3
      ],
      "mod_code": [
        "a [ k ] [ i ] ++ ;",
        "char n ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        3
      ],
      "mod_code": [
        "a [ k ] [ i ] ++ ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "char n ;",
        "int both = 0 , sumy = 0 ;"
      ],
      "err_line": 5,
      "err_msg": "‘sumx’ was not declared in this scope"
    }
  ]
}