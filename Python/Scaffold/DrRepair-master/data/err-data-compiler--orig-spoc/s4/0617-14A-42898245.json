{
  "meta": {
    "index": 617,
    "hitid": "3JMNNNO3B1Y5F53DZYCBHBPLI4CW2F",
    "workerid": "AIWEXPJAU66D9",
    "probid": "14A",
    "subid": "42898245"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , m , i , j , x1 and y1 be integers with x1 and y1 = 0",
      "code": "int n , m , i , j , x1 = 0 , y1 = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let x0 and y0 be integers with value 0",
      "code": "int x0 = n , y0 = m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let s be an array of strings of length n",
      "code": "string s [ n ] ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to n exclusive",
      "code": "for ( i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "read s [ i ]",
      "code": "cin >> s [ i ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "for j = 0 to m exclusive",
      "code": "for ( j = 0 ; j < m ; j ++ )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if s [ i ] [ j ] is equal to ' * '",
      "code": "if ( s [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 9,
      "text": "assign value of min of i and x0 to the x0",
      "code": "x0 = min ( i , x0 ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "assign value of min of j and y0 to the y0",
      "code": "y0 = min ( j , y0 ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set x1 to max of i and x1",
      "code": "x1 = max ( i , x1 ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "set value of y1 to max of j and y1",
      "code": "y1 = max ( j , y1 ) ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i = x0 to x1 inclusive print the substring of s [ i ] from index y0 to y1 - y0 - 1 and a new line",
      "code": "for ( i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y0 , y1 - y0 + 1 ) << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 2,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "long long x0 = 0 , y0 = 0 ;"
      ],
      "err_line": 9,
      "err_msg": "no matching function for call to ‘min(int&, long long int&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "string a [ n ] ;"
      ],
      "err_line": 6,
      "err_msg": "‘s’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "{ s [ i ] ;"
      ],
      "err_line": 17,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "* y1 = max ( j , y1 ) ;"
      ],
      "err_line": 12,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        3,
        15,
        9
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "int x0 = 0 , y0 = 0 ;",
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        3,
        15,
        10
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "int x0 = 0 , y0 = 0 ;",
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        3,
        11,
        9
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "int x0 = 0 , y0 = 0 ;",
        "x1 = max ( x1 , x1 ) ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        3,
        11,
        10
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "int x0 = 0 , y0 = 0 ;",
        "x1 = max ( x1 , x1 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        3,
        9
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "int x0 = 0 , y0 = 0 ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        3,
        9,
        10
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "int x0 = 0 , y0 = 0 ;",
        "* x0 = min ( i , x0 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        3,
        10
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "int x0 = 0 , y0 = 0 ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        15,
        11,
        9
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "x1 = max ( x1 , x1 ) ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        15,
        11,
        10
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "x1 = max ( x1 , x1 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        15,
        9
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        15,
        9,
        10
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "* x0 = min ( i , x0 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        15,
        10
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        9
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "x1 = max ( x1 , x1 ) ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        9,
        10
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "x1 = max ( x1 , x1 ) ;",
        "* x0 = min ( i , x0 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        11,
        10
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "x1 = max ( x1 , x1 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        9,
        10
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "* x0 = min ( i , x0 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "int n , m , i , j , x1 , y1 = 0 ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        15,
        11,
        9
      ],
      "mod_code": [
        "int x0 = 0 , y0 = 0 ;",
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "x1 = max ( x1 , x1 ) ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        15,
        11,
        10
      ],
      "mod_code": [
        "int x0 = 0 , y0 = 0 ;",
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "x1 = max ( x1 , x1 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        15,
        9
      ],
      "mod_code": [
        "int x0 = 0 , y0 = 0 ;",
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        15,
        9,
        10
      ],
      "mod_code": [
        "int x0 = 0 , y0 = 0 ;",
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "* x0 = min ( i , x0 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        15,
        10
      ],
      "mod_code": [
        "int x0 = 0 , y0 = 0 ;",
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        11,
        9
      ],
      "mod_code": [
        "int x0 = 0 , y0 = 0 ;",
        "x1 = max ( x1 , x1 ) ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        11,
        9,
        10
      ],
      "mod_code": [
        "int x0 = 0 , y0 = 0 ;",
        "x1 = max ( x1 , x1 ) ;",
        "* x0 = min ( i , x0 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        11,
        10
      ],
      "mod_code": [
        "int x0 = 0 , y0 = 0 ;",
        "x1 = max ( x1 , x1 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "int x0 = 0 , y0 = 0 ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        9,
        10
      ],
      "mod_code": [
        "int x0 = 0 , y0 = 0 ;",
        "* x0 = min ( i , x0 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        3,
        10
      ],
      "mod_code": [
        "int x0 = 0 , y0 = 0 ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        11,
        9
      ],
      "mod_code": [
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "x1 = max ( x1 , x1 ) ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        11,
        9,
        10
      ],
      "mod_code": [
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "x1 = max ( x1 , x1 ) ;",
        "* x0 = min ( i , x0 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        11,
        10
      ],
      "mod_code": [
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "x1 = max ( x1 , x1 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        9,
        10
      ],
      "mod_code": [
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "* x0 = min ( i , x0 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        15,
        10
      ],
      "mod_code": [
        "for ( int i = x0 ; i <= x1 ; i ++ ) cout << s [ i ] . substr ( y1 - y0 - 1 ) << endl ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "x1 = max ( x1 , x1 ) ;",
        "* x0 = min ( i , x0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        11,
        9,
        10
      ],
      "mod_code": [
        "x1 = max ( x1 , x1 ) ;",
        "* x0 = min ( i , x0 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        11,
        10
      ],
      "mod_code": [
        "x1 = max ( x1 , x1 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 10,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "* x0 = min ( i , x0 ) ;",
        "* y0 = min ( j , y0 ) ;"
      ],
      "err_line": 9,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    }
  ]
}