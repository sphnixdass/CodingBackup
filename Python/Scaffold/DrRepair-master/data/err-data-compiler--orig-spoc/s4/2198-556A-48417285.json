{
  "meta": {
    "index": 2198,
    "hitid": "375VMB7D4JDAHKHO76SDC37H1MEDIE",
    "workerid": "A1C6BNLZXBOMT7",
    "probid": "556A",
    "subid": "48417285"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , m = integers",
      "code": "int n , m ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "Read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "s1 = string",
      "code": "string s1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "Read s1",
      "code": "cin >> s1 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "zero , one = integers , both set to 0",
      "code": "int zero = 0 , one = 0 ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if s1 [ i ] is 0",
      "code": "if ( s1 [ i ] == ' 0 ' )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "increment zero",
      "code": "zero ++ ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else do the following",
      "code": "else",
      "indent": 2
    },
    {
      "line": 10,
      "text": "increment one",
      "code": "one ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 12,
      "text": "set m to n - 2 * minimum value of zero and one",
      "code": "m = n - 2 * min ( zero , one ) ;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "print m and a new line",
      "code": "cout << m << endl ;",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "{ n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "{ s1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "int zero = 0 ;"
      ],
      "err_line": 10,
      "err_msg": "‘one’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        2
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "{ n ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        7,
        2,
        12
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "{ n ;",
        "m -= 2 * min ( zero , one ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        7,
        2,
        12,
        6
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "{ n ;",
        "m -= 2 * min ( zero , one ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        12,
        9
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "{ n ;",
        "m -= 2 * min ( zero , one ) ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        2,
        12,
        4
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "{ n ;",
        "m -= 2 * min ( zero , one ) ;",
        "{ s1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        7,
        2,
        6
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "{ n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        6,
        9
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "{ n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        6,
        4
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "{ n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ s1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        2,
        9
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "{ n ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        2,
        9,
        4
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "{ n ;",
        "else else",
        "{ s1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        2,
        4
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "{ n ;",
        "{ s1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        7,
        12,
        6
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "m -= 2 * min ( zero , one ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        12,
        6,
        9
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "m -= 2 * min ( zero , one ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        12,
        6,
        4
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "m -= 2 * min ( zero , one ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ s1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        12,
        9
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "m -= 2 * min ( zero , one ) ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        12,
        9,
        4
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "m -= 2 * min ( zero , one ) ;",
        "else else",
        "{ s1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        12,
        4
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "m -= 2 * min ( zero , one ) ;",
        "{ s1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        7,
        6
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        9
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        9,
        4
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else",
        "{ s1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        6,
        4
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ s1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        9,
        4
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "else else",
        "{ s1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "if ( s1 [ i ] == 0 )",
        "{ s1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        12
      ],
      "mod_code": [
        "{ n ;",
        "m -= 2 * min ( zero , one ) ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        12,
        6
      ],
      "mod_code": [
        "{ n ;",
        "m -= 2 * min ( zero , one ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        6,
        9
      ],
      "mod_code": [
        "{ n ;",
        "m -= 2 * min ( zero , one ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        6,
        4
      ],
      "mod_code": [
        "{ n ;",
        "m -= 2 * min ( zero , one ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ s1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        12,
        9
      ],
      "mod_code": [
        "{ n ;",
        "m -= 2 * min ( zero , one ) ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        12,
        9,
        4
      ],
      "mod_code": [
        "{ n ;",
        "m -= 2 * min ( zero , one ) ;",
        "else else",
        "{ s1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        12,
        4
      ],
      "mod_code": [
        "{ n ;",
        "m -= 2 * min ( zero , one ) ;",
        "{ s1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        2,
        6
      ],
      "mod_code": [
        "{ n ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        9
      ],
      "mod_code": [
        "{ n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        9,
        4
      ],
      "mod_code": [
        "{ n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else",
        "{ s1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        6,
        4
      ],
      "mod_code": [
        "{ n ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ s1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "{ n ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        9,
        4
      ],
      "mod_code": [
        "{ n ;",
        "else else",
        "{ s1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "{ n ;",
        "{ s1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        12,
        6
      ],
      "mod_code": [
        "m -= 2 * min ( zero , one ) ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        9
      ],
      "mod_code": [
        "m -= 2 * min ( zero , one ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        9,
        4
      ],
      "mod_code": [
        "m -= 2 * min ( zero , one ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "else else",
        "{ s1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        6,
        4
      ],
      "mod_code": [
        "m -= 2 * min ( zero , one ) ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "{ s1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        12,
        9
      ],
      "mod_code": [
        "m -= 2 * min ( zero , one ) ;",
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        9,
        4
      ],
      "mod_code": [
        "m -= 2 * min ( zero , one ) ;",
        "else else",
        "{ s1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        4
      ],
      "mod_code": [
        "m -= 2 * min ( zero , one ) ;",
        "{ s1 ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘}’ at end of input"
    },
    {
      "mod_line": [
        6,
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else else"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        9,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "else else",
        "{ s1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "{ s1 ;"
      ],
      "err_line": 6,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "else else",
        "{ s1 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}