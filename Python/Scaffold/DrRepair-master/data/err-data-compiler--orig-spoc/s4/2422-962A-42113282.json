{
  "meta": {
    "index": 2422,
    "hitid": "3R868ACW4S6ZOUGP90H7IJD4AR3GZV",
    "workerid": "A1APYLD4DUK33J",
    "probid": "962A",
    "subid": "42113282"
  },
  "lines": [
    {
      "line": 0,
      "text": "declare constant integer N = 2e5 + 5",
      "code": "const int N = 2e5 + 5 ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "declare integer n , integer array tab size N",
      "code": "int n , tab [ N ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read tab [ i ]",
      "code": "cin >> tab [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "increment tab [ i ] by tab [ i - 1 ]",
      "code": "tab [ i ] += tab [ i - 1 ] ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "for i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if ( 2 * tab [ i ] is greater than or equal to tab [ n ] )",
      "code": "if ( 2 * tab [ i ] >= tab [ n ] )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "print i and newline",
      "code": "cout << i << endl ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "tab >> tab [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "tab [ i ] [ tab [ i - 1 ] ++ ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 8,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        0,
        8
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        6
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab [ i ] [ tab [ i - 1 ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        6,
        4
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        6,
        5
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        6,
        1
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        4
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        4,
        5
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        4,
        1
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        5
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        5,
        1
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        8,
        1
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "tab [ i ] [ tab [ i - 1 ] ++ ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        4
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        4,
        5
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        4,
        1
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        5
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        5,
        1
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "tab >> tab [ i ] ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        6,
        1
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        5
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        5,
        1
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        4,
        1
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        5,
        1
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "tab >> tab [ i ] ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "const N = 2e5 + 5 ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 0,
      "err_msg": "‘N’ does not name a type"
    },
    {
      "mod_line": [
        8,
        6
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab [ i ] [ tab [ i - 1 ] ++ ;"
      ],
      "err_line": 6,
      "err_msg": "expected ‘]’ before ‘;’ token"
    },
    {
      "mod_line": [
        8,
        6,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        4,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        6,
        4,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        8,
        6,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8,
        6,
        5,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "tab >> tab [ i ] ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        8,
        6,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        8,
        4
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        4,
        5,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        8,
        4,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        8,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        8,
        5,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        8,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        5
      ],
      "mod_code": [
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4,
        5,
        1
      ],
      "mod_code": [
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        6,
        4,
        1
      ],
      "mod_code": [
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "for ( i = 1 ; i <= n ; i ++ )",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        6,
        5
      ],
      "mod_code": [
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "invalid operands of types ‘int [200005]’ and ‘int’ to binary ‘operator>>’"
    },
    {
      "mod_line": [
        6,
        5,
        1
      ],
      "mod_code": [
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "tab >> tab [ i ] ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "tab [ i ] [ tab [ i - 1 ] ++ ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        4,
        5
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        5,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "tab >> tab [ i ] ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        4,
        1
      ],
      "mod_code": [
        "for ( i = 1 ; i <= n ; i ++ )",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "tab >> tab [ i ] ;",
        "int n , tab , tab [ N ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘int tab [200005]’"
    }
  ]
}