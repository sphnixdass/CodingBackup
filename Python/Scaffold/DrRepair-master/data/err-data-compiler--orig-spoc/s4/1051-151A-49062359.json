{
  "meta": {
    "index": 1051,
    "hitid": "3H6W48L9F4J17C4J1WNNDOXEUGFWPI",
    "workerid": "A1AYVATMT88U1W",
    "probid": "151A",
    "subid": "49062359"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , k , l , c , d , p , nl , np be integers",
      "code": "int n , k , l , c , d , p , nl , np ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , k , l , c , d , p , nl , np",
      "code": "cin >> n >> k >> l >> c >> d >> p >> nl >> np ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let minGas be a integer with minGas = n * nl",
      "code": "int minGas = n * nl ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let minLimon be a integer with minLimon = n",
      "code": "int minLimon = n ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "let minSal be a integer with minSal = n * np",
      "code": "int minSal = n * np ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "let canGas be a integer with canGas = k * l",
      "code": "int canGas = k * l ;",
      "indent": 1
    },
    {
      "line": 7,
      "text": "let canLim be a integer with canLim = c * d",
      "code": "int canLim = c * d ;",
      "indent": 1
    },
    {
      "line": 8,
      "text": "let max be a integer with max = canGas / minGas",
      "code": "int max = canGas / minGas ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "if canLim / minLimon is less than max , max is equal to canLim / minLimon",
      "code": "if ( canLim / minLimon < max ) max = canLim / minLimon ;",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if p / minSal is less than max , max is equal to p / minSal",
      "code": "if ( p / minSal < max ) max = p / minSal ;",
      "indent": 1
    },
    {
      "line": 11,
      "text": "print max and newline",
      "code": "cout << max << endl ;",
      "indent": 1
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "minSal = n * np ;"
      ],
      "err_line": 5,
      "err_msg": "‘minSal’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "canGas = k * l ;"
      ],
      "err_line": 6,
      "err_msg": "‘canGas’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "canLim = c * d ;"
      ],
      "err_line": 7,
      "err_msg": "‘canLim’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canGas = k * l ;"
      ],
      "err_line": 5,
      "err_msg": "‘minSal’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        2
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canGas = k * l ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;"
      ],
      "err_line": 5,
      "err_msg": "‘minSal’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        2,
        1
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canGas = k * l ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        6,
        2,
        7
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canGas = k * l ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "canLim = c * d ;"
      ],
      "err_line": 5,
      "err_msg": "‘minSal’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        2,
        4
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canGas = k * l ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        1
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canGas = k * l ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        6,
        1,
        7
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canGas = k * l ;",
        "int n , k , l , c , d , p , p , np ;",
        "canLim = c * d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        6,
        1,
        4
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canGas = k * l ;",
        "int n , k , l , c , d , p , p , np ;",
        "minLimon = n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        6,
        7
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canGas = k * l ;",
        "canLim = c * d ;"
      ],
      "err_line": 5,
      "err_msg": "‘minSal’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        7,
        4
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canGas = k * l ;",
        "canLim = c * d ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        6,
        4
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canGas = k * l ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2
      ],
      "mod_code": [
        "minSal = n * np ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;"
      ],
      "err_line": 5,
      "err_msg": "‘minSal’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        1
      ],
      "mod_code": [
        "minSal = n * np ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        2,
        1,
        7
      ],
      "mod_code": [
        "minSal = n * np ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "canLim = c * d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        2,
        1,
        4
      ],
      "mod_code": [
        "minSal = n * np ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "minLimon = n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        2,
        7
      ],
      "mod_code": [
        "minSal = n * np ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "canLim = c * d ;"
      ],
      "err_line": 5,
      "err_msg": "‘minSal’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        7,
        4
      ],
      "mod_code": [
        "minSal = n * np ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "canLim = c * d ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        2,
        4
      ],
      "mod_code": [
        "minSal = n * np ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        1
      ],
      "mod_code": [
        "minSal = n * np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        7
      ],
      "mod_code": [
        "minSal = n * np ;",
        "int n , k , l , c , d , p , p , np ;",
        "canLim = c * d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        7,
        4
      ],
      "mod_code": [
        "minSal = n * np ;",
        "int n , k , l , c , d , p , p , np ;",
        "canLim = c * d ;",
        "minLimon = n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        1,
        4
      ],
      "mod_code": [
        "minSal = n * np ;",
        "int n , k , l , c , d , p , p , np ;",
        "minLimon = n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        5,
        7
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canLim = c * d ;"
      ],
      "err_line": 5,
      "err_msg": "‘minSal’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        7,
        4
      ],
      "mod_code": [
        "minSal = n * np ;",
        "canLim = c * d ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        4
      ],
      "mod_code": [
        "minSal = n * np ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2
      ],
      "mod_code": [
        "canGas = k * l ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;"
      ],
      "err_line": 6,
      "err_msg": "‘canGas’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        1
      ],
      "mod_code": [
        "canGas = k * l ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        2,
        1,
        7
      ],
      "mod_code": [
        "canGas = k * l ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "canLim = c * d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        2,
        1,
        4
      ],
      "mod_code": [
        "canGas = k * l ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "minLimon = n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        2,
        7
      ],
      "mod_code": [
        "canGas = k * l ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "canLim = c * d ;"
      ],
      "err_line": 6,
      "err_msg": "‘canGas’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        7,
        4
      ],
      "mod_code": [
        "canGas = k * l ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "canLim = c * d ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        2,
        4
      ],
      "mod_code": [
        "canGas = k * l ;",
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        1
      ],
      "mod_code": [
        "canGas = k * l ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        1,
        7
      ],
      "mod_code": [
        "canGas = k * l ;",
        "int n , k , l , c , d , p , p , np ;",
        "canLim = c * d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        1,
        7,
        4
      ],
      "mod_code": [
        "canGas = k * l ;",
        "int n , k , l , c , d , p , p , np ;",
        "canLim = c * d ;",
        "minLimon = n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        1,
        4
      ],
      "mod_code": [
        "canGas = k * l ;",
        "int n , k , l , c , d , p , p , np ;",
        "minLimon = n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        6,
        7
      ],
      "mod_code": [
        "canGas = k * l ;",
        "canLim = c * d ;"
      ],
      "err_line": 6,
      "err_msg": "‘canGas’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        7,
        4
      ],
      "mod_code": [
        "canGas = k * l ;",
        "canLim = c * d ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        6,
        4
      ],
      "mod_code": [
        "canGas = k * l ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        1
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        1,
        7
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "canLim = c * d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        1,
        7,
        4
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "canLim = c * d ;",
        "minLimon = n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        1,
        4
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "int n , k , l , c , d , p , p , np ;",
        "minLimon = n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        2,
        7
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "canLim = c * d ;"
      ],
      "err_line": 7,
      "err_msg": "‘canLim’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        7,
        4
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "canLim = c * d ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        2,
        4
      ],
      "mod_code": [
        "cin >> n >> k >> l >> c >> d >> p >> p >> np ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "canLim = c * d ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        7,
        4
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "canLim = c * d ;",
        "minLimon = n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , k , l , c , d , p , p , np ;",
        "minLimon = n ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int p’"
    },
    {
      "mod_line": [
        7,
        4
      ],
      "mod_code": [
        "canLim = c * d ;",
        "minLimon = n ;"
      ],
      "err_line": 4,
      "err_msg": "‘minLimon’ was not declared in this scope"
    }
  ]
}