{
  "meta": {
    "index": 1337,
    "hitid": "3UYRNV2KITTQEQWONEUPVJPXBS0N8I",
    "workerid": "AIWEXPJAU66D9",
    "probid": "47A",
    "subid": "48923589"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integer n",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "set n to n * 2",
      "code": "n = n * 2 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let flag be integer = 0",
      "code": "int flag = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for integer i = 1 to n inclusive",
      "code": "for ( int i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if i * ( i + 1 ) equals to n",
      "code": "if ( i * ( i + 1 ) == n )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set flag to 1",
      "code": "flag = 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "break the loop",
      "code": "break ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "if flag = = 1",
      "code": "if ( flag == 1 )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "print \" YES \"",
      "code": "cout << \" YES \" << endl ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "else",
      "code": "else",
      "indent": 1
    },
    {
      "line": 14,
      "text": "print \" NO \"",
      "code": "cout << \" NO \" << endl ;",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        13
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        4
      ],
      "mod_code": [
        "if ( ! flag )",
        "flag = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4,
        7
      ],
      "mod_code": [
        "if ( ! flag )",
        "flag = 0 ;",
        "int flag = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4,
        7,
        8
      ],
      "mod_code": [
        "if ( ! flag )",
        "flag = 0 ;",
        "int flag = 1 ;",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4,
        7,
        13
      ],
      "mod_code": [
        "if ( ! flag )",
        "flag = 0 ;",
        "int flag = 1 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4,
        8
      ],
      "mod_code": [
        "if ( ! flag )",
        "flag = 0 ;",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4,
        8,
        13
      ],
      "mod_code": [
        "if ( ! flag )",
        "flag = 0 ;",
        "break break ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        4,
        13
      ],
      "mod_code": [
        "if ( ! flag )",
        "flag = 0 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        11,
        7,
        8
      ],
      "mod_code": [
        "if ( ! flag )",
        "int flag = 1 ;",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        11,
        7,
        8,
        13
      ],
      "mod_code": [
        "if ( ! flag )",
        "int flag = 1 ;",
        "break break ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        11,
        7,
        13
      ],
      "mod_code": [
        "if ( ! flag )",
        "int flag = 1 ;",
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "if ( ! flag )",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        11,
        8,
        13
      ],
      "mod_code": [
        "if ( ! flag )",
        "break break ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        11,
        13
      ],
      "mod_code": [
        "if ( ! flag )",
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        4,
        7
      ],
      "mod_code": [
        "flag = 0 ;",
        "int flag = 1 ;"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8
      ],
      "mod_code": [
        "flag = 0 ;",
        "int flag = 1 ;",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        8,
        13
      ],
      "mod_code": [
        "flag = 0 ;",
        "int flag = 1 ;",
        "break break ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        7,
        13
      ],
      "mod_code": [
        "flag = 0 ;",
        "int flag = 1 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8
      ],
      "mod_code": [
        "flag = 0 ;",
        "break break ;"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        8,
        13
      ],
      "mod_code": [
        "flag = 0 ;",
        "break break ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        4,
        13
      ],
      "mod_code": [
        "flag = 0 ;",
        "else else"
      ],
      "err_line": 4,
      "err_msg": "‘flag’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "int flag = 1 ;",
        "break break ;"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        7,
        8,
        13
      ],
      "mod_code": [
        "int flag = 1 ;",
        "break break ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    },
    {
      "mod_line": [
        7,
        13
      ],
      "mod_code": [
        "int flag = 1 ;",
        "else else"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        8,
        13
      ],
      "mod_code": [
        "break break ;",
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected ‘;’ before ‘break’"
    }
  ]
}