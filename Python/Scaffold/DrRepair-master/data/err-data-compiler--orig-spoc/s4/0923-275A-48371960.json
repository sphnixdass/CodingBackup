{
  "meta": {
    "index": 923,
    "hitid": "308KJXFUJR02SRUNH80F091KR0YATR",
    "workerid": "A1APYLD4DUK33J",
    "probid": "275A",
    "subid": "48371960"
  },
  "lines": [
    {
      "line": 0,
      "text": "create integer a",
      "code": "int a ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create 2d character array l with size 3 by 3",
      "code": "char l [ 3 ] [ 3 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "for i = 0 to 3 exclusive , set bytes from l [ i ] to size of l [ i ] to value ' 1 '",
      "code": "for ( int i = 0 ; i < 3 ; i ++ ) memset ( l [ i ] , ' 1 ' , sizeof l [ i ] ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 0 to 3 exclusive",
      "code": "for ( int j = 0 ; j < 3 ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read a",
      "code": "cin >> a ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if a % 2 is 1",
      "code": "if ( a % 2 == 1 )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "if l [ i ] [ j ] is ' 1 '",
      "code": "if ( l [ i ] [ j ] == ' 1 ' )",
      "indent": 4
    },
    {
      "line": 9,
      "text": "set l [ i ] [ j ] to ' 0 '",
      "code": "l [ i ] [ j ] = ' 0 ' ;",
      "indent": 5
    },
    {
      "line": 10,
      "text": "else",
      "code": "else",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set l [ i ] [ j ] to ' 1 '",
      "code": "l [ i ] [ j ] = ' 1 ' ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "if i - 1 is greater than or equal to 0",
      "code": "if ( i - 1 >= 0 )",
      "indent": 4
    },
    {
      "line": 13,
      "text": "if l [ i - 1 ] [ j ] is ' 1 '",
      "code": "if ( l [ i - 1 ] [ j ] == ' 1 ' )",
      "indent": 5
    },
    {
      "line": 14,
      "text": "set l [ i - 1 ] [ j ] to ' 0 '",
      "code": "l [ i - 1 ] [ j ] = ' 0 ' ;",
      "indent": 6
    },
    {
      "line": 15,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 16,
      "text": "set l [ i - 1 ] [ j ] to ' 1 '",
      "code": "l [ i - 1 ] [ j ] = ' 1 ' ;",
      "indent": 6
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 18,
      "text": "if i + 1 is less than 3",
      "code": "if ( i + 1 < 3 )",
      "indent": 4
    },
    {
      "line": 19,
      "text": "if l [ i + 1 ] [ j ] is ' 1 '",
      "code": "if ( l [ i + 1 ] [ j ] == ' 1 ' )",
      "indent": 5
    },
    {
      "line": 20,
      "text": "if l [ i + 1 ] [ j ] is ' 0 '",
      "code": "l [ i + 1 ] [ j ] = ' 0 ' ;",
      "indent": 6
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 22,
      "text": "set l [ i + 1 ] [ j ] to ' 1 '",
      "code": "l [ i + 1 ] [ j ] = ' 1 ' ;",
      "indent": 6
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 24,
      "text": "if j - 1 is greater than or equal to 0",
      "code": "if ( j - 1 >= 0 )",
      "indent": 4
    },
    {
      "line": 25,
      "text": "if l [ i ] [ j - 1 ] is ' 1 '",
      "code": "if ( l [ i ] [ j - 1 ] == ' 1 ' )",
      "indent": 5
    },
    {
      "line": 26,
      "text": "set l [ i ] [ j - 1 ] to ' 0 '",
      "code": "l [ i ] [ j - 1 ] = ' 0 ' ;",
      "indent": 6
    },
    {
      "line": 27,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 28,
      "text": "set l [ i ] [ j - 1 ] to ' 1 '",
      "code": "l [ i ] [ j - 1 ] = ' 1 ' ;",
      "indent": 6
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 30,
      "text": "if j + 1 is less than 3",
      "code": "if ( j + 1 < 3 )",
      "indent": 4
    },
    {
      "line": 31,
      "text": "if l [ i ] [ j + 1 ] is ' 1 '",
      "code": "if ( l [ i ] [ j + 1 ] == ' 1 ' )",
      "indent": 5
    },
    {
      "line": 32,
      "text": "set l [ i ] [ j + 1 ] to ' 0 '",
      "code": "l [ i ] [ j + 1 ] = ' 0 ' ;",
      "indent": 6
    },
    {
      "line": 33,
      "text": "else",
      "code": "else",
      "indent": 5
    },
    {
      "line": 34,
      "text": "set l [ i ] [ j + 1 ] to ' 1 '",
      "code": "l [ i ] [ j + 1 ] = ' 1 ' ;",
      "indent": 6
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 36,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 39,
      "text": "for i = 0 to 3 exclusive",
      "code": "for ( int i = 0 ; i < 3 ; i ++ )",
      "indent": 1
    },
    {
      "line": 40,
      "text": "for j = 0 to 3 exclusive , print l [ i ] [ j ]",
      "code": "for ( int j = 0 ; j < 3 ; j ++ ) cout << l [ i ] [ j ] ;",
      "indent": 2
    },
    {
      "line": 41,
      "text": "end statement",
      "code": ";",
      "indent": 2
    },
    {
      "line": 42,
      "text": "print ' \\ n '",
      "code": "cout << ' \\n ' ;",
      "indent": 2
    },
    {
      "line": 43,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 44,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a [ 3 ] [ 3 ] ;"
      ],
      "err_line": 1,
      "err_msg": "conflicting declaration ‘char a [3][3]’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cout << l [ i ] = l [ i ] . size ( ) ; }"
      ],
      "err_line": 3,
      "err_msg": "request for member ‘size’ in ‘l[i]’, which is of non-class type ‘char [3]’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "gets ( a ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid conversion from ‘int’ to ‘char*’ [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        27
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 27,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        33
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 33,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        39
      ],
      "mod_code": [
        "for ( i = 0 ; i < 3 ; i ++ )"
      ],
      "err_line": 39,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20,
        5,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20,
        5,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20,
        15,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )",
        "else else",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20,
        5,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20,
        5,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20,
        15,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )",
        "else else",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        20,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        5,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        5,
        15,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "else else",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        5,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "else else"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        15,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "else else",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        3,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 3 ; i ++ ) { cin . size ( ) ; }",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 3,
      "err_msg": "‘std::istream {aka class std::basic_istream<char>}’ has no member named ‘size’"
    },
    {
      "mod_line": [
        20,
        5
      ],
      "mod_code": [
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        5,
        15
      ],
      "mod_code": [
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        5,
        15,
        9
      ],
      "mod_code": [
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "else else",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        5,
        9
      ],
      "mod_code": [
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        15
      ],
      "mod_code": [
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        15,
        9
      ],
      "mod_code": [
        "if ( l [ i + 1 ] [ j ] == ' 0 ' )",
        "else else",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        5
      ],
      "mod_code": [
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )",
        "for ( j = 0 ; j < 3 ; j ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        5,
        15
      ],
      "mod_code": [
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        5,
        15,
        9
      ],
      "mod_code": [
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "else else",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        5,
        9
      ],
      "mod_code": [
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )",
        "for ( j = 0 ; j < 3 ; j ++ )",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        20,
        15
      ],
      "mod_code": [
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )",
        "else else"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        20,
        15,
        9
      ],
      "mod_code": [
        "if ( ( l [ i + 1 ] [ j ] == ' 0 ' ) )",
        "else else",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        5,
        15
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "else else"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        15,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "else else",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        5,
        9
      ],
      "mod_code": [
        "for ( j = 0 ; j < 3 ; j ++ )",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 5,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        15,
        9
      ],
      "mod_code": [
        "else else",
        "l [ i ] [ j ] = ' \\0 ' ;"
      ],
      "err_line": 15,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}