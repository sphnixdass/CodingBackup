{
  "meta": {
    "index": 1413,
    "hitid": "3T2HW4QDUV171RI73GRPF4QWXWL9CX",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "876A",
    "subid": "47037866"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , a , b , c , x , y , ans = integers with ans = 0",
      "code": "int n , a , b , c , x , y , ans = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , a , b , c",
      "code": "cin >> n >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "k = integer with k = 1",
      "code": "int k = 1 ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 2 to n",
      "code": "for ( int i = 2 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if ( k is 1 )",
      "code": "if ( k == 1 )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "if ( a < b )",
      "code": "if ( a < b )",
      "indent": 3
    },
    {
      "line": 7,
      "text": "x = a , y = 2",
      "code": "x = a , y = 2 ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 9,
      "text": "x = b , y = 3",
      "code": "x = b , y = 3 ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 11,
      "text": "if ( k is 2 )",
      "code": "if ( k == 2 )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "if ( a < c )",
      "code": "if ( a < c )",
      "indent": 3
    },
    {
      "line": 13,
      "text": "x = a , y = 1",
      "code": "x = a , y = 1 ;",
      "indent": 4
    },
    {
      "line": 14,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 15,
      "text": "x = c , y = 3",
      "code": "x = c , y = 3 ;",
      "indent": 4
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 17,
      "text": "if ( k is 3 )",
      "code": "if ( k == 3 )",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if ( b < c )",
      "code": "if ( b < c )",
      "indent": 3
    },
    {
      "line": 19,
      "text": "x = b , y = 1",
      "code": "x = b , y = 1 ;",
      "indent": 4
    },
    {
      "line": 20,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 21,
      "text": "x = c , y = 2",
      "code": "x = c , y = 2 ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 23,
      "text": "ans = ans + x",
      "code": "ans += x ;",
      "indent": 2
    },
    {
      "line": 24,
      "text": "k = y",
      "code": "k = y ;",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print ans",
      "code": "cout << ans << endl ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 2 ; i <= n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "if ( a < b ) )"
      ],
      "err_line": 6,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "if ( k == 2 ) )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "if ( a < c ) )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 14,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        18
      ],
      "mod_code": [
        "if ( b < c ) )"
      ],
      "err_line": 18,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        26,
        12
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "cout << ans ;",
        "if ( a < c ) )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        26,
        12,
        11
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "cout << ans ;",
        "if ( a < c ) )",
        "if ( k == 2 ) )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        26,
        12,
        1
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "cout << ans ;",
        "if ( a < c ) )",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        21,
        26,
        12,
        5
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "cout << ans ;",
        "if ( a < c ) )",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        26,
        11
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "cout << ans ;",
        "if ( k == 2 ) )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        26,
        11,
        1
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "cout << ans ;",
        "if ( k == 2 ) )",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        21,
        26,
        11,
        5
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "cout << ans ;",
        "if ( k == 2 ) )",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        26,
        1
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "cout << ans ;",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        21,
        26,
        1,
        5
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "cout << ans ;",
        "int n , a , b , c , x , y , y , ans ;",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        21,
        12
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "if ( a < c ) )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        12,
        11
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "if ( a < c ) )",
        "if ( k == 2 ) )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        12,
        11,
        1
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "if ( a < c ) )",
        "if ( k == 2 ) )",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        21,
        12,
        11,
        5
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "if ( a < c ) )",
        "if ( k == 2 ) )",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        12,
        1
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "if ( a < c ) )",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        21,
        12,
        1,
        5
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "if ( a < c ) )",
        "int n , a , b , c , x , y , y , ans ;",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        21,
        12,
        5
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "if ( a < c ) )",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        11
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "if ( k == 2 ) )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        11,
        1
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "if ( k == 2 ) )",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        21,
        11,
        1,
        5
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "if ( k == 2 ) )",
        "int n , a , b , c , x , y , y , ans ;",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        21,
        11,
        5
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "if ( k == 2 ) )",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        21,
        1
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        21,
        1,
        5
      ],
      "mod_code": [
        "int x = c , y = 2 ;",
        "int n , a , b , c , x , y , y , ans ;",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        26,
        12
      ],
      "mod_code": [
        "cout << ans ;",
        "if ( a < c ) )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        26,
        12,
        11
      ],
      "mod_code": [
        "cout << ans ;",
        "if ( a < c ) )",
        "if ( k == 2 ) )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        26,
        12,
        11,
        1
      ],
      "mod_code": [
        "cout << ans ;",
        "if ( a < c ) )",
        "if ( k == 2 ) )",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        26,
        12,
        11,
        5
      ],
      "mod_code": [
        "cout << ans ;",
        "if ( a < c ) )",
        "if ( k == 2 ) )",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        26,
        12,
        1
      ],
      "mod_code": [
        "cout << ans ;",
        "if ( a < c ) )",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        26,
        12,
        1,
        5
      ],
      "mod_code": [
        "cout << ans ;",
        "if ( a < c ) )",
        "int n , a , b , c , x , y , y , ans ;",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        26,
        12,
        5
      ],
      "mod_code": [
        "cout << ans ;",
        "if ( a < c ) )",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        26,
        11
      ],
      "mod_code": [
        "cout << ans ;",
        "if ( k == 2 ) )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        26,
        11,
        1
      ],
      "mod_code": [
        "cout << ans ;",
        "if ( k == 2 ) )",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        26,
        11,
        1,
        5
      ],
      "mod_code": [
        "cout << ans ;",
        "if ( k == 2 ) )",
        "int n , a , b , c , x , y , y , ans ;",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        26,
        11,
        5
      ],
      "mod_code": [
        "cout << ans ;",
        "if ( k == 2 ) )",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        26,
        1
      ],
      "mod_code": [
        "cout << ans ;",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        26,
        1,
        5
      ],
      "mod_code": [
        "cout << ans ;",
        "int n , a , b , c , x , y , y , ans ;",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "if ( a < c ) )",
        "if ( k == 2 ) )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        11,
        1
      ],
      "mod_code": [
        "if ( a < c ) )",
        "if ( k == 2 ) )",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        12,
        11,
        1,
        5
      ],
      "mod_code": [
        "if ( a < c ) )",
        "if ( k == 2 ) )",
        "int n , a , b , c , x , y , y , ans ;",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        12,
        11,
        5
      ],
      "mod_code": [
        "if ( a < c ) )",
        "if ( k == 2 ) )",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        12,
        1
      ],
      "mod_code": [
        "if ( a < c ) )",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        12,
        1,
        5
      ],
      "mod_code": [
        "if ( a < c ) )",
        "int n , a , b , c , x , y , y , ans ;",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        12,
        5
      ],
      "mod_code": [
        "if ( a < c ) )",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "if ( k == 2 ) )",
        "int n , a , b , c , x , y , y , ans ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        11,
        1,
        5
      ],
      "mod_code": [
        "if ( k == 2 ) )",
        "int n , a , b , c , x , y , y , ans ;",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "if ( k == 2 ) )",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘)’ token"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , a , b , c , x , y , y , ans ;",
        "if ( k == ' 1 ' )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int y’"
    }
  ]
}