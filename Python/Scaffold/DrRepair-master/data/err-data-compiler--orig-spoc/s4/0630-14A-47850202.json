{
  "meta": {
    "index": 630,
    "hitid": "3X2LT8FDHWCG1K52FFLCR22O4458WV",
    "workerid": "AIWEXPJAU66D9",
    "probid": "14A",
    "subid": "47850202"
  },
  "lines": [
    {
      "line": 0,
      "text": "let n , m , x , y , xx , yy , i and j be integers with x and y = 2e9",
      "code": "int n , m , x = 2e9 , y = 2e9 , xx , yy , i , j ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let a be a 2d array of characters with size 60 by 60",
      "code": "char a [ 60 ] [ 60 ] ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 3,
      "text": "read n and m",
      "code": "cin >> n >> m ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 1 to n inclusive",
      "code": "for ( i = 1 ; i <= n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for j = 1 to m inclusive",
      "code": "for ( j = 1 ; j <= m ; j ++ )",
      "indent": 2
    },
    {
      "line": 6,
      "text": "read a [ i ] [ j ]",
      "code": "cin >> a [ i ] [ j ] ;",
      "indent": 3
    },
    {
      "line": 7,
      "text": "if a [ i ] [ j ] = ' * '",
      "code": "if ( a [ i ] [ j ] == ' * ' )",
      "indent": 3
    },
    {
      "line": 8,
      "text": "set x to min of x and i",
      "code": "x = min ( x , i ) ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "set y to min of y and j",
      "code": "y = min ( y , j ) ;",
      "indent": 4
    },
    {
      "line": 10,
      "text": "xx = max of xx and i",
      "code": "xx = max ( xx , i ) ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "set value of yy to max of yy and j",
      "code": "yy = max ( yy , j ) ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "for i from x to xx inclusive",
      "code": "for ( i = x ; i <= xx ; i ++ )",
      "indent": 1
    },
    {
      "line": 16,
      "text": "for j from y to yy inclusive print a [ i ] [ j ]",
      "code": "for ( j = y ; j <= yy ; j ++ ) { cout << a [ i ] [ j ] ; }",
      "indent": 2
    },
    {
      "line": 17,
      "text": "print new line",
      "code": "cout << endl ;",
      "indent": 2
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "char a [ 60 ] ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "cin >> n >> k ;"
      ],
      "err_line": 3,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "* yy = max ( yy , j ) ;"
      ],
      "err_line": 11,
      "err_msg": "invalid type argument of unary ‘*’ (have ‘int’)"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "char a [ 60 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1,
        7
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "char a [ 60 ] ;",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1,
        7,
        9
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "char a [ 60 ] ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "y = __gcd ( y , j ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1,
        7,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "char a [ 60 ] ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1,
        9
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "char a [ 60 ] ;",
        "y = __gcd ( y , j ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1,
        9,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "char a [ 60 ] ;",
        "y = __gcd ( y , j ) ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "char a [ 60 ] ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        7,
        9
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "y = __gcd ( y , j ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "y = __gcd ( y , j ) ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        7,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "y = __gcd ( y , j ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        9,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "y = __gcd ( y , j ) ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j = 2e9 ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "char a [ 60 ] ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1,
        7
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "char a [ 60 ] ;",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1,
        7,
        9
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "char a [ 60 ] ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "y = __gcd ( y , j ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1,
        7,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "char a [ 60 ] ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1,
        9
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "char a [ 60 ] ;",
        "y = __gcd ( y , j ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1,
        9,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "char a [ 60 ] ;",
        "y = __gcd ( y , j ) ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        1,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "char a [ 60 ] ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        7
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        7,
        9
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "y = __gcd ( y , j ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        7,
        9,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "y = __gcd ( y , j ) ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        7,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        9
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "y = __gcd ( y , j ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        9,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "y = __gcd ( y , j ) ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        0,
        10
      ],
      "mod_code": [
        "int n , m , x , y , xx , yy , yy , i , j , j ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 0,
      "err_msg": "redefinition of ‘int yy’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "char a [ 60 ] ;",
        "if ( a [ i ] [ j ] = ' * ' )"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        7,
        9
      ],
      "mod_code": [
        "char a [ 60 ] ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "y = __gcd ( y , j ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        7,
        9,
        10
      ],
      "mod_code": [
        "char a [ 60 ] ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "y = __gcd ( y , j ) ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        7,
        10
      ],
      "mod_code": [
        "char a [ 60 ] ;",
        "if ( a [ i ] [ j ] = ' * ' )",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "char a [ 60 ] ;",
        "y = __gcd ( y , j ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        9,
        10
      ],
      "mod_code": [
        "char a [ 60 ] ;",
        "y = __gcd ( y , j ) ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "char a [ 60 ] ;",
        "xx = __gcd ( xx , i ) ;"
      ],
      "err_line": 6,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    }
  ]
}