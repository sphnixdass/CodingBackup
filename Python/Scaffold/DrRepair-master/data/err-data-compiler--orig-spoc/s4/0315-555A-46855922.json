{
  "meta": {
    "index": 315,
    "hitid": "37YYO3NWHDK9ZPPAF01GHUR42UOCC6",
    "workerid": "A1EKVUFWL7OJMO",
    "probid": "555A",
    "subid": "46855922"
  },
  "lines": [
    {
      "line": 0,
      "text": "n , k = integers",
      "code": "int n , k ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "set ans to 0",
      "code": "int ans = 0 ;",
      "indent": 0
    },
    {
      "line": 2,
      "text": "set sum to 0",
      "code": "int sum = 0 ;",
      "indent": 0
    },
    {
      "line": 3,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 4,
      "text": "read n and k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to k exclusive",
      "code": "for ( int i = 0 ; i < k ; ++ i )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "m = integer",
      "code": "int m ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "read m",
      "code": "cin >> m ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set pr to - 1",
      "code": "int pr = - 1 ;",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set f to m",
      "code": "int f = m ;",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set ff to - 1",
      "code": "int ff = - 1 ;",
      "indent": 2
    },
    {
      "line": 11,
      "text": "for j = 0 to m exclusive",
      "code": "for ( int j = 0 ; j < m ; ++ j )",
      "indent": 2
    },
    {
      "line": 12,
      "text": "x = integer",
      "code": "int x ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "read x",
      "code": "cin >> x ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "if j is 0 ff = x",
      "code": "if ( j == 0 ) { ff = x ; }",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if not x is pr + 1 and j f = min of f and j",
      "code": "if ( x != pr + 1 && j ) { f = min ( f , j ) ; }",
      "indent": 3
    },
    {
      "line": 16,
      "text": "pr = x",
      "code": "pr = x ;",
      "indent": 3
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 18,
      "text": "if not ff is 1",
      "code": "if ( ff != 1 )",
      "indent": 2
    },
    {
      "line": 19,
      "text": "ans = and + m - 1",
      "code": "ans += m - 1 ;",
      "indent": 3
    },
    {
      "line": 20,
      "text": "sum = sum + m",
      "code": "sum += m ;",
      "indent": 3
    },
    {
      "line": 21,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 22,
      "text": "ans = ans + m - f",
      "code": "ans += m - f ;",
      "indent": 3
    },
    {
      "line": 23,
      "text": "sum = sum + m - f + 1",
      "code": "sum += m - f + 1 ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 26,
      "text": "print ans + ( sum - 1 )",
      "code": "cout << ans + ( sum - 1 ) << ' \\n ' ;",
      "indent": 1
    },
    {
      "line": 27,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "ans = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "sum = 0 ;"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "pr = - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘pr’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "f = m ;"
      ],
      "err_line": 9,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "ff = - 1 ;"
      ],
      "err_line": 10,
      "err_msg": "‘ff’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < k ; i ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "pr -= 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘pr’ was not declared in this scope"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "ff -= - 1 ;"
      ],
      "err_line": 10,
      "err_msg": "‘ff’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( j = 0 ; j < m ; j ++ )"
      ],
      "err_line": 11,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "ans = and ( ans - 1 ) ;"
      ],
      "err_line": 19,
      "err_msg": "expected identifier before ‘(’ token"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 21,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        2
      ],
      "mod_code": [
        "ans = 0 ;",
        "sum = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        8
      ],
      "mod_code": [
        "ans = 0 ;",
        "sum = 0 ;",
        "pr = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        9
      ],
      "mod_code": [
        "ans = 0 ;",
        "sum = 0 ;",
        "pr = - 1 ;",
        "f = m ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        10
      ],
      "mod_code": [
        "ans = 0 ;",
        "sum = 0 ;",
        "pr = - 1 ;",
        "ff = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        8,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "sum = 0 ;",
        "pr = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        9
      ],
      "mod_code": [
        "ans = 0 ;",
        "sum = 0 ;",
        "f = m ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        10
      ],
      "mod_code": [
        "ans = 0 ;",
        "sum = 0 ;",
        "f = m ;",
        "ff = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        9,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "sum = 0 ;",
        "f = m ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        10
      ],
      "mod_code": [
        "ans = 0 ;",
        "sum = 0 ;",
        "ff = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        10,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "sum = 0 ;",
        "ff = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        2,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "sum = 0 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        8
      ],
      "mod_code": [
        "ans = 0 ;",
        "pr = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        8,
        9
      ],
      "mod_code": [
        "ans = 0 ;",
        "pr = - 1 ;",
        "f = m ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        10
      ],
      "mod_code": [
        "ans = 0 ;",
        "pr = - 1 ;",
        "f = m ;",
        "ff = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        8,
        9,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "pr = - 1 ;",
        "f = m ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        8,
        10
      ],
      "mod_code": [
        "ans = 0 ;",
        "pr = - 1 ;",
        "ff = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        8,
        10,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "pr = - 1 ;",
        "ff = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        8,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "pr = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "ans = 0 ;",
        "f = m ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        9,
        10
      ],
      "mod_code": [
        "ans = 0 ;",
        "f = m ;",
        "ff = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        9,
        10,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "f = m ;",
        "ff = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        9,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "f = m ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        10
      ],
      "mod_code": [
        "ans = 0 ;",
        "ff = - 1 ;"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        10,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "ff = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        1,
        15
      ],
      "mod_code": [
        "ans = 0 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 1,
      "err_msg": "‘ans’ does not name a type"
    },
    {
      "mod_line": [
        2,
        8
      ],
      "mod_code": [
        "sum = 0 ;",
        "pr = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        8,
        9
      ],
      "mod_code": [
        "sum = 0 ;",
        "pr = - 1 ;",
        "f = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        10
      ],
      "mod_code": [
        "sum = 0 ;",
        "pr = - 1 ;",
        "f = m ;",
        "ff = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        8,
        9,
        15
      ],
      "mod_code": [
        "sum = 0 ;",
        "pr = - 1 ;",
        "f = m ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        8,
        10
      ],
      "mod_code": [
        "sum = 0 ;",
        "pr = - 1 ;",
        "ff = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        8,
        10,
        15
      ],
      "mod_code": [
        "sum = 0 ;",
        "pr = - 1 ;",
        "ff = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        8,
        15
      ],
      "mod_code": [
        "sum = 0 ;",
        "pr = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        9
      ],
      "mod_code": [
        "sum = 0 ;",
        "f = m ;"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        9,
        10
      ],
      "mod_code": [
        "sum = 0 ;",
        "f = m ;",
        "ff = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        9,
        10,
        15
      ],
      "mod_code": [
        "sum = 0 ;",
        "f = m ;",
        "ff = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        9,
        15
      ],
      "mod_code": [
        "sum = 0 ;",
        "f = m ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        10
      ],
      "mod_code": [
        "sum = 0 ;",
        "ff = - 1 ;"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        10,
        15
      ],
      "mod_code": [
        "sum = 0 ;",
        "ff = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        2,
        15
      ],
      "mod_code": [
        "sum = 0 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 2,
      "err_msg": "‘sum’ does not name a type"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "pr = - 1 ;",
        "f = m ;"
      ],
      "err_line": 8,
      "err_msg": "‘pr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10
      ],
      "mod_code": [
        "pr = - 1 ;",
        "f = m ;",
        "ff = - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘pr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        10,
        15
      ],
      "mod_code": [
        "pr = - 1 ;",
        "f = m ;",
        "ff = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 8,
      "err_msg": "‘pr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        15
      ],
      "mod_code": [
        "pr = - 1 ;",
        "f = m ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 8,
      "err_msg": "‘pr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10
      ],
      "mod_code": [
        "pr = - 1 ;",
        "ff = - 1 ;"
      ],
      "err_line": 8,
      "err_msg": "‘pr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        10,
        15
      ],
      "mod_code": [
        "pr = - 1 ;",
        "ff = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 8,
      "err_msg": "‘pr’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "pr = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 8,
      "err_msg": "‘pr’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10
      ],
      "mod_code": [
        "f = m ;",
        "ff = - 1 ;"
      ],
      "err_line": 9,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        10,
        15
      ],
      "mod_code": [
        "f = m ;",
        "ff = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 9,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "f = m ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 9,
      "err_msg": "‘f’ was not declared in this scope"
    },
    {
      "mod_line": [
        10,
        15
      ],
      "mod_code": [
        "ff = - 1 ;",
        "if ( x != pr + 1 && j == min ( f , j ) )"
      ],
      "err_line": 10,
      "err_msg": "‘ff’ was not declared in this scope"
    }
  ]
}