{
  "meta": {
    "index": 696,
    "hitid": "3T8DUCXY0N0ON8KIP2MF4EQ0LIMT91",
    "workerid": "A28TIENUWLMMIP",
    "probid": "327A",
    "subid": "41739692"
  },
  "lines": [
    {
      "line": 0,
      "text": "let a be an integer of arrays of size 1000",
      "code": "int a [ 1000 ] ;",
      "indent": 0
    },
    {
      "line": 1,
      "text": "define function flip with takes in integers n , i , and j as arguments",
      "code": "int flip ( int n , int i , int j )",
      "indent": 0
    },
    {
      "line": 2,
      "text": "let b be an integer of arrays of size 1000",
      "code": "int b [ 1000 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "iterate for n times , set b [ i ] to a [ i ] n times",
      "code": "for ( int i = 0 ; i < n ; i ++ ) b [ i ] = a [ i ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "let count be an integer and set its value to 0",
      "code": "int count = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for k = i iterate until k is less than or equal to j",
      "code": "for ( int k = i ; k <= j ; k ++ )",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if b [ k ] is equal to 0",
      "code": "if ( b [ k ] == 0 )",
      "indent": 2
    },
    {
      "line": 7,
      "text": "set b [ k ] to 1",
      "code": "b [ k ] = 1 ;",
      "indent": 3
    },
    {
      "line": 8,
      "text": "or else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 9,
      "text": "set b [ k ] to 0",
      "code": "b [ k ] = 0 ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 11,
      "text": "iterate for n times",
      "code": "for ( int k = 0 ; k < n ; k ++ )",
      "indent": 1
    },
    {
      "line": 12,
      "text": "if b [ k ] is equal to 1 , increment count",
      "code": "if ( b [ k ] == 1 ) count ++ ;",
      "indent": 2
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 14,
      "text": "return the value of count from the function",
      "code": "return count ;",
      "indent": 1
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 17,
      "text": "let n be an integer",
      "code": "int n ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "read in n",
      "code": "cin >> n ;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "read in a [ i ] n times",
      "code": "for ( int i = 0 ; i < n ; i ++ ) cin >> a [ i ] ;",
      "indent": 1
    },
    {
      "line": 20,
      "text": "let max be an integer and set its value to - 1",
      "code": "int max = - 1 ;",
      "indent": 1
    },
    {
      "line": 21,
      "text": "iterate for n times",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 22,
      "text": "for j = i iterate while j is less than n",
      "code": "for ( int j = i ; j < n ; j ++ )",
      "indent": 2
    },
    {
      "line": 23,
      "text": "let count be an integer and set its value to flip ( n , i , j )",
      "code": "int count = flip ( n , i , j ) ;",
      "indent": 3
    },
    {
      "line": 24,
      "text": "if count is greater than max , set max to count",
      "code": "if ( count > max ) max = count ;",
      "indent": 3
    },
    {
      "line": 25,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 26,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 27,
      "text": "print max",
      "code": "cout << max << endl ;",
      "indent": 1
    },
    {
      "line": 28,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 29,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j ) ;"
      ],
      "err_line": 2,
      "err_msg": "expected unqualified-id before ‘{’ token"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "count = 0 ;"
      ],
      "err_line": 4,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "for ( k = i ; k <= j ; k ++ )"
      ],
      "err_line": 5,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "b [ k ] ] = 1 ;"
      ],
      "err_line": 7,
      "err_msg": "expected ‘;’ before ‘]’ token"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 8,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "for ( int j = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "return ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        21
      ],
      "mod_code": [
        "for ( int j = 0 ; i < n ; i ++ )"
      ],
      "err_line": 21,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22
      ],
      "mod_code": [
        "for ( j = i ; j < n ; j ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        23
      ],
      "mod_code": [
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 23,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        1,
        11
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( int i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        22
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( j = i ; j < n ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        22,
        18
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( j = i ; j < n ; j ++ )",
        "cin >> n >> n ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        22,
        14
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( j = i ; j < n ; j ++ )",
        "return ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        22,
        23
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( j = i ; j < n ; j ++ )",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        18
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n >> n ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        18,
        14
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n >> n ;",
        "return ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        18,
        23
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n >> n ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        14
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "return ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        14,
        23
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "return ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        11,
        23
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( int i = 0 ; i < n ; i ++ )",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        22
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( j = i ; j < n ; j ++ )"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        22,
        18
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( j = i ; j < n ; j ++ )",
        "cin >> n >> n ;"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        22,
        18,
        14
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( j = i ; j < n ; j ++ )",
        "cin >> n >> n ;",
        "return ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        22,
        18,
        23
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( j = i ; j < n ; j ++ )",
        "cin >> n >> n ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        22,
        14
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( j = i ; j < n ; j ++ )",
        "return ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        22,
        14,
        23
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( j = i ; j < n ; j ++ )",
        "return ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        22,
        23
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "for ( j = i ; j < n ; j ++ )",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        1,
        18,
        14
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "cin >> n >> n ;",
        "return ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        18,
        14,
        23
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "cin >> n >> n ;",
        "return ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        18,
        23
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "cin >> n >> n ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 23,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "return ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        14,
        23
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "return ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘bool’ [-fpermissive]"
    },
    {
      "mod_line": [
        1,
        23
      ],
      "mod_code": [
        "bool flip ( int n , int i , int j )",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 23,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        11,
        22
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( j = i ; j < n ; j ++ )"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        22,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( j = i ; j < n ; j ++ )",
        "cin >> n >> n ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        22,
        18,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( j = i ; j < n ; j ++ )",
        "cin >> n >> n ;",
        "return ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        22,
        18,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( j = i ; j < n ; j ++ )",
        "cin >> n >> n ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        22,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( j = i ; j < n ; j ++ )",
        "return ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        22,
        14,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( j = i ; j < n ; j ++ )",
        "return ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        22,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "for ( j = i ; j < n ; j ++ )",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        18
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n >> n ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        18,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n >> n ;",
        "return ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        18,
        14,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n >> n ;",
        "return ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        18,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "cin >> n >> n ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        14
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "return ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        14,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "return ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        23
      ],
      "mod_code": [
        "for ( int i = 0 ; i < n ; i ++ )",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 12,
      "err_msg": "name lookup of ‘k’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        18
      ],
      "mod_code": [
        "for ( j = i ; j < n ; j ++ )",
        "cin >> n >> n ;"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        18,
        14
      ],
      "mod_code": [
        "for ( j = i ; j < n ; j ++ )",
        "cin >> n >> n ;",
        "return ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        18,
        14,
        23
      ],
      "mod_code": [
        "for ( j = i ; j < n ; j ++ )",
        "cin >> n >> n ;",
        "return ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        18,
        23
      ],
      "mod_code": [
        "for ( j = i ; j < n ; j ++ )",
        "cin >> n >> n ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        22,
        14
      ],
      "mod_code": [
        "for ( j = i ; j < n ; j ++ )",
        "return ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        14,
        23
      ],
      "mod_code": [
        "for ( j = i ; j < n ; j ++ )",
        "return ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        22,
        23
      ],
      "mod_code": [
        "for ( j = i ; j < n ; j ++ )",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 22,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        18,
        14
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "return ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        14,
        23
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "return ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    },
    {
      "mod_line": [
        18,
        23
      ],
      "mod_code": [
        "cin >> n >> n ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 23,
      "err_msg": "overloaded function with no contextual type information"
    },
    {
      "mod_line": [
        14,
        23
      ],
      "mod_code": [
        "return ;",
        "count = flip ( n , i , j ) ;"
      ],
      "err_line": 14,
      "err_msg": "return-statement with no value, in function returning ‘int’ [-fpermissive]"
    }
  ]
}