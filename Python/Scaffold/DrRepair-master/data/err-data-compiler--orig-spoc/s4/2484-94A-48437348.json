{
  "meta": {
    "index": 2484,
    "hitid": "32ZCLEW0BZEF1S4KUX48OY36SKCPJM",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "94A",
    "subid": "48437348"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "s = string",
      "code": "string s ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "dg = string array of size 10",
      "code": "string dg [ 10 ] ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "sol = integer array of size 8",
      "code": "int sol [ 8 ] ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "read s",
      "code": "cin >> s ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "for i = 0 to 10 exclusive , and increase i by 1 at the start of loop , then read dg [ i ]",
      "code": "for ( int i = 0 ; i < 10 ; ++ i ) cin >> dg [ i ] ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "for i = 0 to 8 exclusive , and increase i by 1 at the start of loop",
      "code": "for ( int i = 0 ; i < 8 ; ++ i )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "for j = 0 to 8 exclusive , and increase j by 1 at the start of loop",
      "code": "for ( int j = 0 ; j < 10 ; ++ j )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "failed = boolean = 0",
      "code": "bool failed = 0 ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "for k = 0 to 10 exclusive and increase k at the start of loop",
      "code": "for ( int k = 0 ; k < 10 ; ++ k )",
      "indent": 3
    },
    {
      "line": 10,
      "text": "if dg [ j ] [ k ] is not s [ i * 10 + k ]",
      "code": "if ( dg [ j ] [ k ] != s [ i * 10 + k ] )",
      "indent": 4
    },
    {
      "line": 11,
      "text": "failed = 1",
      "code": "failed = 1 ;",
      "indent": 5
    },
    {
      "line": 12,
      "text": "exit the k for loop",
      "code": "break ;",
      "indent": 5
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 4
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 15,
      "text": "if failed = 0",
      "code": "if ( ! failed )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "sol [ i ] = j",
      "code": "sol [ i ] = j ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "exit the j for loop",
      "code": "break ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 20,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 21,
      "text": "fir i = 0 to 8 exclusive and increase i by 1 at the start of loop , then print sol [ i ]",
      "code": "for ( int i = 0 ; i < 8 ; ++ i ) cout << sol [ i ] ;",
      "indent": 1
    },
    {
      "line": 22,
      "text": "print endline",
      "code": "cout << endl ;",
      "indent": 1
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 24,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        2
      ],
      "mod_code": [
        "string dg ;"
      ],
      "err_line": 10,
      "err_msg": "invalid types ‘char[int]’ for array subscript"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "gets ( s ) ;"
      ],
      "err_line": 4,
      "err_msg": "cannot convert ‘std::__cxx11::string {aka std::__cxx11::basic_string<char>}’ to ‘char*’ for argument ‘1’ to ‘char* gets(char*)’"
    },
    {
      "mod_line": [
        6
      ],
      "mod_code": [
        "for ( i = 0 ; i < 8 ; i ++ )"
      ],
      "err_line": 6,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        7
      ],
      "mod_code": [
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8
      ],
      "mod_code": [
        "failed = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( k = 0 ; k < 10 ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "failed [ 1 ] = 1 ;"
      ],
      "err_line": 11,
      "err_msg": "invalid types ‘bool[int]’ for array subscript"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "do"
      ],
      "err_line": 13,
      "err_msg": "expected primary-expression before ‘}’ token"
    },
    {
      "mod_line": [
        7,
        21,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "failed = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        8,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "failed = 0 ;",
        "for ( k = 0 ; k < 10 ; k ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        8,
        15
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "failed = 0 ;",
        "if ( failed )"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "for ( k = 0 ; k < 10 ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        21,
        9,
        15
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "for ( k = 0 ; k < 10 ; k ++ )",
        "if ( failed )"
      ],
      "err_line": 9,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "failed = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "failed = 0 ;",
        "for ( k = 0 ; k < 10 ; k ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        9,
        15
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "failed = 0 ;",
        "for ( k = 0 ; k < 10 ; k ++ )",
        "if ( failed )"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        8,
        15
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "failed = 0 ;",
        "if ( failed )"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "for ( k = 0 ; k < 10 ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        9,
        15
      ],
      "mod_code": [
        "for ( int j = 0 ; j < 8 ; j ++ )",
        "for ( k = 0 ; k < 10 ; k ++ )",
        "if ( failed )"
      ],
      "err_line": 9,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        8
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "failed = 0 ;"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        8,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "failed = 0 ;",
        "for ( k = 0 ; k < 10 ; k ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        8,
        9,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "failed = 0 ;",
        "for ( k = 0 ; k < 10 ; k ++ )",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        8,
        9,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "failed = 0 ;",
        "for ( k = 0 ; k < 10 ; k ++ )",
        "if ( failed )"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        8,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "failed = 0 ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        8,
        7,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "failed = 0 ;",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( failed )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        8,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "failed = 0 ;",
        "if ( failed )"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        9
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "for ( k = 0 ; k < 10 ; k ++ )"
      ],
      "err_line": 9,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        9,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "for ( k = 0 ; k < 10 ; k ++ )",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        9,
        7,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "for ( k = 0 ; k < 10 ; k ++ )",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( failed )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        9,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "for ( k = 0 ; k < 10 ; k ++ )",
        "if ( failed )"
      ],
      "err_line": 9,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        7
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        21,
        7,
        15
      ],
      "mod_code": [
        "for ( int i = 0 ; i < 8 ; i ++ ) { cout << sol [ i ] << endl ; }",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( failed )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9
      ],
      "mod_code": [
        "failed = 0 ;",
        "for ( k = 0 ; k < 10 ; k ++ )"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        7
      ],
      "mod_code": [
        "failed = 0 ;",
        "for ( k = 0 ; k < 10 ; k ++ )",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        7,
        15
      ],
      "mod_code": [
        "failed = 0 ;",
        "for ( k = 0 ; k < 10 ; k ++ )",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( failed )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        9,
        15
      ],
      "mod_code": [
        "failed = 0 ;",
        "for ( k = 0 ; k < 10 ; k ++ )",
        "if ( failed )"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7
      ],
      "mod_code": [
        "failed = 0 ;",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        7,
        15
      ],
      "mod_code": [
        "failed = 0 ;",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( failed )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        8,
        15
      ],
      "mod_code": [
        "failed = 0 ;",
        "if ( failed )"
      ],
      "err_line": 8,
      "err_msg": "‘failed’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "for ( k = 0 ; k < 10 ; k ++ )",
        "for ( j = 0 ; j < 8 ; j ++ )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        7,
        15
      ],
      "mod_code": [
        "for ( k = 0 ; k < 10 ; k ++ )",
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( failed )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "for ( k = 0 ; k < 10 ; k ++ )",
        "if ( failed )"
      ],
      "err_line": 9,
      "err_msg": "‘k’ was not declared in this scope"
    },
    {
      "mod_line": [
        7,
        15
      ],
      "mod_code": [
        "for ( j = 0 ; j < 8 ; j ++ )",
        "if ( failed )"
      ],
      "err_line": 7,
      "err_msg": "‘j’ was not declared in this scope"
    }
  ]
}