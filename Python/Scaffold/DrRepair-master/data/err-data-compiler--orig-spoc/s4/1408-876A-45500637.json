{
  "meta": {
    "index": 1408,
    "hitid": "3QI9WAYOGQ50QP552VEDAZ3CTYZ6SD",
    "workerid": "A1HC0MVEW0VTB7",
    "probid": "876A",
    "subid": "45500637"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , a , b and c be integers",
      "code": "int n , a , b , c ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "get values of n , a , b and c",
      "code": "cin >> n >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "let d be integer",
      "code": "int d ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if n is equal to 1 set d = 0",
      "code": "if ( n == 1 ) d = 0 ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "if n is equal to 2 set d = minimum of a and b",
      "code": "if ( n == 2 ) d = min ( a , b ) ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "if n is greater than 2",
      "code": "if ( n > 2 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "if a is less than or equal to b and a less than or equal to c",
      "code": "if ( a <= b && a <= c )",
      "indent": 2
    },
    {
      "line": 8,
      "text": "set d = ( n - 1 ) * a",
      "code": "d = ( n - 1 ) * a ;",
      "indent": 3
    },
    {
      "line": 9,
      "text": "else if b less than or equal to a and b less than or equal to c",
      "code": "else if ( b <= a && b <= c )",
      "indent": 2
    },
    {
      "line": 10,
      "text": "set d = ( n - 1 ) * b ;",
      "code": "d = ( n - 1 ) * b ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "set d = minimum of a and b plus ( n - 2 ) * c",
      "code": "d = min ( a , b ) + ( n - 2 ) * c ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 15,
      "text": "print d",
      "code": "cout << d << endl ;",
      "indent": 1
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11
      ],
      "mod_code": [
        "d = min ( a , b ) * c ;",
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11,
        2
      ],
      "mod_code": [
        "d = min ( a , b ) * c ;",
        "else else",
        "cin >> n , a >> b >> c ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11,
        2,
        15
      ],
      "mod_code": [
        "d = min ( a , b ) * c ;",
        "else else",
        "cin >> n , a >> b >> c ;",
        "cout << d ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11,
        2,
        8
      ],
      "mod_code": [
        "d = min ( a , b ) * c ;",
        "else else",
        "cin >> n , a >> b >> c ;",
        "int d = ( n - 1 ) * a ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11,
        15
      ],
      "mod_code": [
        "d = min ( a , b ) * c ;",
        "else else",
        "cout << d ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11,
        15,
        8
      ],
      "mod_code": [
        "d = min ( a , b ) * c ;",
        "else else",
        "cout << d ;",
        "int d = ( n - 1 ) * a ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        12,
        11,
        8
      ],
      "mod_code": [
        "d = min ( a , b ) * c ;",
        "else else",
        "int d = ( n - 1 ) * a ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        2
      ],
      "mod_code": [
        "else else",
        "cin >> n , a >> b >> c ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        2,
        15
      ],
      "mod_code": [
        "else else",
        "cin >> n , a >> b >> c ;",
        "cout << d ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        2,
        15,
        8
      ],
      "mod_code": [
        "else else",
        "cin >> n , a >> b >> c ;",
        "cout << d ;",
        "int d = ( n - 1 ) * a ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        2,
        15,
        12
      ],
      "mod_code": [
        "else else",
        "cin >> n , a >> b >> c ;",
        "cout << d ;",
        "d = min ( a , b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        2,
        8
      ],
      "mod_code": [
        "else else",
        "cin >> n , a >> b >> c ;",
        "int d = ( n - 1 ) * a ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        2,
        8,
        12
      ],
      "mod_code": [
        "else else",
        "cin >> n , a >> b >> c ;",
        "int d = ( n - 1 ) * a ;",
        "d = min ( a , b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        2,
        12
      ],
      "mod_code": [
        "else else",
        "cin >> n , a >> b >> c ;",
        "d = min ( a , b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "else else",
        "cout << d ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        15,
        8
      ],
      "mod_code": [
        "else else",
        "cout << d ;",
        "int d = ( n - 1 ) * a ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        15,
        8,
        12
      ],
      "mod_code": [
        "else else",
        "cout << d ;",
        "int d = ( n - 1 ) * a ;",
        "d = min ( a , b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        15,
        12
      ],
      "mod_code": [
        "else else",
        "cout << d ;",
        "d = min ( a , b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        8
      ],
      "mod_code": [
        "else else",
        "int d = ( n - 1 ) * a ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        8,
        12
      ],
      "mod_code": [
        "else else",
        "int d = ( n - 1 ) * a ;",
        "d = min ( a , b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        12
      ],
      "mod_code": [
        "else else",
        "d = min ( a , b ) ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}