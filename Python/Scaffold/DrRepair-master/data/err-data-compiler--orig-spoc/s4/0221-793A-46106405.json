{
  "meta": {
    "index": 221,
    "hitid": "3SMIWMMK61ZEZHCFIIMHNUKD1ABWU7",
    "workerid": "A1APYLD4DUK33J",
    "probid": "793A",
    "subid": "46106405"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "create integers n , k , x with x = 1e9 + 5",
      "code": "int n , k , x = 1e9 + 5 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n read k",
      "code": "cin >> n >> k ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "create integer vector v initialized with n",
      "code": "vector < int > v ( n ) ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 5,
      "text": "read v [ i ]",
      "code": "cin >> v [ i ] ;",
      "indent": 2
    },
    {
      "line": 6,
      "text": "set x to minimum of x and v [ i ]",
      "code": "x = min ( x , v [ i ] ) ;",
      "indent": 2
    },
    {
      "line": 7,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 8,
      "text": "create long long integer res with res = 0",
      "code": "long long int res = 0 ;",
      "indent": 1
    },
    {
      "line": 9,
      "text": "for i = 0 to n exclusive",
      "code": "for ( int i = 0 ; i < n ; i ++ )",
      "indent": 1
    },
    {
      "line": 10,
      "text": "if ( v [ i ] - x ) % k",
      "code": "if ( ( v [ i ] - x ) % k )",
      "indent": 2
    },
    {
      "line": 11,
      "text": "print \" - 1 \"",
      "code": "cout << \" -1 \"",
      "indent": 3
    },
    {
      "line": 12,
      "text": "print \" \\ n \"",
      "code": "<< \" \\n \" ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "increment res by ( v [ i ] - x ) / k",
      "code": "res += ( v [ i ] - x ) / k ;",
      "indent": 2
    },
    {
      "line": 16,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 17,
      "text": "print res print \" \\ n \"",
      "code": "cout << res << \" \\n \" ;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 19,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , k , x [ 1e9 + 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        3
      ],
      "mod_code": [
        "vector < long > v ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, long int&)’"
    },
    {
      "mod_line": [
        4
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 4,
      "err_msg": "‘i’ was not declared in this scope"
    },
    {
      "mod_line": [
        5
      ],
      "mod_code": [
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        10
      ],
      "mod_code": [
        "if ( v [ i ] - x ) % k ;"
      ],
      "err_line": 10,
      "err_msg": "expected primary-expression before ‘%’ token"
    },
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "puts ( \" -1 \" ) ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        12
      ],
      "mod_code": [
        "cout << \" \\n \" ;"
      ],
      "err_line": 12,
      "err_msg": "expected ‘;’ before ‘cout’"
    },
    {
      "mod_line": [
        15
      ],
      "mod_code": [
        "res += v [ i ] - x ) / k ;"
      ],
      "err_line": 15,
      "err_msg": "expected ‘;’ before ‘)’ token"
    },
    {
      "mod_line": [
        11,
        9
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        15
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "res += v [ i ] - x ) / k ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        11,
        9,
        15,
        1
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "res += v [ i ] - x ) / k ;",
        "int n , k , x [ 1e9 + 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        11,
        9,
        15,
        3
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "res += v [ i ] - x ) / k ;",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, long int&)’"
    },
    {
      "mod_line": [
        11,
        9,
        15,
        5
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "res += v [ i ] - x ) / k ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        9,
        1
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , k , x [ 1e9 + 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        11,
        9,
        1,
        3
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , k , x [ 1e9 + 5 ] ;",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        11,
        9,
        1,
        5
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , k , x [ 1e9 + 5 ] ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        11,
        9,
        3
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, long int&)’"
    },
    {
      "mod_line": [
        11,
        9,
        3,
        5
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < long > v ( n ) ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long int>’ and ‘long int’)"
    },
    {
      "mod_line": [
        11,
        9,
        5
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "for ( i = 0 ; i < n ; i ++ )",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        15
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "res += v [ i ] - x ) / k ;"
      ],
      "err_line": 12,
      "err_msg": "expected primary-expression before ‘<<’ token"
    },
    {
      "mod_line": [
        11,
        15,
        1
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "res += v [ i ] - x ) / k ;",
        "int n , k , x [ 1e9 + 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        11,
        15,
        1,
        3
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "res += v [ i ] - x ) / k ;",
        "int n , k , x [ 1e9 + 5 ] ;",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        11,
        15,
        1,
        5
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "res += v [ i ] - x ) / k ;",
        "int n , k , x [ 1e9 + 5 ] ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        11,
        15,
        3
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "res += v [ i ] - x ) / k ;",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, long int&)’"
    },
    {
      "mod_line": [
        11,
        15,
        3,
        5
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "res += v [ i ] - x ) / k ;",
        "vector < long > v ( n ) ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long int>’ and ‘long int’)"
    },
    {
      "mod_line": [
        11,
        15,
        5
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "res += v [ i ] - x ) / k ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        11,
        1
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "int n , k , x [ 1e9 + 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        11,
        1,
        3
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "int n , k , x [ 1e9 + 5 ] ;",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        11,
        1,
        3,
        5
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "int n , k , x [ 1e9 + 5 ] ;",
        "vector < long > v ( n ) ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        11,
        1,
        5
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "int n , k , x [ 1e9 + 5 ] ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, long int&)’"
    },
    {
      "mod_line": [
        11,
        3,
        5
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "vector < long > v ( n ) ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long int>’ and ‘long int’)"
    },
    {
      "mod_line": [
        11,
        5
      ],
      "mod_code": [
        "cout << \" -1 \" << endl ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        15
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res += v [ i ] - x ) / k ;"
      ],
      "err_line": 9,
      "err_msg": "name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]"
    },
    {
      "mod_line": [
        9,
        15,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res += v [ i ] - x ) / k ;",
        "int n , k , x [ 1e9 + 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        9,
        15,
        1,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res += v [ i ] - x ) / k ;",
        "int n , k , x [ 1e9 + 5 ] ;",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        9,
        15,
        1,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res += v [ i ] - x ) / k ;",
        "int n , k , x [ 1e9 + 5 ] ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        9,
        15,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res += v [ i ] - x ) / k ;",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, long int&)’"
    },
    {
      "mod_line": [
        9,
        15,
        3,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res += v [ i ] - x ) / k ;",
        "vector < long > v ( n ) ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long int>’ and ‘long int’)"
    },
    {
      "mod_line": [
        9,
        15,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "res += v [ i ] - x ) / k ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        9,
        1
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , k , x [ 1e9 + 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        9,
        1,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , k , x [ 1e9 + 5 ] ;",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        9,
        1,
        3,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , k , x [ 1e9 + 5 ] ;",
        "vector < long > v ( n ) ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        9,
        1,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "int n , k , x [ 1e9 + 5 ] ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        9,
        3
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, long int&)’"
    },
    {
      "mod_line": [
        9,
        3,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "vector < long > v ( n ) ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long int>’ and ‘long int’)"
    },
    {
      "mod_line": [
        9,
        5
      ],
      "mod_code": [
        "for ( i = 0 ; i < n ; i ++ )",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        15,
        1
      ],
      "mod_code": [
        "res += v [ i ] - x ) / k ;",
        "int n , k , x [ 1e9 + 5 ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        15,
        1,
        3
      ],
      "mod_code": [
        "res += v [ i ] - x ) / k ;",
        "int n , k , x [ 1e9 + 5 ] ;",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        15,
        1,
        3,
        5
      ],
      "mod_code": [
        "res += v [ i ] - x ) / k ;",
        "int n , k , x [ 1e9 + 5 ] ;",
        "vector < long > v ( n ) ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        15,
        1,
        5
      ],
      "mod_code": [
        "res += v [ i ] - x ) / k ;",
        "int n , k , x [ 1e9 + 5 ] ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        15,
        3
      ],
      "mod_code": [
        "res += v [ i ] - x ) / k ;",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 6,
      "err_msg": "no matching function for call to ‘min(int&, long int&)’"
    },
    {
      "mod_line": [
        15,
        3,
        5
      ],
      "mod_code": [
        "res += v [ i ] - x ) / k ;",
        "vector < long > v ( n ) ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long int>’ and ‘long int’)"
    },
    {
      "mod_line": [
        15,
        5
      ],
      "mod_code": [
        "res += v [ i ] - x ) / k ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<int>’ and ‘int’)"
    },
    {
      "mod_line": [
        1,
        3
      ],
      "mod_code": [
        "int n , k , x [ 1e9 + 5 ] ;",
        "vector < long > v ( n ) ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        1,
        3,
        5
      ],
      "mod_code": [
        "int n , k , x [ 1e9 + 5 ] ;",
        "vector < long > v ( n ) ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        1,
        5
      ],
      "mod_code": [
        "int n , k , x [ 1e9 + 5 ] ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 1,
      "err_msg": "size of array ‘x’ has non-integral type ‘double’"
    },
    {
      "mod_line": [
        3,
        5
      ],
      "mod_code": [
        "vector < long > v ( n ) ;",
        "v >> v [ i ] ;"
      ],
      "err_line": 5,
      "err_msg": "no match for ‘operator>>’ (operand types are ‘std::vector<long int>’ and ‘long int’)"
    }
  ]
}