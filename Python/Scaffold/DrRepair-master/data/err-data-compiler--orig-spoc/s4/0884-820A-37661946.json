{
  "meta": {
    "index": 884,
    "hitid": "3HXK2V1N4K99IJDDKT8TV83XOV12GV",
    "workerid": "AIWEXPJAU66D9",
    "probid": "820A",
    "subid": "37661946"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "let n , a , Max , k and last = 0 be integers",
      "code": "int n , a , Max , k , last = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "declare integer day = 0",
      "code": "int day = 0 ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "read n , a , Max , k and last",
      "code": "cin >> n >> a >> Max >> k >> last ;",
      "indent": 1
    },
    {
      "line": 4,
      "text": "decrease n by a",
      "code": "n -= a ;",
      "indent": 1
    },
    {
      "line": 5,
      "text": "increase day",
      "code": "day ++ ;",
      "indent": 1
    },
    {
      "line": 6,
      "text": "while n is greater than 0",
      "code": "while ( n > 0 )",
      "indent": 1
    },
    {
      "line": 7,
      "text": "increase a by k",
      "code": "a += k ;",
      "indent": 2
    },
    {
      "line": 8,
      "text": "if a is less than Max",
      "code": "if ( a < Max )",
      "indent": 2
    },
    {
      "line": 9,
      "text": "assign value of n - ( a - last ) to n",
      "code": "n = n - ( a - last ) ;",
      "indent": 3
    },
    {
      "line": 10,
      "text": "increment day",
      "code": "day ++ ;",
      "indent": 3
    },
    {
      "line": 11,
      "text": "else",
      "code": "else",
      "indent": 2
    },
    {
      "line": 12,
      "text": "assign value of n - ( Max - last ) to n",
      "code": "n = n - ( Max - last ) ;",
      "indent": 3
    },
    {
      "line": 13,
      "text": "increase day",
      "code": "day ++ ;",
      "indent": 3
    },
    {
      "line": 14,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 15,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 16,
      "text": "print day",
      "code": "cout << day << endl ;",
      "indent": 1
    },
    {
      "line": 17,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 18,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        11
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        3
      ],
      "mod_code": [
        "else else",
        "cin >> n >> a , Max >> k >> last ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        3,
        16
      ],
      "mod_code": [
        "else else",
        "cin >> n >> a , Max >> k >> last ;",
        "cout << day ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        3,
        16,
        6
      ],
      "mod_code": [
        "else else",
        "cin >> n >> a , Max >> k >> last ;",
        "cout << day ;",
        "while ( n >= 0 )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        3,
        6
      ],
      "mod_code": [
        "else else",
        "cin >> n >> a , Max >> k >> last ;",
        "while ( n >= 0 )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        16
      ],
      "mod_code": [
        "else else",
        "cout << day ;"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        16,
        6
      ],
      "mod_code": [
        "else else",
        "cout << day ;",
        "while ( n >= 0 )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        11,
        6
      ],
      "mod_code": [
        "else else",
        "while ( n >= 0 )"
      ],
      "err_line": 11,
      "err_msg": "expected primary-expression before ‘else’"
    }
  ]
}