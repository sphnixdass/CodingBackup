{
  "meta": {
    "index": 1375,
    "hitid": "30OITAWPBQXYIZTNP85QQVNCAOQH9E",
    "workerid": "A24WRPQYGMQLGF",
    "probid": "876A",
    "subid": "47002879"
  },
  "lines": [
    {
      "line": 0,
      "text": "DUMMY",
      "code": "int main() {",
      "indent": 0
    },
    {
      "line": 1,
      "text": "n , a , b , c = integer , pos = integer = 1 . dis = integer = 0",
      "code": "int n , a , b , c , pos = 1 , dis = 0 ;",
      "indent": 1
    },
    {
      "line": 2,
      "text": "read n , a , b , c",
      "code": "cin >> n >> a >> b >> c ;",
      "indent": 1
    },
    {
      "line": 3,
      "text": "for q = 1 to n exclusive",
      "code": "for ( int q = 1 ; q < n ; q ++ )",
      "indent": 1
    },
    {
      "line": 4,
      "text": "if pos is 1",
      "code": "if ( pos == 1 )",
      "indent": 2
    },
    {
      "line": 5,
      "text": "if a < = b",
      "code": "if ( a <= b )",
      "indent": 3
    },
    {
      "line": 6,
      "text": "dis = dis + a",
      "code": "dis += a ;",
      "indent": 4
    },
    {
      "line": 7,
      "text": "pos = 2",
      "code": "pos = 2 ;",
      "indent": 4
    },
    {
      "line": 8,
      "text": "continue",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 9,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 10,
      "text": "dis = dis + b",
      "code": "dis += b ;",
      "indent": 4
    },
    {
      "line": 11,
      "text": "pos = 3",
      "code": "pos = 3 ;",
      "indent": 4
    },
    {
      "line": 12,
      "text": "continue",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 13,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 14,
      "text": "else if pos is 2",
      "code": "else if ( pos == 2 )",
      "indent": 2
    },
    {
      "line": 15,
      "text": "if a < = c",
      "code": "if ( a <= c )",
      "indent": 3
    },
    {
      "line": 16,
      "text": "dis = dis + a",
      "code": "dis += a ;",
      "indent": 4
    },
    {
      "line": 17,
      "text": "pos = 1",
      "code": "pos = 1 ;",
      "indent": 4
    },
    {
      "line": 18,
      "text": "continue",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 19,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 20,
      "text": "dis = dis + c",
      "code": "dis += c ;",
      "indent": 4
    },
    {
      "line": 21,
      "text": "pos = 3",
      "code": "pos = 3 ;",
      "indent": 4
    },
    {
      "line": 22,
      "text": "continue",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 23,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 24,
      "text": "else if pos is 3",
      "code": "else if ( pos == 3 )",
      "indent": 2
    },
    {
      "line": 25,
      "text": "if b < = c",
      "code": "if ( b <= c )",
      "indent": 3
    },
    {
      "line": 26,
      "text": "dis = dis + b",
      "code": "dis += b ;",
      "indent": 4
    },
    {
      "line": 27,
      "text": "pos = 1",
      "code": "pos = 1 ;",
      "indent": 4
    },
    {
      "line": 28,
      "text": "continue",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 29,
      "text": "else",
      "code": "else",
      "indent": 3
    },
    {
      "line": 30,
      "text": "dis = dis + c",
      "code": "dis += c ;",
      "indent": 4
    },
    {
      "line": 31,
      "text": "pos = 2",
      "code": "pos = 2 ;",
      "indent": 4
    },
    {
      "line": 32,
      "text": "continue",
      "code": "continue ;",
      "indent": 4
    },
    {
      "line": 33,
      "text": "DUMMY",
      "code": "}",
      "indent": 3
    },
    {
      "line": 34,
      "text": "DUMMY",
      "code": "}",
      "indent": 2
    },
    {
      "line": 35,
      "text": "DUMMY",
      "code": "}",
      "indent": 1
    },
    {
      "line": 36,
      "text": "print dis",
      "code": "cout << dis << endl ;",
      "indent": 1
    },
    {
      "line": 37,
      "text": "DUMMY",
      "code": "return 0;",
      "indent": 1
    },
    {
      "line": 38,
      "text": "DUMMY",
      "code": "}",
      "indent": 0
    }
  ],
  "errors": [
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1
      ],
      "mod_code": [
        "int n , a , b , pos , pos , pos = 0 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        9
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14
      ],
      "mod_code": [
        "else if ( pos is 2 == 2 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        19
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 19,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        24
      ],
      "mod_code": [
        "else if ( pos == 3 3 )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        29
      ],
      "mod_code": [
        "else else"
      ],
      "err_line": 29,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        1,
        9
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else else"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        9,
        14
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else else",
        "else if ( pos is 2 == 2 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        9,
        14,
        4
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else else",
        "else if ( pos is 2 == 2 )",
        "if ( pos )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        9,
        14,
        7
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else else",
        "else if ( pos is 2 == 2 )",
        "int pos = 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        9,
        14,
        24
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else else",
        "else if ( pos is 2 == 2 )",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        9,
        4
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else else",
        "if ( pos )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        9,
        4,
        7
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else else",
        "if ( pos )",
        "int pos = 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        9,
        4,
        24
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else else",
        "if ( pos )",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        9,
        7
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else else",
        "int pos = 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        9,
        7,
        24
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else else",
        "int pos = 2 ;",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        9,
        24
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else else",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        14
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else if ( pos is 2 == 2 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        14,
        4
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else if ( pos is 2 == 2 )",
        "if ( pos )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        14,
        4,
        7
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else if ( pos is 2 == 2 )",
        "if ( pos )",
        "int pos = 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        14,
        4,
        24
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else if ( pos is 2 == 2 )",
        "if ( pos )",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        14,
        7
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else if ( pos is 2 == 2 )",
        "int pos = 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        14,
        7,
        24
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else if ( pos is 2 == 2 )",
        "int pos = 2 ;",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        14,
        24
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else if ( pos is 2 == 2 )",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        4
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "if ( pos )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        4,
        7
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "if ( pos )",
        "int pos = 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        4,
        7,
        24
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "if ( pos )",
        "int pos = 2 ;",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        4,
        24
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "if ( pos )",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        7
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "int pos = 2 ;"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        7,
        24
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "int pos = 2 ;",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        1,
        24
      ],
      "mod_code": [
        "int n , a , b , pos , pos = 0 , dis = 0 ;",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 1,
      "err_msg": "redeclaration of ‘int pos’"
    },
    {
      "mod_line": [
        9,
        14
      ],
      "mod_code": [
        "else else",
        "else if ( pos is 2 == 2 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        14,
        4
      ],
      "mod_code": [
        "else else",
        "else if ( pos is 2 == 2 )",
        "if ( pos )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        14,
        4,
        7
      ],
      "mod_code": [
        "else else",
        "else if ( pos is 2 == 2 )",
        "if ( pos )",
        "int pos = 2 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        14,
        4,
        24
      ],
      "mod_code": [
        "else else",
        "else if ( pos is 2 == 2 )",
        "if ( pos )",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        14,
        7
      ],
      "mod_code": [
        "else else",
        "else if ( pos is 2 == 2 )",
        "int pos = 2 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        14,
        7,
        24
      ],
      "mod_code": [
        "else else",
        "else if ( pos is 2 == 2 )",
        "int pos = 2 ;",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        14,
        24
      ],
      "mod_code": [
        "else else",
        "else if ( pos is 2 == 2 )",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        4
      ],
      "mod_code": [
        "else else",
        "if ( pos )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        4,
        7
      ],
      "mod_code": [
        "else else",
        "if ( pos )",
        "int pos = 2 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        4,
        7,
        24
      ],
      "mod_code": [
        "else else",
        "if ( pos )",
        "int pos = 2 ;",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        4,
        24
      ],
      "mod_code": [
        "else else",
        "if ( pos )",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        7
      ],
      "mod_code": [
        "else else",
        "int pos = 2 ;"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        7,
        24
      ],
      "mod_code": [
        "else else",
        "int pos = 2 ;",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        9,
        24
      ],
      "mod_code": [
        "else else",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 9,
      "err_msg": "expected primary-expression before ‘else’"
    },
    {
      "mod_line": [
        14,
        4
      ],
      "mod_code": [
        "else if ( pos is 2 == 2 )",
        "if ( pos )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        14,
        4,
        7
      ],
      "mod_code": [
        "else if ( pos is 2 == 2 )",
        "if ( pos )",
        "int pos = 2 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        14,
        4,
        7,
        24
      ],
      "mod_code": [
        "else if ( pos is 2 == 2 )",
        "if ( pos )",
        "int pos = 2 ;",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        14,
        4,
        24
      ],
      "mod_code": [
        "else if ( pos is 2 == 2 )",
        "if ( pos )",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        14,
        7
      ],
      "mod_code": [
        "else if ( pos is 2 == 2 )",
        "int pos = 2 ;"
      ],
      "err_line": 14,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        14,
        7,
        24
      ],
      "mod_code": [
        "else if ( pos is 2 == 2 )",
        "int pos = 2 ;",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        14,
        24
      ],
      "mod_code": [
        "else if ( pos is 2 == 2 )",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 14,
      "err_msg": "expected ‘)’ before ‘is’"
    },
    {
      "mod_line": [
        4,
        7,
        24
      ],
      "mod_code": [
        "if ( pos )",
        "int pos = 2 ;",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        4,
        24
      ],
      "mod_code": [
        "if ( pos )",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before numeric constant"
    },
    {
      "mod_line": [
        7,
        24
      ],
      "mod_code": [
        "int pos = 2 ;",
        "else if ( pos == 3 3 )"
      ],
      "err_line": 24,
      "err_msg": "expected ‘)’ before numeric constant"
    }
  ]
}